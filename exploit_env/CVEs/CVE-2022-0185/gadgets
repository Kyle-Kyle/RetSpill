0xffffffff8162fc45: adc [ebx+0x41], bl; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff8224ce42: adc [r10], rax; rol byte ptr [rax-0x3c7419e], 1; leave; imul edx, [rsi-0x3c], 0x777e4d20; iretd;
0xffffffff8182eabe: adc [r11+0x88089], r9b; add [rcx], dh; rol byte ptr [rcx+0x10802f9], cl; add [rdi], cl; xchg esp, eax; ret 0x2a8;
0xffffffff813282c3: adc [r14-0x7d], r12b; stc; add cl, [rdi]; xchg esp, eax; ret 0x7c89;
0xffffffff81a818a7: adc [r15], ecx; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; pop r15; pop rbp; ret;
0xffffffff816104a8: adc [r15], r9b; mov [rcx-0x7a], cl; add [rdi], cl; xchg esp, eax; ret;
0xffffffff815ef490: adc [r9+0xf], al; xchg esp, eax; mov byte ptr [rcx+rcx*4-0x10], 0x5b; pop r14; pop rbp; ret;
0xffffffff816cfcb8: adc [r9-0x77], r9b; and [r11+0x41], r11b; pop rsp; pop r14; pop r15; ret;
0xffffffff811f0d81: adc [rax+0x3b], cl; adc [rdi], cl; xchg esp, eax; ret;
0xffffffff811f0d80: adc [rax+0x3b], r9b; adc [rdi], cl; xchg esp, eax; ret;
0xffffffff822894a6: adc [rax+0x79], esi; sbb esp, edi; ret 0x8d94;
0xffffffff827068fb: adc [rax+0x7f149af3], edx; or eax, 0x33626d73; hlt; std; leave; jmp qword ptr [rbx+3];
0xffffffff8124baaf: adc [rax+rax], al; add [rbx-0x17affd38], al; adc al, 0; add [rax], al; add rsp, 8; ret;
0xffffffff823d9f84: adc [rax+rdx*4+0x6f3c8212], edx; leave; movsxd eax, [rbx-0x445fc542]; push rdx; insd [rdi], dx; ret;
0xffffffff8347727c: adc [rax-0x2d], bh; std; add rsp, 8; pop rbx; ret;
0xffffffff8249ef86: adc [rax-0x59], ah; mov ch, 0xc6; leave; ret;
0xffffffff8249ef85: adc [rax-0x59], spl; mov ch, 0xc6; leave; ret;
0xffffffff81e01375: adc [rax-0x60], ch; adc esp, eax; or dword ptr [rax-0x7d], 0x485a30c4; iretd;
0xffffffff8223295d: adc [rax-0x61fcf87c], bl; mov bl, 6; shr dword ptr [rsi+rax*8+0x42f3ec93], cl; xchg [rbx+rax*4], esp; or al, 0x1a; iretd;
0xffffffff811caba0: adc [rax-0x75], ecx; and [r8+0xf002578], r8b; xchg esp, eax; ror byte ptr [rax], 0xd0; ret;
0xffffffff8133fe53: adc [rax-0x77], cl; fucomip st, st(0); xchg esp, eax; iretd;
0xffffffff81c1d6ba: adc [rax-0x77], cl; out 0xe8, eax; pop rsp; in eax, 0x57; jmp qword ptr [rbp+0x48];
0xffffffff8129e5c9: adc [rax-0x77], cl; xchg esp, eax; and al, 0x88; add [rax], eax; add [rax-9], cl; ret 0xff9f;
0xffffffff82494240: adc [rax-0x77], esp; cwde; xchg esp, eax; out dx, eax; iretd;
0xffffffff81240efd: adc [rax], al; add [rax], al; add rsp, 4; ret;
0xffffffff81031ad4: adc [rax], al; add [rax], eax; add rsp, 4; pop rbx; ret;
0xffffffff818a5478: adc [rax], al; add [rdi], cl; xchg esp, eax; ret 0xc748;
0xffffffff815b9df1: adc [rax], al; add [rdi], cl; xchg esp, eax; ret;
0xffffffff819baaaf: adc [rax], al; add al, ch; leave; popfq; iretd;
0xffffffff81061bb5: adc [rax], al; add bh, bh; rol byte ptr [rcx+0x5c], 1; mov rsp, rbp; pop rbp; ret;
0xffffffff81b12590: adc [rax], al; add rsp, 0xc; ret;
0xffffffff81644b80: adc [rax], eax; add [rdi], cl; xchg esp, eax; shl bh, 0xd8; ret;
0xffffffff810d5796: adc [rbp+0x10], dh; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff815bb1e7: adc [rbp+0x11], dh; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8152ab7a: adc [rbp+0x11], dh; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff81703662: adc [rbp+0x11], dh; add rsp, 0x18; pop rbx; ret;
0xffffffff81409c46: adc [rbp+0x14], dh; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8185d8eb: adc [rbp+0x14], dh; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff814a2a06: adc [rbp+0x15], dh; mov eax, ebp; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff813deec3: adc [rbp+0x16], dh; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff810c1ae7: adc [rbp+0x16], dh; mov eax, ebx; add rsp, 0x18; pop rbx; ret;
0xffffffff8199c8c1: adc [rbp+0x17], dh; add rsp, 0x18; pop rbx; ret;
0xffffffff834841a1: adc [rbp+0x17], dh; mov eax, ebx; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff81646a35: adc [rbp+0x18], dh; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff834813f7: adc [rbp+0x18], dh; mov eax, ebx; add rsp, 0x18; pop rbx; ret;
0xffffffff81973dc2: adc [rbp+0x19], dh; mov rax, rbx; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff8124a7da: adc [rbp+0x1b], dh; mov rax, rbx; add rsp, 0x18; pop rbx; ret;
0xffffffff83493a24: adc [rbp+0x1d], dh; mov eax, ecx; add rsp, 0x18; pop rbx; ret;
0xffffffff81042ee6: adc [rbp+0x1e], dh; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff819a6991: adc [rbp+0x1e], dh; add rsp, 0x18; pop rbx; ret;
0xffffffff814825c1: adc [rbp+0x1f], dh; add rsp, 0x18; pop rbx; ret;
0xffffffff8349398e: adc [rbp+0x1f], dh; mov eax, ecx; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff8131597c: adc [rbp+0x20], dh; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff81993128: adc [rbp+0x20], dh; mov eax, ebp; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff818d5308: adc [rbp+0x21], dh; add rsp, 0x18; ret;
0xffffffff834831c9: adc [rbp+0x21], dh; mov eax, ebp; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff814aac9c: adc [rbp+0x21], dh; xor eax, eax; add rsp, 0x18; pop rbx; ret;
0xffffffff81766010: adc [rbp+0x23], dh; mov rax, rbx; add rsp, 0x18; pop rbx; ret;
0xffffffff81470b7a: adc [rbp+0x23], dh; xor eax, eax; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff8187157c: adc [rbp+0x24], dh; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff810bd667: adc [rbp+0x24], dh; add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff8103e8a4: adc [rbp+0x25], dh; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81ba88db: adc [rbp+0x26], dh; add rsp, 0x18; ret;
0xffffffff8102d6fe: adc [rbp+0x27], dh; add rsp, 0x18; pop rbx; ret;
0xffffffff819a3c97: adc [rbp+0x28], dh; add rsp, 0x18; ret;
0xffffffff8135d3c1: adc [rbp+0x29], dh; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff819a3b39: adc [rbp+0x29], dh; add rsp, 0x18; pop rbx; ret;
0xffffffff81369a72: adc [rbp+0x2b], dh; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff817e1447: adc [rbp+0x2c], dh; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff813699a6: adc [rbp+0x2c], dh; add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff81126d5f: adc [rbp+0x2c], dh; add rsp, 0x18; pop rbx; ret;
0xffffffff819a3f69: adc [rbp+0x2c], dh; mov eax, ebp; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff814b1c8f: adc [rbp+0x2d], dh; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff81ba4a4c: adc [rbp+0x2e], dh; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff819a43ed: adc [rbp+0x30], dh; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8345c7cc: adc [rbp+0x35], dh; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8112ce32: adc [rbp+0x36], dh; add rsp, 0x18; ret;
0xffffffff8112dd43: adc [rbp+0x38], dh; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff81051946: adc [rbp+0x38], dh; add rsp, 0x18; ret;
0xffffffff816acb72: adc [rbp+0x3b], dh; add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff816cb6c9: adc [rbp+0x3b], dh; add rsp, 0x18; ret;
0xffffffff816adbfd: adc [rbp+0x3c], dh; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff816a965e: adc [rbp+0x3d], dh; add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff81793678: adc [rbp+0x3d], dh; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff8177ab0c: adc [rbp+0x415b004f], ch; pop rsp; pop r14; pop r15; ret;
0xffffffff8136289b: adc [rbp+0x415bffe3], ecx; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff812a1831: adc [rbp+0x42], dh; add rsp, 0x18; ret;
0xffffffff8112ad46: adc [rbp+0x42], dh; mov rax, rsi; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff83427cc5: adc [rbp+0x43], dh; add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff816aa5c0: adc [rbp+0x48], dh; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8183814c: adc [rbp+0x49], dh; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8114c8b5: adc [rbp+0x4c], dh; mov eax, ebp; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8103de7c: adc [rbp+0x4e], dh; add rsp, 0x18; pop rbx; ret;
0xffffffff819a3e88: adc [rbp+0x4f], dh; add rsp, 0x18; pop rbx; ret;
0xffffffff8343cb0b: adc [rbp+0x50], dh; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff81175348: adc [rbp+0x52], dh; mov eax, ebx; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff819b3151: adc [rbp+0x55], dh; add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff8197298b: adc [rbp+0x56], dh; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff81109a41: adc [rbp+0x58], dh; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8105fe3a: adc [rbp+0x5a], dh; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff810d6cb5: adc [rbp+0x5b], dh; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff824ec02a: adc [rbp+0x5f23f2d3], dl; adc esp, esi; iretd;
0xffffffff8121ebef: adc [rbp+0x60], dh; add rsp, 0x18; pop rbx; ret;
0xffffffff81578aab: adc [rbp+0x63], dh; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff81109987: adc [rbp+0x68], dh; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff819a4ed2: adc [rbp+0x6c], dh; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff812a6385: adc [rbp+0x6c], dh; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81170835: adc [rbp+0x6c], dh; add rsp, 0x18; pop rbx; ret;
0xffffffff81717d70: adc [rbp+0x6d], dh; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff811128fe: adc [rbp+0x70], dh; add rsp, 0x18; pop rbx; ret;
0xffffffff81170be6: adc [rbp+0x72], dh; add rsp, 0x18; pop rbx; ret;
0xffffffff819a4586: adc [rbp+0x7b], dh; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8343ab38: adc [rbp+0x7d], dh; add rsp, 0x18; pop rbx; ret;
0xffffffff81714bca: adc [rbp+0x7e], dh; mov eax, ebp; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff813a250f: adc [rbp+0x7f], dh; add rsp, 0x18; pop rbx; ret;
0xffffffff8100524e: adc [rbp+0xa], dh; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8105f0be: adc [rbp+0xa], dh; add rsp, 0x18; pop rbx; ret;
0xffffffff81c10777: adc [rbp+0xa], dh; mov eax, 0xfffffffd; add rsp, 0x18; ret;
0xffffffff81a76967: adc [rbp+0xa], dh; mov eax, 0xffffffff; add rsp, 0x18; ret;
0xffffffff8345e9e3: adc [rbp+0xa], dh; mov eax, 1; add rsp, 0x18; ret;
0xffffffff815e63b3: adc [rbp+0xa], dh; mov eax, ebx; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff817176c7: adc [rbp+0xa], dh; movsxd rax, ebp; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8104f94b: adc [rbp+0xa], dh; xor eax, eax; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff8111b32f: adc [rbp+0xb], dh; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8103e983: adc [rbp+0xb], dh; mov eax, 1; add rsp, 0x18; pop rbx; ret;
0xffffffff819a1640: adc [rbp+0xb], dh; mov eax, r14d; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff8147fb71: adc [rbp+0xb], dh; mov rax, r14; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff811f4973: adc [rbp+0xb], dh; mov rax, rbx; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff8118d89b: adc [rbp+0xb], dh; mov rax, rcx; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff813ec463: adc [rbp+0xc], dh; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff813cebba: adc [rbp+0xc], dh; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff81030ae2: adc [rbp+0xd], dh; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff811240db: adc [rbp+0xd], dh; add rsp, 0x18; ret;
0xffffffff81821b38: adc [rbp+0xe], dh; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff812c5434: adc [rbp+0xe], dh; mov rax, rbx; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8148a90f: adc [rbp+0xf], dh; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8172af2c: adc [rbp+0xf], dh; add rsp, 0x18; ret;
0xffffffff811e1472: adc [rbp+0xf], dh; cdqe; add rsp, 0x18; pop rbx; ret;
0xffffffff8101f933: adc [rbp+5], dh; add rsp, 0x18; ret;
0xffffffff8102a283: adc [rbp+6], dh; add rsp, 0x18; pop rbx; ret;
0xffffffff81040ec3: adc [rbp+7], dh; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff83499047: adc [rbp+7], dh; add rsp, 0x18; ret;
0xffffffff81601711: adc [rbp+7], dh; cdqe; add rsp, 0x18; ret;
0xffffffff81145adf: adc [rbp+7], dh; mov al, cl; add rsp, 0x18; ret;
0xffffffff81c2e17e: adc [rbp+7], dh; xor eax, eax; add rsp, 0x18; ret;
0xffffffff81030c61: adc [rbp+8], dh; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff810ec016: adc [rbp+8], dh; cdqe; add rsp, 0x18; pop rbx; ret;
0xffffffff811481d8: adc [rbp+8], dh; mov eax, ebx; add rsp, 0x18; pop rbx; ret;
0xffffffff8104257a: adc [rbp+8], dh; xor eax, eax; add rsp, 0x18; pop rbx; ret;
0xffffffff81038257: adc [rbp+9], dh; add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff811241ae: adc [rbp+9], dh; add rsp, 0x18; ret;
0xffffffff8104936a: adc [rbp+9], dh; mov eax, ebp; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8114354b: adc [rbp+9], dh; mov eax, ebx; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8127f3da: adc [rbp+9], dh; mov rax, rbx; add rsp, 0x18; pop rbx; ret;
0xffffffff8147b482: adc [rbp+9], dh; sub rax, rbx; add rsp, 0x18; pop rbx; ret;
0xffffffff823caa23: adc [rbp+rbx*2-0x1fb68510], edi; or ecx, eax; xchg esp, eax; xchg ebp, eax; ror dword ptr [rax-0x47e2aead], 0xef; call qword ptr [rbx-0x76];
0xffffffff8351c000: adc [rbp+rcx-0x7f], dl; push rax; xchg esp, eax; or eax, 0xffffff81; call qword ptr [rax];
0xffffffff82244109: adc [rbp-0x49], ah; pop rsp; adc al, 0x29; fmulp st(5), st; ret 0x5922;
0xffffffff8268d425: adc [rbp-0x60f9990], eax; movsxd ebp, [rax-0x6b30f90c]; in eax, 0x61; pop rsp; iretd;
0xffffffff8185fc6f: adc [rbp-0x77], cl; sbb [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8242b04d: adc [rbp-0xb845d7c], esi; leave; sub eax, 0xd555af95; scasb [rdi]; ret;
0xffffffff8245290f: adc [rbp-4], dl; xchg esp, eax; pop rsp; fbld st, tbyte ptr [rax+0x2cf2e8de]; iretd;
0xffffffff81052993: adc [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff810097d0: adc [rbx+0x41], bl; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81019a92: adc [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8122a520: adc [rbx+0x41], ebx; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff8181296a: adc [rbx+0x41], ebx; pop rsp; pop r14; pop r15; ret;
0xffffffff81bccb0f: adc [rbx+0x41], r11b; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff8182eabf: adc [rbx+0x88089], cl; add [rcx], dh; rol byte ptr [rcx+0x10802f9], cl; add [rdi], cl; xchg esp, eax; ret 0x2a8;
0xffffffff81035469: adc [rbx+1], bh; add [rdi], cl; xchg esp, eax; ret;
0xffffffff823a21f2: adc [rbx+rbx], ebx; mov bl, 0x14; xchg esp, eax; ret;
0xffffffff823bd139: adc [rbx-0x52991286], dl; stosb [rdi]; xchg esp, eax; ret;
0xffffffff822e91d4: adc [rbx-0x605fa98a], dh; push rsp; pop rsp; cld; jmp far fword ptr [rdi];
0xffffffff81781d2b: adc [rcx+0x415b0847], cl; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff82297b8b: adc [rcx+0x54719914], ch; popfq; fcom st, dword ptr [rcx+0x26]; xchg [rcx-7], esp; rcpps xmm1, [rbp+0x54964d40]; ret;
0xffffffff8243bd93: adc [rcx+0x6c], ecx; sar byte ptr [rax+0x7d4d908f], 1; leave; sbb eax, 0x6356fc6a; adc esi, ebx; call far fword ptr [rax+rbp*4+0x4048455b];
0xffffffff827040f0: adc [rcx+0x75], dh; leave; jmp qword ptr [rdx-8];
0xffffffff826882f6: adc [rcx+0x75], edx; leave; jmp qword ptr [rsi+0x64fee7b8];
0xffffffff815ef491: adc [rcx+0xf], al; xchg esp, eax; mov byte ptr [rcx+rcx*4-0x10], 0x5b; pop r14; pop rbp; ret;
0xffffffff81660fa7: adc [rcx+rcx*4-0x10], eax; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff819e0e78: adc [rcx+rcx*4-8], cl; add rsp, 0xc8; pop rbx; pop r14; pop r15; ret;
0xffffffff823a11f6: adc [rcx-0x40], ecx; leave; cmovnp edx, [rdi+rax*8-0x5a]; xor eax, [rdx+0x54c43cb0]; ret;
0xffffffff816cfcb9: adc [rcx-0x77], cl; and [r11+0x41], r11b; pop rsp; pop r14; pop r15; ret;
0xffffffff818e3a74: adc [rcx-0x7d], ecx; mov esi, 0x148; add [rdi], cl; xchg esp, eax; ret;
0xffffffff8348a866: adc [rcx], al; add [rax], al; mov eax, ebx; add rsp, 0x10; pop rbx; ret;
0xffffffff81bb9352: adc [rcx], dh; fild st, dword ptr [rcx-0xfbdb84]; add [rax], al; add [rdi], cl; xchg esp, eax; ret;
0xffffffff813aa131: adc [rcx], dh; rol byte ptr [rbx+0xf012078], cl; xchg esp, eax; ret 0x8b48;
0xffffffff8191f557: adc [rcx], dh; rol byte ptr [rdx+rdx*8-0x2dceee8b], 0x3c; or cl, [rdi]; xchg esp, eax; ret 0x3c80;
0xffffffff823d9f83: adc [rcx], dl; xchg esp, eax; nop; adc al, [rdx+0x63c96f3c]; cmp dword ptr [rsi+0x52bba03a], 0x6d; ret;
0xffffffff8105596f: adc [rcx], eax; add [rax], al; add rsp, 0x28; ret;
0xffffffff82328a7e: adc [rdi-0x44705567], bh; pop rbp; xchg edi, esp; iretd;
0xffffffff811a828b: adc [rdi-0x53], esi; add [rbx+0x47052b05], cl; add cl, [rbx+0x4705290d]; add cl, [rcx+0xfca09c2]; xchg esp, eax; ret 0xfb83;
0xffffffff8222a212: adc [rdi], bl; or edx, [rbx-0x7e]; pop rsp; sub al, 0x4b; adc [rbx], ch; ret 0xaa36;
0xffffffff816104a9: adc [rdi], cl; mov [rcx-0x7a], cl; add [rdi], cl; xchg esp, eax; ret;
0xffffffff8168981a: adc [rdi], cl; sar qword ptr [rdx-1], 0x85; leave; cmovs eax, edx; add rsp, 4; ret;
0xffffffff83432ffb: adc [rdi], cl; test [rax+1], ebx; add [rax], al; add rsp, 0x18; pop rbx; ret;
0xffffffff816ab063: adc [rdi], cl; test [rbp+0x48000000], ecx; add esp, 0x18; pop rbx; ret;
0xffffffff8164114f: adc [rdi], cl; test [rbp+0x48000000], esi; add esp, 0x18; pop rbx; pop r14; ret;
0xffffffff818015a3: adc [rdi], cl; test [rbx+0x48000000], ebp; add esp, 0x18; pop rbx; pop rbp; ret;
0xffffffff83435dff: adc [rdi], cl; test [rcx+0x48000000], eax; add esp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81bb103f: adc [rdi], cl; test [rcx+0x48000000], esi; add esp, 0x18; ret;
0xffffffff810ef732: adc [rdi], cl; test [rdi+0x48000000], edx; add esp, 0x18; pop rbx; pop r14; ret;
0xffffffff816a54e3: adc [rdi], cl; test [rdx+0x48000000], esp; add esp, 0x18; pop rbx; pop r14; ret;
0xffffffff81170fcf: adc [rdi], cl; test [rsi+0x48000000], ecx; add esp, 0x18; pop rbx; ret;
0xffffffff811abd7e: adc [rdi], cl; test [rsi+0x48000000], edx; add esp, 0x18; ret;
0xffffffff8177d3a3: adc [rdi], cl; xchg esp, eax; ret 0x1422;
0xffffffff81b3cdb5: adc [rdi], cl; xchg esp, eax; ret 0xc208;
0xffffffff81b6320a: adc [rdi], cl; xchg esp, eax; ret 0xce89;
0xffffffff8100cad9: adc [rdi], cl; xchg esp, eax; ret 0xd038;
0xffffffff8177b808: adc [rdi], cl; xchg esp, eax; ret 0xd75;
0xffffffff81013612: adc [rdi], cl; xchg esp, eax; ret 0xda08;
0xffffffff811f0d84: adc [rdi], cl; xchg esp, eax; ret;
0xffffffff8171ed73: adc [rdi], cl; xchg esp, eax; rol bl, 0x48; mov dword ptr [rsi+0x18], 0; xor eax, eax; ret;
0xffffffff826beeb8: adc [rdi], ecx; test [rsi+0x71], esp; xchg esp, eax; cmc; sti; iretd;
0xffffffff81a818a8: adc [rdi], ecx; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; pop r15; pop rbp; ret;
0xffffffff819da732: adc [rdi], ecx; xchg esp, eax; ret 0xbf41;
0xffffffff81c2b61d: adc [rdi], ecx; xchg esp, eax; ret 0xc283;
0xffffffff8352f4d0: adc [rdx+0x3d], bl; cmp edi, 0xa0ffffff; pop rsp; cmp eax, 0xffffff81; jmp qword ptr [rax-0x7ec2a3];
0xffffffff8243204a: adc [rdx+0x63], edx; push rcx; cmp al, 0xbf; leave; ret;
0xffffffff823b8dac: adc [rdx+0x6e], dh; mov rax, 0xbbff7c3cb7ef5bb1; mov esp, [rdx+0x1f695e30]; xor edx, [rdx-0x5c65ad67]; call rax;
0xffffffff816a2bb3: adc [rdx+rax*4-0x18], esi; in eax, 0x7f; pop rsp; add [rax-0x68], cl; ret;
0xffffffff81845acf: adc [rdx+rax*4-0x18], esi; leave; push rax; add [rax-0x68], cl; ret;
0xffffffff8110e242: adc [rdx+rax*4-0x18], esi; push rsi; leave; mov ch, 0; cdqe; ret;
0xffffffff824cf3c3: adc [rdx+rbp*8+0x37], ah; xchg esp, eax; pop rbp; shr ah, 1; ret;
0xffffffff8348be7c: adc [rdx+rdx*8], ch; std; add rsp, 8; pop rbx; ret;
0xffffffff82007f79: adc [rdx-1], esp; xchg esp, eax; syscall;
0xffffffff822b5bfe: adc [rdx-5], eax; push rdi; test bh, ch; data16 leave; ret;
0xffffffff8224ce43: adc [rdx], eax; rol byte ptr [rax-0x3c7419e], 1; leave; imul edx, [rsi-0x3c], 0x777e4d20; iretd;
0xffffffff8185fa8a: adc [rip+0x3de90000], al; leave; popfq; jmp qword ptr [rsi+0x66];
0xffffffff812204f2: adc [rsi+0x3d8b6500], edi; xchg esp, eax; cld; fidivr st, word ptr [rsi-0x18]; iretd;
0xffffffff813282c4: adc [rsi-0x7d], ah; stc; add cl, [rdi]; xchg esp, eax; ret 0x7c89;
0xffffffff8254360b: adc [rsi-0x9a7b773], bl; out 0x31, al; mov esp, edi; iretd;
0xffffffff822ef4a6: adc [rsi], al; sbb esp, edx; sub eax, 0xe136e6f9; mov al, [0x26d2f8204f55f2e8]; sub esi, edi; ret 0x6e07;
0xffffffff822f7601: adc [rsi], bh; sub [rbx], ebp; or ebp, [rbp-0x80]; leave; iretd;
0xffffffff822c9069: adc [rsi], ch; or r12d, r14d; pop rsp; imul edx, [rsi-0x7d], 0xffffffd1; ret;
0xffffffff824e09c8: adc [rsi], ch; pop rsp; xor dword ptr [rbx-0x6e54f028], 0x898ee960; pop rdx; ret 0xd80b;
0xffffffff8229df55: adc [rsi], ebx; push rdx; leave; fstp qword ptr [r10], st; cmp byte ptr [rsi+0x3d09a202], 0xcb; ret 0xbcf4;
0xffffffff83466a58: adc ah, 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff823ca5b3: adc ah, [rax-0x72]; in al, 0xa9; pop rsp; ret;
0xffffffff82226f04: adc ah, [rbp+rcx*4-0x54]; add ebp, ebp; xchg edx, eax; enter 0xf50c, 0x59; leave; ret 0x6a20;
0xffffffff82389e95: adc ah, [rdx]; xchg esp, eax; push rdi; ret;
0xffffffff8346d9f6: adc ah, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff8124bab8: adc al, 0; add [rax], al; add rsp, 8; ret;
0xffffffff824d1ec9: adc al, 0x16; mov sil, 0x37; pop rsp; ficom st, dword ptr [rax+0x730c97fe]; jmp qword ptr [rbx+0x58c4d3f6];
0xffffffff824e7f81: adc al, 0x18; shl dword ptr [rax-0x7c9c90d2], 1; enter 0x6525, 0xcf; pop rdi; pop rsp; ret 0xbef2;
0xffffffff8237b537: adc al, 0x1c; xchg esp, eax; ret 0x3690;
0xffffffff81c73055: adc al, 0x24; add eax, [rsp]; adc eax, 0; add rsp, 0xc; ret;
0xffffffff810333b2: adc al, 0x24; add rsp, 0x10; ret;
0xffffffff823f3da4: adc al, 0x24; mov [rdi+rdi*4-0x21], es; cmp [rbx], dl; leave; sub esp, esp; iretd;
0xffffffff81828288: adc al, 0x29; add [rax-0x68], r9b; add rsp, 8; pop rbx; ret;
0xffffffff8186711a: adc al, 0x40; add [rcx-0x7a3fce3f], cl; leave; sete al; ret;
0xffffffff810535d9: adc al, 0x48; add esp, 0x10; pop rbx; pop r14; ret;
0xffffffff8110e1e9: adc al, 0x48; add esp, 0x10; pop rbx; ret;
0xffffffff81409c48: adc al, 0x48; add esp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8185d8ed: adc al, 0x48; add esp, 0x18; pop rbx; pop r14; ret;
0xffffffff813a8802: adc al, 0x48; add esp, 0x20; pop rbx; pop r14; ret;
0xffffffff811220a3: adc al, 0x48; add esp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff813426db: adc al, 0x48; add esp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff81784389: adc al, 0x48; add esp, 0x48; pop rbx; ret;
0xffffffff81b55683: adc al, 0x48; add esp, 0x50; pop rbx; pop r14; pop r15; ret;
0xffffffff817c8dbd: adc al, 0x48; add esp, 0xf0; pop rbx; pop r14; pop r15; ret;
0xffffffff8196881f: adc al, 0x48; cwde; add rsp, 0x30; pop rbx; pop r14; ret;
0xffffffff8153a7c4: adc al, 0x48; mov eax, ebx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8223070e: adc al, 0x54; xor ecx, [rax+0x17911e00]; lahf; pop rsp; ret 0x5a29;
0xffffffff82558e14: adc al, 0x5a; add esp, ebx; pop rcx; iretd;
0xffffffff8222977d: adc al, 0x65; sbb esp, ebp; hlt; iretd;
0xffffffff822cd1ff: adc al, 0x6d; sbb al, 0x48; sub [rdi], esp; pop rsp; mov ecx, 0x8b0a3dfe; iretd;
0xffffffff82345290: adc al, 0x79; xchg esp, eax; fnstcw [rbx+rbx*4+7]; iretd;
0xffffffff817a5485: adc al, 0x7d; or [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff827068ff: adc al, 0x7f; or eax, 0x33626d73; hlt; std; leave; jmp qword ptr [rbx+3];
0xffffffff83473878: adc al, 0xb2; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8228faa6: adc al, 0xb8; or eax, edx; pop rsp; xor [rax+0x5d], ebx; push rax; call far fword ptr [rsi-0x625ea60a];
0xffffffff8252a827: adc al, 0xb; pop rsp; ret;
0xffffffff8193dcd8: adc al, 0xbd; xchg esp, eax; dec dword ptr [rax-0x7b]; shl byte ptr [rbx+rcx*2+0x48], 0x89; ret;
0xffffffff824070fa: adc al, 0xbf; xchg [rbp+0x4f], esp; iretd;
0xffffffff82293ad0: adc al, 0xc4; pop rsp; or eax, 0x6a7d1f41; inc byte ptr [rax-0x17]; iretd;
0xffffffff824a0344: adc al, 0xc7; xchg esp, eax; or byte ptr [rdx], 0x8e; in al, dx; ret 0x8ae3;
0xffffffff823eb5cf: adc al, 0xc9; leave; sbb ebx, [rdx]; ret 0xdbff;
0xffffffff822b8a15: adc al, 0xcc; pop rsp; ret 0xe458;
0xffffffff8347d5b2: adc al, 0xd3; std; add rsp, 8; pop rbx; ret;
0xffffffff8344d5fc: adc al, 0xd6; std; add rsp, 8; pop rbx; ret;
0xffffffff82281d94: adc al, 0xe8; pop rsp; iretd;
0xffffffff82418362: adc al, 0xf1; int3; xchg esp, eax; pop rsi; sahf; ret;
0xffffffff81c2febd: adc al, 0xf; leave; mov [rax+0xc], ecx; pop rbx; pop r14; ret;
0xffffffff817ff8e7: adc al, 0xf; xchg esp, eax; ret 0x8b49;
0xffffffff81b8adc0: adc al, 0xf; xchg esp, eax; ret;
0xffffffff8256bad6: adc al, 3; fistp qword ptr [rsi+0x55], st; mov esp, 0xe81a9499; push 0x6ba553f9; xchg esp, eax; iretd;
0xffffffff825000b1: adc al, 5; leave; push rcx; sti; ret;
0xffffffff816908b1: adc al, [rax]; add rsp, 8; ret;
0xffffffff823dea80: adc al, [rbx+rdx+0x50703a93]; pop rsp; ret 0x2fe7;
0xffffffff81a6a991: adc al, [rcx-0x7d]; cli; add [rdi], ecx; xchg esp, eax; ret;
0xffffffff81bdb9e3: adc al, [rcx-0xa]; xchg [rdi+rdi*8-1], esp; jmp qword ptr [rax+0x74];
0xffffffff81b1a9e4: adc al, [rcx]; add [rax], al; add rsp, 0x28; pop rbx; pop r14; ret;
0xffffffff8346f27c: adc al, bh; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff81c0fdae: adc al, bl; dec dword ptr [rcx-0x7a3fce3f]; leave; cmovns rax, rbx; pop rbx; ret;
0xffffffff81a40544: adc al, ch; mov dh, 0xb; pop rsp; add bl, al; xor eax, eax; ret;
0xffffffff815018be: adc al, ch; pop rsp; fdivr st, st(5); jmp qword ptr [rbp+0x48];
0xffffffff81c478be: adc al, ch; pop rsp; push r13; jmp qword ptr [rbp+0x48];
0xffffffff815b7edd: adc al, ch; sbb eax, 0x480000b2; add esp, 0x10; ret;
0xffffffff8347247a: adc al, dh; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff810ad4ec: adc bh, 0x15; add esp, eax; ret 0x69;
0xffffffff81a779de: adc bh, [rax-1]; add rsp, 0xb0; pop rbx; pop r14; pop r15; ret;
0xffffffff8232c1d9: adc bh, [rdx+0x7c]; mov eax, 0x14640aa9; leave; and ecx, esp; call qword ptr [rcx];
0xffffffff8234dd48: adc bh, [rdx]; xchg esp, eax; lahf; jmp qword ptr [rax+0x54];
0xffffffff8232c1d0: adc bh, ah; mov rbp, 0x7c7a12281d0690f1; mov eax, 0x14640aa9; leave; and ecx, esp; call qword ptr [rcx];
0xffffffff816e987f: adc bh, dh; sbb [rax], al; adc [rax], al; add [rdi], cl; xchg esp, eax; ret;
0xffffffff83476996: adc bl, 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff814208d2: adc bl, [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff8231297c: adc bl, [rdi]; push rcx; mov [0xd4766988cde0d199], al; leave; ret;
0xffffffff822a87f6: adc bl, ah; pop rdx; sbb esp, edi; push rax; pop rsp; jmp qword ptr [rax-0x2bbfd25c];
0xffffffff82421f2d: adc bl, dh; sti; rcl esi, 1; leave; iretd;
0xffffffff823eb363: adc byte ptr [rax-0x3659d707], 0x6b; cmp bl, bh; mov esi, 0xbde33bd4; pop rsp; cmp eax, 0xd4fb9c62; ret 0xfed6;
0xffffffff823f73a9: adc byte ptr [rcx+0x4dc00130], 0xef; mov edx, 0x4b44dd4b; xchg [rbp-0x65e2aecd], bl; in eax, dx; mov rsp, r8; ret;
0xffffffff825166f9: adc byte ptr [rdx], 0x78; leave; cli; mov cl, 0x23; jmp far fword ptr [rcx-0x5aa0a0de];
0xffffffff82372c37: adc ch, [rbx+0x34]; mov esp, esi; neg dword ptr [rsp+rax+0x2a27bc6a]; ret 0x8126;
0xffffffff81301bd1: adc ch, al; leave; ret;
0xffffffff82514559: adc ch, bh; pop rdi; rol byte ptr [rbx-0x50], 0xbc; pop rsp; iretd;
0xffffffff834969e9: adc cl, 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff83496a12: adc cl, 0xfd; add rsp, 8; ret;
0xffffffff81bca2aa: adc cl, [rax]; sti; dec dword ptr [rcx-0x7a3fce3f]; leave; setne al; ret;
0xffffffff83459f7a: adc cl, [rbx-0x2b]; std; add rsp, 8; pop rbx; ret;
0xffffffff81b329e8: adc cl, [rcx+rcx*4-0x10]; add rsp, 0x40; pop rbx; pop r14; pop r15; ret;
0xffffffff824a5b74: adc cl, [rdi-0x38]; in al, dx; insb [rdi], dx; pop rsp; ret 0xf325;
0xffffffff8226a623: adc cl, [rdi]; xchg esp, eax; iretd;
0xffffffff817c8850: adc cl, [rdi]; xchg esp, eax; ret 0xc148;
0xffffffff82527482: adc cl, cl; test [rdx+0x4e5d966d], dl; sbb ah, [rip+0x161fed76]; xchg esp, eax; iretd;
0xffffffff8254e408: adc dh, [rsp+rbp]; pop rsp; and [rcx+0x2e8f8ded], eax; ret;
0xffffffff8254e407: adc dh, [rsp+rbp]; pop rsp; and [rcx+0x2e8f8ded], eax; ret;
0xffffffff826c14d2: adc dh, bh; push 0x7262276f; popfq; pop rsp; enter 0xa50b, 0x63; ret;
0xffffffff81bafcee: adc dh, bl; dec dword ptr [rcx-0x7a3fce3f]; leave; cmovns rax, rbx; pop rbx; ret;
0xffffffff82538d65: adc dh, bl; xor edi, [rcx-7]; xchg esp, eax; in eax, dx; iretd;
0xffffffff823ee23b: adc dh, ch; cmp ah, [rip-0x309d2d11]; xor [rbx], ch; xchg sp, ax; iretd;
0xffffffff82373f68: adc dh, cl; xchg esp, eax; and ebp, [rsi+0x131b0396]; lahf; ret 0x1c64;
0xffffffff8344d9ec: adc dh, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff8268846c: adc dl, [rcx+0x75]; leave; call qword ptr [rbp+0x5fef6e67];
0xffffffff826884fc: adc dl, [rcx+0x75]; leave; call rsi;
0xffffffff822dea46: adc dl, [rsi]; leave; ret;
0xffffffff8346d800: adc dl, ah; std; add rsp, 8; pop rbx; ret;
0xffffffff8227783f: adc dl, al; leave; cmp [rax-0x33], ah; ret 0x7d56;
0xffffffff82237ae7: adc dl, bh; pop rsp; ret 0x156b;
0xffffffff8344d807: adc dl, dh; std; add rsp, 8; pop rbx; ret;
0xffffffff8344d830: adc dl, dh; std; add rsp, 8; ret;
0xffffffff8268846b: adc dl, gs:[rcx+0x75]; leave; call qword ptr [rbp+0x5fef6e67];
0xffffffff81003b98: adc dword ptr [rax+0x31000001], 0xffffffed; mov eax, ebp; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8181dc8d: adc dword ptr [rax+1], 0xb70f0000; and dword ptr [rax+0x66000000], 0xffff883; xchg esp, eax; ret;
0xffffffff81999f54: adc dword ptr [rax-0x18], 5; add rsp, 8; ret;
0xffffffff82505022: adc dword ptr [rax], 0x23f75d04; pop rsp; iretd;
0xffffffff81031ad3: adc dword ptr [rax], 0x48000100; add esp, 4; pop rbx; ret;
0xffffffff823bb9f1: adc dword ptr [rdi-0x476bdc98], 0x64; pop rsp; and ecx, edi; ret;
0xffffffff81b25537: adc eax, 0; add rsp, 0xc; ret;
0xffffffff81992dc7: adc eax, 0; add rsp, 4; ret;
0xffffffff819cf73c: adc eax, 0; mov [rdi+0x88], eax; mov eax, eax; add rsp, 4; ret;
0xffffffff819cd40c: adc eax, 0; not eax; mov [rsi+0x88], eax; add rsp, 0x18; ret;
0xffffffff824be143: adc eax, 0x2c3a994; pop rsp; push rcx; cmp eax, 0x7b2c584f; ret 0xbf08;
0xffffffff8227fb07: adc eax, 0x2c9bfe79; in al, dx; leave; iretd;
0xffffffff824703fb: adc eax, 0x32635a27; push 0xffffffffc2881e09; leave; ret 0xd564;
0xffffffff8242086a: adc eax, 0x397fba45; pop rsp; ret 0x77c3;
0xffffffff8242086b: adc eax, 0x397fba45; pop rsp; ret 0x77c3;
0xffffffff822fe8af: adc eax, 0x40ab8d; mov ebp, 0xde2f66a2; mov ah, 0x16; adc esp, edi; ret;
0xffffffff819a7569: adc eax, 0x48f0894c; add esp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff834a1b77: adc eax, 0x48fdd0cf; add esp, 8; pop rbx; ret;
0xffffffff834a0b77: adc eax, 0x48fdd0df; add esp, 8; pop rbx; ret;
0xffffffff83475777: adc eax, 0x48fdd393; add esp, 8; pop rbx; ret;
0xffffffff83470377: adc eax, 0x48fdd3e7; add esp, 8; pop rbx; ret;
0xffffffff8346f577: adc eax, 0x48fdd3f5; add esp, 8; pop rbx; ret;
0xffffffff824abbae: adc eax, 0x5bdb6434; pop rsp; fiadd st, word ptr [rbx]; ret 0xb741;
0xffffffff8250d650: adc eax, 0x604900b6; and esi, edx; mov esp, ecx; xchg esi, eax; ret 0x5439;
0xffffffff8243d951: adc eax, 0x68a99735; xchg esp, eax; test al, 0x21; int3; iretd;
0xffffffff82316028: adc eax, 0x749cfd11; leave; xor edi, [rcx-0x32]; fwait; mov ecx, 0xbc3b3aaf; ret;
0xffffffff82332e4a: adc eax, 0x7aa09a26; xchg esp, eax; ret 0x3fd5;
0xffffffff8245f57a: adc eax, 0x7ad7b233; leave; ret 0x94ff;
0xffffffff8228a596: adc eax, 0x89d2e67d; push 0x52; mov dh, [rbx-9]; xchg esp, eax; sub [rdi+0x316fdf05], al; ret 0xcb0b;
0xffffffff824e80ef: adc eax, 0x96e9a805; add eax, 0xa6c52ee6; mov es, [rbx+0x1c598b87]; pop rsp; sub edi, esi; iretd;
0xffffffff824e80ee: adc eax, 0x96e9a805; add eax, 0xa6c52ee6; mov es, [rbx+0x1c598b87]; pop rsp; sub edi, esi; iretd;
0xffffffff8231ae65: adc eax, 0xa319be4a; mov ebp, 0xf223279d; mov esp, edi; pop rcx; adc [rbp+0x57537f4e], dh; iretd;
0xffffffff82007374: adc eax, 0xbcffc716; xchg esp, eax; push rcx; call qword ptr [rbx+rbx+0x160fff05];
0xffffffff82570ed7: adc eax, 0xcf26bd3e; popfq; sbb esi, [rip+0x330cb48d]; leave; fimul st, word ptr [rdx+rsi*8]; iretd;
0xffffffff823490a7: adc eax, 0xd0fb7c76; leave; ret;
0xffffffff82494d88: adc eax, 0xdf89ea08; xchg esp, eax; fild st, word ptr [rdi+0x417389e1]; leave; iretd;
0xffffffff823676a6: adc eax, 0xe061f512; out dx, eax; pop rsp; iretd;
0xffffffff817eac6c: adc eax, 0xe8000000; mov esp, [rcx+rax*4]; cdqe; ret;
0xffffffff8243e30c: adc eax, 0xee519ea1; pop rsi; xchg [rbx-0x12], esp; ret 0xcc20;
0xffffffff8236c1c0: adc eax, 0xeec6d74e; add ebx, [rsi]; cld; push rbx; leave; iretq;
0xffffffff817c2b57: adc eax, 0xf004c05; or ebx, [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff8171ed0f: adc eax, 0xfc98548; xchg esp, eax; ret 0x8a40;
0xffffffff81c732b8: adc eax, 0xffff; not eax; shr eax, 0x10; add rsp, 4; ret;
0xffffffff835219aa: adc eax, 0xffffff81; push rax; pop rsp; adc eax, 0xffffff81; call qword ptr [rax+0x5e];
0xffffffff82ad499d: adc eax, [rax]; add dl, dl; xchg esp, eax; add [rax], eax; call far fword ptr [rbx+0x1b];
0xffffffff81b85039: adc eax, [rbx+0x6348ffc1]; leave; lea rcx, [rcx+rcx*4]; lea rax, [rax+rcx*4]; add rax, 0x38; ret;
0xffffffff81b25530: adc eax, [rsp+4]; adc eax, [rsp]; adc eax, 0; add rsp, 0xc; ret;
0xffffffff81b25534: adc eax, [rsp]; adc eax, 0; add rsp, 0xc; ret;
0xffffffff83456714: adc ebp, 0xfffffffd; add rsp, 8; pop rbx; ret;
0xffffffff82318880: adc ebp, [rdx+0x3ebc3f99]; leave; iretd;
0xffffffff83498079: adc ebp, [rdx-0x2f]; std; add rsp, 8; pop rbx; ret;
0xffffffff820024e4: adc ebp, [rsi-0x51ec00fe]; add bh, bh; xchg esp, eax; push 5; jmp qword ptr [rcx];
0xffffffff82543606: adc ebp, ebx; add ebx, [rdi+rsi*4]; adc [rsi-0x9a7b773], bl; out 0x31, al; mov esp, edi; iretd;
0xffffffff82551dc0: adc ebp, esp; xchg esp, eax; ret 0xf738;
0xffffffff8347677d: adc ebx, 0xfffffffd; add rsp, 8; pop rbx; ret;
0xffffffff8243aeeb: adc ebx, [rax]; stc; xchg ebx, eax; pop rsp; jmp qword ptr [rsi];
0xffffffff8247e35f: adc ebx, [rbp+0x40]; xchg esp, eax; test byte ptr [rsi], 0x84; xchg ebx, eax; iretd;
0xffffffff83437e57: adc ebx, [rbx+0x41]; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff8172f85d: adc ebx, [rbx]; add [rdi], cl; xchg esp, eax; ret 0xca83;
0xffffffff822d25e8: adc ebx, [rsi-0x248370c1]; and ch, [rsi+0x7a215fef]; mov [0xc387bbca23bdc767], eax; add [rdi], esp; pop rsp; ret;
0xffffffff8347d912: adc ebx, edx; std; add rsp, 8; pop rbx; ret;
0xffffffff81c1295d: adc ecx, [rax-0x75]; sub [rax-0x7b], cl; leave; mov rax, 0xffffffff8274bd30; cmovne rax, rcx; ret;
0xffffffff81b8acb1: adc ecx, [rdi]; xchg esp, eax; ret 0xb60f;
0xffffffff822ffac0: adc ecx, [rdx+rsi*2+0x6e10e791]; pop rsp; iretd;
0xffffffff823f3dab: adc ecx, ecx; sub esp, esp; iretd;
0xffffffff82350362: adc edi, [rbx-0x5feadc6d]; pop rsp; sub esi, [rbx-5]; ret;
0xffffffff822f1ff6: adc edi, [rbx]; nop; pop rsp; iretd;
0xffffffff83496e79: adc edi, [rcx+rdx*8-3]; add rsp, 8; pop rbx; ret;
0xffffffff82316c4d: adc edi, [rcx-0x76]; lodsd [rsi]; leave; ret;
0xffffffff822e4377: adc edi, [rcx]; leave; iretd;
0xffffffff82462100: adc edi, ebx; leave; ret;
0xffffffff822bbb25: adc edi, ebx; pop rsp; ret;
0xffffffff819cd5a9: adc edx, 0; not edx; mov [rsi+0x88], edx; add rsp, 0xc; ret;
0xffffffff83486746: adc edx, 0xfffffffd; add rsp, 8; pop rbx; ret;
0xffffffff8222771c: adc edx, [rcx+0x50]; xchg esp, eax; ror eax, 1; push rsi; std; ret 0x4447;
0xffffffff822576da: adc edx, ebp; mov esp, eax; pushfq; ret 0xc1f5;
0xffffffff8344d77b: adc edx, esi; std; add rsp, 8; pop rbx; ret;
0xffffffff8346d6ac: adc edx, esp; std; add rsp, 8; pop rbx; ret;
0xffffffff823c522c: adc esi, [rcx-0x44c1301d]; leave; ret;
0xffffffff82319273: adc esi, [rcx]; sbb eax, 0x5edc8493; leave; and esi, edi; mov eax, 0x339d3921; ret;
0xffffffff81811efe: adc esi, [rdi+0xa]; mov eax, ecx; mov rax, [rax*8-0x7da03300]; add rsp, 4; ret;
0xffffffff8349f979: adc esi, ecx; sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff8344d95d: adc esi, edx; std; add rsp, 8; pop rbx; ret;
0xffffffff824e2fc7: adc esp, 0x755b419; ret;
0xffffffff8200bd64: adc esp, 0xffffffb6; jmp far fword ptr [rax+0x3bff04d1];
0xffffffff824ac5b0: adc esp, 0xffffffe5; ret 0xf19e;
0xffffffff82559bed: adc esp, [rax]; enter 0x6782, 0xad; in al, dx; popfq; leave; jmp qword ptr [rdx+rbx*2-0x23];
0xffffffff8234390b: adc esp, [rdx]; pop rsp; iretd;
0xffffffff8225c408: adc esp, eax; cdq; ret;
0xffffffff8225c407: adc esp, eax; cdq; ret;
0xffffffff8108de4a: adc esp, eax; cmc; add ah, al; std; add esp, eax; ret;
0xffffffff82649d79: adc esp, eax; dec dword ptr [rdi+0x5fffe010]; adc al, ah; call far fword ptr [rdi];
0xffffffff8264fca1: adc esp, eax; dec edi; adc ah, al; jmp far fword ptr [rdi+0x10];
0xffffffff825d8e43: adc esp, eax; fild st, word ptr [rcx-0x7b554785]; ret;
0xffffffff8108dc8e: adc esp, eax; imul eax, [r13+r14*8], 0x446943c4; std; add esp, eax; ret;
0xffffffff824542a5: adc esp, eax; lodsb [rsi]; fst dword ptr [rcx*2-0x1a8d968b], st; iretd;
0xffffffff81e01378: adc esp, eax; or dword ptr [rax-0x7d], 0x485a30c4; iretd;
0xffffffff823d08fb: adc esp, eax; pop rdi; iretd;
0xffffffff81c1dc09: adc esp, eax; push rdi; jmp qword ptr [rbp+0x48];
0xffffffff813b56da: adc esp, eax; push rsi; ret;
0xffffffff810918bf: adc esp, eax; rcr dword ptr [rcx], 0xef; ret;
0xffffffff8106d7e4: adc esp, eax; ret;
0xffffffff82563417: adc esp, eax; sbb esi, edi; ret 0xb5a7;
0xffffffff81992c08: adc esp, ebp; add [rcx+0xfffe7], al; add [rbp-0x75], cl; sbb [rax+1], cl; iretd;
0xffffffff81c3871b: adc esp, ebp; call qword ptr [r8+0x1c8f5be8];
0xffffffff81bb871b: adc esp, ebp; call qword ptr [r8+0x248f5be8];
0xffffffff824feb7b: adc esp, ebp; hlt; cmp al, dh; adc esi, [rbx]; iretd;
0xffffffff82351c5b: adc esp, ebp; mov edi, 0x5da29229; iretd;
0xffffffff8224df41: adc esp, ebp; ret 0x47;
0xffffffff82537305: adc esp, ebp; xchg [rbx], esp; mov eax, [0x62d1c52f6f46ac58]; iretd;
0xffffffff8264ab2d: adc esp, ebx; call far fword ptr [rdi-0x400023f0];
0xffffffff82359a85: adc esp, ebx; iretd;
0xffffffff812f6157: adc esp, ebx; jmp qword ptr [rsi+0xf];
0xffffffff81c025cb: adc esp, ebx; jmp qword ptr [rsi-0x70];
0xffffffff823bc2da: adc esp, ebx; mov ecx, 0xed7bdb9b; ret;
0xffffffff8232a519: adc esp, ebx; mov edx, 0xb098683d; leave; out dx, eax; ret 0xe221;
0xffffffff8222c6cb: adc esp, ebx; or ebx, [rbp-0xc2d6b71]; xchg [rbx-0x6d], ebp; iretd;
0xffffffff834a0e7b: adc esp, ebx; sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff8245fd80: adc esp, ecx; adc dl, ah; enter 0xdd96, 0xf2; iretd;
0xffffffff82649a59: adc esp, ecx; call far fword ptr [rdi+0x12];
0xffffffff824bf0cd: adc esp, ecx; shl dh, 1; stosb [rdi]; int3; adc esp, [rbp-0x5b]; sysret;
0xffffffff8225f571: adc esp, ecx; shl ebx, 1; scasb [rdi]; iretd;
0xffffffff822be98b: adc esp, edi; in al, 0xcf; and dh, dh; ret;
0xffffffff8239a449: adc esp, edi; iretd;
0xffffffff822fe8bc: adc esp, edi; ret;
0xffffffff8227e251: adc esp, edx; and dword ptr [rdi-0x16], 0xffffff90; in al, dx; ret 0xf5dd;
0xffffffff8264c609: adc esp, edx; call far fword ptr [rdi+0x11];
0xffffffff8264c611: adc esp, edx; call far fword ptr [rdi];
0xffffffff81295fc0: adc esp, edx; call qword ptr [rax-0x6f6f6f70];
0xffffffff82561a98: adc esp, edx; cmp [rsi], ebp; sahf; pop rsi; ret;
0xffffffff835b4d18: adc esp, edx; imul edi, esi, 0xfe69e5ac; cmp al, 0xe7; imul edi, esi, 0xfe69e746; ret;
0xffffffff834511db: adc esp, edx; iretd;
0xffffffff8224454a: adc esp, edx; out dx, al; push rbp; imul dword ptr [rbx-4]; ret 0x249f;
0xffffffff82439caf: adc esp, edx; popfq; ret 0xe42;
0xffffffff82446ae0: adc esp, esi; call qword ptr [rbx-0x10];
0xffffffff824b070b: adc esp, esi; cmp ebx, [rdx+0x19]; xchg esi, eax; iretd;
0xffffffff826cf400: adc esp, esi; insd [rdi], dx; in eax, dx; add ch, [rsp+rcx*4+0xe]; mov esp, [rbx+0x73]; ret;
0xffffffff823af27f: adc esp, esi; iretd;
0xffffffff824ec030: adc esp, esi; iretd;
0xffffffff82497a38: adc esp, esi; jmp qword ptr [rax-0x21759516];
0xffffffff823ee41c: adc esp, esi; or al, 0x91; ret 0x83f8;
0xffffffff824075c8: adc esp, esi; out dx, al; rcl dword ptr [rsi-0x35070f7e], cl; iretd;
0xffffffff824e6935: adc esp, esi; ret 0xec62;
0xffffffff8252f641: adc esp, esp; adc eax, 0xc8ed2267; iretd;
0xffffffff82281eb3: adc esp, esp; add [rax+0x41f3533a], edx; leave; pop rsp; iretd;
0xffffffff823893db: adc esp, esp; iretd;
0xffffffff8233b69f: adc esp, esp; iretd;
0xffffffff82649021: adc esp, esp; jmp far fword ptr [rdi+0x10];
0xffffffff8230e16a: adc esp, esp; movsxd edx, [rax+0x6c7fe88f]; jmp rsp;
0xffffffff8244af8d: adc esp, esp; pop r12; ret;
0xffffffff823f97a1: adc esp, esp; ret;
0xffffffff8138d1db: adc esp, esp; std; call qword ptr [rax-0x58bb6418];
0xffffffff8231e9b3: adc esp, esp; xchg [rcx], esp; sti; cmp esi, edx; stosd [rdi]; ret 0xf7e7;
0xffffffff82427fcf: adc esp, esp; xchg ebx, eax; mov esi, ds; ret 0x630b;
0xffffffff822576d9: adc r10d, ebp; mov esp, eax; pushfq; ret 0xc1f5;
0xffffffff8231297b: adc r11b, [rdi]; push rcx; mov [0xd4766988cde0d199], al; leave; ret;
0xffffffff823c522b: adc r14d, [rcx-0x44c1301d]; leave; ret;
0xffffffff822f1ff5: adc r15d, [rbx]; nop; pop rsp; iretd;
0xffffffff82332e49: adc rax, 0x7aa09a26; xchg esp, eax; ret 0x3fd5;
0xffffffff8171ed0e: adc rax, 0xfc98548; xchg esp, eax; ret 0x8a40;
0xffffffff8243e30b: adc rax, 0xffffffffee519ea1; pop rsi; xchg [rbx-0x12], esp; ret 0xcc20;
0xffffffff82563416: adc rsp, rax; sbb esi, edi; ret 0xb5a7;
0xffffffff8344da4c: adc sil, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff828f3f2d: add [eax], al; pop rsp; ret;
0xffffffff817f2706: add [r11+0x41], bl; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81480dd7: add [r11+0x41], r11b; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff8177ab0e: add [r11+0x41], r11b; pop rsp; pop r14; pop r15; ret;
0xffffffff81829bca: add [r13+0x75c389db], eax; rcr dword ptr [rbx+0x41], 1; pop rsp; pop r14; pop r15; ret;
0xffffffff81a7e268: add [r15], ecx; xchg esp, eax; ret 0x7980;
0xffffffff81894e63: add [r15], ecx; xchg esp, eax; ret 0xf631;
0xffffffff81a7e285: add [r15], ecx; xchg esp, eax; rol byte ptr [rax+0xf000279], 0x95; ret 0xd030;
0xffffffff81c24030: add [r15], r9b; xchg esp, eax; ret;
0xffffffff81348855: add [r8-0x77], rcx; fsubp st(0), st; xchg ecx, eax; sbb esp, esi; jmp qword ptr [rbp+0x48];
0xffffffff8176c96e: add [rax+0x10], ch; mov eax, [0x48fffffe57e8825e]; add esp, 8; ret;
0xffffffff812b0294: add [rax+0x19], ecx; leave; or rax, rcx; ret;
0xffffffff8293be77: add [rax+0x22], ah; add [rax], al; pop rsp; ret 9;
0xffffffff8105096f: add [rax+0x31], al; leave; cpuid; mov eax, edx; pop rbx; ret;
0xffffffff8105093f: add [rax+0x31], al; leave; cpuid; pop rbx; ret;
0xffffffff8173852d: add [rax+0x39], cl; ror byte ptr [rdi], 1; xchg esp, eax; ret;
0xffffffff81561b60: add [rax+0x3b], cl; mov [rax+rax*4], fs; add [rax], al; add [rbp+0x28], dh; add rsp, 0x88; ret;
0xffffffff8112e784: add [rax+0x3b], cl; mov [rax+rax*4], fs; add [rax], al; add [rbp+8], dh; add rsp, 0x88; ret;
0xffffffff81515286: add [rax+0x3b], cl; mov [rax+rsi], fs; add [rax], eax; add [rbp+8], dh; add rsp, 0x138; ret;
0xffffffff818ff81c: add [rax+0x3b], cl; test [rax+rdx*4], ah; add [rax], al; add [rbp+8], dh; add rsp, 0x98; ret;
0xffffffff8187e40a: add [rax+0x3b], cl; test [rax+rsi*4], ah; add [rax], al; add [rbp+8], dh; add rsp, 0xb8; ret;
0xffffffff82281eb5: add [rax+0x41f3533a], edx; leave; pop rsp; iretd;
0xffffffff812a5fd5: add [rax+0x63], cl; leave; add gs:[rax+0x3b0], rcx; ret;
0xffffffff8104dbad: add [rax+0x63], cl; xchg esp, eax; and al, 0x80; add [rax], al; add [rax+1], cl; ret 0x394c;
0xffffffff81736e42: add [rax+0xf080978], al; xchg esp, eax; ret 0xc280;
0xffffffff816f76a9: add [rax+0xf], al; xchg esp, eax; ret 0x8948;
0xffffffff8177d4b7: add [rax+0xf], al; xchg esp, eax; ror byte ptr [rcx-0x3f1c7f0d], 0x80; sti; or byte ptr [rdi], 0x95; ret;
0xffffffff814b9c2d: add [rax+0xf], al; xchg esp, eax; sar byte ptr [rdx+0x42], 0x29; ret 0x8141;
0xffffffff8121afeb: add [rax+0xf], cl; enter 0x8948, 0xd; leave; ret 0x1c5;
0xffffffff8177ae55: add [rax+0xf], eax; xchg esp, eax; mov byte ptr [rax-0xa], 0xc7; or cl, [rdi]; xchg ebp, eax; ret 0x8440;
0xffffffff812c3cf4: add [rax+1], edi; shl rax, cl; add rsp, 8; ret;
0xffffffff82aaf977: add [rax+3], dl; add [rax], al; leave; rol byte ptr [rdx], 0; ret;
0xffffffff829d198f: add [rax+8], al; add [rax], al; pop rsp; ret 0xf;
0xffffffff818f3782: add [rax+rax*8-0x76b7218b], al; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff819cdc1d: add [rax+rax], al; add [rdi], cl; xchg esp, eax; ret 0x840;
0xffffffff816edf8e: add [rax+rax], al; add [rdi], cl; xchg esp, eax; ret 0xd184;
0xffffffff8135595e: add [rax+rax], al; add [rdi], cl; xchg esp, eax; ret;
0xffffffff81625f75: add [rax+rax], al; add [rdi], cl; xchg esp, eax; rol byte ptr [rcx-0x73], 0x4d; jmp qword ptr [rsi-0x7d];
0xffffffff829a1317: add [rax+rax], al; add [rip+0x4b], cl; pop rsp; mov dword ptr [rax+rax], 0xbfb9; scasd [rdi]; ret 8;
0xffffffff8100fb63: add [rax+rax], cl; add [rdi], cl; xchg esp, eax; ret 0xc148;
0xffffffff822d5a2b: add [rax+rbp*8+0x627c8a20], bl; cwde; xchg esp, eax; imul ebx, esi, 0x5a5ab7f0; iretd;
0xffffffff812d93f9: add [rax+rcx+0x31], dh; leave; mov eax, ecx; pop rbx; pop r14; ret;
0xffffffff83453ec8: add [rax-0x147ee45a], ah; leave; xor eax, eax; ret;
0xffffffff817c984d: add [rax-0x16e7d9b8], al; leave; xchg r9d, eax; jmp qword ptr [rsi+0xf];
0xffffffff812c1e54: add [rax-0x18], dl; add eax, 0x48fffffb; add esp, 0x10; ret;
0xffffffff8252204f: add [rax-0x28c93569], ecx; pop rsp; ret;
0xffffffff8185fcff: add [rax-0x397d9f60], dl; xchg esp, ebp; add al, 0; add [rcx], al; mov qword ptr [rdi+0x4f0], 0; ret;
0xffffffff8185fa4f: add [rax-0x397d9f62], al; xchg esp, ebp; add al, 0; add [rcx], al; mov qword ptr [rdi+0x4f0], 0xffffffff8185fa70; ret;
0xffffffff81042bad: add [rax-0x39], cl; mov dword ptr [rax+0x4882f91b], 0xa498c6c7; pop rsp; sub eax, 0xffffff8f; pop rbp; ret 0x8500;
0xffffffff8160dfb4: add [rax-0x39], cl; mov dword ptr [rax+0x56], 0xffe982f0; sbb esp, edx; jmp qword ptr [rsi+0x66];
0xffffffff8133935c: add [rax-0x39], cl; mov dword ptr [rax-0x5a], 0xf7e882e0; pushfq; xchg esp, eax; add [rax-0x7d], cl; ret;
0xffffffff8118e5ce: add [rax-0x39], cl; rcl byte ptr [rax+0x5b81e016], 0x41; pop rsp; pop r14; pop r15; ret;
0xffffffff8121ea83: add [rax-0x3bf2d4b8], al; push rsp; pop rsp; add [rax+1], ecx; iretd;
0xffffffff812abd1e: add [rax-0x4aa6a418], dl; add [rax-0x75], cl; xchg [rax+1], esp; add [rax], al; shl rax, 0xc; ret;
0xffffffff818e748b: add [rax-0x5f], bh; add rsp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff8182828b: add [rax-0x68], cl; add rsp, 8; pop rbx; ret;
0xffffffff8182828a: add [rax-0x68], r9b; add rsp, 8; pop rbx; ret;
0xffffffff824f5993: add [rax-0x73], ah; xchg esp, eax; enter 0x4480, 0xae; leave; ret 0x5cac;
0xffffffff819bbfc4: add [rax-0x73], cl; xchg [rax+0x48000002], esp; mov [rdi+0x2a0], eax; mov [rdi+0x2a8], rax; mov dword ptr [rdi+0x2b0], 0; ret;
0xffffffff81a44644: add [rax-0x73], cl; xchg [rax+0x4800000d], esp; mov [rdi+0xda0], eax; mov [rdi+0xda8], rax; xor eax, eax; ret;
0xffffffff819bbfc3: add [rax-0x73], r9b; xchg [rax+0x48000002], esp; mov [rdi+0x2a0], eax; mov [rdi+0x2a8], rax; mov dword ptr [rdi+0x2b0], 0; ret;
0xffffffff816454c4: add [rax-0x75], cl; mov esp, 0x2f024; add [rcx], dh; imul al; xchg rsp, rax; ret 0x48ff;
0xffffffff816454a9: add [rax-0x75], cl; mov esp, 0x32824; add [rcx], dh; imul al; xchg esp, eax; ret 0x48ff;
0xffffffff816afd49: add [rax-0x75], cl; pop rax; or dword ptr [rax+0x5c], 8; add rsp, 4; ret;
0xffffffff8113c144: add [rax-0x75], cl; xchg [rax+0x48000000], esp; sub eax, esi; ret;
0xffffffff81bc8f84: add [rax-0x75], cl; xchg [rax+0x48000007], esp; mov dword ptr [rax], 0; mov byte ptr [rax+0x28], 1; ret;
0xffffffff812abd24: add [rax-0x75], cl; xchg [rax+1], esp; add [rax], al; shl rax, 0xc; ret;
0xffffffff81904b3f: add [rax-0x75], cl; xchg eax, esp; add [rax], al; add [rax-0x77], cl; ret 0xc148;
0xffffffff81672328: add [rax-0x75], cl; xchg esp, eax; and al, 0xe0; add [rax], al; add [rbx+0x94803e2], al; ret 0x8948;
0xffffffff81b75a50: add [rax-0x75], cl; xchg esp, eax; and al, 0xf0; add [rax], al; add [rbx+0x94803e2], al; ret 0x8948;
0xffffffff811cb529: add [rax-0x75], cl; xchg esp, eax; and al, 0xf5; add [rax], al; add [rax+0x31], cl; ret 0x948;
0xffffffff81162280: add [rax-0x75], cl; xchg esp, eax; ret 0x1a0;
0xffffffff811310cf: add [rax-0x75], cl; xchg esp, eax; ret;
0xffffffff811e66de: add [rax-0x75], ecx; pop rsp; ret;
0xffffffff811cb528: add [rax-0x75], r9b; xchg esp, eax; and al, 0xf5; add [rax], al; add [rax+0x31], cl; ret 0x948;
0xffffffff8195d018: add [rax-0x76b7e4bd], cl; fucomip st, st(0); pop rsp; ret 0xffd1;
0xffffffff810333c8: add [rax-0x77], cl; and al, 2; mov word ptr [rsp], 0x7f; lgdt [rsp]; add rsp, 0x10; ret;
0xffffffff81182c95: add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff8198fb41: add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff81bcd13d: add [rax-0x77], cl; fisubr st, word ptr [rax-0x57f18ae0]; add cl, [rdi]; xchg esp, eax; ret 0x30a8;
0xffffffff81c80ceb: add [rax-0x77], cl; fucomip st, st(0); pop rsp; or al, 0; add [rax-0x77], cl; ret;
0xffffffff81582cde: add [rax-0x77], cl; fucomip st, st(0); sbb esp, esp; cmpsd [rsi], [rdi]; add [rax-0x77], cl; ret;
0xffffffff819bbfcb: add [rax-0x77], cl; xchg [rax+0x48000002], esp; mov [rdi+0x2a8], eax; mov dword ptr [rdi+0x2b0], 0; ret;
0xffffffff81a4464b: add [rax-0x77], cl; xchg [rax+0x4800000d], esp; mov [rdi+0xda8], eax; xor eax, eax; ret;
0xffffffff8173045f: add [rax-0x77], cl; xchg [rax+4], esp; add [rax], al; ret;
0xffffffff81a556e1: add [rax-0x77], cl; xchg [rax], esp; or eax, 0x87c70000; sub [rip-0x56800000], cl; add eax, [rax]; ret;
0xffffffff81011e70: add [rax-0x77], cl; xchg esp, eax; ret;
0xffffffff81263955: add [rax-0x77], ecx; add eax, 0x23b61b3; add rsp, 4; ret;
0xffffffff81929ef8: add [rax-0x77], ecx; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff81348856: add [rax-0x77], ecx; fsubp st(0), st; xchg ecx, eax; sbb esp, esi; jmp qword ptr [rbp+0x48];
0xffffffff81794090: add [rax-0x77], r9b; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff81172505: add [rax-0x7b], cl; leave; cmove rax, rcx; ret;
0xffffffff812a9ccc: add [rax-0x7b], cl; leave; cmovns rax, rcx; add rax, rdx; shl rax, 0xc; ret;
0xffffffff81236b9e: add [rax-0x7b], cl; leave; cmovns rax, rcx; add rax, rsi; ret;
0xffffffff81ba4efb: add [rax-0x7b], cl; leave; mov eax, 0x268; cmove rax, rcx; ret;
0xffffffff81b2dbcb: add [rax-0x7b], cl; leave; mov eax, 0x84; cmove rax, rcx; ret;
0xffffffff810079cc: add [rax-0x7b], cl; leave; mov ecx, 0xfffffff4; cmove eax, ecx; pop rbx; ret;
0xffffffff81c124b2: add [rax-0x7b], cl; leave; mov rax, 0xffffffff827dd02d; cmovne rax, rcx; ret;
0xffffffff817b952b: add [rax-0x7b], cl; leave; mov rax, 0xffffffffffffffef; cmove rax, rcx; ret;
0xffffffff81363520: add [rax-0x7b], cl; ror byte ptr [rdi], 0x84; xchg esp, eax; add [rax], al; add [rax-0x39], cl; ret;
0xffffffff815178d2: add [rax-0x7b], cl; ror byte ptr [rdi], 0x84; xchg esp, eax; add al, 0; add [rax-0x77], cl; ret;
0xffffffff810f312f: add [rax-0x7b], cl; ror byte ptr [rdi], cl; xchg esp, eax; ret;
0xffffffff810b311d: add [rax-0x7b], cl; shl byte ptr [rbp-0x19], 0xeb; add dh, [rcx]; leave; mov rax, rcx; ret;
0xffffffff8169acdf: add [rax-0x7b], cl; shl byte ptr [rsp+rax*8+0x5b], 0x41; pop rsp; pop r14; pop r15; ret;
0xffffffff81281eee: add [rax-0x7b], ecx; test byte ptr [rdi], 0x95; rol dword ptr [rax-0xa], 0xc6; add [rdi], ecx; xchg esp, eax; ret 0xca20;
0xffffffff812d2f7c: add [rax-0x7c3ca4ff], dh; leave; mov [rbx], ecx; pop rbx; ret;
0xffffffff8255af49: add [rax-0x9a70c36], ebp; pop rsp; ret;
0xffffffff816a88cf: add [rax], ah; add [rax], al; add [rcx+0xf], al; xchg esp, eax; ret 0x8944;
0xffffffff812c7887: add [rax], ah; add [rdi], cl; xchg esp, eax; ret 0x2b8;
0xffffffff81234203: add [rax], ah; add [rdi], cl; xchg esp, eax; ret 0x394d;
0xffffffff812c9526: add [rax], ah; add [rdi], cl; xchg esp, eax; ret 0x8948;
0xffffffff812c963a: add [rax], ah; add [rdi], cl; xchg esp, eax; ret 0x8b48;
0xffffffff811f8b25: add [rax], ah; add [rdi], cl; xchg esp, eax; ret 0xf44;
0xffffffff811f8c90: add [rax], ah; add [rdi], cl; xchg esp, eax; ret 0xf45;
0xffffffff81b1258e: add [rax], al; adc [rax], al; add rsp, 0xc; ret;
0xffffffff8176c96c: add [rax], al; add [rax+0x10], ch; mov eax, [0x48fffffe57e8825e]; add esp, 8; ret;
0xffffffff8293be75: add [rax], al; add [rax+0x22], ah; add [rax], al; pop rsp; ret 9;
0xffffffff8173852b: add [rax], al; add [rax+0x39], cl; ror byte ptr [rdi], 1; xchg esp, eax; ret;
0xffffffff814b9c2b: add [rax], al; add [rax+0xf], al; xchg esp, eax; sar byte ptr [rdx+0x42], 0x29; ret 0x8141;
0xffffffff8121afe9: add [rax], al; add [rax+0xf], cl; enter 0x8948, 0xd; leave; ret 0x1c5;
0xffffffff8121ea81: add [rax], al; add [rax-0x3bf2d4b8], al; push rsp; pop rsp; add [rax+1], ecx; iretd;
0xffffffff81904b3d: add [rax], al; add [rax-0x75], cl; xchg eax, esp; add [rax], al; add [rax-0x77], cl; ret 0xc148;
0xffffffff8116227e: add [rax], al; add [rax-0x75], cl; xchg esp, eax; ret 0x1a0;
0xffffffff811310cd: add [rax], al; add [rax-0x75], cl; xchg esp, eax; ret;
0xffffffff8195d016: add [rax], al; add [rax-0x76b7e4bd], cl; fucomip st, st(0); pop rsp; ret 0xffd1;
0xffffffff8158ca53: add [rax], al; add [rax-0x77], cl; xchg esp, eax; ret;
0xffffffff81172503: add [rax], al; add [rax-0x7b], cl; leave; cmove rax, rcx; ret;
0xffffffff810f312d: add [rax], al; add [rax-0x7b], cl; ror byte ptr [rdi], cl; xchg esp, eax; ret;
0xffffffff82637c18: add [rax], al; add [rax], al; add [rax], al; add [rax], al; leave; ret;
0xffffffff8298c0b0: add [rax], al; add [rax], al; add [rax], al; add [rdx], al; leave; ret;
0xffffffff82a68b98: add [rax], al; add [rax], al; add [rax], al; add [rip+0xc91], cl; pop rsp; ret;
0xffffffff82802b9b: add [rax], al; add [rax], al; add [rax], al; leave; call qword ptr [rcx+0x3fd];
0xffffffff82637c1a: add [rax], al; add [rax], al; add [rax], al; leave; ret;
0xffffffff82a68b99: add [rax], al; add [rax], al; add [rax], al; or eax, 0xc91; pop rsp; ret;
0xffffffff82a9dac7: add [rax], al; add [rax], al; add [rcx], dl; pop rsp; sbb [rax], al; ret 0x1b;
0xffffffff8298c0b2: add [rax], al; add [rax], al; add [rdx], al; leave; ret;
0xffffffff829bb7b6: add [rax], al; add [rax], al; add [rdx], al; mov esp, [rsi]; add [rax], al; iretd;
0xffffffff82a68b9a: add [rax], al; add [rax], al; add [rip+0xc91], cl; pop rsp; ret;
0xffffffff8281050f: add [rax], al; add [rax], al; add ah, ch; mov esp, [rbx]; jmp qword ptr [rdi-0x41];
0xffffffff8280bbef: add [rax], al; add [rax], al; add ah, cl; sub esp, ebx; call far fword ptr [rdx+0x1a4];
0xffffffff8118afeb: add [rax], al; add [rax], al; add al, ch; mov esp, [rsi-0x39]; add [rax-0x16], bh; ret;
0xffffffff828f3f27: add [rax], al; add [rax], al; add bl, [rdx+0x67]; add [rax], al; pop rsp; ret;
0xffffffff828dfc2b: add [rax], al; add [rax], al; add ch, [rcx]; pop rsp; add [rax], al; call qword ptr [rbp];
0xffffffff816b57bb: add [rax], al; add [rax], al; add cl, ch; mov esp, [rsi-0x43]; jmp qword ptr [rsi+0x66];
0xffffffff818f1bc4: add [rax], al; add [rax], al; add rsp, 0x10; pop rbx; ret;
0xffffffff8123e0df: add [rax], al; add [rax], al; add rsp, 0x10; ret;
0xffffffff82810510: add [rax], al; add [rax], al; in al, dx; mov esp, [rbx]; jmp qword ptr [rdi-0x41];
0xffffffff8280bbf0: add [rax], al; add [rax], al; int3; sub esp, ebx; call far fword ptr [rdx+0x1a4];
0xffffffff82802b9d: add [rax], al; add [rax], al; leave; call qword ptr [rcx+0x3fd];
0xffffffff8280820c: add [rax], al; add [rax], al; leave; jmp far fword ptr [rdx+0x53];
0xffffffff82637c1c: add [rax], al; add [rax], al; leave; ret;
0xffffffff82aaf9d8: add [rax], al; add [rax], al; leave; rol byte ptr [rdx], 0; ret;
0xffffffff8166cd2e: add [rax], al; add [rax], al; mov eax, [rbp-4]; add rsp, 0x28; pop rbp; ret;
0xffffffff8166c628: add [rax], al; add [rax], al; mov eax, [rbp-4]; add rsp, 0x30; pop rbp; ret;
0xffffffff818f1bbc: add [rax], al; add [rax], al; mov qword ptr [rbx+0x30], 0; add rsp, 0x10; pop rbx; ret;
0xffffffff82815868: add [rax], al; add [rax], al; movsb [rdi], [rsi]; pop rsp; jmp qword ptr [rbp+rdx*8+2];
0xffffffff82ad3b57: add [rax], al; add [rax], al; or al, 0x19; xchg esp, eax; add [rax], eax; ret;
0xffffffff82ad434b: add [rax], al; add [rax], al; or al, 0xaa; xchg esp, eax; add [rax], eax; ret 0x1b56;
0xffffffff82875993: add [rax], al; add [rax], al; or al, 0xe0; sldt [rax]; pop rsp; ret 1;
0xffffffff82875a0b: add [rax], al; add [rax], al; or al, 0xe0; sldt [rax]; pop rsp; ret;
0xffffffff82a68b9b: add [rax], al; add [rax], al; or eax, 0xc91; pop rsp; ret;
0xffffffff82810a50: add [rax], al; add [rax], al; pop rsp; and ah, [rbx]; jmp rdx;
0xffffffff82811140: add [rax], al; add [rax], al; pop rsp; insb [rdi], dx; ret;
0xffffffff82804330: add [rax], al; add [rax], al; pop rsp; int1; jmp far fword ptr [r15+0x3f3];
0xffffffff827ff650: add [rax], al; add [rax], al; pop rsp; ret;
0xffffffff82801ea0: add [rax], al; add [rax], al; pop rsp; sub al, 0x35; call far fword ptr [rdi+0x3d7];
0xffffffff827fed08: add [rax], al; add [rax], al; xchg esp, eax; and bl, [rdx]; jmp qword ptr [rax];
0xffffffff82814608: add [rax], al; add [rax], al; xchg esp, eax; call qword ptr [r15];
0xffffffff827fe810: add [rax], al; add [rax], al; xchg esp, eax; cmp al, 0xd8; call qword ptr [rdi+0xf];
0xffffffff827fdc58: add [rax], al; add [rax], al; xchg esp, eax; fistp word ptr [rbx], st; inc edi; ret;
0xffffffff828163a8: add [rax], al; add [rax], al; xchg esp, eax; idiv byte ptr [rdi]; call far fword ptr [rbp+0x2b1];
0xffffffff82809f58: add [rax], al; add [rax], al; xchg esp, eax; mov al, [rax]; call far fword ptr [rbx+rax*4+2];
0xffffffff827fa688: add [rax], al; add [rax], al; xchg esp, eax; mov dl, 0x47; call far fword ptr [rdx+rbx*4+4];
0xffffffff82811248: add [rax], al; add [rax], al; xchg esp, eax; or bl, al; jmp far fword ptr [rsi];
0xffffffff8280e518: add [rax], al; add [rax], al; xchg esp, eax; outsb dx, [rsi]; call far fword ptr [rcx-7];
0xffffffff827ff1e8: add [rax], al; add [rax], al; xchg esp, eax; rcr dword ptr [rcx], cl; call rdi;
0xffffffff82ac6a10: add [rax], al; add [rax], al; xchg esp, eax; ret 0x1a;
0xffffffff827f85d8: add [rax], al; add [rax], al; xchg esp, eax; ret 0xfef0;
0xffffffff82811f08: add [rax], al; add [rax], al; xchg esp, eax; test edi, ebx; jmp qword ptr [rdx+0x20];
0xffffffff827f9da8: add [rax], al; add [rax], al; xchg esp, eax; xor ebx, [rax]; jmp qword ptr [rdx];
0xffffffff82875994: add [rax], al; add [rax], cl; sldt [rax]; pop rsp; ret 1;
0xffffffff82875a0c: add [rax], al; add [rax], cl; sldt [rax]; pop rsp; ret;
0xffffffff8288bb1e: add [rax], al; add [rax], eax; add [rax], al; leave; ret 2;
0xffffffff82aaf9d2: add [rax], al; add [rax], eax; add [rip], cl; leave; rol byte ptr [rdx], 0; ret;
0xffffffff81482495: add [rax], al; add [rbp+0x13], dh; add rsp, 0xa0; pop rbx; pop r14; ret;
0xffffffff815188ba: add [rax], al; add [rbp+0x14], dh; mov eax, ecx; add rsp, 0xa0; pop rbx; ret;
0xffffffff8145c785: add [rax], al; add [rbp+0x1f], dh; add rsp, 0xa0; pop rbx; pop r14; ret;
0xffffffff81561b66: add [rax], al; add [rbp+0x28], dh; add rsp, 0x88; ret;
0xffffffff81c28ed7: add [rax], al; add [rbp+0x2a], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff8158b694: add [rax], al; add [rbp+0x31], al; leave; mov [rsi+8], r9d; ret;
0xffffffff819b96e2: add [rax], al; add [rbp+0x31], dh; add rsp, 0xc0; pop rbx; pop r14; ret;
0xffffffff829026a9: add [rax], al; add [rbp+0x360004ee], dh; pop rsp; add [rax], al; ret;
0xffffffff81410d34: add [rax], al; add [rbp+0x48], dh; add rsp, 0xa0; pop rbx; pop r14; ret;
0xffffffff814eebe9: add [rax], al; add [rbp+0xa], dh; add rsp, 0x98; pop rbx; pop rbp; ret;
0xffffffff8160b5b5: add [rax], al; add [rbp+0xa], dh; add rsp, 0xa8; pop rbx; pop rbp; ret;
0xffffffff8112e65a: add [rax], al; add [rbp+0xb], dh; add rsp, 0x88; pop rbx; pop r14; ret;
0xffffffff81baad39: add [rax], al; add [rbp+0xb], dh; add rsp, 0x90; pop rbx; pop r14; ret;
0xffffffff817ca480: add [rax], al; add [rbp+0xb], dh; add rsp, 0x98; pop rbx; pop r14; ret;
0xffffffff8145c4f3: add [rax], al; add [rbp+0xb], dh; add rsp, 0xa0; pop rbx; pop r14; ret;
0xffffffff8115858d: add [rax], al; add [rbp+0xb], dh; add rsp, 0xb0; pop rbx; pop r14; ret;
0xffffffff81a82d18: add [rax], al; add [rbp+0xb], dh; add rsp, 0xf0; pop rbx; pop r14; ret;
0xffffffff81521816: add [rax], al; add [rbp+0xc], dh; mov rax, rbx; add rsp, 0xa0; pop rbx; ret;
0xffffffff81c7f528: add [rax], al; add [rbp+2], esi; xor eax, eax; add rsp, 8; pop rbx; ret;
0xffffffff81036ab8: add [rax], al; add [rbp+5], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff8112e78a: add [rax], al; add [rbp+8], dh; add rsp, 0x88; ret;
0xffffffff818ff822: add [rax], al; add [rbp+8], dh; add rsp, 0x98; ret;
0xffffffff8187e410: add [rax], al; add [rbp+8], dh; add rsp, 0xb8; ret;
0xffffffff810ca375: add [rax], al; add [rbp+9], dh; add rsp, 0x88; pop rbx; ret;
0xffffffff8151e0f9: add [rax], al; add [rbp+9], dh; add rsp, 0x90; pop rbx; ret;
0xffffffff812f9941: add [rax], al; add [rbp+9], dh; add rsp, 0x98; pop rbx; ret;
0xffffffff812f8da0: add [rax], al; add [rbp+9], dh; add rsp, 0xa0; pop rbx; ret;
0xffffffff811f9cd8: add [rax], al; add [rbp+9], dh; add rsp, 0xa8; pop rbx; ret;
0xffffffff814226ae: add [rax], al; add [rbp+9], dh; add rsp, 0xc0; pop rbx; ret;
0xffffffff812193ca: add [rax], al; add [rbp+rbp+0x48], dh; add esp, 8; pop rbx; pop r14; ret;
0xffffffff81af3bd2: add [rax], al; add [rbp-0x14158a40], al; add dh, [rcx]; leave; mov rax, rcx; ret;
0xffffffff811f7a47: add [rax], al; add [rbp-0x141b8a40], al; add dh, [rcx]; leave; mov rax, rcx; ret;
0xffffffff8199ccfc: add [rax], al; add [rbp-0x141c8a40], al; or [rcx], dh; leave; mov rax, rcx; ret;
0xffffffff817631e8: add [rax], al; add [rbp-0x7b], cl; fisttp dword ptr [rdi], st; xchg esp, eax; ret 0x8349;
0xffffffff8187eb97: add [rax], al; add [rbp-0x7c], al; dec dword ptr [rdi]; xchg esp, eax; ret 0x8548;
0xffffffff81b1c1e0: add [rax], al; add [rbx+0x418084c], al; xor eax, eax; add rsp, 0xc; ret;
0xffffffff8100433e: add [rax], al; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81201963: add [rax], al; add [rbx+0x41], ebx; pop rsp; pop r14; pop r15; ret;
0xffffffff81b1c1da: add [rax], al; add [rbx+0xbc8f], cl; add [rbx+0x418084c], al; xor eax, eax; add rsp, 0xc; ret;
0xffffffff828fb778: add [rax], al; add [rbx+rbp*4], cl; insb [rdi], dx; add [rax], al; pop rsp; sysret;
0xffffffff811e3a64: add [rax], al; add [rbx-0x77], cl; pop rsp; xor eax, 0x8327eb30; ret;
0xffffffff811df59c: add [rax], al; add [rbx-0x7af0f7c6], al; pop rsp; add [rax], eax; add [rax-0x77], cl; iretd;
0xffffffff8126d977: add [rax], al; add [rcx+0xf742454], cl; xchg esp, eax; ret 0xca20;
0xffffffff816a88d1: add [rax], al; add [rcx+0xf], al; xchg esp, eax; ret 0x8944;
0xffffffff82ad3b58: add [rax], al; add [rcx+rbx], cl; xchg esp, eax; add [rax], eax; ret;
0xffffffff81999f4b: add [rax], al; add [rcx-0x39], cl; shl dword ptr [rax+0x50816bb9], 0xe8; add eax, 0x48000000; add esp, 8; ret;
0xffffffff814959cf: add [rax], al; add [rcx-0x75], al; xchg [rax+0x39000000], esp; ret 0xe272;
0xffffffff8156e57b: add [rax], al; add [rcx-0x75], al; xchg esp, eax; mov [rax-0x7d000000], cs; ret 0x4101;
0xffffffff81477044: add [rax], al; add [rcx-0x7d], al; mov edi, 0x1aa8; add cl, [rdi]; xchg esp, eax; ret 0x498b;
0xffffffff82a165de: add [rax], al; add [rcx], al; add [rax], al; pop rsp; iretd;
0xffffffff81ab930d: add [rax], al; add [rcx], dh; fild st, dword ptr [rcx-0xa]; rol byte ptr [rdx], 0xf; xchg esp, eax; ret;
0xffffffff834898dd: add [rax], al; add [rcx], dh; imul al; leave; stc; ret 0x8bfd;
0xffffffff8141cbf7: add [rax], al; add [rcx], dh; leave; cmp eax, 0xffffffa1; cmove eax, ecx; ret;
0xffffffff81528f9b: add [rax], al; add [rcx], dh; leave; mov [rsi+8], rcx; ret;
0xffffffff817801d8: add [rax], al; add [rcx], dh; leave; sub eax, [rdi+0x90]; cmovs eax, ecx; ret;
0xffffffff81684936: add [rax], al; add [rcx], dh; rol byte ptr [rbp-0x7b], cl; dec dword ptr [rdi]; xchg esp, eax; ret 0x2941;
0xffffffff81031512: add [rax], al; add [rcx], dh; shr dh, 0x31; shr dh, 0x81; leave; ret 0;
0xffffffff82a9dac9: add [rax], al; add [rcx], dl; pop rsp; sbb [rax], al; ret 0x1b;
0xffffffff812016c0: add [rax], al; add [rdi+rcx], al; xchg esp, eax; ret 0xc148;
0xffffffff81700ebd: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x1b0;
0xffffffff81bef694: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x349;
0xffffffff818d8ec1: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x3944;
0xffffffff81bb788d: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x41f0;
0xffffffff813fe8f2: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x448b;
0xffffffff816803eb: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x8948;
0xffffffff8144edc7: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x894c;
0xffffffff81bb919d: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x8fe9;
0xffffffff81ba33ea: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0xa889;
0xffffffff816e49f3: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0xc031;
0xffffffff81718f08: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0xd138;
0xffffffff811f945d: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0xe2c1;
0xffffffff812b9ffd: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0xf741;
0xffffffff8100c8e7: add [rax], al; add [rdi], cl; xchg esp, eax; ret;
0xffffffff810c62d2: add [rax], al; add [rdi], cl; xchg esp, eax; ret;
0xffffffff811b8c69: add [rax], al; add [rdi], cl; xchg esp, eax; rol bl, 0x48; mov eax, 0xfffffff9; ret;
0xffffffff81811c9b: add [rax], al; add [rdi], cl; xchg esp, eax; ror byte ptr [rax-0x3f], 0xe0; add ecx, [rax+9]; ret;
0xffffffff81389fb5: add [rax], al; add [rdi], cl; xchg esp, eax; shl byte ptr [rcx+rax], 0xf; mov dh, 0xc0; ret;
0xffffffff81281907: add [rax], al; add [rdi], ecx; xchg esp, eax; ret 0x8548;
0xffffffff8134a0e4: add [rax], al; add [rdi], ecx; xchg esp, eax; ret 0x894c;
0xffffffff818a5f2d: add [rax], al; add [rdi], ecx; xchg esp, eax; ret 0xe2c1;
0xffffffff82ad434c: add [rax], al; add [rdx+rbp*4], cl; xchg esp, eax; add [rax], eax; ret 0x1b56;
0xffffffff81301bcd: add [rax], al; add [rdx+rdx-0x18], dh; leave; ret;
0xffffffff8298c0b4: add [rax], al; add [rdx], al; leave; ret;
0xffffffff829bb7b8: add [rax], al; add [rdx], al; mov esp, [rsi]; add [rax], al; iretd;
0xffffffff828f3f28: add [rax], al; add [rdx], al; pop rdx; add [eax], al; pop rsp; ret;
0xffffffff828e1414: add [rax], al; add [rdx], al; xchg edx, eax; pop rsp; add [rax], al; ret 0x85;
0xffffffff82a68b9c: add [rax], al; add [rip+0xc91], cl; pop rsp; ret;
0xffffffff8181dc96: add [rax], al; add [rsi-0x7d], ah; clc; dec dword ptr [rdi]; xchg esp, eax; ret;
0xffffffff82810511: add [rax], al; add ah, ch; mov esp, [rbx]; jmp qword ptr [rdi-0x41];
0xffffffff8280bbf1: add [rax], al; add ah, cl; sub esp, ebx; call far fword ptr [rdx+0x1a4];
0xffffffff812016c1: add [rax], al; add al, 0xf; xchg esp, eax; ret 0xc148;
0xffffffff8189959d: add [rax], al; add al, ch; fild st, dword ptr [rax-0x48f0ffaa]; xchg esp, esp; or eax, 0xc0010000; ret;
0xffffffff81800244: add [rax], al; add al, ch; hlt; xchg esp, eax; std; jmp far fword ptr [rcx+0xff0000];
0xffffffff812e673f: add [rax], al; add al, ch; leave; or eax, 0x98480000; ret;
0xffffffff816556ef: add [rax], al; add al, ch; leave; ret 0xffff;
0xffffffff8152cf4f: add [rax], al; add al, ch; leave; ret;
0xffffffff817eac6d: add [rax], al; add al, ch; mov esp, [rcx+rax*4]; cdqe; ret;
0xffffffff817eaf6d: add [rax], al; add al, ch; mov esp, [rcx-0x7f]; add [rax-0x68], cl; ret;
0xffffffff81a171ed: add [rax], al; add al, ch; mov esp, [rsi+rdi-0x7874b800]; add [rdx], al; add [rax], al; ret;
0xffffffff8118afed: add [rax], al; add al, ch; mov esp, [rsi-0x39]; add [rax-0x16], bh; ret;
0xffffffff8177f7c9: add [rax], al; add al, ch; out dx, eax; xchg esp, eax; inc dword ptr [rax+rax*8-0x38b7eb8b]; ret;
0xffffffff814fe46e: add [rax], al; add al, ch; pop rdx; pop rsp; cld; jmp qword ptr [rbp+0x48];
0xffffffff811165dc: add [rax], al; add al, ch; pop rsp; in al, 0xff; jmp qword ptr [rbp+0x48];
0xffffffff8349a1b2: add [rax], al; add al, ch; pop rsp; pop rbx; dec byte ptr [rcx-0x76f91415]; ret;
0xffffffff813f320c: add [rax], al; add al, ch; pop rsp; sar bh, 1; dec dword ptr [rax-0x77]; ret;
0xffffffff8110335d: add [rax], al; add al, ch; sbb esp, ebx; iretd;
0xffffffff81a24c7d: add [rax], al; add al, ch; sti; leave; cmp eax, 0x468b4800; ret;
0xffffffff8176be21: add [rax], al; add al, ch; xchg [rdx-1], esp; jmp far fword ptr [rax+0x1e850f80];
0xffffffff8349c6f4: add [rax], al; add al, ch; xchg esp, eax; or al, 0x4f; dec byte ptr [rax-0x39]; ret;
0xffffffff81364e64: add [rax], al; add al, ch; xchg esp, eax; ret 0xc9;
0xffffffff818fc5a0: add [rax], al; add al, ch; xchg rsp, rax; dec dword ptr [rax-0x7b]; shl byte ptr [rax+rax*2+0x48], 0x89; ret;
0xffffffff81b6a768: add [rax], al; add bh, al; xchg esp, eax; add eax, 0; add [rax], al; ret;
0xffffffff828f3f29: add [rax], al; add bl, [rdx+0x67]; add [rax], al; pop rsp; ret;
0xffffffff81199576: add [rax], al; add bl, ch; add dh, [rcx]; leave; mov rdi, r14; call qword ptr [0xffffffff82e33a08];
0xffffffff83482e92: add [rax], al; add bl, ch; fucomp st, st(0); xchg esp, eax; ret;
0xffffffff828dfc2d: add [rax], al; add ch, [rcx]; pop rsp; add [rax], al; call qword ptr [rbp];
0xffffffff815a9747: add [rax], al; add cl, [rdi]; xchg esp, eax; ret 0x2eb;
0xffffffff8147704c: add [rax], al; add cl, [rdi]; xchg esp, eax; ret 0x498b;
0xffffffff810fd275: add [rax], al; add cl, [rdi]; xchg esp, eax; ret 0x9529;
0xffffffff816b57bd: add [rax], al; add cl, ch; mov esp, [rsi-0x43]; jmp qword ptr [rsi+0x66];
0xffffffff815c4d4c: add [rax], al; add cl, ch; pop rsp; mov ch, 0xfe; jmp qword ptr [rsi+0x66];
0xffffffff828ce9d5: add [rax], al; add dh, cl; push rdx; add [rax], al; xchg esp, eax; ret 5;
0xffffffff8182d9ab: add [rax], al; add ecx, [rdi]; xchg esp, eax; sar byte ptr [rdx+4], 0x29; ret 0x8d48;
0xffffffff8285e2e5: add [rax], al; add esp, edx; iretd;
0xffffffff81271771: add [rax], al; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff81033663: add [rax], al; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff8170529f: add [rax], al; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81701d45: add [rax], al; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81026002: add [rax], al; add rsp, 0x10; pop rbx; ret;
0xffffffff810bff6e: add [rax], al; add rsp, 0x10; ret;
0xffffffff812a6921: add [rax], al; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8188e85c: add [rax], al; add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff810ef737: add [rax], al; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff818015a8: add [rax], al; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8103e989: add [rax], al; add rsp, 0x18; pop rbx; ret;
0xffffffff811abd83: add [rax], al; add rsp, 0x18; ret;
0xffffffff812de34b: add [rax], al; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff814c2883: add [rax], al; add rsp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff8170182e: add [rax], al; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff811ab72f: add [rax], al; add rsp, 0x20; ret;
0xffffffff819f2cc3: add [rax], al; add rsp, 0x28; pop rbx; pop r14; pop r15; ret;
0xffffffff81b1a9e6: add [rax], al; add rsp, 0x28; pop rbx; pop r14; ret;
0xffffffff81c486b7: add [rax], al; add rsp, 0x28; pop rbx; ret;
0xffffffff81055971: add [rax], al; add rsp, 0x28; ret;
0xffffffff8170d506: add [rax], al; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff8104f21c: add [rax], al; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff819862d1: add [rax], al; add rsp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff818ddef5: add [rax], al; add rsp, 0x38; pop rbx; ret;
0xffffffff81b18f9e: add [rax], al; add rsp, 0x38; ret;
0xffffffff810eb724: add [rax], al; add rsp, 0x40; pop rbx; pop r14; pop r15; ret;
0xffffffff81937431: add [rax], al; add rsp, 0x40; pop rbx; pop r14; pop rbp; ret;
0xffffffff8133cf0d: add [rax], al; add rsp, 0x40; pop rbx; pop rbp; ret;
0xffffffff817a46ff: add [rax], al; add rsp, 0x50; pop rbx; pop r14; ret;
0xffffffff815b5aa8: add [rax], al; add rsp, 0x58; pop rbx; pop r14; pop rbp; ret;
0xffffffff815a228d: add [rax], al; add rsp, 0x60; ret;
0xffffffff8100531a: add [rax], al; add rsp, 0x68; pop rbx; pop r14; pop rbp; ret;
0xffffffff812b4df2: add [rax], al; add rsp, 0x70; pop rbx; pop r14; pop r15; ret;
0xffffffff818e4664: add [rax], al; add rsp, 0x88; pop rbx; pop r14; pop r15; ret;
0xffffffff810ca171: add [rax], al; add rsp, 0x88; ret;
0xffffffff819b5c32: add [rax], al; add rsp, 0x98; pop rbx; pop r14; ret;
0xffffffff81ba1a63: add [rax], al; add rsp, 0xb8; pop rbx; pop r14; ret;
0xffffffff819cd5b2: add [rax], al; add rsp, 0xc; ret;
0xffffffff81240eff: add [rax], al; add rsp, 4; ret;
0xffffffff8166c80e: add [rax], al; add rsp, 8; pop rbp; ret;
0xffffffff8151f86f: add [rax], al; add rsp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff8110a72a: add [rax], al; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff81517621: add [rax], al; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff8187c9c8: add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810bff91: add [rax], al; add rsp, 8; ret;
0xffffffff834f0974: add [rax], al; add sp, 0x2c; pop si; data16 ret;
0xffffffff834f08e8: add [rax], al; add sp, 0x58; pop si; pop di; data16 ret;
0xffffffff829b23b6: add [rax], al; and [rax], al; add [rax], al; leave; rol byte ptr [rdx], 0; ret;
0xffffffff816bbed5: add [rax], al; dec dword ptr [rdi]; xchg esp, eax; ret 0x4c8d;
0xffffffff82a3db7a: add [rax], al; imul edi, ecx, 0; add [rbx+9], bl; add [rax], al; xchg esp, eax; call qword ptr [rax+rax];
0xffffffff82810512: add [rax], al; in al, dx; mov esp, [rbx]; jmp qword ptr [rdi-0x41];
0xffffffff8280bbf2: add [rax], al; int3; sub esp, ebx; call far fword ptr [rdx+0x1a4];
0xffffffff82a9642e: add [rax], al; leave; add [rax], al; push rbp; add [rax], eax; ret 0x18b0;
0xffffffff82802b9f: add [rax], al; leave; call qword ptr [rcx+0x3fd];
0xffffffff829c9226: add [rax], al; leave; cmp [rax], ecx; add [rax], cl; add [rax], al; iretd;
0xffffffff8295545e: add [rax], al; leave; iretd;
0xffffffff8280820e: add [rax], al; leave; jmp far fword ptr [rdx+0x53];
0xffffffff8299dfea: add [rax], al; leave; mov ecx, 0xd; add [rcx+rcx*8], cl; iretd;
0xffffffff8296d85a: add [rax], al; leave; or eax, [rax]; ret;
0xffffffff8288bb22: add [rax], al; leave; ret 2;
0xffffffff8292797e: add [rax], al; leave; ret 8;
0xffffffff82637c1e: add [rax], al; leave; ret;
0xffffffff829b23ba: add [rax], al; leave; rol byte ptr [rdx], 0; ret;
0xffffffff8103502b: add [rax], al; lldt ax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8187c9c1: add [rax], al; mov [rbx+0x80], ax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81b34d9f: add [rax], al; mov [rbx+0x80], ax; xor eax, eax; add rsp, 8; pop rbx; ret;
0xffffffff8199477b: add [rax], al; mov [rbx+0x80], cx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81be056f: add [rax], al; mov [rbx+0x80], cx; xor eax, eax; add rsp, 8; pop rbx; ret;
0xffffffff81b12580: add [rax], al; mov [rdi+0x88], ax; mov word ptr [rdi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff81b12609: add [rax], al; mov [rsi+0x88], ax; mov word ptr [rsi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff829026aa: add [rax], al; mov ch, 0xee; add al, 0; pop rsp; add [rax], al; ret;
0xffffffff8166cd30: add [rax], al; mov eax, [rbp-4]; add rsp, 0x28; pop rbp; ret;
0xffffffff8166c62a: add [rax], al; mov eax, [rbp-4]; add rsp, 0x30; pop rbp; ret;
0xffffffff819cf743: add [rax], al; mov eax, eax; add rsp, 4; ret;
0xffffffff81752a46: add [rax], al; mov eax, ebp; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff818a6e1e: add [rax], al; mov eax, ebp; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff815fa0b2: add [rax], al; mov eax, ebx; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8345ec69: add [rax], al; mov eax, ebx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8348a868: add [rax], al; mov eax, ebx; add rsp, 0x10; pop rbx; ret;
0xffffffff834808ff: add [rax], al; mov eax, ebx; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff81641403: add [rax], al; mov eax, ebx; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff83480664: add [rax], al; mov eax, ebx; add rsp, 0x48; pop rbx; ret;
0xffffffff81c2f26a: add [rax], al; mov eax, ebx; add rsp, 0x68; pop rbx; pop r14; ret;
0xffffffff81b35eff: add [rax], al; mov eax, ebx; add rsp, 0x70; pop rbx; ret;
0xffffffff81add2e4: add [rax], al; mov eax, ecx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81b1c1db: add [rax], al; mov ecx, [rdi+0xbc]; or dword ptr [rax+rcx+0x18], 4; xor eax, eax; add rsp, 0xc; ret;
0xffffffff818f1bbe: add [rax], al; mov qword ptr [rbx+0x30], 0; add rsp, 0x10; pop rbx; ret;
0xffffffff818f1bb6: add [rax], al; mov qword ptr [rbx+0x38], 0; mov qword ptr [rbx+0x30], 0; add rsp, 0x10; pop rbx; ret;
0xffffffff816afd48: add [rax], al; mov rax, [rax+0x58]; or dword ptr [rax+0x5c], 8; add rsp, 4; ret;
0xffffffff816afd41: add [rax], al; mov rax, [rdi+0x438]; mov rax, [rax+0x58]; or dword ptr [rax+0x5c], 8; add rsp, 4; ret;
0xffffffff83446018: add [rax], al; mov rsp, rbp; pop rbp; ret;
0xffffffff81b12587: add [rax], al; mov word ptr [rdi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff81b12610: add [rax], al; mov word ptr [rsi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff8281586a: add [rax], al; movsb [rdi], [rsi]; pop rsp; jmp qword ptr [rbp+rdx*8+2];
0xffffffff81c732bb: add [rax], al; not eax; shr eax, 0x10; add rsp, 4; ret;
0xffffffff81561983: add [rax], al; or [rdi], cl; xchg esp, eax; ret 0xd284;
0xffffffff81903cb7: add [rax], al; or [rdi], cl; xchg esp, eax; ret 0xf41;
0xffffffff82ad3b59: add [rax], al; or al, 0x19; xchg esp, eax; add [rax], eax; ret;
0xffffffff82ad434d: add [rax], al; or al, 0xaa; xchg esp, eax; add [rax], eax; ret 0x1b56;
0xffffffff828fb779: add [rax], al; or al, 0xab; insb [rdi], dx; add [rax], al; pop rsp; sysret;
0xffffffff82875995: add [rax], al; or al, 0xe0; sldt [rax]; pop rsp; ret 1;
0xffffffff82875a0d: add [rax], al; or al, 0xe0; sldt [rax]; pop rsp; ret;
0xffffffff81297bea: add [rax], al; or byte ptr [rax+0x2b], 0x15; pop rsp; ret;
0xffffffff81b1c1e1: add [rax], al; or dword ptr [rax+rcx+0x18], 4; xor eax, eax; add rsp, 0xc; ret;
0xffffffff82aaf9d5: add [rax], al; or eax, 0; leave; rol byte ptr [rdx], 0; ret;
0xffffffff829a12d9: add [rax], al; or eax, 0x4b; pop rsp; mov dword ptr [rax+rax], 0xbfb9; scasd [rdi]; ret 8;
0xffffffff82a68b9d: add [rax], al; or eax, 0xc91; pop rsp; ret;
0xffffffff82810a52: add [rax], al; pop rsp; and ah, [rbx]; jmp rdx;
0xffffffff82811142: add [rax], al; pop rsp; insb [rdi], dx; ret;
0xffffffff82804332: add [rax], al; pop rsp; int1; jmp far fword ptr [r15+0x3f3];
0xffffffff82a165e2: add [rax], al; pop rsp; iretd;
0xffffffff829a12de: add [rax], al; pop rsp; mov dword ptr [rax+rax], 0xbfb9; scasd [rdi]; ret 8;
0xffffffff8299e0ca: add [rax], al; pop rsp; mov edx, 0xd; add [rsp+rdx*8], cl; iretd;
0xffffffff829d1992: add [rax], al; pop rsp; ret 0xf;
0xffffffff8287599a: add [rax], al; pop rsp; ret 1;
0xffffffff8293be7a: add [rax], al; pop rsp; ret 9;
0xffffffff827ff652: add [rax], al; pop rsp; ret;
0xffffffff82801ea2: add [rax], al; pop rsp; sub al, 0x35; call far fword ptr [rdi+0x3d7];
0xffffffff828fb77e: add [rax], al; pop rsp; sysret;
0xffffffff8285e2e2: add [rax], al; pushfq; add [rax], al; add esp, edx; iretd;
0xffffffff8298a182: add [rax], al; sbb esp, ebx; or al, 0; add [rax], al; add [rsi+rdi], cl; ret 0;
0xffffffff812c3cf8: add [rax], al; shl rax, cl; add rsp, 8; ret;
0xffffffff812558d3: add [rax], al; shl rax, cl; mov [rip+0x1d3cfd1], rax; xor eax, eax; add rsp, 8; ret;
0xffffffff81196fdf: add [rax], al; str [rdi]; xchg esp, eax; ret 0xca83;
0xffffffff816bc493: add [rax], al; sub eax, ecx; add rsp, 4; ret;
0xffffffff819410a5: add [rax], al; sub eax, ecx; mov [rdi+0xa0], eax; xor eax, eax; add rsp, 4; ret;
0xffffffff811e46a1: add [rax], al; sub rax, rsi; add rax, 0x20; shr rax, 3; add rsp, 4; ret;
0xffffffff811e5071: add [rax], al; sub rax, rsi; add rax, 0x30; shr rax, 3; add rsp, 4; ret;
0xffffffff8296d852: add [rax], al; test eax, 0xa6000b; add [rax], al; leave; or eax, [rax]; ret;
0xffffffff8292f516: add [rax], al; xchg esp, eax; add [rax], r8b; add byte ptr [rax], 0; add al, ah; ret 4;
0xffffffff82930596: add [rax], al; xchg esp, eax; add [rax], r8b; add byte ptr [rax], 0; add al, dl; ret 8;
0xffffffff8292fcea: add [rax], al; xchg esp, eax; add [rax], r8b; rol byte ptr [rax], 0; add [rbx], dh; ret 7;
0xffffffff827fed0a: add [rax], al; xchg esp, eax; and bl, [rdx]; jmp qword ptr [rax];
0xffffffff8281460a: add [rax], al; xchg esp, eax; call qword ptr [r15];
0xffffffff82a3db82: add [rax], al; xchg esp, eax; call qword ptr [rax+rax];
0xffffffff827fe812: add [rax], al; xchg esp, eax; cmp al, 0xd8; call qword ptr [rdi+0xf];
0xffffffff827fdc5a: add [rax], al; xchg esp, eax; fistp word ptr [rbx], st; inc edi; ret;
0xffffffff828163aa: add [rax], al; xchg esp, eax; idiv byte ptr [rdi]; call far fword ptr [rbp+0x2b1];
0xffffffff8296e506: add [rax], al; xchg esp, eax; iretd;
0xffffffff82809f5a: add [rax], al; xchg esp, eax; mov al, [rax]; call far fword ptr [rbx+rax*4+2];
0xffffffff827fa68a: add [rax], al; xchg esp, eax; mov dl, 0x47; call far fword ptr [rdx+rbx*4+4];
0xffffffff8281124a: add [rax], al; xchg esp, eax; or bl, al; jmp far fword ptr [rsi];
0xffffffff82a35c0a: add [rax], al; xchg esp, eax; out dx, eax; add [rax], al; ret;
0xffffffff8280e51a: add [rax], al; xchg esp, eax; outsb dx, [rsi]; call far fword ptr [rcx-7];
0xffffffff828ae69a: add [rax], al; xchg esp, eax; push rbp; add al, 0; ret;
0xffffffff827ff1ea: add [rax], al; xchg esp, eax; rcr dword ptr [rcx], cl; call rdi;
0xffffffff82ac6a12: add [rax], al; xchg esp, eax; ret 0x1a;
0xffffffff827f85da: add [rax], al; xchg esp, eax; ret 0xfef0;
0xffffffff828ce9da: add [rax], al; xchg esp, eax; ret 5;
0xffffffff8293beaa: add [rax], al; xchg esp, eax; ret 9;
0xffffffff8288bc6e: add [rax], al; xchg esp, eax; ret;
0xffffffff82811f0a: add [rax], al; xchg esp, eax; test edi, ebx; jmp qword ptr [rdx+0x20];
0xffffffff827f9daa: add [rax], al; xchg esp, eax; xor ebx, [rax]; jmp qword ptr [rdx];
0xffffffff816e7e42: add [rax], al; xor eax, eax; add rsp, 0x10; pop rbx; ret;
0xffffffff81a42766: add [rax], al; xor eax, eax; add rsp, 0x18; pop rbx; ret;
0xffffffff819410ad: add [rax], al; xor eax, eax; add rsp, 4; ret;
0xffffffff81af0bde: add [rax], al; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81b34da6: add [rax], al; xor eax, eax; add rsp, 8; pop rbx; ret;
0xffffffff810302b9: add [rax], al; xor ebx, ebx; mov eax, ebx; add rsp, 8; pop rbx; ret;
0xffffffff82a39347: add [rax], bh; leave; add [rax], al; add [rax], al; add cl, bh; ret;
0xffffffff828ddb9b: add [rax], bh; leave; add [rax], al; iretd;
0xffffffff8295545b: add [rax], cl; add [rax], al; leave; iretd;
0xffffffff82875996: add [rax], cl; sldt [rax]; pop rsp; ret 1;
0xffffffff82875a0e: add [rax], cl; sldt [rax]; pop rsp; ret;
0xffffffff8105093d: add [rax], eax; add [rax+0x31], al; leave; cpuid; pop rbx; ret;
0xffffffff811ee4d7: add [rax], eax; add [rax-0x7b], cl; leave; cmove rax, rcx; ret;
0xffffffff816a88cd: add [rax], eax; add [rax], ah; add [rax], al; add [rcx+0xf], al; xchg esp, eax; ret 0x8944;
0xffffffff8280bbee: add [rax], eax; add [rax], al; add [rax], al; int3; sub esp, ebx; call far fword ptr [rdx+0x1a4];
0xffffffff8281113e: add [rax], eax; add [rax], al; add [rax], al; pop rsp; insb [rdi], dx; ret;
0xffffffff827ff64e: add [rax], eax; add [rax], al; add [rax], al; pop rsp; ret;
0xffffffff82811246: add [rax], eax; add [rax], al; add [rax], al; xchg esp, eax; or bl, al; jmp far fword ptr [rsi];
0xffffffff82875992: add [rax], eax; add [rax], al; add [rax], cl; sldt [rax]; pop rsp; ret 1;
0xffffffff82875a0a: add [rax], eax; add [rax], al; add [rax], cl; sldt [rax]; pop rsp; ret;
0xffffffff81774317: add [rax], eax; add [rax], al; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8343b378: add [rax], eax; add [rax], al; add rsp, 0x10; ret;
0xffffffff8103e987: add [rax], eax; add [rax], al; add rsp, 0x18; pop rbx; ret;
0xffffffff8345e9e7: add [rax], eax; add [rax], al; add rsp, 0x18; ret;
0xffffffff8104f21a: add [rax], eax; add [rax], al; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff817a46fd: add [rax], eax; add [rax], al; add rsp, 0x50; pop rbx; pop r14; ret;
0xffffffff8288bb20: add [rax], eax; add [rax], al; leave; ret 2;
0xffffffff812c3cf6: add [rax], eax; add [rax], al; shl rax, cl; add rsp, 8; ret;
0xffffffff8112eb4a: add [rax], eax; add [rbp+0xa], dh; add rsp, 0x158; pop rbx; pop rbp; ret;
0xffffffff81a7ad2f: add [rax], eax; add [rbp+0xb], dh; add rsp, 0x110; pop rbx; pop r14; ret;
0xffffffff81158b29: add [rax], eax; add [rbp+0xb], dh; add rsp, 0x158; pop rbx; pop r14; ret;
0xffffffff81849ee5: add [rax], eax; add [rbp+5], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff8151528c: add [rax], eax; add [rbp+8], dh; add rsp, 0x138; ret;
0xffffffff810cf913: add [rax], eax; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81015940: add [rax], eax; add [rcx+0x3b], cl; xchg esp, eax; iretd;
0xffffffff8198c018: add [rax], eax; add [rcx-0x75], al; xchg [rax-0x76ffffff], esp; ret 0xfad1;
0xffffffff8181dc8f: add [rax], eax; add [rdi], cl; mov bh, 0x81; mov al, [0xffff88366000000]; xchg esp, eax; ret;
0xffffffff8104d55c: add [rax], eax; add [rdi], cl; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; pop r15; ret;
0xffffffff81546a4e: add [rax], eax; add [rdi], cl; xchg esp, eax; ret 0x5089;
0xffffffff81255bcf: add [rax], eax; add [rdi], cl; xchg esp, eax; ret 0x8440;
0xffffffff819ae82f: add [rax], eax; add [rdi], cl; xchg esp, eax; ret 0x8944;
0xffffffff81297705: add [rax], eax; add [rdi], cl; xchg esp, eax; ret 0xbd;
0xffffffff8125e548: add [rax], eax; add [rdi], cl; xchg esp, eax; ret 0xbf48;
0xffffffff8124abdf: add [rax], eax; add [rdi], cl; xchg esp, eax; ret 0xd184;
0xffffffff811ddbc0: add [rax], eax; add [rdi], cl; xchg esp, eax; ret;
0xffffffff8112d50c: add [rax], eax; add [rdi], cl; xchg esp, eax; ror dword ptr [rcx+0x1a28088], 0; ret;
0xffffffff816a9af5: add [rax], eax; add [rdx], al; add [rax], al; add [rdi], cl; xchg esp, eax; ret;
0xffffffff82aaf9d4: add [rax], eax; add [rip], cl; leave; rol byte ptr [rdx], 0; ret;
0xffffffff814739ec: add [rax], eax; add al, ch; insb [rdi], dx; sbb esp, ebp; dec dword ptr [rax-0x77]; ret;
0xffffffff812a279c: add [rax], eax; add al, ch; pop rsp; ret;
0xffffffff81c05660: add [rax], eax; add bl, ch; add dh, [rcx]; leave; mov [rsi], cx; ret;
0xffffffff829ba5b2: add [rax], eax; add esp, edx; add [rax], al; add [rax], al; add [rbx], bh; ret;
0xffffffff8344b147: add [rax], eax; add rsp, 0x18; mov [rip+0x18342c], rax; pop rbx; ret;
0xffffffff814efcba: add [rax], eax; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff81031ad6: add [rax], eax; add rsp, 4; pop rbx; ret;
0xffffffff81e00ee1: add [rax], eax; leave; ret;
0xffffffff829eea8e: add [rax], eax; pop rsp; call qword ptr [rax];
0xffffffff82a80efe: add [rax], eax; xchg esp, eax; iretd;
0xffffffff81b1c0d1: add [rax], eax; xor eax, eax; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81bdefb2: add [rax], eax; xor eax, eax; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff82263b62: add [rax], esp; xchg esp, eax; ret;
0xffffffff81482497: add [rbp+0x13], dh; add rsp, 0xa0; pop rbx; pop r14; ret;
0xffffffff817c8dbb: add [rbp+0x14], dh; add rsp, 0xf0; pop rbx; pop r14; pop r15; ret;
0xffffffff815188bc: add [rbp+0x14], dh; mov eax, ecx; add rsp, 0xa0; pop rbx; ret;
0xffffffff81753b66: add [rbp+0x19], dh; add rsp, 0x348; pop rbx; pop r14; pop rbp; ret;
0xffffffff8151c157: add [rbp+0x19], dh; add rsp, 0xc0; pop rbx; pop r14; pop r15; ret;
0xffffffff8145c787: add [rbp+0x1f], dh; add rsp, 0xa0; pop rbx; pop r14; ret;
0xffffffff8130b0ac: add [rbp+0x26], dh; add rsp, 0x98; pop rbx; pop r14; pop r15; ret;
0xffffffff81561b68: add [rbp+0x28], dh; add rsp, 0x88; ret;
0xffffffff81c28ed9: add [rbp+0x2a], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff814ae8a5: add [rbp+0x2c], dh; add rsp, 0x2b8; pop rbx; pop rbp; ret;
0xffffffff81797594: add [rbp+0x2c], dh; mov eax, ebx; add rsp, 0xa0; pop rbx; pop r14; ret;
0xffffffff81c73051: add [rbp+0x2c], esi; mov [rsp], edx; add eax, [rsp]; adc eax, 0; add rsp, 0xc; ret;
0xffffffff81c3dab2: add [rbp+0x310674c0], al; leave; mov eax, ecx; pop rbx; ret;
0xffffffff8158b696: add [rbp+0x31], al; leave; mov [rsi+8], r9d; ret;
0xffffffff819b96e4: add [rbp+0x31], dh; add rsp, 0xc0; pop rbx; pop r14; ret;
0xffffffff8110a892: add [rbp+0x31], eax; leave; mov eax, r9d; ret;
0xffffffff829026ab: add [rbp+0x360004ee], dh; pop rsp; add [rax], al; ret;
0xffffffff81418013: add [rbp+0x3b], dh; mov eax, ebp; add rsp, 0x98; pop rbx; pop rbp; ret;
0xffffffff8116358c: add [rbp+0x415b0055], ah; pop rsp; pop r14; pop r15; ret;
0xffffffff811857e8: add [rbp+0x468949de], ch; or [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81034d2c: add [rbp+0x480b75c0], al; add esp, 0xf0; pop rbx; pop r14; ret;
0xffffffff81410d36: add [rbp+0x48], dh; add rsp, 0xa0; pop rbx; pop r14; ret;
0xffffffff822db35e: add [rbp+0x5609e91a], esp; pop rsp; iretd;
0xffffffff819b5e7e: add [rbp+0x62], dh; add rsp, 0xd0; pop rbx; pop r14; pop r15; ret;
0xffffffff810cbc10: add [rbp+0x6c], dh; add rsp, 0xb8; pop rbx; pop r14; pop rbp; ret;
0xffffffff81829bcb: add [rbp+0x75c389db], eax; rcr dword ptr [rbx+0x41], 1; pop rsp; pop r14; pop r15; ret;
0xffffffff818df4de: add [rbp+0x76d88], ecx; add dh, dh; rol dword ptr [rbx], 0xf; xchg esp, eax; ret;
0xffffffff8112eb4c: add [rbp+0xa], dh; add rsp, 0x158; pop rbx; pop rbp; ret;
0xffffffff814eebeb: add [rbp+0xa], dh; add rsp, 0x98; pop rbx; pop rbp; ret;
0xffffffff8160b5b7: add [rbp+0xa], dh; add rsp, 0xa8; pop rbx; pop rbp; ret;
0xffffffff8345d24d: add [rbp+0xa], dh; xor eax, eax; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff81a7ad31: add [rbp+0xb], dh; add rsp, 0x110; pop rbx; pop r14; ret;
0xffffffff81158b2b: add [rbp+0xb], dh; add rsp, 0x158; pop rbx; pop r14; ret;
0xffffffff8112e65c: add [rbp+0xb], dh; add rsp, 0x88; pop rbx; pop r14; ret;
0xffffffff81baad3b: add [rbp+0xb], dh; add rsp, 0x90; pop rbx; pop r14; ret;
0xffffffff817ca482: add [rbp+0xb], dh; add rsp, 0x98; pop rbx; pop r14; ret;
0xffffffff8145c4f5: add [rbp+0xb], dh; add rsp, 0xa0; pop rbx; pop r14; ret;
0xffffffff8115858f: add [rbp+0xb], dh; add rsp, 0xb0; pop rbx; pop r14; ret;
0xffffffff81a82d1a: add [rbp+0xb], dh; add rsp, 0xf0; pop rbx; pop r14; ret;
0xffffffff81a144d0: add [rbp+0xc], dh; add rsp, 0x2b0; pop rbx; pop r14; pop rbp; ret;
0xffffffff81658fc7: add [rbp+0xc], dh; add rsp, 0x88; pop rbx; pop r14; pop rbp; ret;
0xffffffff8342a5e9: add [rbp+0xc], dh; add rsp, 0x90; pop rbx; pop r14; pop rbp; ret;
0xffffffff8114f93b: add [rbp+0xc], dh; add rsp, 0xa0; pop rbx; pop r14; pop rbp; ret;
0xffffffff8133ce86: add [rbp+0xc], dh; add rsp, 0xd0; pop rbx; pop r14; pop rbp; ret;
0xffffffff8112e3e4: add [rbp+0xc], dh; add rsp, 0xd8; pop rbx; pop r14; pop rbp; ret;
0xffffffff81b9dda7: add [rbp+0xc], dh; add rsp, 0xe8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8347aeb5: add [rbp+0xc], dh; mov eax, ebx; add rsp, 0x128; pop rbx; pop rbp; ret;
0xffffffff81521818: add [rbp+0xc], dh; mov rax, rbx; add rsp, 0xa0; pop rbx; ret;
0xffffffff81a224ca: add [rbp+0xd], dh; add rsp, 0x168; pop rbx; pop r14; pop r15; ret;
0xffffffff81023d96: add [rbp+0xd], dh; add rsp, 0x88; pop rbx; pop r14; pop r15; ret;
0xffffffff819b77a4: add [rbp+0xd], dh; add rsp, 0x90; pop rbx; pop r14; pop r15; ret;
0xffffffff810d0ffe: add [rbp+0xd], dh; add rsp, 0x98; pop rbx; pop r14; pop r15; ret;
0xffffffff8166853b: add [rbp+0xd], dh; add rsp, 0xa0; pop rbx; pop r14; pop r15; ret;
0xffffffff81b2f22c: add [rbp+0xd], dh; add rsp, 0xa8; pop rbx; pop r14; pop r15; ret;
0xffffffff81521406: add [rbp+0xd], dh; add rsp, 0xc8; pop rbx; pop r14; pop r15; ret;
0xffffffff81ba7f76: add [rbp+0xd], dh; shr eax, 1; add rsp, 0x88; pop rbx; pop r14; ret;
0xffffffff82a165db: add [rbp+1], bl; add [rax], al; add [rcx], al; add [rax], al; pop rsp; iretd;
0xffffffff81c7f52a: add [rbp+2], esi; xor eax, eax; add rsp, 8; pop rbx; ret;
0xffffffff81036aba: add [rbp+5], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff810ec1ba: add [rbp+6], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff810b0216: add [rbp+6], dh; add rsp, 8; pop rbx; ret;
0xffffffff8151528e: add [rbp+8], dh; add rsp, 0x138; ret;
0xffffffff8112e78c: add [rbp+8], dh; add rsp, 0x88; ret;
0xffffffff818ff824: add [rbp+8], dh; add rsp, 0x98; ret;
0xffffffff8187e412: add [rbp+8], dh; add rsp, 0xb8; ret;
0xffffffff810ca377: add [rbp+9], dh; add rsp, 0x88; pop rbx; ret;
0xffffffff8151e0fb: add [rbp+9], dh; add rsp, 0x90; pop rbx; ret;
0xffffffff812f9943: add [rbp+9], dh; add rsp, 0x98; pop rbx; ret;
0xffffffff812f8da2: add [rbp+9], dh; add rsp, 0xa0; pop rbx; ret;
0xffffffff811f9cda: add [rbp+9], dh; add rsp, 0xa8; pop rbx; ret;
0xffffffff814226b0: add [rbp+9], dh; add rsp, 0xc0; pop rbx; ret;
0xffffffff812193cc: add [rbp+rbp+0x48], dh; add esp, 8; pop rbx; pop r14; ret;
0xffffffff81af3bd4: add [rbp-0x14158a40], al; add dh, [rcx]; leave; mov rax, rcx; ret;
0xffffffff811f7a49: add [rbp-0x141b8a40], al; add dh, [rcx]; leave; mov rax, rcx; ret;
0xffffffff8199ccfe: add [rbp-0x141c8a40], al; or [rcx], dh; leave; mov rax, rcx; ret;
0xffffffff822fe8b4: add [rbp-0x21d0995e], bh; mov ah, 0x16; adc esp, edi; ret;
0xffffffff822fe8b3: add [rbp-0x21d0995e], dil; mov ah, 0x16; adc esp, edi; ret;
0xffffffff82438a9b: add [rbp-0x24], ebx; pop rsp; cmp rdi, r13; ret 0xb0e3;
0xffffffff816c2c66: add [rbp-0x2b], esi; mov rcx, rax; neg rcx; and rax, rcx; add rsp, 0x20; ret;
0xffffffff822fb257: add [rbp-0x3f], ebp; mov ecx, 0xc90bd940; std; pop rsp; ret 0xae5b;
0xffffffff819c2c85: add [rbp-0x7b], al; in al, 0xf; xchg esp, eax; ret 0xc748;
0xffffffff817631ea: add [rbp-0x7b], cl; fisttp dword ptr [rdi], st; xchg esp, eax; ret 0x8349;
0xffffffff8187eb99: add [rbp-0x7c], al; dec dword ptr [rdi]; xchg esp, eax; ret 0x8548;
0xffffffff81c49bbd: add [rbp-1], ah; or [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81e00ed9: add [rbp-1], bl; or al, 0x25; enter 0x15c, 0; leave; ret;
0xffffffff818b5245: add [rbx+0x415b0840], cl; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81898c52: add [rbx+0x415bffd0], al; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81b1c1e2: add [rbx+0x418084c], al; xor eax, eax; add rsp, 0xc; ret;
0xffffffff818fc780: add [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff8105372a: add [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff810126b0: add [rbx+0x41], bl; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81004340: add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81185af6: add [rbx+0x41], bl; pop rsp; pop r14; pop r15; xor eax, eax; ret;
0xffffffff8103d6f6: add [rbx+0x41], ebx; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff8102343f: add [rbx+0x41], ebx; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff811bfe59: add [rbx+0x41], ebx; pop rsp; pop r14; pop r15; ret;
0xffffffff81bb88b1: add [rbx+0x41], r11b; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff811a828e: add [rbx+0x47052b05], cl; add cl, [rbx+0x4705290d]; add cl, [rcx+0xfca09c2]; xchg esp, eax; ret 0xfb83;
0xffffffff811d6e9d: add [rbx+0x6b480fe1], eax; leave; push 0x247c8b48; and [rax+1], cl; iretd;
0xffffffff817801d4: add [rbx+0x9487], cl; add [rcx], dh; leave; sub eax, [rdi+0x90]; cmovs eax, ecx; ret;
0xffffffff81b1c1dc: add [rbx+0xbc8f], cl; add [rbx+0x418084c], al; xor eax, eax; add rsp, 0xc; ret;
0xffffffff82aaf8f3: add [rbx+9], bl; add [rax], al; leave; rol byte ptr [rdx], 0; ret;
0xffffffff82a3db7f: add [rbx+9], bl; add [rax], al; xchg esp, eax; call qword ptr [rax+rax];
0xffffffff828fb77a: add [rbx+rbp*4], cl; insb [rdi], dx; add [rax], al; pop rsp; sysret;
0xffffffff812f7e57: add [rbx+rbx*8+0x415b0874], al; pop rsp; pop r14; pop r15; ret;
0xffffffff8145c6ac: add [rbx+rbx*8+0x415bc675], al; pop rsp; pop r14; pop r15; ret;
0xffffffff812971e5: add [rbx+rsi*2-0xa], dh; rol dword ptr [rdx], 0xf; xchg esp, eax; ret;
0xffffffff8227fea5: add [rbx-0x113c1c53], esp; cli; leave; pop rsp; ret;
0xffffffff8227fea4: add [rbx-0x113c1c53], sp; cli; leave; pop rsp; ret;
0xffffffff8124bab2: add [rbx-0x17affd38], al; adc al, 0; add [rax], al; add rsp, 8; ret;
0xffffffff8299dfe7: add [rbx-0x3c], bh; add [rax], al; leave; mov ecx, 0xd; add [rcx+rcx*8], cl; iretd;
0xffffffff81c27959: add [rbx-0x59edb7fb], cl; add [rbx+0x41], ebx; pop rsp; pop r14; pop r15; ret;
0xffffffff81559bd4: add [rbx-0x7437f0fa], cl; or cl, [rdi]; leave; sub rax, rcx; ret;
0xffffffff811e3a66: add [rbx-0x77], cl; pop rsp; xor eax, 0x8327eb30; ret;
0xffffffff819d4e63: add [rbx-0x7af0de01], al; leave; add [rax], eax; add [rax-0x39], cl; ret;
0xffffffff81afdc8c: add [rbx-0x7af0e402], al; leave; add eax, [rax]; add [rcx+0xf], al; mov dh, 0x87; iretd;
0xffffffff811df59e: add [rbx-0x7af0f7c6], al; pop rsp; add [rax], eax; add [rax-0x77], cl; iretd;
0xffffffff81035464: add [rbx-0x7d], dl; cmp eax, 0x17b10cf; add [rdi], cl; xchg esp, eax; ret;
0xffffffff823c178b: add [rbx], al; sub eax, 0x93b6cf6f; cmp bl, [rdi+0x7edb1203]; pop rsp; ret;
0xffffffff8288bb1b: add [rbx], cl; add [rax], al; add [rax], eax; add [rax], al; leave; ret 2;
0xffffffff8359e773: add [rbx], eax; add eax, [rbx]; leave; in al, 0xa8; std; ret;
0xffffffff81015942: add [rcx+0x3b], cl; xchg esp, eax; iretd;
0xffffffff81894e5e: add [rcx+0x410c20f9], al; add [rdi], ecx; xchg esp, eax; ret 0xf631;
0xffffffff8250d652: add [rcx+0x60], cl; and esi, edx; mov esp, ecx; xchg esi, eax; ret 0x5439;
0xffffffff8162b9cf: add [rcx+0x63], ecx; xchg [rax], esp; add [rax], eax; add [rax+0x39], cl; ret;
0xffffffff810c62ca: add [rcx+0x7d811445], cl; or [rax+0xf000000], al; xchg esp, eax; ret;
0xffffffff8126d97a: add [rcx+0xf742454], cl; xchg esp, eax; ret 0xca20;
0xffffffff816a88d3: add [rcx+0xf], al; xchg esp, eax; ret 0x8944;
0xffffffff81543807: add [rcx+0xf], al; xchg esp, eax; ret 0x8b41;
0xffffffff8105c023: add [rcx+0xf], ecx; fisttp dword ptr [rdi], st; xchg esp, eax; ret 0x2044;
0xffffffff816c05ab: add [rcx+rax-0x38], cl; add rsp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff8296d853: add [rcx+rbp*4+0xb], al; add [rsi+0x42000000], ah; leave; or eax, [rax]; ret;
0xffffffff82ad3b5a: add [rcx+rbx], cl; xchg esp, eax; add [rax], eax; ret;
0xffffffff8196c844: add [rcx+rcx*4+0x3d], ecx; xchg esp, eax; mov ss, ax; add [rax-0x39], ecx; ret;
0xffffffff812621cd: add [rcx+rcx*4+0x73], cl; and [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff815c4459: add [rcx+rcx*4-0x10], al; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff819b9bb3: add [rcx+rcx*4-0x10], al; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8171569b: add [rcx+rcx*4-0x10], al; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff810d35eb: add [rcx+rcx*4-0x10], al; add rsp, 0x38; pop rbx; pop r14; pop rbp; ret;
0xffffffff816e9c24: add [rcx+rcx*4-0x10], al; add rsp, 0x48; pop rbx; pop r14; pop rbp; ret;
0xffffffff819a4dc4: add [rcx+rcx*4-0x10], al; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8191d975: add [rcx+rcx*4-0x10], cl; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff816b9cf2: add [rcx+rcx*4-0x10], cl; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff8183b803: add [rcx+rcx*4-0x40], eax; add rsp, 4; ret;
0xffffffff81999f4d: add [rcx-0x39], cl; shl dword ptr [rax+0x50816bb9], 0xe8; add eax, 0x48000000; add esp, 8; ret;
0xffffffff815075f0: add [rcx-0x3b7cb728], cl; sbb [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff827e58b1: add [rcx-0x3fcefbba], cl; add esp, 4; pop rsi; pop rbx; pop rbp; ret;
0xffffffff82498eb9: add [rcx-0x61], esi; cmp [rbp+0x72], ebx; leave; iretd;
0xffffffff814461fa: add [rcx-0x73], cl; xchg edi, esp; add eax, [rax]; add [rax-0x47], cl; iretd;
0xffffffff814959d1: add [rcx-0x75], al; xchg [rax+0x39000000], esp; ret 0xe272;
0xffffffff8198c01a: add [rcx-0x75], al; xchg [rax-0x76ffffff], esp; ret 0xfad1;
0xffffffff8156e57d: add [rcx-0x75], al; xchg esp, eax; mov [rax-0x7d000000], cs; ret 0x4101;
0xffffffff818fcba5: add [rcx-0x75], cl; pop rsp; call qword ptr [rax];
0xffffffff8192d23d: add [rcx-0x75], cl; xchg esp, eax; and al, 0; add [rax], eax; add [rax-0x7d], cl; ret 0x4848;
0xffffffff819435a6: add [rcx-0x75], cl; xchg esp, eax; and al, 0xa8; add [rax], al; add [rbx+0x94803e2], al; ret 0x8949;
0xffffffff81943669: add [rcx-0x75], cl; xchg esp, eax; and al, 0xe8; add [rax], al; add [rbx+0x94803e2], al; ret 0x8949;
0xffffffff81115c86: add [rcx-0x75], cl; xchg esp, eax; and al, 8; add [rax], eax; add [rax-0x7d], cl; ret 0x4808;
0xffffffff819688d0: add [rcx-0x75], eax; sbb al, 0xf; xchg esp, eax; ret 0x8b41;
0xffffffff813bc762: add [rcx-0x7a3fce3f], cl; leave; cmovns rax, rbx; pop rbx; ret;
0xffffffff811b63a8: add [rcx-0x7a3fce3f], cl; leave; sete al; ret;
0xffffffff81713fbf: add [rcx-0x7a3fce3f], cl; leave; setne al; ret;
0xffffffff81713fbe: add [rcx-0x7a3fce3f], cl; leave; setne al; ret;
0xffffffff81477046: add [rcx-0x7d], al; mov edi, 0x1aa8; add cl, [rdi]; xchg esp, eax; ret 0x498b;
0xffffffff8184b047: add [rcx-0x7f], al; leave; add [rax], al; add al, [rax]; mov [rdi+0x28], r9d; ret;
0xffffffff81bcd13b: add [rcx], al; add [rax-0x77], cl; fisubr st, word ptr [rax-0x57f18ae0]; add cl, [rdi]; xchg esp, eax; ret 0x30a8;
0xffffffff82aaf9d3: add [rcx], al; add [rax], al; or eax, 0; leave; rol byte ptr [rdx], 0; ret;
0xffffffff82a165e0: add [rcx], al; add [rax], al; pop rsp; iretd;
0xffffffff8177b8c9: add [rcx], al; add [rdi], cl; xchg esp, eax; ret 0x840;
0xffffffff8159db47: add [rcx], al; leave; add ecx, 0xffffffff; imul ecx, esi; add eax, ecx; ret;
0xffffffff834a641b: add [rcx], al; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81a3b060: add [rcx], dh; fild st, dword ptr [rcx-0x7d]; cld; add [rdi], ecx; xchg esp, eax; ret;
0xffffffff814a8c5a: add [rcx], dh; fild st, dword ptr [rcx-0x80]; mov edi, 0x124; add [rdi], cl; xchg esp, eax; ret;
0xffffffff81ab930f: add [rcx], dh; fild st, dword ptr [rcx-0xa]; rol byte ptr [rdx], 0xf; xchg esp, eax; ret;
0xffffffff8122bc60: add [rcx], dh; fisttp dword ptr [rcx-0x7cfbdb94], st; std; add cl, [rdi]; xchg esp, eax; ret;
0xffffffff834898df: add [rcx], dh; imul al; leave; stc; ret 0x8bfd;
0xffffffff8164547b: add [rcx], dh; imul al; popfq; xchg esp, eax; ret 0x48ff;
0xffffffff816454b1: add [rcx], dh; imul al; xchg esp, eax; ret 0x48ff;
0xffffffff816454cc: add [rcx], dh; imul al; xchg rsp, rax; ret 0x48ff;
0xffffffff81978834: add [rcx], dh; leave; cmp byte ptr [rdi], 5; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff81487159: add [rcx], dh; leave; cmp eax, 0x19270000; cmove eax, ecx; ret;
0xffffffff81486369: add [rcx], dh; leave; cmp eax, 0x2b270000; cmove eax, ecx; ret;
0xffffffff8141cbf9: add [rcx], dh; leave; cmp eax, 0xffffffa1; cmove eax, ecx; ret;
0xffffffff81c0ea8c: add [rcx], dh; leave; cmp eax, [rdi+0x404]; mov eax, 0xfffff400; cmovle eax, ecx; ret;
0xffffffff81a163fd: add [rcx], dh; leave; cmp edx, 0xfff2; cmovne eax, ecx; ret;
0xffffffff81a163ad: add [rcx], dh; leave; cmp esi, 0xfff2; cmovne eax, ecx; ret;
0xffffffff81a22bc0: add [rcx], dh; leave; cmp esi, edx; cmovb ecx, eax; mov eax, ecx; ret;
0xffffffff8164ee14: add [rcx], dh; leave; cmp qword ptr [rdi+0x28], 0; mov eax, 0xffffffa1; cmove eax, ecx; ret;
0xffffffff8160ffa4: add [rcx], dh; leave; cmp qword ptr [rdi+0x30], 0; mov eax, 0xffffffea; cmove eax, ecx; ret;
0xffffffff8179af82: add [rcx], dh; leave; cmp qword ptr [rdi+0x78], 0; mov eax, 0xffffffed; cmovne eax, ecx; ret;
0xffffffff816f5950: add [rcx], dh; leave; cmp qword ptr [rdi-0x48], 0; mov eax, 0xffffffda; cmove eax, ecx; ret;
0xffffffff81855641: add [rcx], dh; leave; cmp rax, 0x1000; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff81608336: add [rcx], dh; leave; cmp rax, [rsi+8]; mov eax, 0xffffffea; cmovae eax, ecx; ret;
0xffffffff81899965: add [rcx], dh; leave; mov [rax+0xc4], ecx; mov eax, ecx; ret;
0xffffffff81738464: add [rcx], dh; leave; mov [rbx], cl; pop rbx; ret;
0xffffffff81528f9d: add [rcx], dh; leave; mov [rsi+8], rcx; ret;
0xffffffff81c5dfa9: add [rcx], dh; leave; mov eax, ecx; pop rbx; pop r14; ret;
0xffffffff81261665: add [rcx], dh; leave; mov rax, rcx; pop rbx; pop r14; ret;
0xffffffff817d04d3: add [rcx], dh; leave; or rdx, rsi; mov eax, 0xffffffea; cmove eax, ecx; ret;
0xffffffff817801da: add [rcx], dh; leave; sub eax, [rdi+0x90]; cmovs eax, ecx; ret;
0xffffffff814794ea: add [rcx], dh; leave; test al, al; mov eax, 0x20270000; cmovne eax, ecx; ret;
0xffffffff8171eba9: add [rcx], dh; leave; test al, al; mov eax, 0x4003; cmove eax, ecx; ret;
0xffffffff816f1de0: add [rcx], dh; leave; test al, al; mov eax, 0xffffffe7; cmovne eax, ecx; ret;
0xffffffff811b6382: add [rcx], dh; leave; test eax, eax; sete cl; mov eax, ecx; ret;
0xffffffff813dde09: add [rcx], dh; leave; test eax, eax; setg cl; mov eax, ecx; ret;
0xffffffff81aeb9f9: add [rcx], dh; leave; test eax, eax; setne cl; mov eax, ecx; ret;
0xffffffff816c428e: add [rcx], dh; leave; test rax, rax; mov eax, 0xffffff82; cmovne eax, ecx; ret;
0xffffffff83487090: add [rcx], dh; leave; test rax, rax; mov eax, 0xffffffed; cmovne eax, ecx; ret;
0xffffffff8115af3e: add [rcx], dh; leave; test rax, rax; mov eax, 0xfffffff2; cmove eax, ecx; ret;
0xffffffff8105147e: add [rcx], dh; leave; test rax, rax; mov eax, 0xfffffff4; cmovne eax, ecx; ret;
0xffffffff811b63d2: add [rcx], dh; leave; test rax, rax; setne cl; mov eax, ecx; ret;
0xffffffff81684938: add [rcx], dh; rol byte ptr [rbp-0x7b], cl; dec dword ptr [rdi]; xchg esp, eax; ret 0x2941;
0xffffffff8182eac5: add [rcx], dh; rol byte ptr [rcx+0x10802f9], cl; add [rdi], cl; xchg esp, eax; ret 0x2a8;
0xffffffff816e640f: add [rcx], dh; rol byte ptr [rcx+0x2000f9], cl; add [rdi], cl; xchg esp, eax; ret 0xc8d;
0xffffffff813fe8ed: add [rcx], dh; rol byte ptr [rcx+0x4000f9], cl; add [rdi], cl; xchg esp, eax; ret 0x448b;
0xffffffff818a5f25: add [rcx], dh; rol byte ptr [rcx-0x7d], cl; mov esi, 0x40c; add [rdi], ecx; xchg esp, eax; ret 0xe2c1;
0xffffffff816bbecd: add [rcx], dh; ror byte ptr [rax-0x7d], cl; mov ecx, 0xb18; dec dword ptr [rdi]; xchg esp, eax; ret 0x4c8d;
0xffffffff81031514: add [rcx], dh; shr dh, 0x31; shr dh, 0x81; leave; ret 0;
0xffffffff82a9dacb: add [rcx], dl; pop rsp; sbb [rax], al; ret 0x1b;
0xffffffff822b5bfd: add [rcx], dl; sti; push rdi; test bh, ch; data16 leave; ret;
0xffffffff810250ae: add [rcx], esi; leave; and rax, rcx; or rax, rdi; ret;
0xffffffff81b65df1: add [rcx], esi; leave; cmp eax, 3; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff8152635e: add [rcx], esi; rol byte ptr [rax+0xf5c0178], cl; xchg esp, eax; ret 0xb60f;
0xffffffff8135db1b: add [rcx], esi; ror byte ptr [rax+0x3b], cl; sbb [r15], cl; xchg esp, eax; ret 0x5389;
0xffffffff819695b5: add [rcx], esi; ror byte ptr [rcx+0xfc808d8], cl; xchg esp, eax; ret 0x8b44;
0xffffffff81978833: add [rcx], sil; leave; cmp byte ptr [rdi], 5; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff82ad4347: add [rdi+0x1b56], ah; add [rax], al; or al, 0xaa; xchg esp, eax; add [rax], eax; ret 0x1b56;
0xffffffff82a7b537: add [rdi+0x50000060], bl; pop rsp; add [rax], eax; cmp eax, 0xa430000; add [rax], al; ret 0x178a;
0xffffffff834f08e0: add [rdi+0x66], esp; mov eax, [rax*4+0xf0]; add sp, 0x58; pop si; pop di; data16 ret;
0xffffffff835aa730: add [rdi+rcx*8-0x306b1303], dl; std; hlt; xchg esp, eax; iretd;
0xffffffff812016c2: add [rdi+rcx], al; xchg esp, eax; ret 0xc148;
0xffffffff82301fd4: add [rdi-0x2902fe5a], al; add al, 0xab; xchg esp, eax; scasb [rdi]; mov ebx, 0xef1d9f5f; ret;
0xffffffff82335f85: add [rdi-0x4e78f28e], edi; leave; mov cl, 0xd3; adc al, 0x28; or [rax], cl; ret;
0xffffffff82269db7: add [rdi], bl; pop rsp; add cl, [rcx+0x356d09b2]; fadd st, dword ptr [rdx-0x3a319d62]; test al, 0x1c; ret 0x3152;
0xffffffff81196fe0: add [rdi], cl; add [rdi], cl; xchg esp, eax; ret 0xca83;
0xffffffff810333af: add [rdi], cl; add [rsp], edx; add rsp, 0x10; ret;
0xffffffff8103502c: add [rdi], cl; add al, dl; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8168492f: add [rdi], cl; mov [0x31000000c9830fd3], eax; rol byte ptr [rbp-0x7b], cl; dec dword ptr [rdi]; xchg esp, eax; ret 0x2941;
0xffffffff81a6a989: add [rdi], cl; mov [0x8341128b444873e9], eax; cli; add [rdi], ecx; xchg esp, eax; ret;
0xffffffff8181dc91: add [rdi], cl; mov bh, 0x81; mov al, [0xffff88366000000]; xchg esp, eax; ret;
0xffffffff810dd5f3: add [rdi], cl; or ebx, [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff81ae8033: add [rdi], cl; xchg ebp, eax; rol dword ptr [rbx+0x1c247c], 0xf; xchg esp, eax; ret;
0xffffffff81718f00: add [rdi], cl; xchg ebp, eax; rol dword ptr [rbx+0x1d8bb], 0; add [rdi], cl; xchg esp, eax; ret 0xd138;
0xffffffff8197dde1: add [rdi], cl; xchg ebp, eax; rol dword ptr [rbx-0x3bc33bc3], 1; add [rdi], cl; xchg esp, eax; ret 0xca20;
0xffffffff8144a682: add [rdi], cl; xchg esi, esp; add eax, [rax]; add [rax-0x77], cl; ret;
0xffffffff816a6c7b: add [rdi], cl; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5c; pop r14; pop r15; ret;
0xffffffff814efa45: add [rdi], cl; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; pop r15; pop rbp; ret;
0xffffffff81357273: add [rdi], cl; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; pop r15; ret;
0xffffffff8104d55e: add [rdi], cl; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; pop r15; ret;
0xffffffff81478181: add [rdi], cl; xchg esp, eax; ret 0x1088;
0xffffffff811dfeee: add [rdi], cl; xchg esp, eax; ret 0x141;
0xffffffff81700ebf: add [rdi], cl; xchg esp, eax; ret 0x1b0;
0xffffffff812295a3: add [rdi], cl; xchg esp, eax; ret 0x2040;
0xffffffff8182eacd: add [rdi], cl; xchg esp, eax; ret 0x2a8;
0xffffffff812c788a: add [rdi], cl; xchg esp, eax; ret 0x2b8;
0xffffffff81bc3afe: add [rdi], cl; xchg esp, eax; ret 0x2eb;
0xffffffff81bef696: add [rdi], cl; xchg esp, eax; ret 0x349;
0xffffffff818d8ec3: add [rdi], cl; xchg esp, eax; ret 0x3944;
0xffffffff81234205: add [rdi], cl; xchg esp, eax; ret 0x394d;
0xffffffff81bb788f: add [rdi], cl; xchg esp, eax; ret 0x41f0;
0xffffffff813fe8f5: add [rdi], cl; xchg esp, eax; ret 0x448b;
0xffffffff816292ae: add [rdi], cl; xchg esp, eax; ret 0x474;
0xffffffff8102fd01: add [rdi], cl; xchg esp, eax; ret 0x4b9;
0xffffffff81546a50: add [rdi], cl; xchg esp, eax; ret 0x5089;
0xffffffff813c4b87: add [rdi], cl; xchg esp, eax; ret 0x5489;
0xffffffff816894da: add [rdi], cl; xchg esp, eax; ret 0x8348;
0xffffffff8177b8cb: add [rdi], cl; xchg esp, eax; ret 0x840;
0xffffffff8157be3c: add [rdi], cl; xchg esp, eax; ret 0x840f;
0xffffffff81255bd1: add [rdi], cl; xchg esp, eax; ret 0x8440;
0xffffffff8103308b: add [rdi], cl; xchg esp, eax; ret 0x844;
0xffffffff819ae831: add [rdi], cl; xchg esp, eax; ret 0x8944;
0xffffffff812c9528: add [rdi], cl; xchg esp, eax; ret 0x8948;
0xffffffff81024384: add [rdi], cl; xchg esp, eax; ret 0x894c;
0xffffffff8100c8a3: add [rdi], cl; xchg esp, eax; ret 0x8b48;
0xffffffff8144eaad: add [rdi], cl; xchg esp, eax; ret 0x8b49;
0xffffffff8155c13c: add [rdi], cl; xchg esp, eax; ret 0x8b8b;
0xffffffff81bb919f: add [rdi], cl; xchg esp, eax; ret 0x8fe9;
0xffffffff81ba33ec: add [rdi], cl; xchg esp, eax; ret 0xa889;
0xffffffff81297707: add [rdi], cl; xchg esp, eax; ret 0xbd;
0xffffffff8125e54a: add [rdi], cl; xchg esp, eax; ret 0xbf48;
0xffffffff816e49f5: add [rdi], cl; xchg esp, eax; ret 0xc031;
0xffffffff8100a678: add [rdi], cl; xchg esp, eax; ret 0xc148;
0xffffffff818a547a: add [rdi], cl; xchg esp, eax; ret 0xc748;
0xffffffff816e6417: add [rdi], cl; xchg esp, eax; ret 0xc8d;
0xffffffff8103caaf: add [rdi], cl; xchg esp, eax; ret 0xc931;
0xffffffff8197ddeb: add [rdi], cl; xchg esp, eax; ret 0xca20;
0xffffffff8169cfa2: add [rdi], cl; xchg esp, eax; ret 0xca30;
0xffffffff81196fe2: add [rdi], cl; xchg esp, eax; ret 0xca83;
0xffffffff81b32f54: add [rdi], cl; xchg esp, eax; ret 0xceb;
0xffffffff81718f0a: add [rdi], cl; xchg esp, eax; ret 0xd138;
0xffffffff8124abe1: add [rdi], cl; xchg esp, eax; ret 0xd184;
0xffffffff81b250d8: add [rdi], cl; xchg esp, eax; ret 0xd338;
0xffffffff815c39cd: add [rdi], cl; xchg esp, eax; ret 0xd384;
0xffffffff81032261: add [rdi], cl; xchg esp, eax; ret 0xe2c1;
0xffffffff811f8b27: add [rdi], cl; xchg esp, eax; ret 0xf44;
0xffffffff811f8c92: add [rdi], cl; xchg esp, eax; ret 0xf45;
0xffffffff812ba000: add [rdi], cl; xchg esp, eax; ret 0xf741;
0xffffffff8100c8ea: add [rdi], cl; xchg esp, eax; ret;
0xffffffff811b8c6b: add [rdi], cl; xchg esp, eax; rol bl, 0x48; mov eax, 0xfffffff9; ret;
0xffffffff81625f78: add [rdi], cl; xchg esp, eax; rol byte ptr [rcx-0x73], 0x4d; jmp qword ptr [rsi-0x7d];
0xffffffff817cd42c: add [rdi], cl; xchg esp, eax; rol cl, 0xe0; add al, 0x83; shl al, 0x5b; ret;
0xffffffff8188f98e: add [rdi], cl; xchg esp, eax; rol dword ptr [rbx+0x60247c], 0xf; xchg ebp, eax; ret 0xca20;
0xffffffff814e5370: add [rdi], cl; xchg esp, eax; rol dword ptr [rcx+rcx*4-0x3e], 0xf6; rol byte ptr [rdx+rcx*8+0x1494b75], cl; ret 0xc031;
0xffffffff8182a09e: add [rdi], cl; xchg esp, eax; rol dword ptr [rcx-0x80], 0xf8; dec dword ptr [rdi]; xchg esp, eax; ret 0x474;
0xffffffff8182a053: add [rdi], cl; xchg esp, eax; rol dword ptr [rcx-0x80], 0xf8; dec dword ptr [rdi]; xchg esp, eax; ret 0x4f74;
0xffffffff81811c9d: add [rdi], cl; xchg esp, eax; ror byte ptr [rax-0x3f], 0xe0; add ecx, [rax+9]; ret;
0xffffffff811caba8: add [rdi], cl; xchg esp, eax; ror byte ptr [rax], 0xd0; ret;
0xffffffff81c82170: add [rdi], cl; xchg esp, eax; ror byte ptr [rbp-0x37afc], 0xff; jmp qword ptr [rbp+0x48];
0xffffffff81c272ca: add [rdi], cl; xchg esp, eax; ror byte ptr [rbp-0x3f7c7ffc], 0xfb; ret;
0xffffffff818cde47: add [rdi], cl; xchg esp, eax; ror dword ptr [rax], 0xc1; movzx eax, cl; neg eax; ret;
0xffffffff8112d50e: add [rdi], cl; xchg esp, eax; ror dword ptr [rcx+0x1a28088], 0; ret;
0xffffffff81022c69: add [rdi], cl; xchg esp, eax; ror dword ptr [rcx+0x5e415bc8], 0x41; pop rdi; pop rbp; ret;
0xffffffff81b7198e: add [rdi], cl; xchg esp, eax; ror dword ptr [rdi], 0x95; ret 0x48d;
0xffffffff8189e86c: add [rdi], cl; xchg esp, eax; shl bh, 0xd8; pop rbx; pop rbp; ret;
0xffffffff81644b82: add [rdi], cl; xchg esp, eax; shl bh, 0xd8; ret;
0xffffffff81389fb7: add [rdi], cl; xchg esp, eax; shl byte ptr [rcx+rax], 0xf; mov dh, 0xc0; ret;
0xffffffff817065f5: add [rdi], cl; xchg esp, eax; shl dword ptr [rsi-0x7d], 0xf8; mov eax, 0xffffffe7; cmove eax, ecx; ret;
0xffffffff8343a2ea: add [rdi], cl; xchg esp, eax; shr bl, 2; xor eax, eax; ret;
0xffffffff81186282: add [rdi], ecx; xchg esp, eax; add eax, 0x2490252; mov eax, 1; ret;
0xffffffff810f948e: add [rdi], ecx; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; pop r15; pop rbp; ret;
0xffffffff8124e32c: add [rdi], ecx; xchg esp, eax; ret 0x2040;
0xffffffff81623cd5: add [rdi], ecx; xchg esp, eax; ret 0x2b8;
0xffffffff8125724d: add [rdi], ecx; xchg esp, eax; ret 0x33eb;
0xffffffff81630cab: add [rdi], ecx; xchg esp, eax; ret 0x450f;
0xffffffff811efd71: add [rdi], ecx; xchg esp, eax; ret 0x4c8b;
0xffffffff81296774: add [rdi], ecx; xchg esp, eax; ret 0x774;
0xffffffff81a7e269: add [rdi], ecx; xchg esp, eax; ret 0x7980;
0xffffffff81281909: add [rdi], ecx; xchg esp, eax; ret 0x8548;
0xffffffff8134a0e6: add [rdi], ecx; xchg esp, eax; ret 0x894c;
0xffffffff813aa137: add [rdi], ecx; xchg esp, eax; ret 0x8b48;
0xffffffff8100fdcb: add [rdi], ecx; xchg esp, eax; ret 0xc148;
0xffffffff81329c7c: add [rdi], ecx; xchg esp, eax; ret 0xc201;
0xffffffff81035a8d: add [rdi], ecx; xchg esp, eax; ret 0xc208;
0xffffffff8105976c: add [rdi], ecx; xchg esp, eax; ret 0xc220;
0xffffffff813c7dc1: add [rdi], ecx; xchg esp, eax; ret 0xc230;
0xffffffff8149f392: add [rdi], ecx; xchg esp, eax; ret 0xc231;
0xffffffff810b0361: add [rdi], ecx; xchg esp, eax; ret 0xca08;
0xffffffff810596ef: add [rdi], ecx; xchg esp, eax; ret 0xca20;
0xffffffff81937c97: add [rdi], ecx; xchg esp, eax; ret 0xca30;
0xffffffff8156cce6: add [rdi], ecx; xchg esp, eax; ret 0xca83;
0xffffffff8171ed3c: add [rdi], ecx; xchg esp, eax; ret 0xd189;
0xffffffff81282970: add [rdi], ecx; xchg esp, eax; ret 0xda20;
0xffffffff818a5f2f: add [rdi], ecx; xchg esp, eax; ret 0xe2c1;
0xffffffff81894e64: add [rdi], ecx; xchg esp, eax; ret 0xf631;
0xffffffff8104851e: add [rdi], ecx; xchg esp, eax; ret;
0xffffffff81a8040b: add [rdi], ecx; xchg esp, eax; rol bl, 0x40; cmp dh, [rcx+1]; setb al; ret;
0xffffffff81a7e286: add [rdi], ecx; xchg esp, eax; rol byte ptr [rax+0xf000279], 0x95; ret 0xd030;
0xffffffff8192f45f: add [rdi], ecx; xchg esp, eax; rol dword ptr [rbx-0x6bf0fb08], 0xc0; or al, cl; ret;
0xffffffff81858aba: add [rdi], ecx; xchg esp, eax; rol dword ptr [rcx+0x2003f1], 0; mov eax, ecx; ret;
0xffffffff810b03b5: add [rdi], ecx; xchg esp, eax; ror byte ptr [rax], 0xc8; or al, dl; and al, 1; ret;
0xffffffff8105d94b: add [rdi], ecx; xchg esp, eax; ror byte ptr [rax], 0xc8; ret;
0xffffffff815385ca: add [rdi], ecx; xchg esp, eax; ror byte ptr [rcx-0x2844163a], 0xff; jmp qword ptr [rsi+0x66];
0xffffffff8145d2c4: add [rdi], ecx; xchg esp, eax; ror dword ptr [rax+0x29], 0xc8; test rax, rax; setg al; ret;
0xffffffff8145d2c5: add [rdi], ecx; xchg esp, eax; ror dword ptr [rax+0x29], 0xc8; test rax, rax; setg al; ret;
0xffffffff813236d6: add [rdi], ecx; xchg esp, eax; sar dword ptr [rcx+rax], 0xf; xchg esp, eax; ror byte ptr [rax], 0xc8; ret;
0xffffffff81061ac1: add [rdi], ecx; xchg esp, eax; shl byte ptr [rax], 0xc8; ret;
0xffffffff8159da3e: add [rdi], ecx; xchg esp, eax; shl dh, 0xc1; add [rdi], ecx; xchg esp, eax; ret 0xc220;
0xffffffff818dd5c0: add [rdi], ecx; xchg esp, eax; shl dword ptr [rax], 0xc1; movzx eax, cl; add eax, r8d; ret;
0xffffffff819f6609: add [rdi], ecx; xchg esp, edx; add [rax], al; add [rax-0x7d], cl; ret 0x4801;
0xffffffff822d25fe: add [rdi], esp; pop rsp; ret;
0xffffffff817c2b59: add [rdi], r9b; or ebx, [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff813c4b86: add [rdi], r9b; xchg esp, eax; ret 0x5489;
0xffffffff8194a4ec: add [rdi], r9b; xchg esp, eax; ret 0x894c;
0xffffffff8149f391: add [rdi], rcx; xchg esp, eax; ret 0xc231;
0xffffffff82ad3b53: add [rdx+0x1b4c], dh; add [rax], al; or al, 0x19; xchg esp, eax; add [rax], eax; ret;
0xffffffff81b25d6f: add [rdx+rax-0x15], esi; or [rax-0x77], cl; fucomip st, st(0); xchg esp, eax; and ch, al; jmp qword ptr [rbp+0x48];
0xffffffff82ad434e: add [rdx+rbp*4], cl; xchg esp, eax; add [rax], eax; ret 0x1b56;
0xffffffff81301bcf: add [rdx+rdx-0x18], dh; leave; ret;
0xffffffff8242be29: add [rdx-0x265c074f], edi; pop rsp; in al, dx; ret 0x2753;
0xffffffff819695af: add [rdx-0x2f3ef5f3], ecx; add [rcx], esi; ror byte ptr [rcx+0xfc808d8], cl; xchg esp, eax; ret 0x8b44;
0xffffffff8100cad0: add [rdx-0x7df1ef3], cl; add esi, esi; rcl dword ptr [rax], 0xf; xchg esp, eax; ret 0xd038;
0xffffffff822a5155: add [rdx-0xc299244], ebx; cmp ecx, [rsi]; xchg edx, eax; pop rsp; ret;
0xffffffff816a9af7: add [rdx], al; add [rax], al; add [rdi], cl; xchg esp, eax; ret;
0xffffffff828ce9d6: add [rdx], al; int1; push rdx; add [rax], al; xchg esp, eax; ret 5;
0xffffffff8298c0b6: add [rdx], al; leave; ret;
0xffffffff829bb7ba: add [rdx], al; mov esp, [rsi]; add [rax], al; iretd;
0xffffffff828f3f2a: add [rdx], al; pop rdx; add [eax], al; pop rsp; ret;
0xffffffff828e1416: add [rdx], al; xchg edx, eax; pop rsp; add [rax], al; ret 0x85;
0xffffffff81a7e266: add [rdx], edi; add [r15], ecx; xchg esp, eax; ret 0x7980;
0xffffffff81a7e283: add [rdx], edi; add [r15], ecx; xchg esp, eax; rol byte ptr [rax+0xf000279], 0x95; ret 0xd030;
0xffffffff829a12da: add [rip+0x4b], cl; pop rsp; mov dword ptr [rax+rax], 0xbfb9; scasd [rdi]; ret 8;
0xffffffff829a131a: add [rip+0x4b], cl; pop rsp; mov dword ptr [rax+rax], 0xbfb9; scasd [rdi]; ret 8;
0xffffffff822a6e75: add [rip+0x63860295], ebp; xchg esp, eax; xor bl, [rsi+0x5b]; fist dword ptr [rax-0x3febe00f], st; ret;
0xffffffff82a68b9e: add [rip+0xc91], cl; pop rsp; ret;
0xffffffff82aaf9d6: add [rip], cl; leave; rol byte ptr [rdx], 0; ret;
0xffffffff829026a6: add [rip], cl; mov ch, 0xee; add al, 0; pop rsp; add [rax], al; ret;
0xffffffff8296d857: add [rsi+0x42000000], ah; leave; or eax, [rax]; ret;
0xffffffff823d8c58: add [rsi+0x72098a22], dh; pop rsp; iretd;
0xffffffff81196fd8: add [rsi+rbx+0x31], dh; shl bh, cl; rol dword ptr [rax], 0; str [rdi]; xchg esp, eax; ret 0xca83;
0xffffffff82ad499b: add [rsi-0x2dffffed], cl; xchg esp, eax; add [rax], eax; call far fword ptr [rbx+0x1b];
0xffffffff825228fe: add [rsi-0x49], ebp; sub esp, eax; ret;
0xffffffff81b34da0: add [rsi-0x77], ah; add dword ptr [rax+0x31000000], 0xffffffc0; add rsp, 8; pop rbx; ret;
0xffffffff8199477c: add [rsi-0x77], ah; mov eax, [rax+0x48000000]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8181dc98: add [rsi-0x7d], ah; clc; dec dword ptr [rdi]; xchg esp, eax; ret;
0xffffffff82927ac2: add [rsi], al; add al, 0; add [rax], al; xchg esp, eax; ret;
0xffffffff8288bc6b: add [rsi], cl; add [rax], al; xchg esp, eax; ret;
0xffffffff829026af: add [rsi], dh; pop rsp; add [rax], al; ret;
0xffffffff8346be8b: add [rsp+rdx*8], ebp; std; add rsp, 8; pop rbx; ret;
0xffffffff810333b1: add [rsp], edx; add rsp, 0x10; ret;
0xffffffff82442c6a: add ah, [rax+0x3b]; cld; cli; xchg [rbp-0x24aa8fae], esp; notrack call rdi;
0xffffffff8243a854: add ah, [rdx]; stosb [rdi]; stc; sbb esp, eax; sbb al, 0x9c; ret 0x34e8;
0xffffffff8108dd72: add ah, al; pop r9; std; add esp, eax; ret;
0xffffffff8108dde1: add ah, al; push r9; std; add esp, eax; ret;
0xffffffff8108de50: add ah, al; std; add esp, eax; ret;
0xffffffff82395a1f: add ah, bl; fwait; xchg esp, eax; iretd;
0xffffffff82810513: add ah, ch; mov esp, [rbx]; jmp qword ptr [rdi-0x41];
0xffffffff8280bbf3: add ah, cl; sub esp, ebx; call far fword ptr [rdx+0x1a4];
0xffffffff82a80ef7: add ah, dl; mov ebx, 0x325c0014; add [rax], eax; xchg esp, eax; iretd;
0xffffffff8346ea41: add ah, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff816afd47: add al, 0; add [rax-0x75], cl; pop rax; or dword ptr [rax+0x5c], 8; add rsp, 4; ret;
0xffffffff8173045d: add al, 0; add [rax-0x77], cl; xchg [rax+4], esp; add [rax], al; ret;
0xffffffff82927ac4: add al, 0; add [rax], al; xchg esp, eax; ret;
0xffffffff81acc3a8: add al, 0; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8124bab0: add al, 0; add [rbx-0x17affd38], al; adc al, 0; add [rax], al; add rsp, 8; ret;
0xffffffff81894e5c: add al, 0; add [rcx+0x410c20f9], al; add [rdi], ecx; xchg esp, eax; ret 0xf631;
0xffffffff819cdc1e: add al, 0; add [rdi], cl; xchg esp, eax; ret 0x840;
0xffffffff816edf8f: add al, 0; add [rdi], cl; xchg esp, eax; ret 0xd184;
0xffffffff8135595f: add al, 0; add [rdi], cl; xchg esp, eax; ret;
0xffffffff81625f76: add al, 0; add [rdi], cl; xchg esp, eax; rol byte ptr [rcx-0x73], 0x4d; jmp qword ptr [rsi-0x7d];
0xffffffff829a1318: add al, 0; add [rip+0x4b], cl; pop rsp; mov dword ptr [rax+rax], 0xbfb9; scasd [rdi]; ret 8;
0xffffffff829ba5d6: add al, 0; add esp, edx; add [rax], al; add [rcx], al; add [rax], al; ret;
0xffffffff829026ae: add al, 0; pop rsp; add [rax], al; ret;
0xffffffff81b25533: add al, 0x13; add al, 0x24; adc eax, 0; add rsp, 0xc; ret;
0xffffffff81271568: add al, 0x1b; mov eax, [0x415bd88901e38000]; pop rsp; pop r14; pop r15; ret;
0xffffffff81a7e281: add al, 0x22; add [rdx], edi; add [r15], ecx; xchg esp, eax; rol byte ptr [rax+0xf000279], 0x95; ret 0xd030;
0xffffffff81b25535: add al, 0x24; adc eax, 0; add rsp, 0xc; ret;
0xffffffff81992dc5: add al, 0x24; adc eax, 0; add rsp, 4; ret;
0xffffffff819cf73a: add al, 0x24; adc eax, 0; mov [rdi+0x88], eax; mov eax, eax; add rsp, 4; ret;
0xffffffff81561391: add al, 0x24; add eax, r8d; add rsp, 4; ret;
0xffffffff81e0193f: add al, 0x24; add rsp, 0x18; jmp rdi;
0xffffffff816c2c79: add al, 0x24; tzcnt rcx, [rsp]; shl rdi, cl; mov rax, rdi; add rsp, 0x20; ret;
0xffffffff816b71ae: add al, 0x24; xor eax, eax; add rsp, 1; ret;
0xffffffff817c9848: add al, 0x25; rcr byte ptr [rcx+rax], 0x80; sbb cl, ch; leave; xchg r9d, eax; jmp qword ptr [rsi+0xf];
0xffffffff811e6c8b: add al, 0x31; leave; cmp eax, 0x4000000; mov eax, 0xffffffea; cmove eax, ecx; ret;
0xffffffff811f9455: add al, 0x31; ror byte ptr [rax-0x7d], cl; mov eax, 0xd8; add [rdi], cl; xchg esp, eax; ret 0xe2c1;
0xffffffff81200e48: add al, 0x31; ror byte ptr [rax-0x7d], cl; mov ecx, 0xd8; add [rdi], cl; xchg esp, eax; ret 0xe2c1;
0xffffffff82371fe1: add al, 0x31; xchg esp, esi; ret 0x50b6;
0xffffffff82370f66: add al, 0x37; scasd [rdi]; leave; ret 0xb99f;
0xffffffff8235c3e9: add al, 0x39; add bh, dh; mov esp, [rdx+rbx*2-0x3e]; or bl, r14b; scasd [rdi]; ret 0x9535;
0xffffffff81baadb4: add al, 0x39; enter 0x277, 0x31; leave; sub eax, ecx; pop rbx; ret;
0xffffffff81ae6f14: add al, 0x39; enter 0x277, 0x31; leave; sub eax, ecx; ret;
0xffffffff82526849: add al, 0x3f; mov bh, 0x61; xchg esp, eax; sbb al, 0x40; cmp al, 0x1b; ret;
0xffffffff816e7f17: add al, 0x48; add esp, 0x10; ret;
0xffffffff812dbb92: add al, 0x48; or ecx, 1; mov rax, rcx; add rsp, 0x10; ret;
0xffffffff81644b7e: add al, 0x5c; adc [rax], eax; add [rdi], cl; xchg esp, eax; shl bh, 0xd8; ret;
0xffffffff82505024: add al, 0x5d; mul dword ptr [rbx]; pop rsp; iretd;
0xffffffff823ee41b: add al, 0x67; adc esp, esi; or al, 0x91; ret 0x83f8;
0xffffffff824375f0: add al, 0x6c; mov eax, [0xbcdf7b21c1ffc71a]; xchg edx, eax; pop rsp; ret;
0xffffffff82470ee4: add al, 0x6d; nop; xchg esp, eax; pushfq; iretd;
0xffffffff8102d5f9: add al, 0x73; or [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff813356af: add al, 0x74; add dh, [rcx]; leave; mov eax, ecx; pop rbx; ret;
0xffffffff8123e118: add al, 0x7e; add eax, [rcx+rcx*4+7]; mov [rdi+0xc], esi; mov [rdi+8], eax; add rsp, 0x10; ret;
0xffffffff823cd30a: add al, 0x7e; pop rsp; jmp qword ptr [r15+0x69];
0xffffffff823cd309: add al, 0x7e; pop rsp; jmp qword ptr [r15+0x69];
0xffffffff823ca5ae: add al, 0x7f; mov bl, 0xf0; adc ah, [rax-0x72]; in al, 0xa9; pop rsp; ret;
0xffffffff823ca5af: add al, 0x7f; mov bl, 0xf0; adc ah, [rax-0x72]; in al, 0xa9; pop rsp; ret;
0xffffffff818edf58: add al, 0x80; add eax, 0xfffffffb; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff819cd5a8: add al, 0x83; rol byte ptr [rax], cl; not edx; mov [rsi+0x88], edx; add rsp, 0xc; ret;
0xffffffff8122bc66: add al, 0x83; std; add cl, [rdi]; xchg esp, eax; ret;
0xffffffff81af5f44: add al, 0x85; dec dword ptr [rdi]; xchg esp, eax; ret 0x1b0;
0xffffffff81270aee: add al, 0x85; leave; cmove ecx, eax; mov [rsi+8], ecx; pop rax; ret;
0xffffffff81a7e12f: add al, 0x85; push rcx; or [rdi], cl; xchg esp, eax; ret 0xc789;
0xffffffff81c1d6b7: add al, 0x89; adc [rax-0x77], cl; out 0xe8, eax; pop rsp; in eax, 0x57; jmp qword ptr [rbp+0x48];
0xffffffff81af5f42: add al, 0x8b; add al, 0x85; dec dword ptr [rdi]; xchg esp, eax; ret 0x1b0;
0xffffffff826bf709: add al, 0x8b; mov [0xb17440a28b067403], al; out 5, al; mov esp, [rdx+0x765e840]; ret 0xa2fa;
0xffffffff82316c44: add al, 0xa2; stosb [rdi]; sar dword ptr [rbx-0x2f], 1; mov dh, [rcx-0x527586ed]; leave; ret;
0xffffffff82301fda: add al, 0xab; xchg esp, eax; scasb [rdi]; mov ebx, 0xef1d9f5f; ret;
0xffffffff822f14db: add al, 0xac; pop rsp; mov [0x5dc18f50a7e99f14], eax; imul edx; call rsp;
0xffffffff8232e0f9: add al, 0xb; mov eax, [0x4be5c16c935ffa99]; xor eax, edi; xchg esp, eax; ret 0x79dd;
0xffffffff81c63906: add al, 0xc3; add rax, 0x28; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff81240efa: add al, 0xc3; mov eax, 0x10; add rsp, 4; ret;
0xffffffff8104549b: add al, 0xcd; sbb [rbx], bh; pop rsp; add ebx, 0xf; or edi, [rax-1]; ret;
0xffffffff815ef048: add al, 0xce; leave; push qword ptr [rcx]; fisttp dword ptr [rcx+0x5e415bd8], st; pop r15; ret;
0xffffffff8349e66f: add al, 0xd1; std; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff835ac2cd: add al, 0xdf; std; leave; add al, 0xdf; std; iretd;
0xffffffff8241f34a: add al, 0xea; xchg esp, eax; xor [rdi-0x360d4531], esp; iretd;
0xffffffff8242e9e0: add al, 0xec; xchg [rdx-0x4e], esp; push 0x37bc25a7; sbb ah, [rdi+rax*2+0x4d]; call rsp;
0xffffffff822340d0: add al, 0xf8; std; pop rsp; pop rbx; push rbp; ret 0x548b;
0xffffffff81a52f74: add al, 0xf; leave; imul ecx, 0x3e8; mov [rax+4], ecx; xor eax, eax; ret;
0xffffffff81a81f59: add al, 0xf; xchg esp, eax; ret 0x3840;
0xffffffff819cdbfa: add al, 0xf; xchg esp, eax; ret 0x840;
0xffffffff81c818ee: add al, 0xf; xchg esp, eax; ret 0x8548;
0xffffffff817e7532: add al, 0xf; xchg esp, eax; ret 0x8941;
0xffffffff8113ccf4: add al, 0xf; xchg esp, eax; ret 0x8b48;
0xffffffff8113ccf2: add al, 0xf; xchg esp, eax; ret 0x8b48;
0xffffffff812016c3: add al, 0xf; xchg esp, eax; ret 0xc148;
0xffffffff812b23c6: add al, 0xf; xchg esp, eax; ret 0xca08;
0xffffffff81a7de70: add al, 0xf; xchg esp, eax; ret 0xca30;
0xffffffff811f0dec: add al, 0xf; xchg esp, eax; ret;
0xffffffff817d549b: add al, 0xf; xchg esp, eax; ror byte ptr [rax-0x3f], 0xe9; sbb al, [rax-0x6bf0fd06]; ret 0xc220;
0xffffffff8192f465: add al, 0xf; xchg esp, eax; ror byte ptr [rax], 0xc8; ret;
0xffffffff8236ee2a: add al, 0xfe; xchg esp, eax; ret;
0xffffffff81bb9358: add al, 0xff; add [rax], al; add [rdi], cl; xchg esp, eax; ret;
0xffffffff820099ca: add al, 0xff; leave; add eax, edi; jmp qword ptr [rdx+0x3cff8712];
0xffffffff8343b28a: add al, 0xff; leave; cmp al, 2; mov eax, 0x3a; cmovne eax, ecx; ret;
0xffffffff82008f62: add al, 0xff; pop rsp; or bh, al; jmp qword ptr [rsi-0x5b009a31];
0xffffffff8200bd5e: add al, 0xff; test r14b, 0xff; adc esp, 0xffffffb6; jmp far fword ptr [rax+0x3bff04d1];
0xffffffff8200a5a6: add al, 0xff; xchg esp, eax; inc esi; call rcx;
0xffffffff81415ca7: add al, 1; fadd st, dword ptr [rbx+0x415b02c0]; pop rsp; pop r14; pop r15; ret;
0xffffffff816b29d3: add al, 1; leave; lea ecx, [rcx+rcx*4]; sub edi, ecx; or eax, edi; ret;
0xffffffff817e5ea4: add al, 6; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff813fe19f: add al, [rax+0xf]; xchg esp, eax; vpsubsb xmm3, xmm14, [rbx+0x41]; pop rsi; pop rbp; ret;
0xffffffff819bbfc9: add al, [rax]; add [rax-0x77], cl; xchg [rax+0x48000002], esp; mov [rdi+0x2a8], eax; mov dword ptr [rdi+0x2b0], 0; ret;
0xffffffff81ba4ef9: add al, [rax]; add [rax-0x7b], cl; leave; mov eax, 0x268; cmove rax, rcx; ret;
0xffffffff81b2dbc9: add al, [rax]; add [rax-0x7b], cl; leave; mov eax, 0x84; cmove rax, rcx; ret;
0xffffffff817b9528: add al, [rax]; add [rax-0x7b], cl; leave; mov rax, 0xffffffffffffffef; cmove rax, rcx; ret;
0xffffffff8281050e: add al, [rax]; add [rax], al; add [rax], al; in al, dx; mov esp, [rbx]; jmp qword ptr [rdi-0x41];
0xffffffff82815866: add al, [rax]; add [rax], al; add [rax], al; movsb [rdi], [rsi]; pop rsp; jmp qword ptr [rbp+rdx*8+2];
0xffffffff82814606: add al, [rax]; add [rax], al; add [rax], al; xchg esp, eax; call qword ptr [r15];
0xffffffff827fe80e: add al, [rax]; add [rax], al; add [rax], al; xchg esp, eax; cmp al, 0xd8; call qword ptr [rdi+0xf];
0xffffffff828163a6: add al, [rax]; add [rax], al; add [rax], al; xchg esp, eax; idiv byte ptr [rdi]; call far fword ptr [rbp+0x2b1];
0xffffffff82809f56: add al, [rax]; add [rax], al; add [rax], al; xchg esp, eax; mov al, [rax]; call far fword ptr [rbx+rax*4+2];
0xffffffff827fa686: add al, [rax]; add [rax], al; add [rax], al; xchg esp, eax; mov dl, 0x47; call far fword ptr [rdx+rbx*4+4];
0xffffffff8280e516: add al, [rax]; add [rax], al; add [rax], al; xchg esp, eax; outsb dx, [rsi]; call far fword ptr [rcx-7];
0xffffffff82811f06: add al, [rax]; add [rax], al; add [rax], al; xchg esp, eax; test edi, ebx; jmp qword ptr [rdx+0x20];
0xffffffff814ae8a3: add al, [rax]; add [rbp+0x2c], dh; add rsp, 0x2b8; pop rbx; pop rbp; ret;
0xffffffff8120f659: add al, [rax]; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff819d4e61: add al, [rax]; add [rbx-0x7af0de01], al; leave; add [rax], eax; add [rax-0x39], cl; ret;
0xffffffff816454ca: add al, [rax]; add [rcx], dh; imul al; xchg rsp, rax; ret 0x48ff;
0xffffffff8144a680: add al, [rax]; add [rdi], cl; xchg esi, esp; add eax, [rax]; add [rax-0x77], cl; ret;
0xffffffff816292ac: add al, [rax]; add [rdi], cl; xchg esp, eax; ret 0x474;
0xffffffff81546a66: add al, [rax]; add [rdi], cl; xchg esp, eax; ret 0x5089;
0xffffffff817b7950: add al, [rax]; add [rdi], cl; xchg esp, eax; ret 0xe2c1;
0xffffffff8162b6ea: add al, [rax]; add [rdi], cl; xchg esp, eax; ret;
0xffffffff81159040: add al, [rax]; add al, ch; mov eax, 0x4800ea80; add esp, 8; ret;
0xffffffff81af7a39: add al, [rax]; add cl, ch; pop rdi; pop rax; pop rsp; jmp qword ptr [rsi+0x66];
0xffffffff812a08c0: add al, [rax]; add cl, ch; sub esp, 0xffffffff; jmp qword ptr [rbp+0x48];
0xffffffff817144db: add al, [rax]; add rsp, 8; ret;
0xffffffff810333c7: add al, [rax]; mov [rsp+2], rax; mov word ptr [rsp], 0x7f; lgdt [rsp]; add rsp, 0x10; ret;
0xffffffff8247ab40: add al, [rax]; mov eax, [0xb3d3a8804cbb6e0d]; push 0x30c1d559; leave; ret;
0xffffffff81811e31: add al, [rdx+8]; add rsp, 4; ret;
0xffffffff825731e3: add al, [rdx-0x2e]; leave; cld; ret 0xdc06;
0xffffffff81bb0f88: add al, [rip-0x48f0f78c]; add al, 0x39; enter 0x277, 0x31; leave; sub eax, ecx; ret;
0xffffffff81ae6f0d: add al, [rip-0x48f0f78c]; add al, 0x39; enter 0x277, 0x31; leave; sub eax, ecx; ret;
0xffffffff82431210: add al, [rsi+0x36684780]; mov esp, [rbx]; ret;
0xffffffff81c488bf: add al, al; mov esp, eax; add dword ptr [rcx+rcx*4-0x10], 0x415c415b; pop rsi; pop r15; ret;
0xffffffff8342e9ab: add al, bl; std; add rsp, 8; pop rbx; ret;
0xffffffff8182efee: add al, bpl; mov esp, [rsi]; pop rbp; add cl, ch; mov bl, 0xfe; jmp qword ptr [rsi+0xf];
0xffffffff813c8a7e: add al, bpl; sti; mov esp, [rbx-0x3f38b700]; ror byte ptr [rbx-0x60167ec4], 2; bnd jmp qword ptr [rsi+0x66];
0xffffffff8142b9ce: add al, bpl; stosd [rdi]; pop rsp; popfq; add [rax-0x2729], bh; ret;
0xffffffff8347727a: add al, ch; adc [rax-0x2d], bh; std; add rsp, 8; pop rbx; ret;
0xffffffff8348be7a: add al, ch; adc [rdx+rdx*8], ch; std; add rsp, 8; pop rbx; ret;
0xffffffff83473876: add al, ch; adc al, 0xb2; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8193dcd6: add al, ch; adc al, 0xbd; xchg esp, eax; dec dword ptr [rax-0x7b]; shl byte ptr [rbx+rcx*2+0x48], 0x89; ret;
0xffffffff8346f27a: add al, ch; adc al, bh; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff83472478: add al, ch; adc al, dh; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff83459f78: add al, ch; adc cl, [rbx-0x2b]; std; add rsp, 8; pop rbx; ret;
0xffffffff834a1b75: add al, ch; adc eax, 0x48fdd0cf; add esp, 8; pop rbx; ret;
0xffffffff834a0b75: add al, ch; adc eax, 0x48fdd0df; add esp, 8; pop rbx; ret;
0xffffffff83475775: add al, ch; adc eax, 0x48fdd393; add esp, 8; pop rbx; ret;
0xffffffff83470375: add al, ch; adc eax, 0x48fdd3e7; add esp, 8; pop rbx; ret;
0xffffffff8346f575: add al, ch; adc eax, 0x48fdd3f5; add esp, 8; pop rbx; ret;
0xffffffff83498077: add al, ch; adc ebp, [rdx-0x2f]; std; add rsp, 8; pop rbx; ret;
0xffffffff83496e77: add al, ch; adc edi, [rcx+rdx*8-3]; add rsp, 8; pop rbx; ret;
0xffffffff83486744: add al, ch; adc edx, 0xfffffffd; add rsp, 8; pop rbx; ret;
0xffffffff8349f977: add al, ch; adc esi, ecx; sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff834a0e79: add al, ch; adc esp, ebx; sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff8344da4a: add al, ch; adc sil, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff8346be89: add al, ch; add [rsp+rdx*8], ebp; std; add rsp, 8; pop rbx; ret;
0xffffffff8344a507: add al, ch; add dword ptr [rbp-0x2a], 0xfffffffd; add rsp, 8; pop rbx; ret;
0xffffffff8124b125: add al, ch; add eax, 0x48000000; add esp, 0x10; ret;
0xffffffff8347db85: add al, ch; add eax, 0x48fdd30f; add esp, 8; pop rbx; ret;
0xffffffff8346d585: add al, ch; add eax, 0x48fdd415; add esp, 8; pop rbx; pop r14; ret;
0xffffffff8344d685: add al, ch; add eax, 0x48fdd614; add esp, 8; pop rbx; ret;
0xffffffff8342e94a: add al, ch; add eax, ebx; std; add rsp, 8; pop rbx; ret;
0xffffffff83470789: add al, ch; add ebx, esp; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff83477187: add al, ch; add edi, [rcx-0x2d]; std; add rsp, 8; pop rbx; ret;
0xffffffff8346ea3e: add al, ch; add spl, r10b; std; add rsp, 8; pop rbx; ret;
0xffffffff83459d69: add al, ch; and [rbp-0x2b], ecx; std; add rsp, 8; pop rbx; ret;
0xffffffff8346736a: add al, ch; and [rdi-0x2c], dh; std; add rsp, 8; pop rbx; ret;
0xffffffff8342ea66: add al, ch; and al, 0; fdivr st, st(5); add rsp, 8; pop rbx; ret;
0xffffffff8346c63d: add al, ch; and al, 0xd4; std; add rsp, 8; pop rbx; ret;
0xffffffff83457a68: add al, ch; and dh, [rax-0x2b]; std; add rsp, 8; ret;
0xffffffff83477968: add al, ch; and dh, [rcx-0x2d]; std; add rsp, 8; pop rbx; ret;
0xffffffff8348d468: add al, ch; and dl, [rsi]; sar ch, cl; add rsp, 8; pop rbx; ret;
0xffffffff83466965: add al, ch; and eax, 0x48fdd481; add esp, 8; pop rbx; ret;
0xffffffff834a1569: add al, ch; and ebp, edx; sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff83472192: add al, ch; clc; enter 0xfdd3, 0x48; add esp, 8; pop rbx; ret;
0xffffffff8347c752: add al, ch; cmp [rbx], ah; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff81912652: add al, ch; cmp [rip-0xf0084], bh; mov esp, [rax+0xf00000c]; mov [rbp+0x75003678], bh; sbb ecx, [rax-0x7f]; ret;
0xffffffff83488a4d: add al, ch; cmp eax, 0x48fdd260; add esp, 8; pop rbx; ret;
0xffffffff8346c54d: add al, ch; cmp eax, 0x48fdd425; add esp, 8; pop rbx; ret;
0xffffffff8345664d: add al, ch; cmp eax, 0x48fdd584; add esp, 8; pop rbx; ret;
0xffffffff8101ef8d: add al, ch; cmp eax, 0x48fffffb; add esp, 8; pop rbx; pop r14; ret;
0xffffffff8113c13f: add al, ch; cmp edx, [rbp-0x34]; add [rax-0x75], cl; xchg [rax+0x48000000], esp; sub eax, esi; ret;
0xffffffff8346f84f: add al, ch; cmp esi, edx; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8346af3f: add al, ch; cmp rdx, r12; std; add rsp, 8; pop rbx; ret;
0xffffffff83497ac2: add al, ch; enter 0xd16f, 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff834686c2: add al, ch; enter 0xd463, 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff8342ecc2: add al, ch; enter 0xd7fd, 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff834a10af: add al, ch; fcmovnu st, st(1); sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff834a14ae: add al, ch; fcom st, st(5); sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff834691ae: add al, ch; fcomp st, qword ptr [rax-0x2c]; std; add rsp, 8; pop rbx; ret;
0xffffffff834876b2: add al, ch; fdiv st, dword ptr [rbx-0x2e]; std; add rsp, 8; pop rbx; ret;
0xffffffff8342a93d: add al, ch; fdivr st, st(5); add rsp, 8; pop rbx; ret;
0xffffffff834978ac: add al, ch; fidiv st, word ptr [rcx-0x2f]; std; add rsp, 8; pop rbx; ret;
0xffffffff834672ac: add al, ch; fidiv st, word ptr [rdi-0x2c]; std; add rsp, 8; pop rbx; ret;
0xffffffff8189959f: add al, ch; fild st, dword ptr [rax-0x48f0ffaa]; xchg esp, esp; or eax, 0xc0010000; ret;
0xffffffff83447dab: add al, ch; fild st, qword ptr [rsi+rdx*8-3]; add rsp, 8; pop rbx; ret;
0xffffffff8347d5af: add al, ch; fist dword ptr [rbx+rdx*8], st; std; add rsp, 8; pop rbx; ret;
0xffffffff83469dab: add al, ch; fisttp word ptr [rsp+rdx*8-3], st; add rsp, 8; pop rbx; ret;
0xffffffff8344bdac: add al, ch; fisubr st, word ptr [rsi+rdx*8]; std; add rsp, 8; pop rbx; ret;
0xffffffff834277e1: add al, ch; fld st, dword ptr [rbp-0x35]; std; add rsp, 0x10; ret;
0xffffffff8345a2ad: add al, ch; fld st, qword ptr [rdi-0x2b]; std; add rsp, 8; pop rbx; ret;
0xffffffff8346a7ad: add al, ch; fld st, qword ptr [rdx-0x2c]; std; add rsp, 8; pop rbx; ret;
0xffffffff834489b1: add al, ch; fldenv [rax-0x2a]; std; add rsp, 8; ret;
0xffffffff834a113b: add al, ch; fnop; std; add rsp, 8; pop rbx; ret;
0xffffffff83468bb1: add al, ch; fstp dword ptr [rsi-0x2c], st; std; add rsp, 8; pop rbx; ret;
0xffffffff83466baf: add al, ch; fstp tbyte ptr [rsi-0x2c], st; std; add rsp, 8; pop rbx; ret;
0xffffffff834a0fef: add al, ch; fwait; fcmovbe st, st(0); std; add rsp, 8; ret;
0xffffffff810481df: add al, ch; fwait; xchg esp, eax; fild st, dword ptr [rax]; mov eax, 1; ret;
0xffffffff811081df: add al, ch; fwait; xchg esp, eax; iretd;
0xffffffff81800246: add al, ch; hlt; xchg esp, eax; std; jmp far fword ptr [rcx+0xff0000];
0xffffffff83496f94: add al, ch; idiv byte ptr [rdx-0x2f]; std; add rsp, 8; pop rbx; ret;
0xffffffff83448194: add al, ch; imul byte ptr [rax-0x2a]; std; add rsp, 8; pop rbx; ret;
0xffffffff8346911f: add al, ch; imul ebx, [rcx-0x2c], 0xfffffffd; add rsp, 8; pop rbx; ret;
0xffffffff8345a21f: add al, ch; imul ecx, [rax-0x2b], 0xfffffffd; add rsp, 8; ret;
0xffffffff83469d1f: add al, ch; imul ecx, [rbp-0x2c], 0xfffffffd; add rsp, 8; pop rbx; ret;
0xffffffff83466e1f: add al, ch; imul edi, [rsp+rdx*8-3], 0x48; add esp, 8; pop rbx; ret;
0xffffffff835a3fe6: add al, ch; in al, 0x83; leave; std; mov qword ptr [rip+0x1c949], 0; ret;
0xffffffff83477ca5: add al, ch; in eax, 0x6d; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff83486ba5: add al, ch; in eax, 0x7e; sar ch, cl; add rsp, 8; ret;
0xffffffff83476ba5: add al, ch; in eax, 0x7e; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff814739ee: add al, ch; insb [rdi], dx; sbb esp, ebp; dec dword ptr [rax-0x77]; ret;
0xffffffff83471e45: add al, ch; int3; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff834773fd: add al, ch; lea esi, [rsi-0x2d]; std; add rsp, 8; pop rbx; ret;
0xffffffff8342eac1: add al, ch; leave; call rdi;
0xffffffff818fa501: add al, ch; leave; iretd;
0xffffffff812e6741: add al, ch; leave; or eax, 0x98480000; ret;
0xffffffff819baab1: add al, ch; leave; popfq; iretd;
0xffffffff816556f1: add al, ch; leave; ret 0xffff;
0xffffffff8152cf51: add al, ch; leave; ret;
0xffffffff817d7011: add al, ch; leave; stosd [rdi]; dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; iretd;
0xffffffff834561de: add al, ch; lodsb [rsi]; mov ch, dl; std; add rsp, 8; ret;
0xffffffff8344a302: add al, ch; mov [rdi-0x2a], al; std; add rsp, 8; pop rbx; ret;
0xffffffff834692fe: add al, ch; mov [rdi-0x2c], ss; std; add rsp, 8; pop rbx; ret;
0xffffffff83467c01: add al, ch; mov [rsi-0x2c], ebp; std; add rsp, 8; pop rbx; ret;
0xffffffff83475ada: add al, ch; mov al, 0x8f; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff834700da: add al, ch; mov al, 0xe9; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8347c5d3: add al, ch; mov bh, 0x24; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8349f5d3: add al, ch; mov bh, 0xf4; sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff81190c25: add al, ch; mov ch, 0x34; add [rax], al; add rsp, 8; ret;
0xffffffff83477ad5: add al, ch; mov ch, 0x6f; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff834735d5: add al, ch; mov ch, 0xb4; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff834881d4: add al, ch; mov dh, 0x68; sar ch, cl; add rsp, 8; pop rbx; ret;
0xffffffff83456023: add al, ch; mov dl, ch; std; add rsp, 8; pop rbx; ret;
0xffffffff81159042: add al, ch; mov eax, 0x4800ea80; add esp, 8; ret;
0xffffffff8349f9d2: add al, ch; mov eax, 0x48fdd0f0; add esp, 8; pop rbx; ret;
0xffffffff8346a8d2: add al, ch; mov eax, 0x48fdd441; add esp, 8; pop rbx; ret;
0xffffffff81265a42: add al, ch; mov eax, 0x48fffffc; add esp, 0x18; ret;
0xffffffff834709cd: add al, ch; mov ebp, 0x48fdd3e0; add esp, 8; pop rbx; ret;
0xffffffff83464dcd: add al, ch; mov ebp, 0x48fdd49c; add esp, 8; pop rbx; ret;
0xffffffff834621cd: add al, ch; mov ebp, 0x48fdd4c8; add esp, 8; pop rbx; ret;
0xffffffff834593cd: add al, ch; mov ebp, 0x48fdd556; add esp, 8; pop rbx; ret;
0xffffffff8348cccf: add al, ch; mov ebx, 0x48fdd21d; add esp, 8; pop rbx; ret;
0xffffffff83484fcf: add al, ch; mov ebx, 0x48fdd29a; add esp, 8; pop rbx; ret;
0xffffffff83471fd1: add al, ch; mov ecx, 0x48fdd3ca; add esp, 8; pop rbx; ret;
0xffffffff8346cad1: add al, ch; mov ecx, 0x48fdd41f; add esp, 8; pop rbx; ret;
0xffffffff834598d1: add al, ch; mov ecx, 0x48fdd551; add esp, 8; pop rbx; ret;
0xffffffff8346fecb: add al, ch; mov edi, 0x48fdd3eb; add esp, 8; pop rbx; ret;
0xffffffff8346bdcb: add al, ch; mov edi, 0x48fdd42c; add esp, 8; pop rbx; ret;
0xffffffff8345a0cb: add al, ch; mov edi, 0x48fdd549; add esp, 8; pop rbx; ret;
0xffffffff8344f4cb: add al, ch; mov edi, 0x48fdd5f5; add esp, 8; pop rbx; ret;
0xffffffff81409dbb: add al, ch; mov edi, 0x48ffffea; add esp, 8; ret;
0xffffffff83474ed0: add al, ch; mov edx, 0x48fdd39b; add esp, 8; pop rbx; ret;
0xffffffff83469ad0: add al, ch; mov edx, 0x48fdd44f; add esp, 8; pop rbx; ret;
0xffffffff834675d0: add al, ch; mov edx, 0x48fdd474; add esp, 8; pop rbx; ret;
0xffffffff834578d0: add al, ch; mov edx, 0x48fdd571; add esp, 8; pop rbx; ret;
0xffffffff834276d0: add al, ch; mov edx, 0x48fdd873; add esp, 8; pop rbx; ret;
0xffffffff83455f5c: add al, ch; mov edx, ebp; std; add rsp, 8; pop rbx; ret;
0xffffffff834a17cc: add al, ch; mov esi, 0x48fdd0d2; add esp, 8; pop rbx; ret;
0xffffffff834789cc: add al, ch; mov esi, 0x48fdd360; add esp, 8; pop rbx; ret;
0xffffffff834657cc: add al, ch; mov esi, 0x48fdd492; add esp, 8; pop rbx; ret;
0xffffffff834595ce: add al, ch; mov esp, 0x48fdd554; add esp, 8; ret;
0xffffffff8176b5ef: add al, ch; mov esp, [rax+0x69]; add [rdi], cl; mov dh, 0x57; sub eax, 0xff6c92e9; jmp qword ptr [rsi-0x70];
0xffffffff810df5ef: add al, ch; mov esp, [rax]; rol byte ptr [rax], cl; mov rax, 0xffffffffffffffda; ret;
0xffffffff8149f5ef: add al, ch; mov esp, [rax]; xchg esi, eax; add [rax-0x7d], cl; jmp qword ptr [rax];
0xffffffff8347c5ff: add al, ch; mov esp, [rbx+rdx*8]; std; add rsp, 8; ret;
0xffffffff810df2ef: add al, ch; mov esp, [rbx]; rol byte ptr [rax], cl; mov rax, 0xffffffffffffffda; ret;
0xffffffff8159f2ef: add al, ch; mov esp, [rbx]; xchg [rax], al; cmp [rdi+0x28], rsi; seta al; ret;
0xffffffff817eac6f: add al, ch; mov esp, [rcx+rax*4]; cdqe; ret;
0xffffffff817574ef: add al, ch; mov esp, [rcx-0x3fceff96]; ret;
0xffffffff817eaf6f: add al, ch; mov esp, [rcx-0x7f]; add [rax-0x68], cl; ret;
0xffffffff810df4ef: add al, ch; mov esp, [rcx]; rol byte ptr [rax], cl; mov rax, 0xffffffffffffffda; ret;
0xffffffff811071ef: add al, ch; mov esp, [rdi+rcx*8-0x389cb800]; mov rax, [rax*8-0x7d819990]; mov qword ptr [rax+0x16190], 0; ret;
0xffffffff810deeef: add al, ch; mov esp, [rdi]; rol byte ptr [rax], cl; mov rax, 0xffffffffffffffda; ret;
0xffffffff81a173ef: add al, ch; mov esp, [rdx-0x48f0ffc2]; ret 0xc083;
0xffffffff810df3ef: add al, ch; mov esp, [rdx]; rol byte ptr [rax], cl; mov rax, 0xffffffffffffffda; ret;
0xffffffff81a171ef: add al, ch; mov esp, [rsi+rdi-0x7874b800]; add [rdx], al; add [rax], al; ret;
0xffffffff8118afef: add al, ch; mov esp, [rsi-0x39]; add [rax-0x16], bh; ret;
0xffffffff8182efef: add al, ch; mov esp, [rsi]; pop rbp; add cl, ch; mov bl, 0xfe; jmp qword ptr [rsi+0xf];
0xffffffff810defef: add al, ch; mov esp, [rsi]; rol byte ptr [rax], cl; mov rax, 0xffffffffffffffda; ret;
0xffffffff815232ef: add al, ch; mov esp, ebx; lea eax, [rax]; mov eax, 0xffffffa1; ret;
0xffffffff83453847: add al, ch; mov r10b, 0xd5; std; add rsp, 8; pop rbx; ret;
0xffffffff83465f3f: add al, ch; mov rdx, r12; std; add rsp, 8; pop rbx; ret;
0xffffffff834969e6: add al, ch; movsb [rdi], [rsi]; adc cl, 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff83478740: add al, ch; movsxd rdx, ebx; std; add rsp, 8; pop rbx; ret;
0xffffffff83468d94: add al, ch; neg byte ptr [rsp+rdx*8-3]; add rsp, 8; pop rbx; ret;
0xffffffff8346f33b: add al, ch; not r11; std; add rsp, 8; pop rbx; ret;
0xffffffff8122caa1: add al, ch; or [rax], eax; add [rax], al; add rsp, 8; ret;
0xffffffff8348d57e: add al, ch; or al, 0x15; sar ch, cl; add rsp, 8; pop rbx; ret;
0xffffffff81264fa0: add al, ch; or al, [rax]; add [rax], al; add rsp, 0x10; ret;
0xffffffff8346e064: add al, ch; or dl, ah; std; add rsp, 8; pop rbx; ret;
0xffffffff8345a007: add al, ch; or dword ptr [rdx-0x2b], 0xfffffffd; add rsp, 8; pop rbx; ret;
0xffffffff810bff8d: add al, ch; or eax, 0x48000000; add esp, 8; ret;
0xffffffff8347527d: add al, ch; or eax, 0x48fdd398; add esp, 8; pop rbx; ret;
0xffffffff8346887d: add al, ch; or eax, 0x48fdd462; add esp, 8; pop rbx; ret;
0xffffffff8342ed7d: add al, ch; or eax, 0x48fdd7fd; add esp, 8; pop rbx; ret;
0xffffffff81952b9f: add al, ch; or eax, [rax]; add [rax], al; add rsp, 8; ret;
0xffffffff8345707f: add al, ch; or edi, [rdx-0x2b]; std; add rsp, 8; pop rbx; ret;
0xffffffff8346ed7f: add al, ch; or edi, ebp; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8346747f: add al, ch; or esi, [rsi-0x2c]; std; add rsp, 8; pop rbx; ret;
0xffffffff8346e247: add al, ch; or r12b, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff83475ea4: add al, ch; out 0x8b, al; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8342e7a3: add al, ch; out 2, eax; fdivr st, st(5); add rsp, 8; ret;
0xffffffff81040f0c: add al, ch; out dx, al; add esp, edi; add [rcx-0x1c3eb740], cl; and [rax+9], cl; ret;
0xffffffff8177f7cb: add al, ch; out dx, eax; xchg esp, eax; inc dword ptr [rax+rax*8-0x38b7eb8b]; ret;
0xffffffff83497c45: add al, ch; outsb dx, [rsi]; sar ebp, 1; add rsp, 8; pop rbx; ret;
0xffffffff8342aa1b: add al, ch; outsd dx, [rsi]; fdivr st, st(5); add rsp, 8; ret;
0xffffffff8344d82d: add al, ch; pop rbp; adc dl, dh; std; add rsp, 8; ret;
0xffffffff819d4d1f: add al, ch; pop rbx; leave; add [rbx-0x7d], dl; jmp qword ptr [rdi];
0xffffffff8116bf1f: add al, ch; pop rbx; push rdi; leave; add cl, ch; call qword ptr [rcx];
0xffffffff8347862b: add al, ch; pop rdi; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff814fe470: add al, ch; pop rdx; pop rsp; cld; jmp qword ptr [rbp+0x48];
0xffffffff817d285e: add al, ch; pop rsp; add [rax], al; add [rax-0x7b], cl; shl byte ptr [rcx+rax*4+0x48], 0x89; ret;
0xffffffff812e6a7e: add al, ch; pop rsp; cli; dec dword ptr [rax-0x7b]; shl byte ptr [rbx+rbx+0x48], 0x89; ret;
0xffffffff811165de: add al, ch; pop rsp; in al, 0xff; jmp qword ptr [rbp+0x48];
0xffffffff817144d7: add al, ch; pop rsp; in eax, dx; add al, [rax]; add rsp, 8; ret;
0xffffffff8158439e: add al, ch; pop rsp; int 0xa7; add [rdi], cl; scasd [rdi]; ret;
0xffffffff8349a1b4: add al, ch; pop rsp; pop rbx; dec byte ptr [rcx-0x76f91415]; ret;
0xffffffff812a279e: add al, ch; pop rsp; ret;
0xffffffff813f320e: add al, ch; pop rsp; sar bh, 1; dec dword ptr [rax-0x77]; ret;
0xffffffff834984ed: add al, ch; popfq; sar ebp, 1; add rsp, 8; pop rbx; ret;
0xffffffff8347c3ed: add al, ch; popfq; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff83461b22: add al, ch; push 0x48fdd4cf; add esp, 8; pop rbx; ret;
0xffffffff83449f22: add al, ch; push 0x48fdd64b; add esp, 8; pop rbx; pop r14; ret;
0xffffffff81265a92: add al, ch; push 0x48fffffc; add esp, 0x18; ret;
0xffffffff8349f820: add al, ch; push 0xfffffffffffffff2; sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff8348975c: add al, ch; push rbx; sar ch, cl; add rsp, 8; pop rbx; ret;
0xffffffff834a2233: add al, ch; push rdi; enter 0xfdd0, 0x48; add esp, 8; pop rbx; ret;
0xffffffff81467e93: add al, ch; push rdi; sbb esp, edx; dec dword ptr [rax-0x7b]; shl byte ptr [rsp+rdi+0x48], 0x89; ret;
0xffffffff83456234: add al, ch; push rsi; mov ch, dl; std; add rsp, 8; ret;
0xffffffff83484e47: add al, ch; pushfq; sar ch, cl; add rsp, 8; pop rbx; ret;
0xffffffff83474e41: add al, ch; pushfq; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff83471724: add al, ch; rcl bx, cl; std; add rsp, 8; pop rbx; ret;
0xffffffff83472954: add al, ch; rcl ebx, 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff8347183d: add al, ch; rcl r11b, cl; std; add rsp, 8; pop rbx; ret;
0xffffffff834a1743: add al, ch; rcl r8d, cl; std; add rsp, 8; pop rbx; ret;
0xffffffff834a0db8: add al, ch; rcr ah, cl; sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff834723ba: add al, ch; rol dh, 1; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff834a1aba: add al, ch; ror bh, 1; sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff83469ec9: add al, ch; ror dword ptr [rbx-0x2c], 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff83469bc9: add al, ch; ror dword ptr [rsi-0x2c], 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff83471ac9: add al, ch; ror edi, 0xd3; std; add rsp, 8; pop rbx; ret;
0xffffffff834671b9: add al, ch; sar dword ptr [rax-0x2c], 1; std; add rsp, 8; pop rbx; ret;
0xffffffff83498364: add al, ch; sar ebp, 1; add rsp, 8; pop rbx; ret;
0xffffffff8347d96d: add al, ch; sbb eax, 0x48fdd311; add esp, 8; pop rbx; ret;
0xffffffff8346d06d: add al, ch; sbb eax, 0x48fdd41a; add esp, 8; pop rbx; ret;
0xffffffff8101eead: add al, ch; sbb eax, 0x48fffffc; add esp, 8; pop rbx; pop r14; ret;
0xffffffff83470d07: add al, ch; sbb ebp, 0xffffffd3; std; add rsp, 8; pop rbx; ret;
0xffffffff83447e6f: add al, ch; sbb ebp, [rsi+rdx*8-3]; add rsp, 8; pop rbx; ret;
0xffffffff83472771: add al, ch; sbb ebx, eax; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8346ef6f: add al, ch; sbb edi, ebx; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff834a176f: add al, ch; sbb edx, ebx; sar ch, 1; add rsp, 8; ret;
0xffffffff8348cf48: add al, ch; sbb edx, edx; std; add rsp, 8; pop rbx; ret;
0xffffffff8110335f: add al, ch; sbb esp, ebx; iretd;
0xffffffff81a5355f: add al, ch; sbb esp, ecx; cmp al, [rax]; mov dword ptr [rdi+0xd00], 0x7530; ret;
0xffffffff8346d247: add al, ch; sbb r12b, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff8342a8dc: add al, ch; scasb [rdi]; fdivr st, st(5); add rsp, 8; pop rbx; ret;
0xffffffff812ecc4c: add al, ch; scasb [rdi]; leave; hlt; dec dword ptr [rax-0x77]; ret;
0xffffffff83473b5c: add al, ch; scasd [rdi]; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8346f4ba: add al, ch; shl ch, 1; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff834786b7: add al, ch; shl dword ptr [rbx-0x2d], cl; std; add rsp, 8; pop rbx; ret;
0xffffffff834677b7: add al, ch; shl dword ptr [rdx-0x2c], cl; std; add rsp, 8; pop rbx; ret;
0xffffffff8347bfba: add al, ch; shr byte ptr [rdx], 1; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8346bac9: add al, ch; shr dword ptr [rdi], 0xd4; std; add rsp, 8; pop rbx; ret;
0xffffffff81a24c7f: add al, ch; sti; leave; cmp eax, 0x468b4800; ret;
0xffffffff813c8a7f: add al, ch; sti; mov esp, [rbx-0x3f38b700]; ror byte ptr [rbx-0x60167ec4], 2; bnd jmp qword ptr [rsi+0x66];
0xffffffff83474044: add al, ch; stosb [rdi]; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8142b9cf: add al, ch; stosd [rdi]; pop rsp; popfq; add [rax-0x2729], bh; ret;
0xffffffff83473f25: add al, ch; stosd es:[rdi]; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8346aa61: add al, ch; sub [rax-0x2c], eax; std; add rsp, 8; pop rbx; ret;
0xffffffff8346a662: add al, ch; sub [rsp+rdx*8-3], al; add rsp, 8; pop rbx; ret;
0xffffffff83477b5e: add al, ch; sub al, 0x6f; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8346eb60: add al, ch; sub bh, bh; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8347c207: add al, ch; sub dword ptr [rax], 0xffffffd3; std; add rsp, 8; pop rbx; ret;
0xffffffff8342e85d: add al, ch; sub eax, 0x48fdd802; add esp, 8; pop rbx; ret;
0xffffffff8344c125: add al, ch; sub esi, edx; std; add rsp, 8; ret;
0xffffffff8347c65f: add al, ch; sub esp, [rbx+rdx*8]; std; add rsp, 8; pop rbx; ret;
0xffffffff83477705: add al, ch; test [rbx-0x2d], esi; std; add rsp, 8; pop rbx; ret;
0xffffffff83468906: add al, ch; test [rcx-0x2c], ah; std; add rsp, 8; pop rbx; ret;
0xffffffff83487806: add al, ch; test [rdx-0x2e], dh; std; add rsp, 8; pop rbx; ret;
0xffffffff834717e2: add al, ch; test al, 0xd2; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff83474ce1: add al, ch; test eax, 0x48fdd39d; add esp, 8; pop rbx; ret;
0xffffffff8346c9e1: add al, ch; test eax, 0x48fdd420; add esp, 8; pop rbx; ret;
0xffffffff83465ae1: add al, ch; test eax, 0x48fdd48f; add esp, 8; pop rbx; ret;
0xffffffff834a0f05: add al, ch; test ebx, ebx; sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff8176be23: add al, ch; xchg [rdx-1], esp; jmp far fword ptr [rax+0x1e850f80];
0xffffffff83476442: add al, ch; xchg bl, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff83476323: add al, ch; xchg ebx, edx; std; add rsp, 8; pop rbx; ret;
0xffffffff83471af6: add al, ch; xchg esp, eax; iretd;
0xffffffff8349c6f6: add al, ch; xchg esp, eax; or al, 0x4f; dec byte ptr [rax-0x39]; ret;
0xffffffff818c4d56: add al, ch; xchg esp, eax; pushfq; dec dword ptr [rax-0x39]; ret;
0xffffffff81364e66: add al, ch; xchg esp, eax; ret 0xc9;
0xffffffff8347564a: add al, ch; xchg esp, eax; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8347543e: add al, ch; xchg rsi, rax; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff818fc5a2: add al, ch; xchg rsp, rax; dec dword ptr [rax-0x7b]; shl byte ptr [rax+rax*2+0x48], 0x89; ret;
0xffffffff83478856: add al, ch; xor al, 0x62; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8349790a: add al, ch; xor byte ptr [rcx-0x2f], 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff83469f58: add al, ch; xor cl, [rbx-0x2c]; std; add rsp, 8; pop rbx; ret;
0xffffffff83478a55: add al, ch; xor eax, 0x48fdd360; add esp, 8; pop rbx; ret;
0xffffffff83470555: add al, ch; xor eax, 0x48fdd3e5; add esp, 8; pop rbx; ret;
0xffffffff83466a55: add al, ch; xor eax, 0x48fdd480; add esp, 8; pop rbx; ret;
0xffffffff83465855: add al, ch; xor eax, 0x48fdd492; add esp, 8; pop rbx; ret;
0xffffffff83456955: add al, ch; xor eax, 0x48fdd581; add esp, 8; pop rbx; ret;
0xffffffff8103502e: add al, dl; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff82474b97: add bh, [rax-0x16]; pop rsp; iretd;
0xffffffff82554af1: add bh, [rax-0x57]; xchg esp, eax; iretd;
0xffffffff824f3b26: add bh, [rax-0x78512008]; pop rsp; imul ecx, ebp, 0x9cff6cc9; push rax; ret;
0xffffffff814b61ea: add bh, [rbx]; sar bh, 1; add rsp, 8; ret;
0xffffffff8251b37e: add bh, [rdx+rdx*4+0x1b]; sbb eax, 0x787ab394; leave; mov ebp, 0xa80eaecc; ret;
0xffffffff81a7e1cd: add bh, [rdx]; or [rdi], cl; xchg esp, eax; rol dword ptr [rax+0xf000178], 0x95; shl byte ptr [rax], 0xc8; ret;
0xffffffff824cf57c: add bh, [rsi+0x16]; xchg esp, eax; scasb [rdi]; pop rsi; ret;
0xffffffff8223c0c8: add bh, [rsi-0x3be871bc]; and [rsi+0x49], dh; leave; hlt; xor bh, [rcx+rbx]; ret;
0xffffffff823d8077: add bh, al; in al, dx; pop rsi; leave; vmulps ymm1, ymm4, [rdi+0x45ec35f8]; ret 0xce4e;
0xffffffff81b6a76a: add bh, al; xchg esp, eax; add eax, 0; add [rax], al; ret;
0xffffffff814eb602: add bh, al; xchg esp, edx; add eax, 0; add [rax], al; mov dword ptr [rdi+0x5d8], 0; ret;
0xffffffff81061bb7: add bh, bh; rol byte ptr [rcx+0x5c], 1; mov rsp, rbp; pop rbp; ret;
0xffffffff820024ea: add bh, bh; xchg esp, eax; push 5; jmp qword ptr [rcx];
0xffffffff8149dd22: add bh, dh; add rsp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff8235c3ec: add bh, dh; mov esp, [rdx+rbx*2-0x3e]; or bl, r14b; scasd [rdi]; ret 0x9535;
0xffffffff81009277: add bl, [rbx+0x41]; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff8101d9c1: add bl, [rbx+0x41]; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff8101d90b: add bl, [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff828f3f2b: add bl, [rdx+0x67]; add [rax], al; pop rsp; ret;
0xffffffff8342e860: add bl, al; std; add rsp, 8; pop rbx; ret;
0xffffffff8342e7a6: add bl, al; std; add rsp, 8; ret;
0xffffffff811e26bb: add bl, ch; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81c05662: add bl, ch; add dh, [rcx]; leave; mov [rsi], cx; ret;
0xffffffff81199578: add bl, ch; add dh, [rcx]; leave; mov rdi, r14; call qword ptr [0xffffffff82e33a08];
0xffffffff8177428e: add bl, ch; enter 0x9ae8, 0x30; xchg esp, eax; jmp qword ptr [rsi+0x2e];
0xffffffff83482e94: add bl, ch; fucomp st, st(0); xchg esp, eax; ret;
0xffffffff8135d1d2: add bl, ch; mov [rbx+0x41], ds; pop rsp; pop r14; pop r15; ret;
0xffffffff81565346: add bl, ch; mov ah, 0x31; leave; mov rax, rcx; ret;
0xffffffff8167526c: add bl, ch; rcr byte ptr [rbx+0x41], cl; pop rsp; pop r14; pop r15; ret;
0xffffffff817af886: add bl, ch; rcr dword ptr [rbx+0x41], 1; pop rsp; pop r14; pop r15; ret;
0xffffffff812a1a78: add bl, ch; sub [rcx], dh; leave; mov rax, rcx; ret;
0xffffffff822442f3: add bpl, r9b; leave; mov ebx, 0x5a584a05; ret 0x3d1;
0xffffffff811310cc: add byte ptr [rax], 0; add [rax-0x75], cl; xchg esp, eax; ret;
0xffffffff81561b65: add byte ptr [rax], 0; add [rbp+0x28], dh; add rsp, 0x88; ret;
0xffffffff8112e659: add byte ptr [rax], 0; add [rbp+0xb], dh; add rsp, 0x88; pop rbx; pop r14; ret;
0xffffffff8112e789: add byte ptr [rax], 0; add [rbp+8], dh; add rsp, 0x88; ret;
0xffffffff810ca374: add byte ptr [rax], 0; add [rbp+9], dh; add rsp, 0x88; pop rbx; ret;
0xffffffff8100433d: add byte ptr [rax], 0; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff816e49f2: add byte ptr [rax], 0; add [rdi], cl; xchg esp, eax; ret 0xc031;
0xffffffff810c62d1: add byte ptr [rax], 0; add [rdi], cl; xchg esp, eax; ret;
0xffffffff8152cf4e: add byte ptr [rax], 0; add al, ch; leave; ret;
0xffffffff81b02dad: add byte ptr [rax], 0; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff82431212: add byte ptr [rdi+0x68], 0x36; mov esp, [rbx]; ret;
0xffffffff8355dff0: add byte ptr [rsi-0x7e5a], 0xff; push qword ptr [rax]; xchg [rsi-0x7f], esp; jmp qword ptr [rax-0x7e5979];
0xffffffff82255756: add ch, [rbx+rbx*2-0x68]; leave; fld st, dword ptr [rbp+0x72]; iretd;
0xffffffff828dfc2f: add ch, [rcx]; pop rsp; add [rax], al; call qword ptr [rbp];
0xffffffff826cf404: add ch, [rsp+rcx*4+0xe]; mov esp, [rbx+0x73]; ret;
0xffffffff82646e05: add ch, ah; dec dword ptr [rdi+0xfffec02]; add ch, ah; dec edi; add esp, ebp; call far fword ptr [rdi];
0xffffffff82646e09: add ch, ah; dec dword ptr [rdi]; add ch, ah; dec edi; add esp, ebp; call far fword ptr [rdi];
0xffffffff82646e0d: add ch, ah; dec edi; add esp, ebp; call far fword ptr [rdi];
0xffffffff81b25d71: add ch, bl; or [rax-0x77], cl; fucomip st, st(0); xchg esp, eax; and ch, al; jmp qword ptr [rbp+0x48];
0xffffffff822442f4: add ch, cl; leave; mov ebx, 0x5a584a05; ret 0x3d1;
0xffffffff8133453d: add ch, cl; lodsb [rsi]; pop rsp; cmc; jmp qword ptr [rsi+0x66];
0xffffffff8133453e: add ch, cl; lodsb [rsi]; pop rsp; cmc; jmp qword ptr [rsi+0x66];
0xffffffff81b68312: add ch, cl; mov [rcx+rdi*8-1], cl; add rsp, 2; ret;
0xffffffff822b0ca5: add ch, dh; mov esp, eax; shl ebx, 0x4e; mov eax, [0x87248957b79fbcae]; iretd;
0xffffffff812c3cf2: add cl, 1; mov eax, 1; shl rax, cl; add rsp, 8; ret;
0xffffffff815792ae: add cl, [rax+0xf]; leave; mov rax, 0xffffffffffffff; and rax, rcx; ret;
0xffffffff811a8294: add cl, [rbx+0x4705290d]; add cl, [rcx+0xfca09c2]; xchg esp, eax; ret 0xfb83;
0xffffffff811a829a: add cl, [rcx+0xfca09c2]; xchg esp, eax; ret 0xfb83;
0xffffffff815a9749: add cl, [rdi]; xchg esp, eax; ret 0x2eb;
0xffffffff81bcd146: add cl, [rdi]; xchg esp, eax; ret 0x30a8;
0xffffffff8147704e: add cl, [rdi]; xchg esp, eax; ret 0x498b;
0xffffffff814881d8: add cl, [rdi]; xchg esp, eax; ret 0x4eeb;
0xffffffff81bc69b6: add cl, [rdi]; xchg esp, eax; ret 0x5d8d;
0xffffffff81a51514: add cl, [rdi]; xchg esp, eax; ret 0x7c83;
0xffffffff813282c8: add cl, [rdi]; xchg esp, eax; ret 0x7c89;
0xffffffff8148820b: add cl, [rdi]; xchg esp, eax; ret 0x8348;
0xffffffff812d0d48: add cl, [rdi]; xchg esp, eax; ret 0x8548;
0xffffffff815ee85d: add cl, [rdi]; xchg esp, eax; ret 0x8948;
0xffffffff817aa692: add cl, [rdi]; xchg esp, eax; ret 0x894c;
0xffffffff81c084d9: add cl, [rdi]; xchg esp, eax; ret 0x8b49;
0xffffffff810fd277: add cl, [rdi]; xchg esp, eax; ret 0x9529;
0xffffffff81a9b18f: add cl, [rdi]; xchg esp, eax; ret 0xb70f;
0xffffffff81a8ed01: add cl, [rdi]; xchg esp, eax; ret 0xc148;
0xffffffff817d54a5: add cl, [rdi]; xchg esp, eax; ret 0xc220;
0xffffffff81b1f27b: add cl, [rdi]; xchg esp, eax; ret 0xc283;
0xffffffff81aa3ea7: add cl, [rdi]; xchg esp, eax; ret 0xca08;
0xffffffff81a808d3: add cl, [rdi]; xchg esp, eax; ret 0xca38;
0xffffffff81a808d1: add cl, [rdi]; xchg esp, eax; ret 0xca38;
0xffffffff81ba4d41: add cl, [rdi]; xchg esp, eax; ret 0xf631;
0xffffffff81c74b1d: add cl, [rdi]; xchg esp, eax; ret 0xf748;
0xffffffff81018aee: add cl, [rdi]; xchg esp, eax; ret 0xf983;
0xffffffff811fae76: add cl, [rdi]; xchg esp, eax; ret;
0xffffffff810068ac: add cl, [rdi]; xchg esp, eax; rol byte ptr [rbx-0x77d66c3], 1; add cl, [rdi]; xchg ebp, eax; ret 0xc230;
0xffffffff8191a795: add cl, [rdi]; xchg esp, eax; rol byte ptr [rcx-0x7d], 0x79; or [rbx+0xf], bl; xchg edx, eax; ret;
0xffffffff8105d945: add cl, [rdi]; xchg esp, eax; rol dword ptr [rbx-0x6bf0fe08], 0xc0; or al, cl; ret;
0xffffffff8173c82e: add cl, [rdi]; xchg esp, eax; ror byte ptr [rax], 0xc8; pop rbx; pop rbp; ret;
0xffffffff81a82013: add cl, [rdi]; xchg esp, eax; sar dword ptr [rax], 0xc1; setne al; ret;
0xffffffff81144a01: add cl, [rdi]; xchg esp, eax; shl dword ptr [rax], 0xc1; movzx eax, cl; ret;
0xffffffff815b9deb: add cl, [rdi]; xchg esp, eax; shr dword ptr [rcx+0x1000], 0xf; xchg esp, eax; ret;
0xffffffff824aca8d: add cl, bl; xchg esp, eax; iretd;
0xffffffff81182bf4: add cl, ch; leave; cld; jmp qword ptr [rsi+0xf];
0xffffffff816b57bf: add cl, ch; mov esp, [rsi-0x43]; jmp qword ptr [rsi+0x66];
0xffffffff81af7a3b: add cl, ch; pop rdi; pop rax; pop rsp; jmp qword ptr [rsi+0x66];
0xffffffff815c4d4e: add cl, ch; pop rsp; mov ch, 0xfe; jmp qword ptr [rsi+0x66];
0xffffffff81af3b98: add cl, ch; push 0xffffffffe8ffffff; lea esi, [rdi]; pop rsp; jmp qword ptr [rsi+0x66];
0xffffffff812a08c2: add cl, ch; sub esp, 0xffffffff; jmp qword ptr [rbp+0x48];
0xffffffff811ee4d0: add dh, [rcx]; leave; lea rax, [rcx+0x108]; test rcx, rcx; cmove rax, rcx; ret;
0xffffffff811ef0b8: add dh, [rcx]; leave; lea rax, [rcx+8]; test rcx, rcx; cmove rax, rcx; ret;
0xffffffff81c055da: add dh, [rcx]; leave; mov [r14], cx; pop rbx; pop r14; ret;
0xffffffff83441d03: add dh, [rcx]; leave; mov [rax*8-0x7ca47000], rcx; call qword ptr [0xffffffff82e339e0];
0xffffffff81bbc33c: add dh, [rcx]; leave; mov [rcx+0x54], eax; pop rbx; pop r14; ret;
0xffffffff81c3b208: add dh, [rcx]; leave; mov [rdi], rcx; mov qword ptr [rdi+8], 0; mov qword ptr [rdi+0x10], 0; ret;
0xffffffff81c3b258: add dh, [rcx]; leave; mov [rdi], rcx; mov qword ptr [rdi+8], 0; mov qword ptr [rdi+0x10], 0xffffffff8263a928; ret;
0xffffffff81b4c30b: add dh, [rcx]; leave; mov [rdx], rcx; pop rbx; ret;
0xffffffff8343021d: add dh, [rcx]; leave; mov [rip-0x49e926], ecx; mov eax, 1; pop rbx; ret;
0xffffffff81c05664: add dh, [rcx]; leave; mov [rsi], cx; ret;
0xffffffff810dbda9: add dh, [rcx]; leave; mov eax, ecx; pop rbx; pop r14; ret;
0xffffffff813356b1: add dh, [rcx]; leave; mov eax, ecx; pop rbx; ret;
0xffffffff834a62bd: add dh, [rcx]; leave; mov rax, rcx; pop rbx; pop r14; ret;
0xffffffff81314f2e: add dh, [rcx]; leave; mov rax, rcx; pop rcx; ret;
0xffffffff810b3124: add dh, [rcx]; leave; mov rax, rcx; ret;
0xffffffff8119957a: add dh, [rcx]; leave; mov rdi, r14; call qword ptr [0xffffffff82e33a08];
0xffffffff81ae40ef: add dh, [rcx]; leave; sub eax, ecx; pop rbx; pop r14; ret;
0xffffffff81baadb9: add dh, [rcx]; leave; sub eax, ecx; pop rbx; ret;
0xffffffff81ae6f19: add dh, [rcx]; leave; sub eax, ecx; ret;
0xffffffff81416437: add dh, [rcx]; leave; test rax, rax; mov eax, 0xfffffff4; cmovne eax, ecx; ret;
0xffffffff819ac6da: add dh, [rcx]; rol byte ptr [rcx+rax], 0x88; xchg [rax+2], esp; add [rax], al; xor eax, eax; ret;
0xffffffff819ac8eb: add dh, [rcx]; rol byte ptr [rcx+rax], 0x88; xchg [rcx+2], esp; add [rax], al; xor eax, eax; ret;
0xffffffff82332b2e: add dh, [rip+0x1db50a05]; pop rsp; adc eax, [rbx-0x31]; adc eax, 0x50ad6907; iretd;
0xffffffff828ce9d7: add dh, cl; push rdx; add [rax], al; xchg esp, eax; ret 5;
0xffffffff81422b2f: add dh, dh; add eax, 0x2268bc5; adc [rdi], cl; xchg esp, eax; ret;
0xffffffff818df4e4: add dh, dh; rol dword ptr [rbx], 0xf; xchg esp, eax; ret;
0xffffffff8223c0c7: add dil, [rsi-0x3be871bc]; and [rsi+0x49], dh; leave; hlt; xor bh, [rcx+rbx]; ret;
0xffffffff8124bab5: add dl, [rax-0x18]; adc al, 0; add [rax], al; add rsp, 8; ret;
0xffffffff8224e6ff: add dl, [rcx-8]; outsb dx, [rsi]; leave; shl qword ptr [rip+0x6f85397f], 0x5f; iretd;
0xffffffff82336dd5: add dl, [rdi-0xb55571b]; mov esp, [rcx-0x71bb9aff]; sbb [rax+0x1cc91183], bh; shl dword ptr [rbx-0x2ad49c63], 0x3d; iretd;
0xffffffff8224ce44: add dl, al; and byte ptr [rdx-0x42], 0x38; cld; leave; imul edx, [rsi-0x3c], 0x777e4d20; iretd;
0xffffffff8344e7f3: add dl, dh; std; add rsp, 8; pop rbx; ret;
0xffffffff82ad499f: add dl, dl; xchg esp, eax; add [rax], eax; call far fword ptr [rbx+0x1b];
0xffffffff824e8ba3: add dword ptr [r15+0x48], 0xa4730f56; movsb [rdi], [rsi]; leave; mov [rip-0x157eb449], edi; ret;
0xffffffff81b34da3: add dword ptr [rax+0x31000000], 0xffffffc0; add rsp, 8; pop rbx; ret;
0xffffffff81bf62bf: add dword ptr [rax], 0x415b0975; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81466a0f: add dword ptr [rax], 0x415bd889; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff819fb03e: add dword ptr [rbp+0x31], 0xe099e8c0; xchg esp, eax; dec dword ptr [rax-0x7b]; sar byte ptr [rax-0xc], 0xf; ret;
0xffffffff817144d2: add dword ptr [rbp+0x31], 0xe8006ac0; pop rsp; in eax, dx; add al, [rax]; add rsp, 8; ret;
0xffffffff8344a509: add dword ptr [rbp-0x2a], 0xfffffffd; add rsp, 8; pop rbx; ret;
0xffffffff824db3c5: add dword ptr [rcx], 0xb61fd19c; xchg esp, eax; sbb [rax], bh; sub ebx, [rsi]; iretd;
0xffffffff824e8ba4: add dword ptr [rdi+0x48], 0xa4730f56; movsb [rdi], [rsi]; leave; mov [rip-0x157eb449], edi; ret;
0xffffffff82554f74: add dword ptr [rdi-0x70], 0x66; leave; ret;
0xffffffff826886b1: add eax, 0x125f8474; or gs:[rcx+0x75], edx; leave; jmp far fword ptr [rax+0xc6512ff];
0xffffffff826886b0: add eax, 0x125f8474; or gs:[rcx+0x75], edx; leave; jmp far fword ptr [rax+0xc6512ff];
0xffffffff823e2cf1: add eax, 0x18f0e0d5; xchg esp, eax; fwait; xchg esi, eax; ret;
0xffffffff823a21f0: add eax, 0x1b1c11f0; mov bl, 0x14; xchg esp, eax; ret;
0xffffffff81a3c464: add eax, 0x1b8; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81964b69: add eax, 0x1d10b35; add [rbx+0x41], ebx; pop rsp; pop r14; pop r15; ret;
0xffffffff812558da: add eax, 0x1d3cfd1; xor eax, eax; add rsp, 8; ret;
0xffffffff810f081e: add eax, 0x1d672a1; add rsp, 4; ret;
0xffffffff818cb4f7: add eax, 0x1da912a; add [rdi], ecx; xchg esp, eax; ret 0xc220;
0xffffffff81061abc: add eax, 0x1de2bce; add [rdi], ecx; xchg esp, eax; shl byte ptr [rax], 0xc8; ret;
0xffffffff8100c8e2: add eax, 0x1f822c5; add [rax], al; add [rdi], cl; xchg esp, eax; ret;
0xffffffff811e46a7: add eax, 0x20; shr rax, 3; add rsp, 4; ret;
0xffffffff81422b31: add eax, 0x2268bc5; adc [rdi], cl; xchg esp, eax; ret;
0xffffffff81263958: add eax, 0x23b61b3; add rsp, 4; ret;
0xffffffff81c63909: add eax, 0x28; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff824bb860: add eax, 0x2ea9a97f; insb [rdi], dx; sub r12d, [rbx-0x2562a68a]; pop rsp; ret;
0xffffffff811e5077: add eax, 0x30; shr rax, 3; add rsp, 4; ret;
0xffffffff81bf8203: add eax, 0x31c3c031; leave; imul eax, ecx, 0x2c; add eax, 0xf8; cdqe; ret;
0xffffffff8266835d: add eax, 0x36fff5c; pop rsp; jmp far fword ptr [rdi];
0xffffffff8228675f: add eax, 0x39ebb3a7; fwait; leave; jmp qword ptr [rax-0x70];
0xffffffff812d3c97: add eax, 0x3b8; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8246e778: add eax, 0x3c2e2fb7; leave; jmp far fword ptr [rsi];
0xffffffff8185fa8b: add eax, 0x3de90000; leave; popfq; jmp qword ptr [rsi+0x66];
0xffffffff819e49f5: add eax, 0x415bff74; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff82518ab0: add eax, 0x435cc16b; xchg esp, eax; movsxd edx, [rcx-0x66]; fld st, qword ptr [rdi-0x2aadfe0a]; push 0xffffffffd02c4fb5; ret 0xaeb9;
0xffffffff82312977: add eax, 0x448a4f08; adc bl, [rdi]; push rcx; mov [0xd4766988cde0d199], al; leave; ret;
0xffffffff8124b127: add eax, 0x48000000; add esp, 0x10; ret;
0xffffffff81bfd6d7: add eax, 0x48000000; add esp, 0x28; ret;
0xffffffff81999f57: add eax, 0x48000000; add esp, 8; ret;
0xffffffff815d9921: add eax, 0x48000001; add esp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8347db87: add eax, 0x48fdd30f; add esp, 8; pop rbx; ret;
0xffffffff8346d587: add eax, 0x48fdd415; add esp, 8; pop rbx; pop r14; ret;
0xffffffff8344d687: add eax, 0x48fdd614; add esp, 8; pop rbx; ret;
0xffffffff812c1e57: add eax, 0x48fffffb; add esp, 0x10; ret;
0xffffffff817361ea: add eax, 0x4b8; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8265a6c1: add eax, 0x5afff94; xchg esp, eax; call far fword ptr [rdi+5];
0xffffffff82374f3f: add eax, 0x5d966a23; pop rsp; sub eax, 0x895337c6; mov ecx, esp; sar dword ptr [rbp+0x41], 0xfc; iretd;
0xffffffff812a5fd3: add eax, 0x63480000; leave; add gs:[rax+0x3b0], rcx; ret;
0xffffffff8250982e: add eax, 0x6c17e5ce; or [rbp-0x3d1e5033], ch; fmul st, qword ptr [rdx+0x6143678c]; leave; cmp cl, [rdi-0x4c]; iretd;
0xffffffff81bdafb1: add eax, 0x74000a0f; or [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81740b90: add eax, 0x7b8; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81566f0c: add eax, 0x81f90944; leave; add byte ptr [rax], 0; add [rcx-0x77], al; iretd;
0xffffffff8235763b: add eax, 0x901d75ef; xchg esp, eax; sbb al, 0xc6; mov ebp, 0x4b55a861; iretd;
0xffffffff823b259d: add eax, 0x96f19f0e; xchg esp, eax; ret 0x2449;
0xffffffff824e80f4: add eax, 0xa6c52ee6; mov es, [rbx+0x1c598b87]; pop rsp; sub edi, esi; iretd;
0xffffffff8249e1e5: add eax, 0xaa24fdbb; pop rsp; movsb [rdi], [rsi]; cmp dh, [rsi+rbp*4]; iretd;
0xffffffff8236e874: add eax, 0xac5d2381; xchg esp, eax; mov cl, 0x4b; ret 0x4ea7;
0xffffffff81ae6f0f: add eax, 0xb70f0874; add al, 0x39; enter 0x277, 0x31; leave; sub eax, ecx; ret;
0xffffffff8243e306: add eax, 0xbced514a; adc rax, 0xffffffffee519ea1; pop rsi; xchg [rbx-0x12], esp; ret 0xcc20;
0xffffffff823e269d: add eax, 0xc69d0f0b; sub esi, [rsi+0x706dc8d2]; xchg esp, eax; adc ecx, [rsi+0x3476cb15]; call qword ptr [rsi-0x69e2c4ed];
0xffffffff82007366: add eax, 0xc7161bff; inc dword ptr [rax]; xchg esp, eax; push rcx; jmp qword ptr [rax+0x15ff051b];
0xffffffff82352749: add eax, 0xddda0cd3; enter 0xddfb, 0x7c; leave; cdq; fxch st, st(5); ret;
0xffffffff81800243: add eax, 0xe8000000; hlt; xchg esp, eax; std; jmp far fword ptr [rcx+0xff0000];
0xffffffff822bf15e: add eax, 0xe9806a7c; sub ch, ch; fsubr st, dword ptr [rsi-0x25275972]; mov eax, 0x1e83e7c6; pop rsp; iretd;
0xffffffff816f76a7: add eax, 0xf400000; xchg esp, eax; ret 0x8948;
0xffffffff8118627c: add eax, 0xf6400b77; mov byte ptr [rcx], 0xf; xchg esp, eax; add eax, 0x2490252; mov eax, 1; ret;
0xffffffff81354cce: add eax, 0xfd28548; xchg esp, eax; ret 0xca30;
0xffffffff818edf5a: add eax, 0xfffffffb; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8158a4a9: add eax, 0xffffffff; add rsp, 0x10; pop rbx; ret;
0xffffffff8112a563: add eax, 0xffffffff; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff8126394b: add eax, 1; shl rax, 0xd; or rax, 1; mov [rip+0x23b61b3], rax; add rsp, 4; ret;
0xffffffff81736e40: add eax, [rax]; add [rax+0xf080978], al; xchg esp, eax; ret 0xc280;
0xffffffff8280820a: add eax, [rax]; add [rax], al; add [rax], al; leave; jmp far fword ptr [rdx+0x53];
0xffffffff82810a4e: add eax, [rax]; add [rax], al; add [rax], al; pop rsp; and ah, [rbx]; jmp rdx;
0xffffffff8280432e: add eax, [rax]; add [rax], al; add [rax], al; pop rsp; int1; jmp far fword ptr [r15+0x3f3];
0xffffffff82801e9e: add eax, [rax]; add [rax], al; add [rax], al; pop rsp; sub al, 0x35; call far fword ptr [rdi+0x3d7];
0xffffffff827fed06: add eax, [rax]; add [rax], al; add [rax], al; xchg esp, eax; and bl, [rdx]; jmp qword ptr [rax];
0xffffffff827ff1e6: add eax, [rax]; add [rax], al; add [rax], al; xchg esp, eax; rcr dword ptr [rcx], cl; call rdi;
0xffffffff819c2c83: add eax, [rax]; add [rbp-0x7b], al; in al, 0xf; xchg esp, eax; ret 0xc748;
0xffffffff81645479: add eax, [rax]; add [rcx], dh; imul al; popfq; xchg esp, eax; ret 0x48ff;
0xffffffff816454af: add eax, [rax]; add [rcx], dh; imul al; xchg esp, eax; ret 0x48ff;
0xffffffff81b7198c: add eax, [rax]; add [rdi], cl; xchg esp, eax; ror dword ptr [rdi], 0x95; ret 0x48d;
0xffffffff81565344: add eax, [rax]; add bl, ch; mov ah, 0x31; leave; mov rax, rcx; ret;
0xffffffff81af82b7: add eax, [rbx-0x2776f735]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8359e775: add eax, [rbx]; leave; in al, 0xa8; std; ret;
0xffffffff822a9038: add eax, [rbx]; push rdi; insd [rdi], dx; pop rsp; ret;
0xffffffff818dd759: add eax, [rcx+0xf]; xchg esp, eax; ret 0xdd01;
0xffffffff8123e11a: add eax, [rcx+rcx*4+7]; mov [rdi+0xc], esi; mov [rdi+8], eax; add rsp, 0x10; ret;
0xffffffff810261d0: add eax, [rcx]; add [rax], al; add rsp, 0x10; pop rbx; ret;
0xffffffff8183d56e: add eax, [rcx]; fadd st, dword ptr [rbx+0x415b04c0]; pop rsp; pop r14; pop r15; ret;
0xffffffff822fb256: add eax, [rcx]; insd [rdi], dx; sar dword ptr [rcx-0x36f426c0], 0xfd; pop rsp; ret 0xae5b;
0xffffffff819cd408: add eax, [rsp+8]; adc eax, 0; not eax; mov [rsi+0x88], eax; add rsp, 0x18; ret;
0xffffffff81b2552c: add eax, [rsp+8]; adc eax, [rsp+4]; adc eax, [rsp]; adc eax, 0; add rsp, 0xc; ret;
0xffffffff81c73057: add eax, [rsp]; adc eax, 0; add rsp, 0xc; ret;
0xffffffff81992dc4: add eax, [rsp]; adc eax, 0; add rsp, 4; ret;
0xffffffff819cf739: add eax, [rsp]; adc eax, 0; mov [rdi+0x88], eax; mov eax, eax; add rsp, 4; ret;
0xffffffff81561394: add eax, eax; add rsp, 4; ret;
0xffffffff8126848c: add eax, ebp; inc byte ptr [rdi]; add [rax], al; add rsp, 8; ret;
0xffffffff8199ee0a: add eax, ebx; add rsp, 0x38; pop rbx; ret;
0xffffffff8342e94c: add eax, ebx; std; add rsp, 8; pop rbx; ret;
0xffffffff81c732b6: add eax, ecx; adc eax, 0xffff; not eax; shr eax, 0x10; add rsp, 4; ret;
0xffffffff81811e2f: add eax, ecx; add al, [rdx+8]; add rsp, 4; ret;
0xffffffff81142d95: add eax, ecx; add rsp, 0x48; ret;
0xffffffff816c05ad: add eax, ecx; add rsp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff81b2ff45: add eax, ecx; bswap eax; add rsp, 0x18; ret;
0xffffffff82538340: add eax, edx; pop rsp; xor eax, 0xf54ff6f8; ret;
0xffffffff8248adc5: add eax, esi; pop rsp; mov cl, 0x39; sub eax, 0x89ea2950; cdqe; ret;
0xffffffff81561393: add eax, r8d; add rsp, 4; ret;
0xffffffff8239d512: add ebp, [rbp+0x30]; pop rsp; ret 0x8f8;
0xffffffff83431cfd: add ebp, [rdi+rcx]; xchg esp, eax; ret 0x8d48;
0xffffffff823c178d: add ebp, [rip-0x6c493091]; cmp bl, [rdi+0x7edb1203]; pop rsp; ret;
0xffffffff823f311e: add ebp, [rsi]; leave; sub [rbx-0x38ccbd6a], dl; iretd;
0xffffffff82226f08: add ebp, ebp; xchg edx, eax; enter 0xf50c, 0x59; leave; ret 0x6a20;
0xffffffff835a8ebd: add ebx, 0xfffffffd; and eax, 0xedfdc384; xchg esp, eax; ret;
0xffffffff835a8ebc: add ebx, 0xfffffffd; and eax, 0xedfdc384; xchg esp, eax; ret;
0xffffffff82543608: add ebx, [rdi+rsi*4]; adc [rsi-0x9a7b773], bl; out 0x31, al; mov esp, edi; iretd;
0xffffffff8236c1c5: add ebx, [rsi]; cld; push rbx; leave; iretq;
0xffffffff816b71ab: add ebx, eax; mov al, [rsp]; xor eax, eax; add rsp, 1; ret;
0xffffffff8247ace3: add ebx, ebp; cmp eax, 0xda5b80d5; xchg esp, eax; mov bl, 0x1b; ret;
0xffffffff8128b159: add ebx, ebp; leave; pop rbx; pop rbp; ret;
0xffffffff8347078b: add ebx, esp; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8103339e: add ecx, [rax*8-0x7d819990]; mov [rsp+2], rcx; mov word ptr [rsp], 0x7f; lgdt [rsp]; add rsp, 0x10; ret;
0xffffffff81579902: add ecx, [rax+0xf]; leave; mov rax, 0xffffffffffffff; and rax, rcx; ret;
0xffffffff81731c8c: add ecx, [rax+3]; sub [rdi], cl; xchg esp, eax; ret;
0xffffffff82006a6d: add ecx, [rax-1]; mov al, [0xadffc71aa3ff0524]; add ecx, [rax-1]; xchg esp, eax; and al, 5; call far fword ptr [rdx+rbx+0x4dbffc7];
0xffffffff82006a79: add ecx, [rax-1]; xchg esp, eax; and al, 5; call far fword ptr [rdx+rbx+0x4dbffc7];
0xffffffff81102106: add ecx, [rcx+rcx*4-0x10]; add rsp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff81058ea1: add ecx, [rdi]; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; pop r15; pop rbp; ret;
0xffffffff817078f7: add ecx, [rdi]; xchg esp, eax; ret 0x4b9;
0xffffffff81af80d3: add ecx, [rdi]; xchg esp, eax; ret 0x73c;
0xffffffff8158eb81: add ecx, [rdi]; xchg esp, eax; ret 0x8040;
0xffffffff816841f1: add ecx, [rdi]; xchg esp, eax; ret 0xb70f;
0xffffffff81b959dd: add ecx, [rdi]; xchg esp, eax; ret 0xd008;
0xffffffff81630cd2: add ecx, [rdi]; xchg esp, eax; ret 0xf41;
0xffffffff8158fd12: add ecx, [rdi]; xchg esp, eax; ret 0xff04;
0xffffffff816ebbe6: add ecx, [rdi]; xchg esp, eax; ret;
0xffffffff81b1217e: add ecx, [rdi]; xchg esp, eax; rol dword ptr [rax+0x208247c], 0xf; xchg edx, eax; ret 0xca20;
0xffffffff8182d9ad: add ecx, [rdi]; xchg esp, eax; sar byte ptr [rdx+4], 0x29; ret 0x8d48;
0xffffffff8174ac25: add ecx, [rdi]; xchg esp, eax; shl byte ptr [rax], 0xc8; ret;
0xffffffff823ee44e: add ecx, [rdx-0x64b7267e]; leave; push rbp; or eax, 0x49cb2422; pop rcx; iretd;
0xffffffff8359ced4: add ecx, ecx; out dx, eax; inc dword ptr [rdi-0x6b001037]; leave; out dx, eax; jmp qword ptr [rcx-0x51001037];
0xffffffff82509d8c: add edi, [rbx]; leave; xor dh, dl; and al, dh; sub eax, 0x26909dfe; ret;
0xffffffff83477189: add edi, [rcx-0x2d]; std; add rsp, 8; pop rbx; ret;
0xffffffff8252f243: add edi, [rdi-0x598693d7]; xchg esp, eax; lodsb [rsi]; ret 0x1b5d;
0xffffffff8244a1e4: add edi, [rdi]; leave; sti; pushfq; ret;
0xffffffff82002c82: add edi, edi; pop rsp; add eax, 0x3f96cff; jmp far fword ptr [rdx-7];
0xffffffff82001fee: add edi, edi; pop rsp; mov edi, 0x704cff01; add eax, 0x1bf58ff; call far fword ptr [rax-0x41];
0xffffffff82002c2a: add edi, edi; pop rsp; out dx, al; add edi, edi; add eax, 0x3ee96ff; call qword ptr [rsi+rbp*8+0x64a4ff03];
0xffffffff820020e2: add edi, edi; pop rsp; outsd dx, [rsi]; add eax, 0x1bf28ff; jmp far fword ptr [rbx];
0xffffffff81867119: add edx, [rax+rax*2]; add [rcx-0x7a3fce3f], cl; leave; sete al; ret;
0xffffffff826787fb: add edx, [rbp-0x4118399a]; andps xmm4, [rcx+0x75]; leave; jmp qword ptr [rbx+3];
0xffffffff8228e532: add edx, [rbx]; mov esp, [rsi-0x47]; ret;
0xffffffff822a9039: add edx, [rdi+0x6d]; pop rsp; ret;
0xffffffff8265a6dd: add edx, [rdi+rdi*8-0x6bfcc1]; fild st, word ptr [rdx]; xchg esp, eax; jmp far fword ptr [rdi-0x20006bfe];
0xffffffff823490a6: add edx, [rip-0x2f04838a]; leave; ret;
0xffffffff819cd5a5: add edx, [rsp+4]; adc edx, 0; not edx; mov [rsi+0x88], edx; add rsp, 0xc; ret;
0xffffffff823db88b: add edx, [rsp+rdx+0x5c925bfb]; xor eax, 0x66f805a0; sbb [rax+0x1d437ee2], eax; leave; sbb eax, ebx; ret 0x7064;
0xffffffff822fd003: add edx, edi; mov edi, 0xe7d919b; xchg esp, eax; and dword ptr [rdi-0x67], 0xfcc5a337; pop rsp; iretd;
0xffffffff81980ac9: add edx, edx; leave; inc dword ptr [rbp+0x5b0574c0]; pop r14; pop rbp; ret;
0xffffffff8344e739: add edx, esi; std; add rsp, 8; pop rbx; ret;
0xffffffff8344e765: add edx, esi; std; add rsp, 8; ret;
0xffffffff8346e6a1: add edx, esp; std; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff8346e72f: add edx, esp; std; add rsp, 8; pop rbx; ret;
0xffffffff823f569d: add esi, [rbp-0x55]; out 0xa8, eax; mov ch, 0x1a; leave; ret;
0xffffffff83431cf8: add esi, [rcx]; rol byte ptr [rax+0xf2c033c], cl; xchg esp, eax; ret 0x8d48;
0xffffffff814bada2: add esi, [rcx]; rol byte ptr [rbp-0x7b], cl; dec dword ptr [rdi]; xchg esp, eax; ret 0x548d;
0xffffffff81039b60: add esi, ecx; mov [rdi+0xa], sil; add rsp, 4; pop rbx; ret;
0xffffffff8267d8c6: add esi, edi; xchg esp, eax; rol dword ptr [rdx], 0xf7; sub al, 8; call far fword ptr [rdi-0x66];
0xffffffff8225828e: add esi, esi; push rbp; scasd [rdi]; xchg esp, eax; ret 0xedae;
0xffffffff8100cad6: add esi, esi; rcl dword ptr [rax], 0xf; xchg esp, eax; ret 0xd038;
0xffffffff812bf98c: add esp, 0x108; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff812c1ee9: add esp, 0x10; cdqe; pop rbx; pop r14; ret;
0xffffffff81036134: add esp, 0x10; cdqe; ret;
0xffffffff834278cd: add esp, 0x10; mov byte ptr [rip+0xc4769], 1; ret;
0xffffffff817f2d31: add esp, 0x10; mov eax, 0xffffffe4; pop rbx; ret;
0xffffffff817c012f: add esp, 0x10; mov eax, ebp; pop rbx; pop r14; pop rbp; ret;
0xffffffff817c0bad: add esp, 0x10; mov eax, ebx; pop rbx; pop r14; pop rbp; ret;
0xffffffff8166c698: add esp, 0x10; pop rbp; ret;
0xffffffff81019a90: add esp, 0x10; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff8101c0ac: add esp, 0x10; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81032cfd: add esp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff81033666: add esp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff8101b0c8: add esp, 0x10; pop rbx; pop r14; ret;
0xffffffff8101af84: add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81006901: add esp, 0x10; pop rbx; ret;
0xffffffff8101a169: add esp, 0x10; ret;
0xffffffff815fdea3: add esp, 0x10; xor eax, eax; ret;
0xffffffff8159bf91: add esp, 0x110; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff8133de4c: add esp, 0x110; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81a7ad35: add esp, 0x110; pop rbx; pop r14; ret;
0xffffffff8150de2e: add esp, 0x118; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff812be5c5: add esp, 0x120; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8347aebb: add esp, 0x128; pop rbx; pop rbp; ret;
0xffffffff81515292: add esp, 0x138; ret;
0xffffffff834f05e3: add esp, 0x14; pop si; pop di; pop bx; pop bp; data16 ret;
0xffffffff810cfa39: add esp, 0x150; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff814dd91a: add esp, 0x150; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8133dc9c: add esp, 0x158; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81158b2f: add esp, 0x158; pop rbx; pop r14; ret;
0xffffffff8112eb50: add esp, 0x158; pop rbx; pop rbp; ret;
0xffffffff8147c0cd: add esp, 0x168; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff81a224ce: add esp, 0x168; pop rbx; pop r14; pop r15; ret;
0xffffffff8163e0d5: add esp, 0x180; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff816f730e: add esp, 0x18; cdqe; pop rbx; pop rbp; ret;
0xffffffff81e01942: add esp, 0x18; jmp rdi;
0xffffffff8344b14a: add esp, 0x18; mov [rip+0x18342c], rax; pop rbx; ret;
0xffffffff834606fb: add esp, 0x18; mov [rip-0x4cb8b5], rax; mov eax, 0x20; sub eax, [rip-0x4cb8b8]; mov [rip-0x4cb8be], eax; ret;
0xffffffff834607e5: add esp, 0x18; mov [rip-0x4cb99f], rax; sub ebx, [rip-0x4cb99d]; mov [rip-0x4cb9a3], ebx; pop rbx; ret;
0xffffffff83460894: add esp, 0x18; mov [rip-0x4cba36], rax; ret;
0xffffffff81474ca6: add esp, 0x18; mov rax, 0xffffffff83665180; ret;
0xffffffff8166c7da: add esp, 0x18; pop rbp; ret;
0xffffffff810273cd: add esp, 0x18; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff810008d2: add esp, 0x18; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81005252: add esp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8103825b: add esp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff81030ae6: add esp, 0x18; pop rbx; pop r14; ret;
0xffffffff8103e8a8: add esp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8102a287: add esp, 0x18; pop rbx; ret;
0xffffffff8104c5a5: add esp, 0x18; popfq; ret;
0xffffffff8101f937: add esp, 0x18; ret;
0xffffffff81a4757b: add esp, 0x18; xor eax, eax; ret;
0xffffffff810cf910: add esp, 0x190; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff827e5653: add esp, 0x1c; pop rsi; pop rdi; pop rbx; pop rbp; ret;
0xffffffff81665db0: add esp, 0x1d8; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81bf60ac: add esp, 0x20; cdqe; pop rbx; ret;
0xffffffff810bb5b1: add esp, 0x20; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff8102956c: add esp, 0x20; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff810c99b9: add esp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff8117cac2: add esp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff81051891: add esp, 0x20; pop rbx; pop r14; ret;
0xffffffff8103a9c6: add esp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8102a3ae: add esp, 0x20; pop rbx; ret;
0xffffffff8103a710: add esp, 0x20; ret;
0xffffffff819b94aa: add esp, 0x210; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff827e5719: add esp, 0x24; pop rsi; pop rdi; pop rbx; pop rbp; ret;
0xffffffff811b9205: add esp, 0x28; pop rbp; ret;
0xffffffff810e123c: add esp, 0x28; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff81478301: add esp, 0x28; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8105e378: add esp, 0x28; pop rbx; pop r14; pop r15; ret;
0xffffffff811f6994: add esp, 0x28; pop rbx; pop r14; pop rbp; ret;
0xffffffff811f0976: add esp, 0x28; pop rbx; pop r14; ret;
0xffffffff81260ad0: add esp, 0x28; pop rbx; pop rbp; ret;
0xffffffff81022040: add esp, 0x28; pop rbx; ret;
0xffffffff81027f95: add esp, 0x28; ret;
0xffffffff81a459a9: add esp, 0x28; xor eax, eax; pop rbx; ret;
0xffffffff81a144d4: add esp, 0x2b0; pop rbx; pop r14; pop rbp; ret;
0xffffffff814ae8a9: add esp, 0x2b8; pop rbx; pop rbp; ret;
0xffffffff834f0977: add esp, 0x2c; pop si; data16 ret;
0xffffffff8178b4d5: add esp, 0x2d8; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8166c630: add esp, 0x30; pop rbp; ret;
0xffffffff8112e0ab: add esp, 0x30; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff8103ce02: add esp, 0x30; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff810b5a5b: add esp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff81047aab: add esp, 0x30; pop rbx; pop r14; pop rbp; ret;
0xffffffff81029dc3: add esp, 0x30; pop rbx; pop r14; ret;
0xffffffff810478e5: add esp, 0x30; pop rbx; pop rbp; ret;
0xffffffff81129c16: add esp, 0x30; pop rbx; ret;
0xffffffff81e0137c: add esp, 0x30; pop rdx; iretq;
0xffffffff8104f376: add esp, 0x30; ret;
0xffffffff81e01430: add esp, 0x30; std; mov qword ptr [rsp+0x28], 0; iretq;
0xffffffff81753c83: add esp, 0x348; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81753b6a: add esp, 0x348; pop rbx; pop r14; pop rbp; ret;
0xffffffff827e5aae: add esp, 0x34; pop rsi; pop rdi; pop rbx; pop rbp; ret;
0xffffffff8166cf28: add esp, 0x38; pop rbp; ret;
0xffffffff8100060e: add esp, 0x38; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff810009b2: add esp, 0x38; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff810007fa: add esp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff81002e4b: add esp, 0x38; pop rbx; pop r14; pop rbp; ret;
0xffffffff810cc100: add esp, 0x38; pop rbx; pop r14; ret;
0xffffffff810c8259: add esp, 0x38; pop rbx; pop rbp; ret;
0xffffffff810c6fac: add esp, 0x38; pop rbx; ret;
0xffffffff810c6ef1: add esp, 0x38; ret;
0xffffffff819e2343: add esp, 0x38; xor eax, eax; ret;
0xffffffff824d98c7: add esp, 0x3d2b68de; iret;
0xffffffff8166cca2: add esp, 0x40; pop rbp; ret;
0xffffffff810ecd34: add esp, 0x40; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff811be767: add esp, 0x40; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff810e8319: add esp, 0x40; pop rbx; pop r14; pop r15; ret;
0xffffffff81173f02: add esp, 0x40; pop rbx; pop r14; pop rbp; ret;
0xffffffff812601b4: add esp, 0x40; pop rbx; pop r14; ret;
0xffffffff813135c1: add esp, 0x40; pop rbx; pop rbp; ret;
0xffffffff81a76bd8: add esp, 0x40; pop rbx; ret;
0xffffffff810e83da: add esp, 0x40; ret;
0xffffffff811b8bd9: add esp, 0x48; pop rbp; ret;
0xffffffff812edab9: add esp, 0x48; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff810ee242: add esp, 0x48; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8103b2c4: add esp, 0x48; pop rbx; pop r14; pop r15; ret;
0xffffffff8102e2ab: add esp, 0x48; pop rbx; pop r14; pop rbp; ret;
0xffffffff810b6d23: add esp, 0x48; pop rbx; pop r14; ret;
0xffffffff810b36ba: add esp, 0x48; pop rbx; pop rbp; ret;
0xffffffff810cc597: add esp, 0x48; pop rbx; ret;
0xffffffff810af421: add esp, 0x48; ret;
0xffffffff810ca8f1: add esp, 0x50; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff810ca682: add esp, 0x50; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff810f0351: add esp, 0x50; pop rbx; pop r14; pop r15; ret;
0xffffffff81209c9e: add esp, 0x50; pop rbx; pop r14; pop rbp; ret;
0xffffffff8127ffbd: add esp, 0x50; pop rbx; pop r14; ret;
0xffffffff817a3956: add esp, 0x50; pop rbx; pop rbp; ret;
0xffffffff810d7bfb: add esp, 0x50; pop rbx; ret;
0xffffffff8115aaca: add esp, 0x50; ret;
0xffffffff8177469f: add esp, 0x58; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff81290b1b: add esp, 0x58; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81410713: add esp, 0x58; pop rbx; pop r14; pop r15; ret;
0xffffffff8104b9cb: add esp, 0x58; pop rbx; pop r14; pop rbp; ret;
0xffffffff810c1c54: add esp, 0x58; pop rbx; pop r14; ret;
0xffffffff81357b56: add esp, 0x58; pop rbx; pop rbp; ret;
0xffffffff810b55e8: add esp, 0x58; pop rbx; ret;
0xffffffff834f08eb: add esp, 0x58; pop si; pop di; data16 ret;
0xffffffff834f084a: add esp, 0x58; pop si; pop di; pop bx; data16 ret;
0xffffffff834f0b0e: add esp, 0x58; pop si; pop di; pop bx; pop bp; data16 ret;
0xffffffff8105a703: add esp, 0x58; ret;
0xffffffff834f0c96: add esp, 0x5c; pop si; pop di; pop bx; pop bp; data16 ret;
0xffffffff815533b7: add esp, 0x5e415bff; ret;
0xffffffff810d54bd: add esp, 0x60; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff812f2d34: add esp, 0x60; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff810d933b: add esp, 0x60; pop rbx; pop r14; pop r15; ret;
0xffffffff8105a2a0: add esp, 0x60; pop rbx; pop r14; pop rbp; ret;
0xffffffff81956f52: add esp, 0x60; pop rbx; pop r14; ret;
0xffffffff819b8941: add esp, 0x60; pop rbx; pop rbp; ret;
0xffffffff8153a990: add esp, 0x60; pop rbx; ret;
0xffffffff8152fa27: add esp, 0x60; ret;
0xffffffff822a7e18: add esp, 0x65; xor ebx, ecx; xchg edx, eax; div esp; iretd;
0xffffffff822a7e16: add esp, 0x65; xor ebx, ecx; xchg edx, eax; div esp; iretd;
0xffffffff8151b52a: add esp, 0x68; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff81385a1b: add esp, 0x68; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff813d69b7: add esp, 0x68; pop rbx; pop r14; pop r15; ret;
0xffffffff8100531d: add esp, 0x68; pop rbx; pop r14; pop rbp; ret;
0xffffffff81218bc4: add esp, 0x68; pop rbx; pop r14; ret;
0xffffffff81382d34: add esp, 0x68; pop rbx; pop rbp; ret;
0xffffffff8117361e: add esp, 0x68; pop rbx; ret;
0xffffffff812191a8: add esp, 0x68; ret;
0xffffffff815ede6f: add esp, 0x70; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff810522ea: add esp, 0x70; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff812b4df5: add esp, 0x70; pop rbx; pop r14; pop r15; ret;
0xffffffff811de565: add esp, 0x70; pop rbx; pop r14; pop rbp; ret;
0xffffffff815b5d0e: add esp, 0x70; pop rbx; pop r14; ret;
0xffffffff8142d93e: add esp, 0x70; pop rbx; pop rbp; ret;
0xffffffff814c388c: add esp, 0x70; pop rbx; ret;
0xffffffff81301294: add esp, 0x70; ret;
0xffffffff8151704d: add esp, 0x78; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff81acbbff: add esp, 0x78; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8151740b: add esp, 0x78; pop rbx; pop r14; pop r15; ret;
0xffffffff8144d56d: add esp, 0x78; pop rbx; pop r14; pop rbp; ret;
0xffffffff810d21e8: add esp, 0x78; pop rbx; pop r14; ret;
0xffffffff819055fd: add esp, 0x78; pop rbx; pop rbp; ret;
0xffffffff810d2b26: add esp, 0x78; pop rbx; ret;
0xffffffff81b2916e: add esp, 0x78; ret;
0xffffffff8100433b: add esp, 0x80; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff81137778: add esp, 0x80; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff816167f8: add esp, 0x80; pop rbx; pop r14; pop r15; ret;
0xffffffff813f5372: add esp, 0x80; pop rbx; pop r14; pop rbp; ret;
0xffffffff812f8118: add esp, 0x80; pop rbx; pop r14; ret;
0xffffffff816351bb: add esp, 0x80; pop rbx; pop rbp; ret;
0xffffffff815e9f90: add esp, 0x80; pop rbx; ret;
0xffffffff816112df: add esp, 0x80; ret;
0xffffffff8124f5b8: add esp, 0x88; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff813a992e: add esp, 0x88; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81023d9a: add esp, 0x88; pop rbx; pop r14; pop r15; ret;
0xffffffff815b6076: add esp, 0x88; pop rbx; pop r14; pop rbp; ret;
0xffffffff8112e660: add esp, 0x88; pop rbx; pop r14; ret;
0xffffffff810ca37b: add esp, 0x88; pop rbx; ret;
0xffffffff810ca174: add esp, 0x88; ret;
0xffffffff81471937: add esp, 0x90; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff8120a1c4: add esp, 0x90; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff810aefbb: add esp, 0x90; pop rbx; pop r14; pop r15; ret;
0xffffffff810af0d0: add esp, 0x90; pop rbx; pop r14; pop rbp; ret;
0xffffffff81baad3f: add esp, 0x90; pop rbx; pop r14; ret;
0xffffffff8151e0ff: add esp, 0x90; pop rbx; ret;
0xffffffff81053336: add esp, 0x98; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff814f4eec: add esp, 0x98; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff810d1002: add esp, 0x98; pop rbx; pop r14; pop r15; ret;
0xffffffff817ca486: add esp, 0x98; pop rbx; pop r14; ret;
0xffffffff81418019: add esp, 0x98; pop rbx; pop rbp; ret;
0xffffffff812f9947: add esp, 0x98; pop rbx; ret;
0xffffffff818ff828: add esp, 0x98; ret;
0xffffffff815f2a58: add esp, 0xa0; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff8106c354: add esp, 0xa0; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81307518: add esp, 0xa0; pop rbx; pop r14; pop r15; ret;
0xffffffff8114f93f: add esp, 0xa0; pop rbx; pop r14; pop rbp; ret;
0xffffffff81410d3a: add esp, 0xa0; pop rbx; pop r14; ret;
0xffffffff812f8da6: add esp, 0xa0; pop rbx; ret;
0xffffffff8166caf7: add esp, 0xa8; pop rbp; ret;
0xffffffff81a2f520: add esp, 0xa8; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81b2f230: add esp, 0xa8; pop rbx; pop r14; pop r15; ret;
0xffffffff81ae4dbf: add esp, 0xa8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8160b5bb: add esp, 0xa8; pop rbx; pop rbp; ret;
0xffffffff811f9cde: add esp, 0xa8; pop rbx; ret;
0xffffffff81e0190b: add esp, 0xa8; ret;
0xffffffff81a779e5: add esp, 0xb0; pop rbx; pop r14; pop r15; ret;
0xffffffff81421a6e: add esp, 0xb0; pop rbx; pop r14; pop rbp; ret;
0xffffffff81158593: add esp, 0xb0; pop rbx; pop r14; ret;
0xffffffff810cb850: add esp, 0xb8; pop rbx; pop r14; pop rbp; ret;
0xffffffff81ba1a66: add esp, 0xb8; pop rbx; pop r14; ret;
0xffffffff8187e416: add esp, 0xb8; ret;
0xffffffff81608729: add esp, 0xc0; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff812f9377: add esp, 0xc0; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8151c15b: add esp, 0xc0; pop rbx; pop r14; pop r15; ret;
0xffffffff81410b3f: add esp, 0xc0; pop rbx; pop r14; pop rbp; ret;
0xffffffff819b96e8: add esp, 0xc0; pop rbx; pop r14; ret;
0xffffffff814226b4: add esp, 0xc0; pop rbx; ret;
0xffffffff835a8f11: add esp, 0xc482b0fd; std; ret 0xc482;
0xffffffff8133d1e4: add esp, 0xc8; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff8133d59e: add esp, 0xc8; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8152140a: add esp, 0xc8; pop rbx; pop r14; pop r15; ret;
0xffffffff8142d3d1: add esp, 0xc8; pop rbx; pop r14; pop rbp; ret;
0xffffffff827e57df: add esp, 0xc; pop rsi; pop rdi; pop rbx; pop rbp; ret;
0xffffffff819cd553: add esp, 0xc; ret;
0xffffffff8133d433: add esp, 0xd0; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff81421746: add esp, 0xd0; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff819b5e82: add esp, 0xd0; pop rbx; pop r14; pop r15; ret;
0xffffffff8133ce8a: add esp, 0xd0; pop rbx; pop r14; pop rbp; ret;
0xffffffff8113e0ed: add esp, 0xd8; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8112e3e8: add esp, 0xd8; pop rbx; pop r14; pop rbp; ret;
0xffffffff81b160c1: add esp, 0xe0; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81b9ddab: add esp, 0xe8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8132214f: add esp, 0xf0; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff817c8dbf: add esp, 0xf0; pop rbx; pop r14; pop r15; ret;
0xffffffff81034d32: add esp, 0xf0; pop rbx; pop r14; ret;
0xffffffff8133e768: add esp, 0xf8; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff812f8836: add esp, 0xf8; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff823b004e: add esp, 0xffffffaf; pop rdx; ret;
0xffffffff822e9cbf: add esp, 0xffffffcd; adc [rcx], cl; mov ebp, 0x22ef45d4; push 0xffffffffef6c83aa; iretd;
0xffffffff822a945c: add esp, 0xffffffd1; ret;
0xffffffff8250cfb1: add esp, 0xffffffdf; stosd [rdi]; push rsp; xchg ecx, eax; shr dword ptr [rdx-0x22], 0x6f; ret 0xb2a0;
0xffffffff815531cf: add esp, 0xffffffff; pop rbx; pop r14; ret;
0xffffffff816b71a9: add esp, 1; ret;
0xffffffff81b68319: add esp, 2; ret;
0xffffffff81031ad9: add esp, 4; pop rbx; ret;
0xffffffff827e55a5: add esp, 4; pop rsi; pop rbx; pop rbp; ret;
0xffffffff834f0dbd: add esp, 4; pop si; pop di; pop bx; pop bp; data16 ret;
0xffffffff81041db1: add esp, 4; ret;
0xffffffff83450384: add esp, 8; mov [rip-0xc68dfe], rax; ret;
0xffffffff83463224: add esp, 8; mov [rip-0xc7b89e], rax; ret;
0xffffffff81649bd0: add esp, 8; mov eax, ebp; pop rbx; pop r14; pop rbp; ret;
0xffffffff811f8b44: add esp, 8; mov rcx, rax; test rax, rax; mov rax, 0xffffffff83618a60; cmovne rax, rcx; ret;
0xffffffff834f06bf: add esp, 8; pop di; data16 ret;
0xffffffff8166c70a: add esp, 8; pop rbp; ret;
0xffffffff8100dc9a: add esp, 8; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff81032170: add esp, 8; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8101ecab: add esp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff81022b0d: add esp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8101ed24: add esp, 8; pop rbx; pop r14; ret;
0xffffffff81003ba2: add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8102eb0b: add esp, 8; pop rbx; ret;
0xffffffff810bff94: add esp, 8; ret;
0xffffffff817f78ef: add esp, 8; xor eax, eax; pop rbx; pop r14; pop r15; ret;
0xffffffff81368490: add esp, 8; xor eax, eax; ret;
0xffffffff8236c04c: add esp, [rsi]; cmpsb [rsi], [rdi]; xchg esp, eax; xchg ebx, eax; ret;
0xffffffff823465ad: add esp, eax; adc al, 0x15; ret;
0xffffffff8236de32: add esp, eax; add al, 0x61; call far fword ptr [rax+rcx*2+0x16101936];
0xffffffff82649dc1: add esp, eax; call far fword ptr [rdi-0x20001ffd];
0xffffffff8114467c: add esp, eax; cmp [rcx+rax*4], edx; mov qword ptr [r14+0x1cd68], 0; pop rbx; pop r14; ret;
0xffffffff8264fd1d: add esp, eax; jmp far fword ptr [rdi];
0xffffffff812b6f71: add esp, eax; jmp qword ptr [rsi+0x66];
0xffffffff810ac1d7: add esp, eax; ret 0x41;
0xffffffff810abe4f: add esp, eax; ret 0x49;
0xffffffff810abb46: add esp, eax; ret 0x51;
0xffffffff810ab8ab: add esp, eax; ret 0x59;
0xffffffff8107cc46: add esp, eax; ret 0x61;
0xffffffff810ab4af: add esp, eax; ret 0x69;
0xffffffff810ab35e: add esp, eax; ret 0x71;
0xffffffff8239bda2: add esp, eax; ret 0xb0c;
0xffffffff8108dc9a: add esp, eax; ret;
0xffffffff8108d812: add esp, eax; shr dword ptr [rcx], 0x73; cli; or ah, al; cmp r15d, ebp; ret 0x43c4;
0xffffffff8231ba07: add esp, eax; xchg esp, eax; or edi, ebx; or ebx, [rcx]; sub eax, 0x6f73c65d; ret;
0xffffffff82646e11: add esp, ebp; call far fword ptr [rdi];
0xffffffff82692f08: add esp, ebp; iretd;
0xffffffff82646e15: add esp, ebp; jmp far fword ptr [rdi];
0xffffffff8178e0ff: add esp, ebp; movzx eax, al; ret;
0xffffffff8200679c: add esp, ebp; push qword ptr [r8+0x27]; add eax, 0xc71c2fff; push qword ptr [rcx]; in eax, 0x45; jmp qword ptr [rdi+5];
0xffffffff8264ab91: add esp, ebx; call far fword ptr [rdi+0x1fffdc01];
0xffffffff8264ab95: add esp, ebx; call far fword ptr [rdi];
0xffffffff82555c1a: add esp, ebx; cld; std; mov [0x9ddb0ed67a11975a], al; mov esi, 0x72dbd4f2; iretd;
0xffffffff822c10db: add esp, ebx; idiv ah; sub eax, [rax-0x1305d61b]; test al, 0x59; call far fword ptr [rdi-0x68];
0xffffffff82546875: add esp, ebx; insb [rdi], dx; cld; fild st, word ptr [rdi-0x367d67cb]; std; iretd;
0xffffffff823161eb: add esp, ebx; iretd;
0xffffffff8153d924: add esp, ebx; jmp qword ptr [rbp+0x48];
0xffffffff82558e16: add esp, ebx; pop rcx; iretd;
0xffffffff824998e3: add esp, ebx; push rbx; adc edi, [rbx]; sub [rdi-0x2d], ebx; ret;
0xffffffff8250f85a: add esp, ebx; ret 0x9e3a;
0xffffffff82395ec4: add esp, ebx; scasd [rdi]; cmp esp, ebx; ret 0x10e0;
0xffffffff8200dba2: add esp, ecx; mov ah, 4; jmp far fword ptr [rdi+0x65];
0xffffffff822fa81c: add esp, ecx; movsxd edx, [rax+0x37]; ret 0x1da0;
0xffffffff822374fc: add esp, ecx; shl byte ptr [rdx], 2; leave; fwait; ret 0x1ed1;
0xffffffff81040f0f: add esp, edi; add [rcx-0x1c3eb740], cl; and [rax+9], cl; ret;
0xffffffff8241dd4b: add esp, edi; and eax, 0x5e1f3212; jmp far fword ptr [rsi+rbx*4-0x77d0dbf2];
0xffffffff825256b7: add esp, edi; and eax, 0xcd32345; mov al, bh; ret 0x5d82;
0xffffffff82643df8: add esp, edi; cmc; dec ebp; cmc; cmc; call far fword ptr [rbp-0x1a000a0d];
0xffffffff81504f00: add esp, edi; dec dword ptr [rcx+0x5c415be8]; pop r14; pop r15; pop rbp; ret;
0xffffffff826425dd: add esp, edi; dec dword ptr [rdi-2]; sti; jmp far fword ptr [rdi];
0xffffffff826425d9: add esp, edi; jmp far fword ptr [rdi+0x4ffffc01];
0xffffffff812f4f76: add esp, edi; jmp qword ptr [rbp+0x48];
0xffffffff824a1142: add esp, edi; mov edi, 0x23fda47c; ret;
0xffffffff823e83dc: add esp, edi; movsb [rdi], [rsi]; iretd;
0xffffffff8342ee8b: add esp, edi; xlat [rbx]; std; add rsp, 8; pop rbx; ret;
0xffffffff829ba5b4: add esp, edx; add [rax], al; add [rax], al; add [rbx], bh; ret;
0xffffffff829ba5d8: add esp, edx; add [rax], al; add [rcx], al; add [rax], al; ret;
0xffffffff8225637e: add esp, edx; cmpsd [rsi], [rdi]; ret;
0xffffffff8285e2e7: add esp, edx; iretd;
0xffffffff826495ad: add esp, edx; jmp far fword ptr [rdi];
0xffffffff8235cfa2: add esp, edx; movsd [rdi], [rsi]; sbb ebp, [rcx]; ret 0xb141;
0xffffffff822463e8: add esp, edx; pop rbp; pop rsi; ret 0x808c;
0xffffffff82382446: add esp, edx; ret;
0xffffffff8346e8b8: add esp, edx; std; add rsp, 8; pop rbx; ret;
0xffffffff82315bf7: add esp, esi; int 0x55; ret 0x3dcf;
0xffffffff811771d4: add esp, esi; jmp qword ptr [rsi+0xf];
0xffffffff8200dc7b: add esp, esi; mov bl, 4; jmp far fword ptr [rax];
0xffffffff823a9c2d: add esp, esi; sahf; outsd dx, [rsi]; iretd;
0xffffffff8145d2f7: add esp, esp; and al, [rdx]; adc [rbp+1], dh; ret;
0xffffffff82649095: add esp, esp; dec edi; add ah, ah; call far fword ptr [rdi];
0xffffffff823a7e2d: add esp, esp; fucomp st, st(7); mov dh, 0x5f; jmp qword ptr [rbx+0xe];
0xffffffff826490a1: add esp, esp; jmp far fword ptr [rdi];
0xffffffff824e4311: add esp, esp; mov al, [0x8d0c39f675c9b1f0]; add dword ptr [rcx-0x662f3459], 0x94ec6ca2; or [rbx-0x47b6d60a], esi; mov bl, 0x90; iretd;
0xffffffff82325799: add esp, esp; scasd [rdi]; ret 0xae7;
0xffffffff823b8c73: add esp, esp; xor eax, 0x17344819; fdivr st, dword ptr [rsi]; iretd;
0xffffffff8250f859: add esp, r11d; ret 0x9e3a;
0xffffffff81844658: add gs:[rbx+0x41], bl; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff823490a5: add r10d, [rip-0x2f04838a]; leave; ret;
0xffffffff8225828d: add r14d, r14d; push rbp; scasd [rdi]; xchg esp, eax; ret 0xedae;
0xffffffff827fa685: add r8b, [rax]; add [rax], al; add [rax], al; xchg esp, eax; mov dl, 0x47; call far fword ptr [rdx+rbx*4+4];
0xffffffff811a8293: add r9b, [r11+0x4705290d]; add cl, [rcx+0xfca09c2]; xchg esp, eax; ret 0xfb83;
0xffffffff815792ad: add r9b, [r8+0xf]; leave; mov rax, 0xffffffffffffff; and rax, rcx; ret;
0xffffffff811a8299: add r9b, [r9+0xfca09c2]; xchg esp, eax; ret 0xfb83;
0xffffffff81144a00: add r9b, [rdi]; xchg esp, eax; shl dword ptr [rax], 0xc1; movzx eax, cl; ret;
0xffffffff811e46a6: add rax, 0x20; shr rax, 3; add rsp, 4; ret;
0xffffffff81c63908: add rax, 0x28; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff811e5076: add rax, 0x30; shr rax, 3; add rsp, 4; ret;
0xffffffff8112a562: add rax, 0xffffffffffffffff; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff822fb255: add rax, [r9]; insd [rdi], dx; sar dword ptr [rcx-0x36f426c0], 0xfd; pop rsp; ret 0xae5b;
0xffffffff816c05ac: add rax, r9; add rsp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff8103339d: add rcx, [rax*8-0x7d819990]; mov [rsp+2], rcx; mov word ptr [rsp], 0x7f; lgdt [rsp]; add rsp, 0x10; ret;
0xffffffff812bf98b: add rsp, 0x108; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff812c1ee8: add rsp, 0x10; cdqe; pop rbx; pop r14; ret;
0xffffffff81036133: add rsp, 0x10; cdqe; ret;
0xffffffff834278cc: add rsp, 0x10; mov byte ptr [rip+0xc4769], 1; ret;
0xffffffff817f2d30: add rsp, 0x10; mov eax, 0xffffffe4; pop rbx; ret;
0xffffffff817c012e: add rsp, 0x10; mov eax, ebp; pop rbx; pop r14; pop rbp; ret;
0xffffffff817c0bac: add rsp, 0x10; mov eax, ebx; pop rbx; pop r14; pop rbp; ret;
0xffffffff8166c697: add rsp, 0x10; pop rbp; ret;
0xffffffff81019a8f: add rsp, 0x10; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff818cb3c3: add rsp, 0x10; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8101c0ab: add rsp, 0x10; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81032cfc: add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff81033665: add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff8101b0c7: add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8158a3dc: add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8101af83: add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8118ecc3: add rsp, 0x10; pop rbx; ret;
0xffffffff8347f73a: add rsp, 0x10; pop rbx; ret;
0xffffffff81006900: add rsp, 0x10; pop rbx; ret;
0xffffffff81702a90: add rsp, 0x10; pop rbx; ret;
0xffffffff8347fdc7: add rsp, 0x10; pop rbx; ret;
0xffffffff83434fe3: add rsp, 0x10; ret;
0xffffffff8171de63: add rsp, 0x10; ret;
0xffffffff8101a168: add rsp, 0x10; ret;
0xffffffff815fdea2: add rsp, 0x10; xor eax, eax; ret;
0xffffffff8159bf90: add rsp, 0x110; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff8133de4b: add rsp, 0x110; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81a7ad34: add rsp, 0x110; pop rbx; pop r14; ret;
0xffffffff8150de2d: add rsp, 0x118; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff812be5c4: add rsp, 0x120; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8347aeba: add rsp, 0x128; pop rbx; pop rbp; ret;
0xffffffff81515291: add rsp, 0x138; ret;
0xffffffff810cfa38: add rsp, 0x150; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff814dd919: add rsp, 0x150; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8133dc9b: add rsp, 0x158; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81158b2e: add rsp, 0x158; pop rbx; pop r14; ret;
0xffffffff8112eb4f: add rsp, 0x158; pop rbx; pop rbp; ret;
0xffffffff8147c0cc: add rsp, 0x168; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff81a224cd: add rsp, 0x168; pop rbx; pop r14; pop r15; ret;
0xffffffff8163e0d4: add rsp, 0x180; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff816f730d: add rsp, 0x18; cdqe; pop rbx; pop rbp; ret;
0xffffffff81e01941: add rsp, 0x18; jmp rdi;
0xffffffff8344b149: add rsp, 0x18; mov [rip+0x18342c], rax; pop rbx; ret;
0xffffffff834606fa: add rsp, 0x18; mov [rip-0x4cb8b5], rax; mov eax, 0x20; sub eax, [rip-0x4cb8b8]; mov [rip-0x4cb8be], eax; ret;
0xffffffff834607e4: add rsp, 0x18; mov [rip-0x4cb99f], rax; sub ebx, [rip-0x4cb99d]; mov [rip-0x4cb9a3], ebx; pop rbx; ret;
0xffffffff83460893: add rsp, 0x18; mov [rip-0x4cba36], rax; ret;
0xffffffff81474ca5: add rsp, 0x18; mov rax, 0xffffffff83665180; ret;
0xffffffff8166c7d9: add rsp, 0x18; pop rbp; ret;
0xffffffff81480a89: add rsp, 0x18; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff810273cc: add rsp, 0x18; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff810008d1: add rsp, 0x18; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81005251: add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8103825a: add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff81030ae5: add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff81ba4a4e: add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff8103e8a7: add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8102a286: add rsp, 0x18; pop rbx; ret;
0xffffffff8104c5a4: add rsp, 0x18; popfq; ret;
0xffffffff8112ce34: add rsp, 0x18; ret;
0xffffffff81ba88dd: add rsp, 0x18; ret;
0xffffffff8101f936: add rsp, 0x18; ret;
0xffffffff81a4757a: add rsp, 0x18; xor eax, eax; ret;
0xffffffff810cf90f: add rsp, 0x190; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff81665daf: add rsp, 0x1d8; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81bf60ab: add rsp, 0x20; cdqe; pop rbx; ret;
0xffffffff812fc8a6: add rsp, 0x20; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff810bb5b0: add rsp, 0x20; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff8102956b: add rsp, 0x20; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff810c99b8: add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff81447eb4: add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff81a0e5f5: add rsp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff8117cac1: add rsp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff8105188f: add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff8103a9c5: add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8102a3ad: add rsp, 0x20; pop rbx; ret;
0xffffffff8103a70f: add rsp, 0x20; ret;
0xffffffff819b94a9: add rsp, 0x210; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff811b9204: add rsp, 0x28; pop rbp; ret;
0xffffffff810e123b: add rsp, 0x28; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff81478300: add rsp, 0x28; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8105e377: add rsp, 0x28; pop rbx; pop r14; pop r15; ret;
0xffffffff811f6993: add rsp, 0x28; pop rbx; pop r14; pop rbp; ret;
0xffffffff811f0975: add rsp, 0x28; pop rbx; pop r14; ret;
0xffffffff81260acf: add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff8102203f: add rsp, 0x28; pop rbx; ret;
0xffffffff81027f94: add rsp, 0x28; ret;
0xffffffff81a459a8: add rsp, 0x28; xor eax, eax; pop rbx; ret;
0xffffffff81a144d3: add rsp, 0x2b0; pop rbx; pop r14; pop rbp; ret;
0xffffffff814ae8a8: add rsp, 0x2b8; pop rbx; pop rbp; ret;
0xffffffff8178b4d4: add rsp, 0x2d8; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8166c62f: add rsp, 0x30; pop rbp; ret;
0xffffffff8112e0aa: add rsp, 0x30; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff8103ce01: add rsp, 0x30; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff810b5a5a: add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff8155bc4f: add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff81047aaa: add rsp, 0x30; pop rbx; pop r14; pop rbp; ret;
0xffffffff81029dc2: add rsp, 0x30; pop rbx; pop r14; ret;
0xffffffff81029dc1: add rsp, 0x30; pop rbx; pop r14; ret;
0xffffffff810478e4: add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff81129c15: add rsp, 0x30; pop rbx; ret;
0xffffffff81e0137b: add rsp, 0x30; pop rdx; iretq;
0xffffffff8104f375: add rsp, 0x30; ret;
0xffffffff81e0142f: add rsp, 0x30; std; mov qword ptr [rsp+0x28], 0; iretq;
0xffffffff81753c82: add rsp, 0x348; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81753b69: add rsp, 0x348; pop rbx; pop r14; pop rbp; ret;
0xffffffff8166cf27: add rsp, 0x38; pop rbp; ret;
0xffffffff8100060d: add rsp, 0x38; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff810009b1: add rsp, 0x38; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff810007f9: add rsp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff81ad830d: add rsp, 0x38; pop rbx; pop r14; pop rbp; ret;
0xffffffff81002e4a: add rsp, 0x38; pop rbx; pop r14; pop rbp; ret;
0xffffffff810cc0ff: add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff810c8258: add rsp, 0x38; pop rbx; pop rbp; ret;
0xffffffff810c6fab: add rsp, 0x38; pop rbx; ret;
0xffffffff810c6ef0: add rsp, 0x38; ret;
0xffffffff819e2342: add rsp, 0x38; xor eax, eax; ret;
0xffffffff8166cca1: add rsp, 0x40; pop rbp; ret;
0xffffffff810ecd33: add rsp, 0x40; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff813a5e6c: add rsp, 0x40; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff811be766: add rsp, 0x40; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff810e8318: add rsp, 0x40; pop rbx; pop r14; pop r15; ret;
0xffffffff81173f01: add rsp, 0x40; pop rbx; pop r14; pop rbp; ret;
0xffffffff812601b3: add rsp, 0x40; pop rbx; pop r14; ret;
0xffffffff813135c0: add rsp, 0x40; pop rbx; pop rbp; ret;
0xffffffff81a76bd7: add rsp, 0x40; pop rbx; ret;
0xffffffff810e83d9: add rsp, 0x40; ret;
0xffffffff811b8bd8: add rsp, 0x48; pop rbp; ret;
0xffffffff812edab8: add rsp, 0x48; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff810ee241: add rsp, 0x48; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8184c842: add rsp, 0x48; pop rbx; pop r14; pop r15; ret;
0xffffffff8103b2c3: add rsp, 0x48; pop rbx; pop r14; pop r15; ret;
0xffffffff8102e2aa: add rsp, 0x48; pop rbx; pop r14; pop rbp; ret;
0xffffffff810b6d22: add rsp, 0x48; pop rbx; pop r14; ret;
0xffffffff810b36b9: add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff810cc596: add rsp, 0x48; pop rbx; ret;
0xffffffff810af420: add rsp, 0x48; ret;
0xffffffff810ca8f0: add rsp, 0x50; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff810ca681: add rsp, 0x50; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff810f034f: add rsp, 0x50; pop rbx; pop r14; pop r15; ret;
0xffffffff81209c9d: add rsp, 0x50; pop rbx; pop r14; pop rbp; ret;
0xffffffff8127ffbc: add rsp, 0x50; pop rbx; pop r14; ret;
0xffffffff817a3955: add rsp, 0x50; pop rbx; pop rbp; ret;
0xffffffff810d7bfa: add rsp, 0x50; pop rbx; ret;
0xffffffff8115aac9: add rsp, 0x50; ret;
0xffffffff8177469e: add rsp, 0x58; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff81290b1a: add rsp, 0x58; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81410712: add rsp, 0x58; pop rbx; pop r14; pop r15; ret;
0xffffffff8104b9ca: add rsp, 0x58; pop rbx; pop r14; pop rbp; ret;
0xffffffff810c1c53: add rsp, 0x58; pop rbx; pop r14; ret;
0xffffffff81357b55: add rsp, 0x58; pop rbx; pop rbp; ret;
0xffffffff810b55e7: add rsp, 0x58; pop rbx; ret;
0xffffffff8105a702: add rsp, 0x58; ret;
0xffffffff810d54bc: add rsp, 0x60; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff812f2d33: add rsp, 0x60; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff810d933a: add rsp, 0x60; pop rbx; pop r14; pop r15; ret;
0xffffffff8105a29f: add rsp, 0x60; pop rbx; pop r14; pop rbp; ret;
0xffffffff81956f51: add rsp, 0x60; pop rbx; pop r14; ret;
0xffffffff819b8940: add rsp, 0x60; pop rbx; pop rbp; ret;
0xffffffff8153a98f: add rsp, 0x60; pop rbx; ret;
0xffffffff8152fa26: add rsp, 0x60; ret;
0xffffffff8151b529: add rsp, 0x68; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff81385a1a: add rsp, 0x68; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff818dc7fd: add rsp, 0x68; pop rbx; pop r14; pop r15; ret;
0xffffffff813d69b6: add rsp, 0x68; pop rbx; pop r14; pop r15; ret;
0xffffffff8100531c: add rsp, 0x68; pop rbx; pop r14; pop rbp; ret;
0xffffffff81218bc3: add rsp, 0x68; pop rbx; pop r14; ret;
0xffffffff81382d33: add rsp, 0x68; pop rbx; pop rbp; ret;
0xffffffff8117361d: add rsp, 0x68; pop rbx; ret;
0xffffffff812191a7: add rsp, 0x68; ret;
0xffffffff815ede6e: add rsp, 0x70; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff814a7dcd: add rsp, 0x70; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff810522e9: add rsp, 0x70; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff812b4df4: add rsp, 0x70; pop rbx; pop r14; pop r15; ret;
0xffffffff811de564: add rsp, 0x70; pop rbx; pop r14; pop rbp; ret;
0xffffffff815b5d0d: add rsp, 0x70; pop rbx; pop r14; ret;
0xffffffff8142d93d: add rsp, 0x70; pop rbx; pop rbp; ret;
0xffffffff814c388b: add rsp, 0x70; pop rbx; ret;
0xffffffff81301293: add rsp, 0x70; ret;
0xffffffff8151704c: add rsp, 0x78; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff81acbbfe: add rsp, 0x78; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8151740a: add rsp, 0x78; pop rbx; pop r14; pop r15; ret;
0xffffffff8144d56c: add rsp, 0x78; pop rbx; pop r14; pop rbp; ret;
0xffffffff810d21e7: add rsp, 0x78; pop rbx; pop r14; ret;
0xffffffff819055fc: add rsp, 0x78; pop rbx; pop rbp; ret;
0xffffffff810d2b25: add rsp, 0x78; pop rbx; ret;
0xffffffff81b2916d: add rsp, 0x78; ret;
0xffffffff8100433a: add rsp, 0x80; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff81137777: add rsp, 0x80; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff816167f7: add rsp, 0x80; pop rbx; pop r14; pop r15; ret;
0xffffffff813f5371: add rsp, 0x80; pop rbx; pop r14; pop rbp; ret;
0xffffffff812f8117: add rsp, 0x80; pop rbx; pop r14; ret;
0xffffffff816351b9: add rsp, 0x80; pop rbx; pop rbp; ret;
0xffffffff815e9f8f: add rsp, 0x80; pop rbx; ret;
0xffffffff816112de: add rsp, 0x80; ret;
0xffffffff8124f5b7: add rsp, 0x88; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff813a992d: add rsp, 0x88; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81023d99: add rsp, 0x88; pop rbx; pop r14; pop r15; ret;
0xffffffff815b6075: add rsp, 0x88; pop rbx; pop r14; pop rbp; ret;
0xffffffff8112e65f: add rsp, 0x88; pop rbx; pop r14; ret;
0xffffffff810ca37a: add rsp, 0x88; pop rbx; ret;
0xffffffff810ca173: add rsp, 0x88; ret;
0xffffffff81471936: add rsp, 0x90; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff8120a1c3: add rsp, 0x90; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff810aefba: add rsp, 0x90; pop rbx; pop r14; pop r15; ret;
0xffffffff810af0cf: add rsp, 0x90; pop rbx; pop r14; pop rbp; ret;
0xffffffff81baad3e: add rsp, 0x90; pop rbx; pop r14; ret;
0xffffffff8151e0fe: add rsp, 0x90; pop rbx; ret;
0xffffffff81053335: add rsp, 0x98; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff814f4eeb: add rsp, 0x98; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8130b0ae: add rsp, 0x98; pop rbx; pop r14; pop r15; ret;
0xffffffff810d1001: add rsp, 0x98; pop rbx; pop r14; pop r15; ret;
0xffffffff817ca485: add rsp, 0x98; pop rbx; pop r14; ret;
0xffffffff81418018: add rsp, 0x98; pop rbx; pop rbp; ret;
0xffffffff812f9946: add rsp, 0x98; pop rbx; ret;
0xffffffff818ff827: add rsp, 0x98; ret;
0xffffffff815f2a57: add rsp, 0xa0; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff8106c353: add rsp, 0xa0; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81307517: add rsp, 0xa0; pop rbx; pop r14; pop r15; ret;
0xffffffff8114f93e: add rsp, 0xa0; pop rbx; pop r14; pop rbp; ret;
0xffffffff81410d38: add rsp, 0xa0; pop rbx; pop r14; ret;
0xffffffff812f8da5: add rsp, 0xa0; pop rbx; ret;
0xffffffff8166caf6: add rsp, 0xa8; pop rbp; ret;
0xffffffff81a2f51f: add rsp, 0xa8; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81b2f22f: add rsp, 0xa8; pop rbx; pop r14; pop r15; ret;
0xffffffff81ae4dbe: add rsp, 0xa8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8160b5ba: add rsp, 0xa8; pop rbx; pop rbp; ret;
0xffffffff811f9cdd: add rsp, 0xa8; pop rbx; ret;
0xffffffff81e0190a: add rsp, 0xa8; ret;
0xffffffff81a779e4: add rsp, 0xb0; pop rbx; pop r14; pop r15; ret;
0xffffffff81421a6d: add rsp, 0xb0; pop rbx; pop r14; pop rbp; ret;
0xffffffff81158592: add rsp, 0xb0; pop rbx; pop r14; ret;
0xffffffff810cb84f: add rsp, 0xb8; pop rbx; pop r14; pop rbp; ret;
0xffffffff81ba1a65: add rsp, 0xb8; pop rbx; pop r14; ret;
0xffffffff8187e415: add rsp, 0xb8; ret;
0xffffffff81608728: add rsp, 0xc0; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff812f9376: add rsp, 0xc0; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8151c15a: add rsp, 0xc0; pop rbx; pop r14; pop r15; ret;
0xffffffff81410b3e: add rsp, 0xc0; pop rbx; pop r14; pop rbp; ret;
0xffffffff819b96e7: add rsp, 0xc0; pop rbx; pop r14; ret;
0xffffffff814226b3: add rsp, 0xc0; pop rbx; ret;
0xffffffff8133d1e3: add rsp, 0xc8; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff8133d59d: add rsp, 0xc8; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81521409: add rsp, 0xc8; pop rbx; pop r14; pop r15; ret;
0xffffffff8142d3d0: add rsp, 0xc8; pop rbx; pop r14; pop rbp; ret;
0xffffffff819cd552: add rsp, 0xc; ret;
0xffffffff8133d432: add rsp, 0xd0; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff81421745: add rsp, 0xd0; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff819b5e81: add rsp, 0xd0; pop rbx; pop r14; pop r15; ret;
0xffffffff8133ce89: add rsp, 0xd0; pop rbx; pop r14; pop rbp; ret;
0xffffffff8113e0ec: add rsp, 0xd8; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8112e3e7: add rsp, 0xd8; pop rbx; pop r14; pop rbp; ret;
0xffffffff81b160c0: add rsp, 0xe0; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff81b9ddaa: add rsp, 0xe8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8132214e: add rsp, 0xf0; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff817c8dbe: add rsp, 0xf0; pop rbx; pop r14; pop r15; ret;
0xffffffff81034d31: add rsp, 0xf0; pop rbx; pop r14; ret;
0xffffffff8133e767: add rsp, 0xf8; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff812f8835: add rsp, 0xf8; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff816b71a8: add rsp, 1; ret;
0xffffffff81b68318: add rsp, 2; ret;
0xffffffff81031ad8: add rsp, 4; pop rbx; ret;
0xffffffff81041db0: add rsp, 4; ret;
0xffffffff83450383: add rsp, 8; mov [rip-0xc68dfe], rax; ret;
0xffffffff83463223: add rsp, 8; mov [rip-0xc7b89e], rax; ret;
0xffffffff81649bcf: add rsp, 8; mov eax, ebp; pop rbx; pop r14; pop rbp; ret;
0xffffffff811f8b43: add rsp, 8; mov rcx, rax; test rax, rax; mov rax, 0xffffffff83618a60; cmovne rax, rcx; ret;
0xffffffff8166c709: add rsp, 8; pop rbp; ret;
0xffffffff8100dc99: add rsp, 8; pop rbx; pop r12; pop r14; pop r15; ret;
0xffffffff8103216f: add rsp, 8; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff8101ecaa: add rsp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff81022b0c: add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8101ed23: add rsp, 8; pop rbx; pop r14; ret;
0xffffffff81003ba1: add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8102eb0a: add rsp, 8; pop rbx; ret;
0xffffffff810bff93: add rsp, 8; ret;
0xffffffff817f78ee: add rsp, 8; xor eax, eax; pop rbx; pop r14; pop r15; ret;
0xffffffff8136848f: add rsp, 8; xor eax, eax; ret;
0xffffffff834f05e2: add sp, 0x14; pop si; pop di; pop bx; pop bp; data16 ret;
0xffffffff834f0976: add sp, 0x2c; pop si; data16 ret;
0xffffffff834f08ea: add sp, 0x58; pop si; pop di; data16 ret;
0xffffffff834f0849: add sp, 0x58; pop si; pop di; pop bx; data16 ret;
0xffffffff834f0b0d: add sp, 0x58; pop si; pop di; pop bx; pop bp; data16 ret;
0xffffffff834f0c95: add sp, 0x5c; pop si; pop di; pop bx; pop bp; data16 ret;
0xffffffff834f0dbc: add sp, 4; pop si; pop di; pop bx; pop bp; data16 ret;
0xffffffff834f06be: add sp, 8; pop di; data16 ret;
0xffffffff825256b6: add sp, di; and eax, 0xcd32345; mov al, bh; ret 0x5d82;
0xffffffff8346ea40: add spl, r10b; std; add rsp, 8; pop rbx; ret;
0xffffffff816cfcbc: and [r11+0x41], r11b; pop rsp; pop r14; pop r15; ret;
0xffffffff811caba3: and [r8+0xf002578], r8b; xchg esp, eax; ror byte ptr [rax], 0xd0; ret;
0xffffffff8148c3ec: and [r8+0xf], cl; leave; mov [rax+4], rcx; xor eax, eax; pop rbx; ret;
0xffffffff81a765f7: and [r9], r14b; leave; cmp byte ptr [rax+0xb], 0x10; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff81c0f4d7: and [r9], r14b; leave; cmp byte ptr [rax+1], 2; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff81b60bf7: and [r9], r14b; leave; cmp byte ptr [rax+3], 2; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff81a7e647: and [r9], r14b; leave; cmp byte ptr [rax+8], 2; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff81a766f7: and [r9], r14b; leave; cmp byte ptr [rax+8], 4; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff81a78d77: and [r9], r14b; leave; cmp byte ptr [rax], 0x40; mov eax, 0xffffffdf; cmovb eax, ecx; ret;
0xffffffff81a7dd27: and [r9], r14b; leave; cmp dword ptr [rax+4], 2; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff82498eb5: and [rax+0x47], bl; xchg esi, eax; add [rcx-0x61], esi; cmp [rbp+0x72], ebx; leave; iretd;
0xffffffff811caba4: and [rax+0xf002578], al; xchg esp, eax; ror byte ptr [rax], 0xd0; ret;
0xffffffff8148c3ed: and [rax+0xf], cl; leave; mov [rax+4], rcx; xor eax, eax; pop rbx; ret;
0xffffffff8154a882: and [rax-0x77], cl; out 0xe8, eax; xchg esp, eax; adc eax, ebp; jmp qword ptr [rbp+0x48];
0xffffffff8176be1f: and [rax], al; add [rax], al; add al, ch; xchg [rdx-1], esp; jmp far fword ptr [rax+0x1e850f80];
0xffffffff829b23b8: and [rax], al; add [rax], al; leave; rol byte ptr [rdx], 0; ret;
0xffffffff81bd3cc6: and [rax], al; add [rdi], cl; xchg esp, eax; ret 0x8b48;
0xffffffff816e6415: and [rax], al; add [rdi], cl; xchg esp, eax; ret 0xc8d;
0xffffffff8104e36b: and [rax], eax; add rsp, 0x18; pop rbx; ret;
0xffffffff822c9068: and [rax], edx; or r12d, r14d; pop rsp; imul edx, [rsi-0x7d], 0xffffffd1; ret;
0xffffffff8176be1e: and [rax], r8b; add [rax], al; add al, ch; xchg [rdx-1], esp; jmp far fword ptr [rax+0x1e850f80];
0xffffffff819cd329: and [rbp+0x13], dh; add rsp, 0x28; ret;
0xffffffff813cee5f: and [rbp+0x1a], dh; add rsp, 0x28; pop rbx; pop r14; pop r15; ret;
0xffffffff8105e374: and [rbp+0x1b], dh; add rsp, 0x28; pop rbx; pop r14; pop r15; ret;
0xffffffff814aadcd: and [rbp+0x1c], dh; xor eax, eax; add rsp, 0x28; pop rbx; ret;
0xffffffff81470ccd: and [rbp+0x1e], dh; xor eax, eax; add rsp, 0x28; pop rbx; pop r14; ret;
0xffffffff811b8a29: and [rbp+0x22], dh; add rsp, 0x28; ret;
0xffffffff81260aca: and [rbp+0x22], dh; mov eax, ebp; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff81417660: and [rbp+0x28], dh; mov eax, ebx; add rsp, 0x28; pop rbx; pop r14; ret;
0xffffffff81027f91: and [rbp+0x31], dh; add rsp, 0x28; ret;
0xffffffff8141656c: and [rbp+0x33], dh; add rsp, 0x28; pop rbx; ret;
0xffffffff812bf6a8: and [rbp+0x34], dh; add rsp, 0x28; pop rbx; pop r14; pop r15; ret;
0xffffffff811f0972: and [rbp+0x35], dh; add rsp, 0x28; pop rbx; pop r14; ret;
0xffffffff8198963a: and [rbp+0x3b], dh; mov eax, ebp; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff81b47ae3: and [rbp+0x4f], dh; add rsp, 0x28; pop rbx; ret;
0xffffffff812d4178: and [rbp+0xa], dh; add rsp, 0x28; pop rbx; pop r14; pop r15; ret;
0xffffffff819ae56e: and [rbp+0xa], dh; add rsp, 0x28; pop rbx; ret;
0xffffffff8181dbc7: and [rbp+0xa], dh; xor eax, eax; add rsp, 0x28; pop rbx; pop r14; ret;
0xffffffff812ca637: and [rbp+0xd], dh; add rsp, 0x28; pop rbx; ret;
0xffffffff83491cf5: and [rbp+0xd], dh; add rsp, 0x28; ret;
0xffffffff812a2393: and [rbp+0xe], dh; add rsp, 0x28; pop rbx; pop r14; pop r15; ret;
0xffffffff8142c44e: and [rbp+0xf], dh; mov eax, ecx; add rsp, 0x28; pop rbx; ret;
0xffffffff816f5e54: and [rbp+0xf], dh; mov rax, rbx; add rsp, 0x28; pop rbx; pop r14; ret;
0xffffffff81027fbd: and [rbp+5], dh; add rsp, 0x28; ret;
0xffffffff8102203c: and [rbp+6], dh; add rsp, 0x28; pop rbx; ret;
0xffffffff83483448: and [rbp+7], dh; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff812d026c: and [rbp+8], dh; add rsp, 0x28; pop rbx; pop r14; ret;
0xffffffff8113d104: and [rbp+8], dh; cdqe; add rsp, 0x28; pop rbx; ret;
0xffffffff811f6990: and [rbp+9], dh; add rsp, 0x28; pop rbx; pop r14; pop rbp; ret;
0xffffffff819fdf76: and [rbp+9], dh; add rsp, 0x28; ret;
0xffffffff824b7cc3: and [rbp-0x24d95070], ebp; out 0xd4, eax; xchg esp, eax; ret;
0xffffffff83459d6b: and [rbp-0x2b], ecx; std; add rsp, 8; pop rbx; ret;
0xffffffff82569f5f: and [rbp-0x2e3901c3], ebx; fcom st, qword ptr [r13+0x1748e88c]; outsd dx, [rsi]; mov esp, [rcx]; call far fword ptr [rbx];
0xffffffff8117d872: and [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff810306b2: and [rbx+0x41], bl; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff810bb5b3: and [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff816c2fd3: and [rbx+0x41], ebx; pop rsp; pop r14; pop r15; ret;
0xffffffff8194a00d: and [rbx+0x41], r11b; pop rsp; pop r14; pop r15; ret;
0xffffffff81c75de6: and [rbx+rcx*4+0x6c], cl; and al, 0x28; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff824b9c7d: and [rbx-0x7b74d60c], ebp; xchg esp, eax; add al, 0x2c; ret;
0xffffffff81894e61: and [rcx+rax*2], cl; add [rdi], ecx; xchg esp, eax; ret 0xf631;
0xffffffff81176187: and [rcx+rcx*4-0x10], al; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff8183550e: and [rcx+rcx*4-0x10], cl; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81a765f8: and [rcx], dh; leave; cmp byte ptr [rax+0xb], 0x10; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff81c0f4d8: and [rcx], dh; leave; cmp byte ptr [rax+1], 2; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff81b60bf8: and [rcx], dh; leave; cmp byte ptr [rax+3], 2; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff81a7e648: and [rcx], dh; leave; cmp byte ptr [rax+8], 2; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff81a766f8: and [rcx], dh; leave; cmp byte ptr [rax+8], 4; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff81a78d78: and [rcx], dh; leave; cmp byte ptr [rax], 0x40; mov eax, 0xffffffdf; cmovb eax, ecx; ret;
0xffffffff81a7dd28: and [rcx], dh; leave; cmp dword ptr [rax+4], 2; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff8102d7bf: and [rcx], dh; leave; xsetbv; ret;
0xffffffff811d6074: and [rcx], dh; rol byte ptr [rcx-0x7d], cl; cli; or [rdi], cl; xchg esp, eax; ret 0xf201;
0xffffffff81ba1e12: and [rdi+rdi*8+0x48], dh; add esp, 0x10; xor eax, eax; ret;
0xffffffff8346736c: and [rdi-0x2c], dh; std; add rsp, 8; pop rbx; ret;
0xffffffff8234bbc8: and [rdi-0x7859cb1d], al; stc; cmp esi, ebp; pop rsp; iretd;
0xffffffff83445d61: and [rdi], cl; test [rcx+0x48000000], edx; add esp, 0x28; pop rbx; ret;
0xffffffff810be6f4: and [rdi], cl; xchg esp, eax; ret 0x3948;
0xffffffff81287de2: and [rdi], cl; xchg esp, eax; ret 0xed31;
0xffffffff81a80921: and [rdi], cl; xchg esp, eax; ret 0xf641;
0xffffffff81a809ab: and [rdi], cl; xchg esp, eax; ret;
0xffffffff81a809a9: and [rdi], cl; xchg esp, eax; ret;
0xffffffff8241918a: and [rdi], eax; xchg esp, eax; sbb dl, [rcx-0x62]; mov ebx, 0x6eed8060; jmp far fword ptr [rbp+0x32c2f170];
0xffffffff8174ac4c: and [rdi], ecx; xchg esp, eax; rol dword ptr [rbx-0x6bf0fc02], 0xc0; and al, cl; ret;
0xffffffff8100caca: and [rdx+0x2876fe8], al; add [rdx-0x7df1ef3], cl; add esi, esi; rcl dword ptr [rax], 0xf; xchg esp, eax; ret 0xd038;
0xffffffff824f7bbf: and [rdx], dh; sub ecx, esp; push rsp; pop rsp; ret 0xca40;
0xffffffff82470ee2: and [rdx], dl; add al, 0x6d; nop; xchg esp, eax; pushfq; iretd;
0xffffffff824f7bbe: and [rdx], sil; sub ecx, esp; push rsp; pop rsp; ret 0xca40;
0xffffffff81a4275f: and [rsi+0x44], ah; mov [rdi+0x80], edx; xor eax, eax; add rsp, 0x18; pop rbx; ret;
0xffffffff8223c0ce: and [rsi+0x49], dh; leave; hlt; xor bh, [rcx+rbx]; ret;
0xffffffff822404ea: and [rsi+rbp*2], esp; pop rsp; ret;
0xffffffff824ba26a: and [rsi-0x3e], ecx; mov ecx, 0xbd8acc42; xchg esp, eax; ret 0x7282;
0xffffffff8227bf53: and [rsi], eax; mov esp, edi; sub al, 0x6b; iretd;
0xffffffff825473e6: and ah, bl; pop rsp; add [rbp-0x624107fb], ah; imul dword ptr [rdx]; mov [rip-0x17db9d95], gs; ret 0x9d82;
0xffffffff834a046a: and ah, dh; sar ch, 1; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff8346c9e4: and ah, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff8342ea68: and al, 0; fdivr st, st(5); add rsp, 8; pop rbx; ret;
0xffffffff810b0578: and al, 0x10; mov rsi, [rsp+8]; mov cr0, rsi; mov rsp, [rsp]; pop rbp; ret;
0xffffffff8236bae5: and al, 0x10; xchg esp, eax; shl byte ptr [rbx-0x50], cl; iretd;
0xffffffff81532fd4: and al, 0x18; add [rdi], cl; xchg esp, eax; ret 0x8948;
0xffffffff81546a64: and al, 0x18; add al, [rax]; add [rdi], cl; xchg esp, eax; ret 0x5089;
0xffffffff81c75de0: and al, 0x18; mov r14, [rsp+0x20]; mov r13, [rsp+0x28]; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff81c75ddf: and al, 0x18; mov r14, [rsp+0x20]; mov r13, [rsp+0x28]; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff81ae8039: and al, 0x1c; add [rdi], cl; xchg esp, eax; ret;
0xffffffff8133f5c8: and al, 0x1d; xchg esp, eax; add [rax-0x39], cl; ret;
0xffffffff81e01908: and al, 0x20; add rsp, 0xa8; ret;
0xffffffff81c75de5: and al, 0x20; mov r13, [rsp+0x28]; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff825ce458: and al, 0x24; insb [rdi], dx; pop rsp; pop rsp; in al, 0xb8; ret 0x5dc2;
0xffffffff816454ad: and al, 0x28; add eax, [rax]; add [rcx], dh; imul al; xchg esp, eax; ret 0x48ff;
0xffffffff81c75dea: and al, 0x28; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff8151528a: and al, 0x30; add [rax], eax; add [rbp+8], dh; add rsp, 0x138; ret;
0xffffffff8188f98c: and al, 0x30; add [rdi], cl; xchg esp, eax; rol dword ptr [rbx+0x60247c], 0xf; xchg ebp, eax; ret 0xca20;
0xffffffff81c75def: and al, 0x30; add rsp, 0x38; ret;
0xffffffff8135083e: and al, 0x31; fild st, dword ptr [rbp-0x7b]; in al, 0xf; xchg esp, eax; ret;
0xffffffff81c8216f: and al, 0x40; add [rdi], cl; xchg esp, eax; ror byte ptr [rbp-0x37afc], 0xff; jmp qword ptr [rbp+0x48];
0xffffffff81561392: and al, 0x44; add eax, eax; add rsp, 4; ret;
0xffffffff8149f390: and al, 0x48; add [rdi], ecx; xchg esp, eax; ret 0xc231;
0xffffffff817a2d35: and al, 0x48; add esp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff8197eb6a: and al, 0x48; add esp, 0x10; pop rbx; ret;
0xffffffff810333b3: and al, 0x48; add esp, 0x10; ret;
0xffffffff81e01940: and al, 0x48; add esp, 0x18; jmp rdi;
0xffffffff8187157e: and al, 0x48; add esp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff810bd669: and al, 0x48; add esp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff816b71a7: and al, 0x48; add esp, 1; ret;
0xffffffff81835fec: and al, 0x48; mov eax, ebx; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff816c2c80: and al, 0x48; shl edi, cl; mov rax, rdi; add rsp, 0x20; ret;
0xffffffff813c4b85: and al, 0x4c; add [rdi], cl; xchg esp, eax; ret 0x5489;
0xffffffff81c72c9d: and al, 0x4c; mov esp, [rsp+8]; add rsp, 0x10; ret;
0xffffffff81e01902: and al, 0x50; mov rbp, [rsp+0x20]; add rsp, 0xa8; ret;
0xffffffff8145ba46: and al, 0x54; fistp word ptr [rbx+0x41], st; pop rsp; pop r14; pop r15; ret;
0xffffffff8145ba45: and al, 0x54; fistp word ptr [rbx+0x41], st; pop rsp; pop r14; pop r15; ret;
0xffffffff81543805: and al, 0x58; add [rcx+0xf], al; xchg esp, eax; ret 0x8b41;
0xffffffff81e018fd: and al, 0x58; mov rax, [rsp+0x50]; mov rbp, [rsp+0x20]; add rsp, 0xa8; ret;
0xffffffff825ce05a: and al, 0x5c; in al, 0xb8; pop rsp; ret 0x9f5d;
0xffffffff82384cd2: and al, 0x5c; xor dl, [r8+0x1a]; mov [rdx+0x436ab14d], cl; and cl, bh; xchg rsp, rax; ret 0x50d5;
0xffffffff81e018f9: and al, 0x60; mov rcx, [rsp+0x58]; mov rax, [rsp+0x50]; mov rbp, [rsp+0x20]; add rsp, 0xa8; ret;
0xffffffff822dbe8f: and al, 0x61; sbb cl, ch; nop; pop rsp; mov [0x579d5ec8217bbc05], eax; ret;
0xffffffff825ce058: and al, 0x6c; and al, 0x5c; in al, 0xb8; pop rsp; ret 0x9f5d;
0xffffffff825ce459: and al, 0x6c; pop rsp; pop rsp; in al, 0xb8; ret 0x5dc2;
0xffffffff8228d809: and al, 0x6e; imul byte ptr [rax+0x615e06fb]; leave; add bh, bh; out 0xce, eax; ret;
0xffffffff822404eb: and al, 0x6e; pop rsp; ret;
0xffffffff8248f40d: and al, 0x72; sub al, ch; leave; ret;
0xffffffff810333ad: and al, 0x7f; add [rdi], cl; add [rsp], edx; add rsp, 0x10; ret;
0xffffffff81561b64: and al, 0x80; add [rax], al; add [rbp+0x28], dh; add rsp, 0x88; ret;
0xffffffff8112e788: and al, 0x80; add [rax], al; add [rbp+8], dh; add rsp, 0x88; ret;
0xffffffff810ca373: and al, 0x80; add [rax], al; add [rbp+9], dh; add rsp, 0x88; pop rbx; ret;
0xffffffff81b25536: and al, 0x83; rol byte ptr [rax], 1; add rsp, 0xc; ret;
0xffffffff81992dc6: and al, 0x83; rol byte ptr [rax], 1; add rsp, 4; ret;
0xffffffff819cf73b: and al, 0x83; rol byte ptr [rax], 1; mov [rdi+0x88], eax; mov eax, eax; add rsp, 4; ret;
0xffffffff8256c35d: and al, 0x85; mov eax, [0xbe8b3386f6ebee54]; push rdx; pop rsp; ret;
0xffffffff8151e0f7: and al, 0x88; add [rax], al; add [rbp+9], dh; add rsp, 0x90; pop rbx; ret;
0xffffffff8148179b: and al, 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff823f3da5: and al, 0x8c; mov edi, 0xc91338df; sub esp, esp; iretd;
0xffffffff818ff820: and al, 0x90; add [rax], al; add [rbp+8], dh; add rsp, 0x98; ret;
0xffffffff812f993f: and al, 0x90; add [rax], al; add [rbp+9], dh; add rsp, 0x98; pop rbx; ret;
0xffffffff81c28ed5: and al, 0x98; add [rax], al; add [rbp+0x2a], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff81617355: and al, 0x98; add [rax], al; add [rbp+5], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff812f8d9e: and al, 0x98; add [rax], al; add [rbp+9], dh; add rsp, 0xa0; pop rbx; ret;
0xffffffff81c83085: and al, 0x9d; add rsp, 8; pop rbx; ret;
0xffffffff811f9cd6: and al, 0xa0; add [rax], al; add [rbp+9], dh; add rsp, 0xa8; pop rbx; ret;
0xffffffff81036ab6: and al, 0xa8; add [rax], al; add [rbp+5], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff8249e1e8: and al, 0xaa; pop rsp; movsb [rdi], [rsi]; cmp dh, [rsi+rbp*4]; iretd;
0xffffffff8187e40e: and al, 0xb0; add [rax], al; add [rbp+8], dh; add rsp, 0xb8; ret;
0xffffffff8187eb95: and al, 0xb0; add [rax], al; add [rbp-0x7c], al; dec dword ptr [rdi]; xchg esp, eax; ret 0x8548;
0xffffffff814226ac: and al, 0xb8; add [rax], al; add [rbp+9], dh; add rsp, 0xc0; pop rbx; ret;
0xffffffff810f312b: and al, 0xc8; add [rax], al; add [rax-0x7b], cl; ror byte ptr [rdi], cl; xchg esp, eax; ret;
0xffffffff814e27f5: and al, 0xc8; add [rax], al; add [rbp+5], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff81647fbd: and al, 0xc; add [rdi], cl; xchg esp, eax; ret 0x894c;
0xffffffff815fe8f5: and al, 0xc; add [rdi], cl; xchg esp, eax; ret;
0xffffffff8222b3d2: and al, 0xcc; sbb al, 0x95; getsec; pop rsp; ret 0xf322;
0xffffffff826ee1db: and al, 0xcd; scasd [rdi]; not byte ptr [rbp+0x540a73e8]; xchg [rax+rbp*4], esp; jmp far fword ptr [rdi+0x73e895f6];
0xffffffff8347c5d6: and al, 0xd3; std; add rsp, 8; pop rbx; ret;
0xffffffff8347c602: and al, 0xd3; std; add rsp, 8; ret;
0xffffffff8346c63f: and al, 0xd4; std; add rsp, 8; pop rbx; ret;
0xffffffff82546eb6: and al, 0xd6; pop rsp; mov al, [0x22f6096f783c063]; in eax, dx; fcmove st, st(5); ret 0x926e;
0xffffffff81546a4c: and al, 0xd8; add [rax], eax; add [rdi], cl; xchg esp, eax; ret 0x5089;
0xffffffff816454c8: and al, 0xf0; add al, [rax]; add [rcx], dh; imul al; xchg rsp, rax; ret 0x48ff;
0xffffffff824bbc97: and al, 0xf2; leave; out dx, al; ret;
0xffffffff816c2c7a: and al, 0xf3; bsf rcx, [rsp]; shl rdi, cl; mov rax, rdi; add rsp, 0x20; ret;
0xffffffff81a80950: and al, 0xf; xchg esp, eax; ret 0x2eb;
0xffffffff8147a3a3: and al, 0xf; xchg esp, eax; ret 0x8b48;
0xffffffff81125af1: and al, 0xfc; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81c83082: and al, 0xff; xor al, 0x24; popfq; add rsp, 8; pop rbx; ret;
0xffffffff814a8c60: and al, 1; add [rax], al; add [rdi], cl; xchg esp, eax; ret;
0xffffffff81a7e62b: and al, 1; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff81a826e7: and al, 1; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff81a76bd5: and al, 1; add rsp, 0x40; pop rbx; ret;
0xffffffff8179fb43: and al, 2; add [rdi], cl; xchg esp, eax; ret 0x894c;
0xffffffff81ab2c24: and al, 2; add cl, [rdi]; xchg esp, eax; ret 0xc148;
0xffffffff810333a7: and al, 2; mov word ptr [rsp], 0x7f; lgdt [rsp]; add rsp, 0x10; ret;
0xffffffff81c73056: and al, 3; add al, 0x24; adc eax, 0; add rsp, 0xc; ret;
0xffffffff81992dc3: and al, 3; add al, 0x24; adc eax, 0; add rsp, 4; ret;
0xffffffff81b25531: and al, 4; adc eax, [rsp]; adc eax, 0; add rsp, 0xc; ret;
0xffffffff819cd5a7: and al, 4; adc edx, 0; not edx; mov [rsi+0x88], edx; add rsp, 0xc; ret;
0xffffffff8179fc03: and al, 4; add [rdi], cl; xchg esp, eax; ret 0x894c;
0xffffffff8144eaab: and al, 4; add [rdi], cl; xchg esp, eax; ret 0x8b49;
0xffffffff8103caad: and al, 4; add [rdi], cl; xchg esp, eax; ret 0xc931;
0xffffffff81957afd: and al, 4; add ecx, [rdi]; xchg esp, eax; ret;
0xffffffff814fbd21: and al, 4; pop rsp; add [rax], al; add [rax-0x77], cl; iretd;
0xffffffff834f06b7: and al, 6; mov [edx+0x20], eax; add sp, 8; pop di; data16 ret;
0xffffffff834f06b1: and al, 6; movzx ax, word ptr [esp+6]; mov [edx+0x20], eax; add sp, 8; pop di; data16 ret;
0xffffffff816e68b1: and al, 7; add cl, [rdi]; xchg esp, eax; ret;
0xffffffff819cd409: and al, 8; adc eax, 0; not eax; mov [rsi+0x88], eax; add rsp, 0x18; ret;
0xffffffff81b2552d: and al, 8; adc eax, [rsp+4]; adc eax, [rsp]; adc eax, 0; add rsp, 0xc; ret;
0xffffffff81849ee3: and al, 8; add [rax], eax; add [rbp+5], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff81c72ca1: and al, 8; add rsp, 0x10; ret;
0xffffffff81c72ca0: and al, 8; add rsp, 0x10; ret;
0xffffffff810b057d: and al, 8; mov cr0, rsi; mov rsp, [rsp]; pop rbp; ret;
0xffffffff81e0193b: and al, 8; mov rax, [rsp]; add rsp, 0x18; jmp rdi;
0xffffffff8250f84d: and al, [rax-0x1f3e378a]; in al, 0x60; or eax, 0x463c4b72; add esp, ebx; ret 0x9e3a;
0xffffffff8222c6c1: and al, [rax-0x6f]; sbb [rdi+0x54327feb], rbx; adc esp, ebx; or ebx, [rbp-0xc2d6b71]; xchg [rbx-0x6d], ebp; iretd;
0xffffffff83446016: and al, [rcx]; add [rax], al; mov rsp, rbp; pop rbp; ret;
0xffffffff8268d43f: and al, [rdx+rcx-0x6b30f92b]; in eax, 0x61; pop rsp; and bl, [rbx+0x6d50d65]; iretd;
0xffffffff8100cad4: and al, bh; add esi, esi; rcl dword ptr [rax], 0xf; xchg esp, eax; ret 0xd038;
0xffffffff834300f8: and al, cl; movzx eax, al; add rsp, 0x10; pop rbx; ret;
0xffffffff810b0580: and al, dh; mov rsp, [rsp]; pop rbp; ret;
0xffffffff8234993e: and al, dh; sub [rbp-0x3f], edx; pop rsp; ret 0x8013;
0xffffffff826cef8a: and ax, 0xb6c; mov esp, [rbx+0x73]; ret;
0xffffffff82307114: and bh, [rax-0x1dcf51c0]; leave; iretd;
0xffffffff8236ad04: and bh, [rbx+0x37]; cmp ah, [rdi]; sbb [rdx], edi; test eax, 0xa3dcb959; xchg esp, eax; iretd;
0xffffffff82516703: and bl, [rdi+0x5f]; movsd [rdi], [rsi]; leave; call rcx;
0xffffffff823c1f8c: and bl, [rdi-0x18586364]; xchg esp, esi; ret 0x209b;
0xffffffff81e0015b: and bl, bh; pop rax; pop rdi; pop rsp; swapgs; sysretq;
0xffffffff8347c9cb: and bl, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff8149dd1c: and byte ptr [r15+0x88], 0xf7; add rsp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff8149dd1d: and byte ptr [rdi+0x88], 0xf7; add rsp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff8224ce46: and byte ptr [rdx-0x42], 0x38; cld; leave; imul edx, [rsi-0x3c], 0x777e4d20; iretd;
0xffffffff81334fc2: and byte ptr [rsi-0x6a177d20], 0xe0; xchg esp, eax; add [rax-0x39], cl; ret;
0xffffffff824a21ee: and byte ptr [rsi], 0xfb; fcom st, dword ptr [rax]; pop rsp; out dx, al; iretd;
0xffffffff8176b17a: and ch, [rdi-0x76b70001]; fistp word ptr [rbx-0x17], st; leave; or al, 0xb2; jmp qword ptr [rsi+0xf];
0xffffffff822d25ef: and ch, [rsi+0x7a215fef]; mov [0xc387bbca23bdc767], eax; add [rdi], esp; pop rsp; ret;
0xffffffff814af5e0: and cl, [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff811e7496: and cl, [rcx+rcx*4-0x10]; add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff816e9810: and cl, [rcx-0x3b7cb728]; adc [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff819b0ab5: and cl, [rcx-0x77]; or [rbx+0x41], r11b; pop rsp; pop r14; pop r15; ret;
0xffffffff811b556a: and cl, [rdi]; xchg esp, eax; ret 0xda08;
0xffffffff822463e2: and cl, [rip+0x2cc03f2f]; add esp, edx; pop rbp; pop rsi; ret 0x808c;
0xffffffff82281d8d: and cl, [rsi+rsi*2-0x3c26b522]; adc al, 0xe8; pop rsp; iretd;
0xffffffff82288609: and cl, [rsi]; leave; ret;
0xffffffff82384cde: and cl, bh; xchg rsp, rax; ret 0x50d5;
0xffffffff81142d8d: and cl, dl; or cl, sil; movzx ecx, cl; add eax, ecx; add rsp, 0x48; ret;
0xffffffff83457a6a: and dh, [rax-0x2b]; std; add rsp, 8; ret;
0xffffffff822688c9: and dh, [rbp+0x33]; pushfq; pop rsp; iretd;
0xffffffff8347796a: and dh, [rcx-0x2d]; std; add rsp, 8; pop rbx; ret;
0xffffffff822ab742: and dh, ah; test [rdx-0x7d920688], bh; in eax, dx; pop rsp; ret;
0xffffffff824945c1: and dh, bh; fist word ptr [rdi*4-0x77c62966], st; xchg esp, eax; call qword ptr [rsi+0x58];
0xffffffff823a7f11: and dh, cl; xlat [rbx]; std; mov edi, 0xc3c5a7c2; leave; ret 0x2c99;
0xffffffff8348d46a: and dl, [rsi]; sar ch, cl; add rsp, 8; pop rbx; ret;
0xffffffff8346c88a: and dl, ah; std; add rsp, 8; pop rbx; ret;
0xffffffff835ab395: and dl, bh; std; pop rsp; and al, 0xd7; std; ret 0xd724;
0xffffffff8347c877: and dl, bl; std; add rsp, 8; pop rbx; ret;
0xffffffff823101f5: and dl, dh; mov al, 0x9f; xchg ebp, eax; mov ch, 0x21; add esp, eax; ret;
0xffffffff8104dba9: and dword ptr [rax+0x48000000], 0x63; xchg esp, eax; and al, 0x80; add [rax], al; add [rax+1], cl; ret 0x394c;
0xffffffff8181dc94: and dword ptr [rax+0x66000000], 0xffff883; xchg esp, eax; ret;
0xffffffff82328a7b: and dword ptr [rax-0x3b], 0x10; mov edi, 0xbb8faa99; pop rbp; xchg edi, esp; iretd;
0xffffffff816a88cb: and dword ptr [rax], 0x20000001; add [rax], al; add [rcx+0xf], al; xchg esp, eax; ret 0x8944;
0xffffffff826d5c13: and dword ptr [rbp+0x73], 0xa; mov esp, [rbx+0x73]; ret;
0xffffffff822fd00b: and dword ptr [rdi-0x67], 0xfcc5a337; pop rsp; iretd;
0xffffffff82317d56: and dword ptr [rip-0x1b879d45], 0x7d; pop rsp; int1; and ch, dl; call qword ptr [rbp-0x231696a];
0xffffffff816e7f12: and eax, 0x10; shr eax, 4; add rsp, 0x10; ret;
0xffffffff81e00ede: and eax, 0x15cc8; leave; ret;
0xffffffff8252748b: and eax, 0x161fed76; xchg esp, eax; iretd;
0xffffffff8265a635: and eax, 0x24cfff94; xchg esp, eax; jmp far fword ptr [rdi+0x3fff9424];
0xffffffff8265a631: and eax, 0x256fff94; xchg esp, eax; dec edi; and al, 0x94; jmp far fword ptr [rdi+0x3fff9424];
0xffffffff82257e9c: and eax, 0x27726117; sub al, 0x23; pop rsp; pop rax; iretd;
0xffffffff8235bcc5: and eax, 0x297db19f; pop rsp; iretd;
0xffffffff823490a2: and eax, 0x3470b76; adc eax, 0xd0fb7c76; leave; ret;
0xffffffff822f1cb5: and eax, 0x36698bb1; leave; cmp ecx, [rbp-0x13]; sbb [r14], cl; mov esp, 0xf3a857ee; ret;
0xffffffff823a5221: and eax, 0x39c8b947; pop rsp; ret 0x86a2;
0xffffffff814a4d2f: and eax, 0x415bd889; pop rsp; pop r14; pop r15; ret;
0xffffffff8346c367: and eax, 0x48fdd427; add esp, 8; pop rbx; pop r14; ret;
0xffffffff83466967: and eax, 0x48fdd481; add esp, 8; pop rbx; ret;
0xffffffff824306bc: and eax, 0x4e2fba70; pop rsp; cmovno esi, ebx; iretd;
0xffffffff8236c364: and eax, 0x68656458; fwait; lahf; leave; out 0x5f, al; call far fword ptr [rdi-0xe];
0xffffffff8249b2fc: and eax, 0x73984614; pop rsp; iretd;
0xffffffff8105fbbd: and eax, 0x82e339d8; mov rax, rsp; mov rsp, rax; ret;
0xffffffff822a9453: and eax, 0x86a6ba06; sti; leave; sub al, 0x35; add esp, 0xffffffd1; ret;
0xffffffff82230709: and eax, 0x9194fb31; adc al, 0x54; xor ecx, [rax+0x17911e00]; lahf; pop rsp; ret 0x5a29;
0xffffffff82325791: and eax, 0xa49db46f; fmul st, dword ptr [rax]; push rdx; add esp, esp; scasd [rdi]; ret 0xae7;
0xffffffff8254f48a: and eax, 0xa82369dc; bswap ecx; xchg esp, eax; jmp far fword ptr [rdi-0x3361e5d4];
0xffffffff82559478: and eax, 0xb1897943; xchg esp, eax; iretd;
0xffffffff822ead9b: and eax, 0xb3215a9f; xchg esp, ecx; push 0xffffffff9794efbe; scasd [rdi]; cmp bl, [rdx+0xce317e6]; ret;
0xffffffff8200bd58: and eax, 0xb4ffb6d3; rol dword ptr [rdi+rdi*8], 1; test r14b, 0xff; adc esp, 0xffffffb6; jmp far fword ptr [rax+0x3bff04d1];
0xffffffff822e351d: and eax, 0xc659f39f; or ch, [rsi]; xchg esp, eax; cdq; ret 0xe9c6;
0xffffffff822baf47: and eax, 0xce259b97; fcomp st, st(3); leave; iretd;
0xffffffff823ee23e: and eax, 0xcf62d2ef; xor [rbx], ch; xchg sp, ax; iretd;
0xffffffff835a8ec0: and eax, 0xedfdc384; xchg esp, eax; ret;
0xffffffff824478d6: and eax, 0xf5934b1a; mov esp, [rip+0x4aa86203]; cld; mov edx, 0x271da1ee; ret;
0xffffffff825d81eb: and eax, 0xf8878656; pushfq; xchg ecx, esp; and al, 0x94; ret 0x1d3c;
0xffffffff8174c640: and eax, 0xf; mov al, [rax-0x7d86bf50]; add rsp, 0x10; pop rbx; ret;
0xffffffff8187c9be: and eax, 0xff9f; mov [rbx+0x80], ax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81b34d9c: and eax, 0xff9f; mov [rbx+0x80], ax; xor eax, eax; add rsp, 8; pop rbx; ret;
0xffffffff827f85d3: and eax, 0xffffffff; add [rax], al; add [rax], al; xchg esp, eax; ret 0xfef0;
0xffffffff8170de8b: and eax, 1; add rsp, 0x10; ret;
0xffffffff813a0c0a: and eax, 1; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8183b801: and eax, 1; mov eax, r8d; add rsp, 4; ret;
0xffffffff82538d63: and eax, [rbp+0x7933de10]; stc; xchg esp, eax; in eax, dx; iretd;
0xffffffff823a8809: and eax, [rdi+0x23]; leave; fxch st, st(0); out dx, eax; mov dl, 0xd7; ret;
0xffffffff82237ae5: and eax, ecx; adc dl, bh; pop rsp; ret 0x156b;
0xffffffff816c2c70: and eax, ecx; add rsp, 0x20; ret;
0xffffffff8241a045: and eax, esp; xor eax, 0xd527fa95; pop rsp; mov cl, 0x8f; xchg edx, eax; ret;
0xffffffff834a156b: and ebp, edx; sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff822de3a3: and ebx, [rax]; fdiv st, st(1); pop rsp; ret 0x7d0c;
0xffffffff8236e877: and ebx, [rbp-0x54]; xchg esp, eax; mov cl, 0x4b; ret 0x4ea7;
0xffffffff817d5875: and ebx, [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff82303ab0: and ebx, [rsi-0x4c]; xchg esp, eax; and al, 0x17; ret 0x808f;
0xffffffff82307da5: and ebx, edx; leave; push rbp; cmc; iretd;
0xffffffff81994777: and ecx, 0xff9f; mov [rbx+0x80], cx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81be056b: and ecx, 0xff9f; mov [rbx+0x80], cx; xor eax, eax; add rsp, 8; pop rbx; ret;
0xffffffff8225c7b1: and ecx, 0xffffffd9; xchg esp, eax; cmpsb [rsi], [rdi]; ret;
0xffffffff82541536: and ecx, [rax+4]; leave; ret 0xc39;
0xffffffff8144f824: and ecx, [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff8116548d: and ecx, [rcx+rcx*4-0x10]; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff82513733: and ecx, ebp; fwait; cmp al, 0x96; xchg sp, ax; ret 0x29;
0xffffffff822d25f9: and ecx, edx; mov ebx, 0x2701c387; pop rsp; ret;
0xffffffff81034d29: and edi, [rbx+rax*8]; add [rbp+0x480b75c0], al; add esp, 0xf0; pop rbx; pop r14; ret;
0xffffffff82537826: and edi, [rip+0x1add5fc]; xchg esp, eax; outsd dx, [rsi]; pop rbx; iretd;
0xffffffff81e011ed: and edi, edi; mov rsp, rax; push r12; ret;
0xffffffff820056b2: and edi, edi; pop rsp; cmp [rip-0x38db9601], al; call qword ptr [rcx+0x50ff2128];
0xffffffff82516700: and edi, edi; test eax, 0xa55f5f22; leave; call rcx;
0xffffffff825635fe: and edi, edx; cli; pop rbp; pop rsp; jmp rsp;
0xffffffff824f5990: and edx, [rbp-0x27]; add [rax-0x73], ah; xchg esp, eax; enter 0x4480, 0xae; leave; ret 0x5cac;
0xffffffff82501739: and edx, [rbx+0x7e]; mov al, [0xb43894119bef6f83]; xchg esp, eax; cmp [rdi], edx; iretd;
0xffffffff823d358c: and edx, [rbx+rdi*2+0x4b]; pop rsp; xchg [rdi+0x1e78f964], esi; add al, 0x5d; ret;
0xffffffff82505019: and edx, [rbx-0x2f]; cmp eax, 0x932e25fb; imul eax, [rcx-0x8a2fbf0], 0x23; pop rsp; iretd;
0xffffffff823f947a: and edx, [rdi-0x5e9b7053]; leave; ret 0x95a6;
0xffffffff8232e0f7: and edx, eax; add al, 0xb; mov eax, [0x4be5c16c935ffa99]; xor eax, edi; xchg esp, eax; ret 0x79dd;
0xffffffff8347c755: and edx, ebx; std; add rsp, 8; pop rbx; ret;
0xffffffff82343906: and edx, edi; mov [rdi-0x13], edx; adc esp, [rdx]; pop rsp; iretd;
0xffffffff8346c765: and edx, esp; std; add rsp, 8; pop rbx; ret;
0xffffffff82321510: and esi, [rax-0x7e]; xchg bh, cl; cld; xchg esp, eax; movsb [rdi], [rsi]; ret 0xe5f4;
0xffffffff82370f5c: and esi, [rcx+0x2ce39d8d]; sbb byte ptr [rip+0x3704891e], 0xaf; leave; ret 0xb99f;
0xffffffff822835ab: and esi, [rdi]; xchg rsp, rax; iretd;
0xffffffff834a0c6b: and esi, ebx; sar ch, 1; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff8250d655: and esi, edx; mov esp, ecx; xchg esi, eax; ret 0x5439;
0xffffffff8231ae6d: and esi, edx; mov esp, edi; pop rcx; adc [rbp+0x57537f4e], dh; iretd;
0xffffffff8183b800: and r8d, 1; mov eax, r8d; add rsp, 4; ret;
0xffffffff82384cdd: and r9b, dil; xchg rsp, rax; ret 0x50d5;
0xffffffff823490a1: and rax, 0x3470b76; adc eax, 0xd0fb7c76; leave; ret;
0xffffffff8249b2fb: and rax, 0x73984614; pop rsp; iretd;
0xffffffff816c2c6f: and rax, rcx; add rsp, 0x20; ret;
0xffffffff826882b9: andps xmm4, [rcx+0x75]; leave; jmp far fword ptr [rcx+rbp*2+0x27];
0xffffffff82678801: andps xmm4, [rcx+0x75]; leave; jmp qword ptr [rbx+3];
0xffffffff82a01a8c: bnd ret 0x11;
0xffffffff824cd85f: bnd ret 0x1529;
0xffffffff82a50188: bnd ret 0x15;
0xffffffff82266a5d: bnd ret 0x164d;
0xffffffff82425cc4: bnd ret 0x181f;
0xffffffff8224c09f: bnd ret 0x1b7f;
0xffffffff82524b4c: bnd ret 0x1fac;
0xffffffff8228017d: bnd ret 0x2179;
0xffffffff822ad33c: bnd ret 0x21a6;
0xffffffff824201a1: bnd ret 0x239a;
0xffffffff824849a8: bnd ret 0x2b64;
0xffffffff823eeada: bnd ret 0x2b7f;
0xffffffff822a3d87: bnd ret 0x3127;
0xffffffff82390914: bnd ret 0x3844;
0xffffffff82473e94: bnd ret 0x3b22;
0xffffffff8256a69e: bnd ret 0x419d;
0xffffffff8228cea4: bnd ret 0x4739;
0xffffffff825266c2: bnd ret 0x4cab;
0xffffffff822c0729: bnd ret 0x4e5f;
0xffffffff82448aef: bnd ret 0x4ff6;
0xffffffff8264ffe1: bnd ret 0x4fff;
0xffffffff823e29d9: bnd ret 0x5651;
0xffffffff823a3b1a: bnd ret 0x5e2f;
0xffffffff8224ff7d: bnd ret 0x606;
0xffffffff81728a12: bnd ret 0x65ff;
0xffffffff82356f9d: bnd ret 0x683f;
0xffffffff8236ef10: bnd ret 0x68df;
0xffffffff822d10f3: bnd ret 0x6b47;
0xffffffff822d10f4: bnd ret 0x6b47;
0xffffffff8242168b: bnd ret 0x6cce;
0xffffffff8231d97c: bnd ret 0x6e8;
0xffffffff82549f14: bnd ret 0x7271;
0xffffffff82251360: bnd ret 0x7510;
0xffffffff82454f10: bnd ret 0x78fc;
0xffffffff812099d6: bnd ret 0x7ee0;
0xffffffff8264ffdd: bnd ret 0x7fff;
0xffffffff822cec9d: bnd ret 0x81fd;
0xffffffff82330251: bnd ret 0x86e5;
0xffffffff82414af5: bnd ret 0x8bee;
0xffffffff82402935: bnd ret 0x8c3a;
0xffffffff822b401a: bnd ret 0x8dd1;
0xffffffff824cd4bd: bnd ret 0x92b1;
0xffffffff823b9e1a: bnd ret 0x9887;
0xffffffff824e60c3: bnd ret 0x9aaf;
0xffffffff824f74f0: bnd ret 0x9d65;
0xffffffff8225104a: bnd ret 0x9e29;
0xffffffff8251a950: bnd ret 0x9f7;
0xffffffff823cc637: bnd ret 0xa303;
0xffffffff8230bab3: bnd ret 0xa744;
0xffffffff82497f4a: bnd ret 0xaefe;
0xffffffff8233788b: bnd ret 0xafc5;
0xffffffff824fdcd3: bnd ret 0xb335;
0xffffffff824fdcd2: bnd ret 0xb335;
0xffffffff82285f08: bnd ret 0xbb75;
0xffffffff824665a4: bnd ret 0xbbe2;
0xffffffff823d23a6: bnd ret 0xbe6d;
0xffffffff8246a29f: bnd ret 0xc419;
0xffffffff824a3726: bnd ret 0xc45d;
0xffffffff8222b633: bnd ret 0xc729;
0xffffffff82528d40: bnd ret 0xc8c0;
0xffffffff823b71df: bnd ret 0xca1;
0xffffffff82349291: bnd ret 0xcb03;
0xffffffff8227042a: bnd ret 0xccfd;
0xffffffff824ef027: bnd ret 0xced7;
0xffffffff8237b48d: bnd ret 0xd0fe;
0xffffffff82409aca: bnd ret 0xd816;
0xffffffff8251660e: bnd ret 0xdaeb;
0xffffffff823c8f18: bnd ret 0xdee2;
0xffffffff82565628: bnd ret 0xe814;
0xffffffff8256562a: bnd ret 0xe814;
0xffffffff824fbdf2: bnd ret 0xe9bb;
0xffffffff815ef657: bnd ret 0xebff;
0xffffffff8264ffe4: bnd ret 0xefff;
0xffffffff8247c437: bnd ret 0xf3e3;
0xffffffff835a6e0a: bnd ret 0xfe4c;
0xffffffff814528ba: bnd ret 0xffd5;
0xffffffff823de883: bnd ret 0xffe7;
0xffffffff810360aa: bnd ret;
0xffffffff823d0437: bnd ret;
0xffffffff8156138f: bsf eax, [rsp]; add eax, r8d; add rsp, 4; ret;
0xffffffff816c2c7d: bsf ecx, [rsp]; shl rdi, cl; mov rax, rdi; add rsp, 0x20; ret;
0xffffffff816c2c7c: bsf rcx, [rsp]; shl rdi, cl; mov rax, rdi; add rsp, 0x20; ret;
0xffffffff812c3cee: bsr ecx, [rsp]; add cl, 1; mov eax, 1; shl rax, cl; add rsp, 8; ret;
0xffffffff816bc48c: bsr ecx, [rsp]; mov eax, 0x1f; sub eax, ecx; add rsp, 4; ret;
0xffffffff812c3ced: bsr rcx, [rsp]; add cl, 1; mov eax, 1; shl rax, cl; add rsp, 8; ret;
0xffffffff81b2ff47: bswap eax; add rsp, 0x18; ret;
0xffffffff8254f48f: bswap ecx; xchg esp, eax; jmp far fword ptr [rdi-0x3361e5d4];
0xffffffff82270fe0: bswap edx; leave; xor esi, edi; xor [rsp+rdx*8+0x65e62bb2], ecx; iretd;
0xffffffff8265a3ec: bts [rdi+rdi*8-0x6b5561], edx; mov edi, 0x2fff94a9; test eax, 0xa87fff94; xchg esp, eax; call far fword ptr [rdi-0x58];
0xffffffff811e3a63: cdq; add [rax], al; add [rbx-0x77], cl; pop rsp; xor eax, 0x8327eb30; ret;
0xffffffff8253833f: cdq; add eax, edx; pop rsp; xor eax, 0xf54ff6f8; ret;
0xffffffff8225637c: cdq; add esp, edx; cmpsd [rsi], [rdi]; ret;
0xffffffff82658d7e: cdq; dec edi; xchg esp, eax; cdq; call far fword ptr [rdi+0xfff9994];
0xffffffff8141847f: cdq; fadd st, qword ptr [rbp-0x17441500]; cmpsb [rsi], [rdi]; out dx, al; leave; jmp qword ptr [rsi+0xf];
0xffffffff8346fcf3: cdq; in eax, dx; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8264ef59: cdq; leave; call far fword ptr [rdi+0x2fffc999];
0xffffffff8264ef5d: cdq; leave; jmp far fword ptr [rdi];
0xffffffff82258fef: cdq; leave; out 0xf9, al; mov ah, [rdi]; ret 0x2ecd;
0xffffffff824d5a0a: cdq; leave; ret;
0xffffffff823ca3ac: cdq; leave; sahf; outsb dx, [rsi]; sub bl, [rcx+0x49d77090]; ret 0x39aa;
0xffffffff82655ec5: cdq; movsb [rdi], [rsi]; dec dword ptr [rdi-0x30005b6b]; xchg esp, eax; movsb [rdi], [rsi]; jmp far fword ptr [rdi-0x6d];
0xffffffff82397db2: cdq; out dx, al; xchg esp, eax; jmp far fword ptr [rdx-0xbca9cef];
0xffffffff8242019d: cdq; pop rcx; leave; mov dl, dh; ret 0x239a;
0xffffffff81aed9f0: cdq; pop rsp; jmp qword ptr [rsi+0x66];
0xffffffff8245fe4a: cdq; pop rsp; xor [rbp+0x43], eax; sub ebp, [rcx-0xe]; iretq;
0xffffffff8225a067: cdq; pop sp; lahf; mov al, [0xd78c1bec52f07660]; outsb dx, [rsi]; call qword ptr [rdi];
0xffffffff8347515e: cdq; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8348cdf3: cdq; sbb al, 0xd2; std; add rsp, 8; pop rbx; ret;
0xffffffff82562435: cdq; sub esp, edi; iretd;
0xffffffff822f8682: cdq; xchg ebx, eax; or eax, 0x96774c70; xchg esp, eax; cmp dword ptr [rip+0x5422469b], 4; ret;
0xffffffff8171de93: cdq; xchg esp, eax; cdq; jmp qword ptr [rsi+0xf];
0xffffffff8146eb93: cdq; xchg esp, eax; jmp qword ptr [rsi+0xf];
0xffffffff8256badc: cdq; xchg esp, eax; sbb ch, al; push 0x6ba553f9; xchg esp, eax; iretd;
0xffffffff815b26f6: cdqe; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff817cbfa7: cdqe; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8103817d: cdqe; add rsp, 0x10; pop rbx; ret;
0xffffffff8114b234: cdqe; add rsp, 0x10; ret;
0xffffffff810ec019: cdqe; add rsp, 0x18; pop rbx; ret;
0xffffffff81601714: cdqe; add rsp, 0x18; ret;
0xffffffff8113d107: cdqe; add rsp, 0x28; pop rbx; ret;
0xffffffff81968820: cdqe; add rsp, 0x30; pop rbx; pop r14; ret;
0xffffffff818e1cb5: cdqe; add rsp, 0x30; pop rbx; ret;
0xffffffff81c5bb74: cdqe; add rsp, 0x30; ret;
0xffffffff817896ee: cdqe; add rsp, 0x50; pop rbx; ret;
0xffffffff8198c6a8: cdqe; add rsp, 0x70; ret;
0xffffffff81c822cf: cdqe; add rsp, 0x80; pop rbx; pop r14; ret;
0xffffffff810aefb8: cdqe; add rsp, 0x90; pop rbx; pop r14; pop r15; ret;
0xffffffff810af0cd: cdqe; add rsp, 0x90; pop rbx; pop r14; pop rbp; ret;
0xffffffff810cb84d: cdqe; add rsp, 0xb8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8182828c: cdqe; add rsp, 8; pop rbx; ret;
0xffffffff82668178: cdqe; pop rsp; call far fword ptr [rdi];
0xffffffff812b0293: clc; add [rax+0x19], ecx; leave; or rax, rcx; ret;
0xffffffff814b9c2a: clc; add [rax], al; add [rax+0xf], al; xchg esp, eax; sar byte ptr [rdx+0x42], 0x29; ret 0x8141;
0xffffffff81172502: clc; add [rax], al; add [rax-0x7b], cl; leave; cmove rax, rcx; ret;
0xffffffff812016bf: clc; add [rax], al; add [rdi+rcx], al; xchg esp, eax; ret 0xc148;
0xffffffff811efd70: clc; add [rdi], ecx; xchg esp, eax; ret 0x4c8b;
0xffffffff814970a7: clc; add [rdi], ecx; xchg esp, eax; ret;
0xffffffff81858ab9: clc; add [rdi], ecx; xchg esp, eax; rol dword ptr [rcx+0x2003f1], 0; mov eax, ecx; ret;
0xffffffff8105d94a: clc; add [rdi], ecx; xchg esp, eax; ror byte ptr [rax], 0xc8; ret;
0xffffffff8192f464: clc; add al, 0xf; xchg esp, eax; ror byte ptr [rax], 0xc8; ret;
0xffffffff8115903f: clc; add al, [rax]; add al, ch; mov eax, 0x4800ea80; add esp, 8; ret;
0xffffffff815ee85c: clc; add cl, [rdi]; xchg esp, eax; ret 0x8948;
0xffffffff81018aed: clc; add cl, [rdi]; xchg esp, eax; ret 0xf983;
0xffffffff8190e248: clc; add cl, [rdi]; xchg esp, eax; ret;
0xffffffff817078f6: clc; add ecx, [rdi]; xchg esp, eax; ret 0x4b9;
0xffffffff816ebbe5: clc; add ecx, [rdi]; xchg esp, eax; ret;
0xffffffff8174ac24: clc; add ecx, [rdi]; xchg esp, eax; shl byte ptr [rax], 0xc8; ret;
0xffffffff8100cad5: clc; add esi, esi; rcl dword ptr [rax], 0xf; xchg esp, eax; ret 0xd038;
0xffffffff81234571: clc; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff8166c7d7: clc; add rsp, 0x18; pop rbp; ret;
0xffffffff810f837f: clc; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff81b8b91a: clc; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff816c2c86: clc; add rsp, 0x20; ret;
0xffffffff819e0aa0: clc; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff81410711: clc; add rsp, 0x58; pop rbx; pop r14; pop r15; ret;
0xffffffff81517409: clc; add rsp, 0x78; pop rbx; pop r14; pop r15; ret;
0xffffffff814aa04a: clc; add rsp, 0xa0; pop rbx; pop r14; pop r15; ret;
0xffffffff819e0e7b: clc; add rsp, 0xc8; pop rbx; pop r14; pop r15; ret;
0xffffffff823490a0: clc; and rax, 0x3470b76; adc eax, 0xd0fb7c76; leave; ret;
0xffffffff8182a0a4: clc; dec dword ptr [rdi]; xchg esp, eax; ret 0x474;
0xffffffff8182a059: clc; dec dword ptr [rdi]; xchg esp, eax; ret 0x4f74;
0xffffffff8181dc9b: clc; dec dword ptr [rdi]; xchg esp, eax; ret;
0xffffffff83472194: clc; enter 0xfdd3, 0x48; add esp, 8; pop rbx; ret;
0xffffffff82697eea: clc; imul esi, eax, 0x61; pop rsp; mov esp, 0x139f6cb8; call rbx;
0xffffffff823c81a0: clc; leave; clc; sysexit;
0xffffffff822773be: clc; leave; cmp al, 0x55; int3; ror byte ptr [rbp+0x1e], 0xb5; ret 0x4b6f;
0xffffffff8264ed9d: clc; leave; jmp far fword ptr [rdi-0x50003608];
0xffffffff8264eda1: clc; leave; jmp far fword ptr [rdi-0x60003609];
0xffffffff82246193: clc; leave; ret 0x4b7d;
0xffffffff82546546: clc; lodsb [rsi]; or eax, 0xdfd68f5f; xchg esp, eax; punpckhwd mm6, [rbx]; iretd;
0xffffffff8166c703: clc; mov [rax+8], rcx; add rsp, 8; pop rbp; ret;
0xffffffff8166cc98: clc; mov [rax], rcx; mov rax, [rbp-0x38]; add rsp, 0x40; pop rbp; ret;
0xffffffff8166c7d3: clc; mov rax, [rbp-8]; add rsp, 0x18; pop rbp; ret;
0xffffffff812f6a95: clc; mov rsp, rbp; pop rbp; ret;
0xffffffff816e48df: clc; or cl, [rdi]; xchg esp, eax; ror byte ptr [rax], 0xc8; ret;
0xffffffff8224e701: clc; outsb dx, [rsi]; leave; shl qword ptr [rip+0x6f85397f], 0x5f; iretd;
0xffffffff825d81ef: clc; pushfq; xchg ecx, esp; and al, 0x94; ret 0x1d3c;
0xffffffff8346f27d: clc; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff823db895: clc; sbb [rax+0x1d437ee2], ax; leave; sbb eax, ebx; ret 0x7064;
0xffffffff824a799b: clc; sbb bl, [rax+0x392a1045]; fwait; pop rsp; iretd;
0xffffffff81041dac: clc; sete al; add rsp, 4; ret;
0xffffffff822340d1: clc; std; pop rsp; pop rbx; push rbp; ret 0x548b;
0xffffffff822514fa: clc; sub [rdi+0x38], ch; pop rsp; call qword ptr [rcx-0x67f22c67];
0xffffffff8347be94: clc; sub edx, ebx; std; add rsp, 8; pop rbx; ret;
0xffffffff8254a416: clc; xchg [rbp+rdx-0x90653af], esp; mov ch, 0x31; or rax, 0x7384b2c; ret;
0xffffffff82524319: clc; xchg edx, ebx; leave; xor esp, [rsi]; ret;
0xffffffff8265a235: clc; xchg esp, eax; call far fword ptr [rdi-0x70006b08];
0xffffffff8265a23d: clc; xchg esp, eax; call far fword ptr [rdi];
0xffffffff81767adc: clc; xchg esp, eax; call qword ptr [rax+0x699b9be8];
0xffffffff8223961c: clc; xchg esp, eax; mov cl, 2; xor al, [rax+0x2742569c]; adc edi, [rdx+0x62]; iretd;
0xffffffff8232e105: clc; xchg esp, eax; ret 0x79dd;
0xffffffff83466294: clc; xchg esp, edx; std; add rsp, 8; pop rbx; ret;
0xffffffff82408113: clc; xor al, 0x69; xchg [rdx+0x78bc9cdf], edx; pop rsp; xor eax, 0x32b7034e; ret;
0xffffffff822691d5: clc; xor al, [rbx-0x182ec185]; stc; leave; ret;
0xffffffff81125af3: cld; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff811f42be: cld; add [rdi], ecx; xchg esp, eax; ret;
0xffffffff812331ec: cld; add al, 0xf; xchg esp, eax; ret;
0xffffffff8166cd33: cld; add rsp, 0x28; pop rbp; ret;
0xffffffff8166c62d: cld; add rsp, 0x30; pop rbp; ret;
0xffffffff8166cf25: cld; add rsp, 0x38; pop rbp; ret;
0xffffffff82442c6d: cld; cli; xchg [rbp-0x24aa8fae], esp; notrack call rdi;
0xffffffff8224b554: cld; cmpsd [rsi], [rdi]; mov esp, es; push rcx; faddp st(7), st; ret 0x8979;
0xffffffff82702c71: cld; in eax, dx; mov edi, 0x7561740a; leave; jmp qword ptr [rbx+3];
0xffffffff8252b316: cld; leave; cmp eax, [rip-0x7d5e9468]; fst qword ptr [rbx-0x16], st; or esp, [rbx+0x3d]; ret 0x9371;
0xffffffff8224ce4a: cld; leave; imul edx, [rsi-0x3c], 0x777e4d20; iretd;
0xffffffff82536af6: cld; leave; push qword ptr [rax+7]; and [rcx+0x3b], al; cmpsb [rsi], [rdi]; ret;
0xffffffff8166cf22: cld; mov eax, [rbp-4]; add rsp, 0x38; pop rbp; ret;
0xffffffff824b78f2: cld; mov r9d, 0x53a37392; pop rsp; cmc; iretd;
0xffffffff8232c1d1: cld; mov rbp, 0x7c7a12281d0690f1; mov eax, 0x14640aa9; leave; and ecx, esp; call qword ptr [rcx];
0xffffffff82541532: cld; nop; sbb edx, [rdi]; and ecx, [rax+4]; leave; ret 0xc39;
0xffffffff82681be5: cld; or [rsi-0x11], dh; xchg esp, eax; ror dword ptr [rdx], 0x74; iretd;
0xffffffff826cfc37: cld; outsw dx, [rsi]; fstp dword ptr [rsi+0xe8c6c28], st; mov esp, [rbx+0x73]; ret;
0xffffffff8268815b: cld; outsw dx, [rsi]; or dl, [rcx+0x75]; leave; call far fword ptr [rax];
0xffffffff8230e6d3: cld; pop rax; pop rbx; leave; xor eax, 0xc5a6c17f; jmp qword ptr [rax-0x4b7f4d0b];
0xffffffff8129cdd8: cld; pop rsp; iretd;
0xffffffff81ae7720: cld; pop rsp; jmp qword ptr [rsi+0x66];
0xffffffff82365795: cld; pop rsp; mov bl, [rsi-0x190cfefc]; in al, 0xb6; or [rbp-0x5dc05c1f], dl; ret 0xc59a;
0xffffffff82571033: cld; pop rsp; mov eax, 0x68d5df66; mov eax, gs:[0xba6cd9d8a6740731]; iretd;
0xffffffff82571034: cld; pop rsp; mov eax, 0x68d5df66; mov eax, gs:[0xba6cd9d8a6740731]; iretd;
0xffffffff824f5847: cld; pop rsp; pop rdx; ret;
0xffffffff823ef3e5: cld; pop rsp; ret;
0xffffffff823353a5: cld; pop rsp; test al, 0x59; fimul st, word ptr [rip+0x772d1dce]; ret;
0xffffffff826cff2b: cld; push qword ptr [rsi+0x6c9563fa]; fimul st, dword ptr [rsi]; mov esp, [rbx+0x73]; ret;
0xffffffff822a87fa: cld; push rax; pop rsp; jmp qword ptr [rax-0x2bbfd25c];
0xffffffff8236c1c7: cld; push rbx; leave; iretq;
0xffffffff826fb092: cld; xchg esp, eax; cmc; mov al, [0x63aae8f46cefd50b]; jmp rdx;
0xffffffff82478bb4: cld; xchg esp, eax; cmp [rdx-0x3b2ac921], ebp; and cl, [rbp+rbp*2-0x66736c65]; mov dl, 0xbc; ret;
0xffffffff8235a670: cld; xchg esp, eax; iretd;
0xffffffff82321515: cld; xchg esp, eax; movsb [rdi], [rsi]; ret 0xe5f4;
0xffffffff82452911: cld; xchg esp, eax; pop rsp; fbld st, tbyte ptr [rax+0x2cf2e8de]; iretd;
0xffffffff8342ee8c: cld; xlat [rbx]; std; add rsp, 8; pop rbx; ret;
0xffffffff812b9ffc: cli; add [rax], al; add [rdi], cl; xchg esp, eax; ret 0xf741;
0xffffffff81937c96: cli; add [rdi], ecx; xchg esp, eax; ret 0xca30;
0xffffffff81a6a994: cli; add [rdi], ecx; xchg esp, eax; ret;
0xffffffff819f6608: cli; add [rdi], ecx; xchg esp, edx; add [rax], al; add [rax-0x7d], cl; ret 0x4801;
0xffffffff817d54a4: cli; add cl, [rdi]; xchg esp, eax; ret 0xc220;
0xffffffff81b959dc: cli; add ecx, [rdi]; xchg esp, eax; ret 0xd008;
0xffffffff8175665b: cli; add ecx, [rdi]; xchg esp, eax; ret;
0xffffffff82692f07: cli; add esp, ebp; iretd;
0xffffffff811b5569: cli; and cl, [rdi]; xchg esp, eax; ret 0xda08;
0xffffffff825635ff: cli; cli; pop rbp; pop rsp; jmp rsp;
0xffffffff82315bf3: cli; cmp bl, [rbx-0x19]; add esp, esi; int 0x55; ret 0x3dcf;
0xffffffff8171f768: cli; dec dword ptr [rdi]; xchg esp, eax; ret 0x840;
0xffffffff8171fdf6: cli; dec dword ptr [rdi]; xchg esp, eax; ret 0xc808;
0xffffffff81713c79: cli; in eax, dx; mov [rcx], eax; xor eax, eax; add rsp, 4; ret;
0xffffffff82558964: cli; lea ecx, [rcx-0x692053d5]; sbb al, 0x76; or eax, 0x5b4d27e5; pop rsp; ret;
0xffffffff823e6f1d: cli; leave; adc [rsi+0x66a926ce], ebp; insb [rdi], dx; xlat [rbx]; iretd;
0xffffffff81c0a932: cli; leave; jmp qword ptr [rsi+0x2e];
0xffffffff81485590: cli; leave; jmp qword ptr [rsi+0x66];
0xffffffff8255fb40: cli; leave; or al, cl; mov esi, 0x751950f3; scasb [rdi]; iretd;
0xffffffff8227feab: cli; leave; pop rsp; ret;
0xffffffff824f5a99: cli; leave; rcr eax, 0xa9; int 0xf7; imul edi, ebx, 0x237ea68e; ret 0x6d6f;
0xffffffff823cdbb1: cli; leave; ret;
0xffffffff8233b666: cli; lodsb [rsi]; pop rcx; leave; sub eax, 0x637d62bd; iretd;
0xffffffff83493292: cli; mov bh, 0xd1; std; add rsp, 8; pop rbx; ret;
0xffffffff825480f2: cli; mov esp, [rdi+rbp+0xf575933]; mov esi, 0xcdd355e2; call qword ptr [rcx+rcx*8+0x50];
0xffffffff825480f3: cli; mov esp, [rdi+rbp+0xf575933]; mov esi, 0xcdd355e2; call qword ptr [rcx+rcx*8+0x50];
0xffffffff8228f747: cli; mov esp, ss; ret;
0xffffffff8246cba2: cli; movsd [rdi], [rsi]; leave; iretd;
0xffffffff811d6079: cli; or [rdi], cl; xchg esp, eax; ret 0xf201;
0xffffffff82563600: cli; pop rbp; pop rsp; jmp rsp;
0xffffffff82237ae8: cli; pop rsp; ret 0x156b;
0xffffffff82437acb: cli; pop rsp; xor al, 0x12; insb [rdi], dx; ret;
0xffffffff83441992: cli; rcl dh, 1; std; add rsp, 8; pop rbx; ret;
0xffffffff82305d7d: cli; scasb [rdi]; xchg esp, eax; cli; ret 0x9cff;
0xffffffff82328ecb: cli; sub ch, ch; sbb dl, [rbp-0xa]; pop rsp; ret 0xdeb6;
0xffffffff8171351e: cli; sub edx, [rsi]; add rsp, 0x10; pop rbx; ret;
0xffffffff8268825e: cli; test dword ptr [rcx], 0x7561540b; leave; jmp far fword ptr [rbp-0xb];
0xffffffff82442c6f: cli; xchg [rbp-0x24aa8fae], esp; notrack call rdi;
0xffffffff82442c6e: cli; xchg [rbp-0x24aa8fae], esp; notrack call rdi;
0xffffffff835aa73c: cli; xchg esp, eax; iretd;
0xffffffff81767843: cli; xchg esp, eax; jmp qword ptr [rsi+0x2e];
0xffffffff8255ce6d: cli; xchg esp, eax; push rsp; xchg ebx, eax; iretd;
0xffffffff82392f93: cli; xchg esp, eax; stosd [rdi]; adc al, bl; movsb [rdi], [rsi]; ret 0x48b9;
0xffffffff8108dd70: cmc; add ah, al; pop r9; std; add esp, eax; ret;
0xffffffff8108dddf: cmc; add ah, al; push r9; std; add esp, eax; ret;
0xffffffff8108de4c: cmc; add ah, al; std; add esp, eax; ret;
0xffffffff820099c8: cmc; add al, 0xff; leave; add eax, edi; jmp qword ptr [rdx+0x3cff8712];
0xffffffff823b259c: cmc; add eax, 0x96f19f0e; xchg esp, eax; ret 0x2449;
0xffffffff8250f84b: cmc; and al, [rax-0x1f3e378a]; in al, 0x60; or eax, 0x463c4b72; add esp, ebx; ret 0x9e3a;
0xffffffff8250f84c: cmc; and al, [rax-0x1f3e378a]; in al, 0x60; or eax, 0x463c4b72; add esp, ebx; ret 0x9e3a;
0xffffffff82564f5d: cmc; leave; insb [rdi], dx; adc al, 0x1c; ret 0x9888;
0xffffffff8264edad: cmc; leave; jmp far fword ptr [rdi-0x5000360c];
0xffffffff82478dfa: cmc; leave; ret 0x2ab5;
0xffffffff82688581: cmc; mov esi, 0x7561540a; leave; call rdi;
0xffffffff82688549: cmc; mov esi, 0x7561540a; leave; jmp far fword ptr [rax-0x410a8801];
0xffffffff826885a8: cmc; mov esi, 0x7561540a; leave; jmp qword ptr [rdi+rcx*8-2];
0xffffffff826885e9: cmc; mov esi, 0x7561540b; leave; jmp far fword ptr [rbp-0x19];
0xffffffff824478da: cmc; mov esp, [rip+0x4aa86203]; cld; mov edx, 0x271da1ee; ret;
0xffffffff822b0ca6: cmc; mov esp, eax; shl ebx, 0x4e; mov eax, [0x87248957b79fbcae]; iretd;
0xffffffff8244bc57: cmc; outsd dx, [rsi]; xchg ebx, esp; jmp far fword ptr [rbp-0x6613a3f];
0xffffffff82226f0d: cmc; pop rcx; leave; ret 0x6a20;
0xffffffff82668039: cmc; pop rsp; call far fword ptr [rdi];
0xffffffff82291320: cmc; pop rsp; popfq; adc cl, [rax-0x4f]; ret 0xc0f8;
0xffffffff823ac19e: cmc; pop rsp; ret;
0xffffffff824630b1: cmc; pop sp; enter 0xb802, 0xc; push rax; ret 0xec51;
0xffffffff82688651: cmc; push 0x7561540a; leave; jmp far fword ptr [rax+0x6bdabeff];
0xffffffff826885f5: cmc; push 0x7561540c; leave; jmp far fword ptr [rbp-0x19];
0xffffffff8346f4bd: cmc; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82245eb2: cmc; xchg [rdi], esp; iretd;
0xffffffff8255f0ef: cmc; xchg [rsi], esp; fisub st, dword ptr [rsi+0x680865cc]; iretd;
0xffffffff823693d4: cmc; xchg esi, esp; iretd;
0xffffffff82462bf3: cmc; xchg esp, eax; add [rbx+rax*4-0x32], edi; and [rdi-0x45f2e787], esp; ret 0x275;
0xffffffff82569802: cmc; xchg esp, eax; call qword ptr [rax];
0xffffffff82519b24: cmc; xchg esp, eax; fisubr st, dword ptr [rax]; mov rsp, 0x67b63207dbc4a3e9; ret;
0xffffffff811bedc7: cmc; xchg esp, eax; stosb [rdi]; add [rax-0x77], cl; ret;
0xffffffff8251b8e9: cmc; xchg esp, eax; xchg esi, eax; ret 0xbc40;
0xffffffff81b09f98: cmovae eax, ecx; mov [r8], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff826499a0: cmovbe esp, ecx; call far fword ptr [rdi-0x10001ebb];
0xffffffff81b19269: cmove ebx, eax; mov eax, ebx; add rsp, 8; pop rbx; ret;
0xffffffff81772f19: cmove ecx, [rcx-0x3b7cb708]; adc [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8199f319: cmove ecx, [rcx-0x3b7cb708]; sbb [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8171e9d6: cmove ecx, [rcx-0x3b7cb710]; adc [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81865f47: cmove ecx, [rcx-0x3b7cb710]; and [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81c529c3: cmove ecx, [rcx-0x3b7cb710]; cmp [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff817e1084: cmove ecx, [rcx-0x3b7cb720]; adc [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81992dbe: cmove ecx, esi; mov [rsp], ecx; add eax, [rsp]; adc eax, 0; add rsp, 4; ret;
0xffffffff81b229f8: cmovg ecx, edx; mov eax, ecx; add rsp, 0x10; ret;
0xffffffff82648518: cmovge esp, esi; call far fword ptr [rdi+0x4c];
0xffffffff8168981b: cmovl eax, ecx; mov edx, 0xffffffff; test ecx, ecx; cmovs eax, edx; add rsp, 4; ret;
0xffffffff81347c91: cmovl ecx, [rcx-0x3b7cb708]; adc [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81bd23f6: cmovl ecx, [rcx-0x3b7cb708]; sbb [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81c73d8d: cmovl ecx, [rcx-0x3b7cb708]; sub [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8149d476: cmovl ecx, [rcx-0x3b7cb708]; xor [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff812b69f2: cmovl ecx, [rcx-0x3b7cb710]; adc [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8118e054: cmovl ecx, [rcx-0x3b7cb710]; sbb [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff815e8cdd: cmovl ecx, [rcx-0x3b7cb710]; sub [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81347faf: cmovl ecx, [rcx-0x3b7cb720]; adc [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81c2e44b: cmovl ecx, [rcx-0x3b7cb720]; sbb [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff824a35be: cmovl ecx, [rdx]; sub esp, ebx; ret 0x2f39;
0xffffffff816bc902: cmovne eax, edx; mov [r14+8], ecx; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff8264f05c: cmovno ecx, ecx; dec dword ptr [rdi]; leave; call far fword ptr [rdi-0x400036c1];
0xffffffff811f0d7d: cmovns ecx, [rbx+0x3b48104e]; adc [rdi], cl; xchg esp, eax; ret;
0xffffffff81162279: cmovns esp, [rbx-0x7a]; xchg esp, eax; add [rax], al; add [rax-0x75], cl; xchg esp, eax; ret 0x1a0;
0xffffffff8266829c: cmovo ebx, [rdi+rdi*8-1]; pop rsp; call far fword ptr [rdi+0x3c];
0xffffffff8264809c: cmovp esp, edi; jmp far fword ptr [rdi+0x5fffe748];
0xffffffff811c80e2: cmovs eax, [rbx+0x394818c7]; shl dword ptr [rsp+rsi*8+0x48], 0x85; leave; sete al; ret;
0xffffffff8139ef1f: cmovs eax, [rbx+0x415b10c4]; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81684ec7: cmovs eax, [rbx+0x415b18c4]; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81379390: cmovs eax, [rbx+0x415b30c4]; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81486345: cmovs eax, [rcx+0x168c4]; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81004339: cmovs eax, [rcx+0x80c4]; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8124f5b6: cmovs eax, [rcx+0x88c4]; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81bba443: cmovs eax, [rcx+0x90c4]; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81601b95: cmovs eax, [rcx+0xa0c4]; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81608727: cmovs eax, [rcx+0xc0c4]; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8133d1e2: cmovs eax, [rcx+0xc8c4]; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8133d431: cmovs eax, [rcx+0xd0c4]; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8133e766: cmovs eax, [rcx+0xf8c4]; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81689825: cmovs eax, edx; add rsp, 4; ret;
0xffffffff820074b0: cmovs ebx, [rdi-1]; pop rsp; sbb al, [rip-0x38ea9a01]; push qword ptr [rbx+0x48]; pop rdi; call qword ptr [rax+0x1a];
0xffffffff81333838: cmovs ecx, [rcx-0x3b7cb710]; adc [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff810ba193: cmovs ecx, [rcx-0x3b7cb728]; adc [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8179fee6: cmovs ecx, [rcx-0x3b7cb728]; and [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8174082a: cmovs ecx, [rcx-0x3b7cb728]; sbb [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8156c6d7: cmovs ecx, [rdi]; leave; shr rcx, 9; mov rax, 0x3fffffffffffff; and rax, rcx; ret;
0xffffffff811c5fd6: cmovs edi, [rcx]; ror byte ptr [rdi], 1; xchg esp, eax; ret;
0xffffffff816a88c8: cmovs esi, edi; and dword ptr [rax], 0x20000001; add [rax], al; add [rcx+0xf], al; xchg esp, eax; ret 0x8944;
0xffffffff8116586e: cmovs esp, [rbx-0x7f]; xchg esp, eax; add [rax], al; add [rax-0x75], cl; pushfq; ret;
0xffffffff8114bb07: cmp [r11+0x41], r11b; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff8186c7f0: cmp [r11+0x41], r11b; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81670718: cmp [r15], cl; xchg esp, eax; ret;
0xffffffff8113fb5d: cmp [r9], sil; shl dh, cl; add al, 0xf; xchg esp, eax; ret 0x8b48;
0xffffffff824cc957: cmp [rax+0x356aa141], bp; pop rax; leave; sbb eax, 0x493f422f; mov [rcx], bh; ret;
0xffffffff824cc958: cmp [rax+0x356aa141], ebp; pop rax; leave; sbb eax, 0x493f422f; mov [rcx], bh; ret;
0xffffffff8225c7ab: cmp [rax+0x5c], ecx; sbb bh, 0x9d; and ecx, 0xffffffd9; xchg esp, eax; cmpsb [rsi], [rdi]; ret;
0xffffffff816bf7ab: cmp [rax+rax-0x7c], bl; fisttp dword ptr [rdi], st; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; ret;
0xffffffff816afd46: cmp [rax+rax], al; add [rax-0x75], cl; pop rax; or dword ptr [rax+0x5c], 8; add rsp, 4; ret;
0xffffffff823d4974: cmp [rax-0x25], bh; pop rdi; hlt; mov ah, 0x31; pop rsp; iretd;
0xffffffff81b12602: cmp [rax], dl; movzx eax, word ptr [rsi+0xb2]; mov [rsi+0x88], ax; mov word ptr [rsi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff8225e976: cmp [rax], edx; scasb [rdi]; leave; sub edx, [rdx]; mov es, [rdx+0x3f]; ret 0xb79a;
0xffffffff81b12601: cmp [rax], r10b; movzx eax, word ptr [rsi+0xb2]; mov [rsi+0x88], ax; mov word ptr [rsi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff816832a1: cmp [rbp+0x10], dh; add rsp, 0x40; pop rbx; pop r14; ret;
0xffffffff8143aad3: cmp [rbp+0x12], dh; add rsp, 0x40; pop rbx; pop r14; pop r15; ret;
0xffffffff83480e3a: cmp [rbp+0x16], dh; mov eax, ebx; add rsp, 0x40; pop rbx; pop r14; ret;
0xffffffff815bb126: cmp [rbp+0x19], dh; mov rax, rbx; add rsp, 0x40; pop rbx; pop r14; ret;
0xffffffff812f3931: cmp [rbp+0x1e], dh; add rsp, 0x40; pop rbx; pop r14; ret;
0xffffffff813135bd: cmp [rbp+0x25], dh; add rsp, 0x40; pop rbx; pop rbp; ret;
0xffffffff819acd43: cmp [rbp+0x28], dh; add rsp, 0x40; ret;
0xffffffff812601ae: cmp [rbp+0x65], dh; mov eax, ebx; add rsp, 0x40; pop rbx; pop r14; ret;
0xffffffff83481053: cmp [rbp+0x6b], dh; mov eax, ebx; add rsp, 0x40; pop rbx; pop r14; ret;
0xffffffff82498ebc: cmp [rbp+0x72], ebx; leave; iretd;
0xffffffff810e8315: cmp [rbp+0xa], dh; add rsp, 0x40; pop rbx; pop r14; pop r15; ret;
0xffffffff81a76bd0: cmp [rbp+0xa], dh; xor al, bl; and al, 1; add rsp, 0x40; pop rbx; ret;
0xffffffff816135fa: cmp [rbp+0xb], dh; add rsp, 0x40; pop rbx; pop rbp; ret;
0xffffffff812f30a9: cmp [rbp+0xb], dh; mov rax, r14; add rsp, 0x40; pop rbx; pop r14; ret;
0xffffffff81b6c01f: cmp [rbp+0xd], dh; add rsp, 0x40; pop rbx; pop r14; pop rbp; ret;
0xffffffff81ade8d6: cmp [rbp+0xf], dh; add rsp, 0x40; ret;
0xffffffff810e83d6: cmp [rbp+5], dh; add rsp, 0x40; ret;
0xffffffff81823544: cmp [rbp+5], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff81acb91b: cmp [rbp+6], dh; add rsp, 0x40; pop rbx; ret;
0xffffffff81a8956e: cmp [rbp+7], dh; mov eax, ecx; add rsp, 0x40; ret;
0xffffffff813a352e: cmp [rbp+8], dh; add rsp, 0x40; pop rbx; pop r14; ret;
0xffffffff8121b185: cmp [rbp+9], dh; add rsp, 0x40; pop rbx; pop r14; pop rbp; ret;
0xffffffff81056cb5: cmp [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff81020400: cmp [rbx+0x41], bl; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81000610: cmp [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff814c095d: cmp [rbx+0x41], r11b; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff8252510b: cmp [rbx-0x13], ah; sti; or al, 0xc; xchg ebp, eax; pop rsp; ret;
0xffffffff83498754: cmp [rbx-0x2f], ah; std; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff82566b4f: cmp [rbx-0x77e0447b], ebx; pop rsp; iretd;
0xffffffff8347c754: cmp [rbx], ah; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82467924: cmp [rbx], ch; xchg esp, eax; ret 0x67c0;
0xffffffff823f3daa: cmp [rbx], dl; leave; sub esp, esp; iretd;
0xffffffff818355d6: cmp [rcx+rcx*4-0x10], cl; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81845a79: cmp [rcx+rcx*4-0x10], ecx; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff823693d1: cmp [rcx+rcx*8], ch; cmc; xchg esi, esp; iretd;
0xffffffff82455714: cmp [rcx-0x35e68c5b], al; mov esi, es; pop rsp; ret 0xf9f2;
0xffffffff814ada7b: cmp [rcx-0x3b7cb728], cl; sbb [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff815d389a: cmp [rcx], dh; rol byte ptr [rcx-0x7d], cl; std; dec dword ptr [rdi]; xchg esp, eax; ret 0xdaf7;
0xffffffff8113ccee: cmp [rcx], dh; shl dh, cl; add al, 0xf; xchg esp, eax; ret 0x8b48;
0xffffffff8220d5cc: cmp [rcx], dh; shr bl, 5; mov eax, 0xffffffde; add rsp, 4; pop rbx; ret;
0xffffffff8252ac43: cmp [rcx], esp; scasb [rdi]; xchg esp, eax; mov fs, [rax-0x4fe84941]; ret;
0xffffffff823cb7b1: cmp [rdi+0x36], cl; pop rsp; xor [rbx+0x46], edi; imul edi, esp, 0xa86b9f71; iretd;
0xffffffff823650c2: cmp [rdi+rcx*4-0x552bd26b], eax; int 0x3c; pop rsp; ret 0xa1ff;
0xffffffff8265a5b5: cmp [rdi+rdi*8-0x6bc891], dl; fbstp tbyte ptr [rsi], st; xchg esp, eax; jmp far fword ptr [rdi-0x10006bca];
0xffffffff822f3245: cmp [rdi-0x56], al; int3; sbb [rsi-0x7d238cac], ah; movsxd eax, [rsi-0x6faa478b]; xchg esp, eax; ret 0x8abc;
0xffffffff8133cf08: cmp [rdi], cl; test [rsi+0x48000000], esi; add esp, 0x40; pop rbx; pop rbp; ret;
0xffffffff8137284b: cmp [rdi], cl; xchg esp, eax; ret 0xc748;
0xffffffff81670719: cmp [rdi], cl; xchg esp, eax; ret;
0xffffffff81b25479: cmp [rdi], cl; xchg esp, eax; shl dword ptr [rsi-0x7b], 0xf6; setne al; and al, cl; ret;
0xffffffff816f730a: cmp [rdi], dl; add rsp, 0x18; cdqe; pop rbx; pop rbp; ret;
0xffffffff824b4d12: cmp [rdx+0x152f41f2], esi; xchg esp, eax; ret;
0xffffffff824b4d11: cmp [rdx+0x152f41f2], r14; xchg esp, eax; ret;
0xffffffff823ba794: cmp [rdx+5], dl; pop r15; pop rsp; push rsp; mov dl, 0x55; ret;
0xffffffff8241b41b: cmp [rdx-0x35a4c15f], eax; pop rsp; sbb ebp, [rbp+0x5312b4ac]; iretd;
0xffffffff824fc41d: cmp [rdx-0x47], ebp; xchg esp, eax; mov [0xa9f8ac24466f05f5], eax; adc [rbp-0x66], edx; jmp qword ptr [rcx];
0xffffffff818a7f37: cmp [rdx], al; add [rax], al; add rsp, 0x10; pop rbx; ret;
0xffffffff81b62374: cmp [rdx], ch; pop rsp; dec dword ptr [rcx+0x5e415be8]; pop rbp; ret;
0xffffffff823676a5: cmp [rip-0x1f9e0aee], dl; out dx, eax; pop rsp; iretd;
0xffffffff81912654: cmp [rip-0xf0084], bh; mov esp, [rax+0xf00000c]; mov [rbp+0x75003678], bh; sbb ecx, [rax-0x7f]; ret;
0xffffffff8257217c: cmp [rsp+rax*8-0x6b], eax; pop rdi; pop rsp; jmp qword ptr [rsi-0x281434b8];
0xffffffff824945bc: cmp ah, [rdi+rcx-0x1df7e3f]; fist word ptr [rdi*4-0x77c62966], st; xchg esp, eax; call qword ptr [rsi+0x58];
0xffffffff8236ad07: cmp ah, [rdi]; sbb [rdx], edi; test eax, 0xa3dcb959; xchg esp, eax; iretd;
0xffffffff823ee23d: cmp ah, [rip-0x309d2d11]; xor [rbx], ch; xchg sp, ax; iretd;
0xffffffff8224ce49: cmp ah, bh; leave; imul edx, [rsi-0x3c], 0x777e4d20; iretd;
0xffffffff8222ee84: cmp ah, ch; pop rsp; xor byte ptr [rcx-0xa87b68b], 0xb8; iretd;
0xffffffff813f19dd: cmp al, 0x11; add [rdi], cl; xchg esp, eax; ret;
0xffffffff82564f5a: cmp al, 0x19; in al, 0xf5; leave; insb [rdi], dx; adc al, 0x1c; ret 0x9888;
0xffffffff81561388: cmp al, 0x24; mov eax, 0xffffffff; bsf eax, [rsp]; add eax, r8d; add rsp, 4; ret;
0xffffffff81652730: cmp al, 0x25; leave; jmp qword ptr [rsi+0x66];
0xffffffff8250f857: cmp al, 0x46; add esp, ebx; ret 0x9e3a;
0xffffffff816adbff: cmp al, 0x48; add esp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff81b0496d: cmp al, 0x48; add esp, 0x30; pop rbx; pop rbp; ret;
0xffffffff822636d8: cmp al, 0x49; leave; int1; and al, 0xf1; ret 0x7909;
0xffffffff8236fa9f: cmp al, 0x49; pop rsp; iretd;
0xffffffff823d9f89: cmp al, 0x6f; leave; movsxd eax, [rbx-0x445fc542]; push rdx; insd [rdi], dx; ret;
0xffffffff82229c04: cmp al, 0x72; fcmovb st, st(5); xchg esp, eax; fwait; xchg [rsi+rax+0x2f258bfd], edx; ret 0xfa53;
0xffffffff8241f0d9: cmp al, 0x7e; test [rbx-0x6f679e10], ebp; xchg [rsp+rcx*2+0x41ec8be0], esp; adc al, 0xa9; stosb [rdi]; iretd;
0xffffffff82513739: cmp al, 0x96; xchg sp, ax; ret 0x29;
0xffffffff82513736: cmp al, 0x96; xchg sp, ax; ret 0x29;
0xffffffff822514f0: cmp al, 0x9f; mov [0x47158850db0289c7], al; clc; sub [rdi+0x38], ch; pop rsp; call qword ptr [rcx-0x67f22c67];
0xffffffff816413eb: cmp al, 0xa; add [rdi], cl; xchg esp, eax; ret;
0xffffffff82338fb9: cmp al, 0xac; sub eax, 0xd0370ff8; xchg esp, eax; mov [rcx-0x46], gs; xchg bh, bl; iretd;
0xffffffff8255f0eb: cmp al, 0xb3; fsubr st, dword ptr [rdi]; cmc; xchg [rsi], esp; fisub st, dword ptr [rsi+0x680865cc]; iretd;
0xffffffff825ccfab: cmp al, 0xbb; or ch, [rdx+0x76]; out 0xae, al; in eax, dx; leave; ret 0x3b81;
0xffffffff8243204e: cmp al, 0xbf; leave; ret;
0xffffffff81034d2a: cmp al, 0xc3; add [rbp+0x480b75c0], al; add esp, 0xf0; pop rbx; pop r14; ret;
0xffffffff8346ad9c: cmp al, 0xd4; std; add rsp, 8; pop rbx; ret;
0xffffffff8234dd49: cmp al, 0xe2; xchg esp, eax; lahf; jmp qword ptr [rax+0x54];
0xffffffff82379a75: cmp al, 0xe3; cmp bl, al; pop rsp; ret 0xe575;
0xffffffff82256375: cmp al, 0xf6; sbb [rdx+0x45d5e0d7], bl; cdq; add esp, edx; cmpsd [rsi], [rdi]; ret;
0xffffffff824188b9: cmp al, 0xfe; push rax; sbb esp, ecx; adc edi, [rdi-0x2f]; iretd;
0xffffffff83431cfc: cmp al, 3; sub al, 0xf; xchg esp, eax; ret 0x8d48;
0xffffffff81426cf0: cmp al, 6; leave; jmp qword ptr [rsi+0x66];
0xffffffff812d2f7a: cmp al, [rax]; add [rax-0x7c3ca4ff], dh; leave; mov [rbx], ecx; pop rbx; ret;
0xffffffff8241012a: cmp al, [rcx]; leave; xlat [rbx]; ret 0xc487;
0xffffffff823c178a: cmp al, [rdx]; add ebp, [rip-0x6c493091]; cmp bl, [rdi+0x7edb1203]; pop rsp; ret;
0xffffffff822e0f92: cmp al, ch; leave; sub eax, [rcx]; mov al, 0x17; ret 0x7e90;
0xffffffff8242e9dd: cmp bh, [rdi+0xa]; add al, 0xec; xchg [rdx-0x4e], esp; push 0x37bc25a7; sbb ah, [rdi+rax*2+0x4d]; call rsp;
0xffffffff81e01933: cmp bh, bh; mov rdi, rax; mov rdx, [rsp+8]; mov rax, [rsp]; add rsp, 0x18; jmp rdi;
0xffffffff82315bf4: cmp bl, [rbx-0x19]; add esp, esi; int 0x55; ret 0x3dcf;
0xffffffff823c1793: cmp bl, [rdi+0x7edb1203]; pop rsp; ret;
0xffffffff82379a77: cmp bl, al; pop rsp; ret 0xe575;
0xffffffff823eb36a: cmp bl, bh; mov esi, 0xbde33bd4; pop rsp; cmp eax, 0xd4fb9c62; ret 0xfed6;
0xffffffff82237b56: cmp bl, dl; mov edx, 0x41444c35; rcl byte ptr [rax-0xcc7c40a], 0xb2; pop rsp; ret;
0xffffffff8100d30c: cmp byte ptr [rax+0x149001f], 0x5f; sbb [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8230c6c2: cmp byte ptr [rbp+0x6f3e40a9], 0xc5; xchg esp, eax; push rbp; fsubr st, qword ptr [rbx+0xf]; fsincos; ret 0xe748;
0xffffffff823ebda8: cmp byte ptr [rdx+0x3e], 0x4f; pop rsp; adc eax, [rsi]; imul edx, [rdi], 0x7facb986; int 7; iretd;
0xffffffff822740e5: cmp ch, bl; leave; iretd;
0xffffffff824bf493: cmp ch, dh; leave; pop rsp; add eax, 0xf8261b62; cld; ret;
0xffffffff823465aa: cmp cl, [rbx-5]; add esp, eax; adc al, 0x15; ret;
0xffffffff8162194a: cmp cl, [rdi]; xchg esp, eax; ret;
0xffffffff81976064: cmp cl, ah; pop rsp; add [rax-0x39], ecx; ret;
0xffffffff82446ade: cmp cl, al; adc esp, esi; call qword ptr [rbx-0x10];
0xffffffff8241be10: cmp dh, 0x62; xlat [rbx]; xlat [rbx]; pop rsp; ret 0x4500;
0xffffffff8245129b: cmp dh, 0xcb; xchg [rbp+0x40777e1e], esp; or [rcx], ch; fcom st, dword ptr [rbp-0x6e]; ret 0xd70;
0xffffffff823dea84: cmp dh, [rax+0x50]; pop rsp; ret 0x2fe7;
0xffffffff8235e619: cmp dh, [rcx+0x3d2a5c64]; xchg ecx, esp; ret 0x7a85;
0xffffffff8223094a: cmp dh, [rdi]; pop rsp; sub cl, cl; ret;
0xffffffff824c373b: cmp dh, [rip-0x113fa7bd]; mov esp, [rcx-0x52]; ret;
0xffffffff8242e9dc: cmp dil, [rdi+0xa]; add al, 0xec; xchg [rdx-0x4e], esp; push 0x37bc25a7; sbb ah, [rdi+rax*2+0x4d]; call rsp;
0xffffffff82281eb7: cmp dl, [rbx-0xd]; leave; pop rsp; iretd;
0xffffffff822cedbd: cmp dl, [rsi]; leave; ret 0x6970;
0xffffffff822fc6d7: cmp dl, dh; leave; out 0x3c, al; call qword ptr [rdi-0x5307470f];
0xffffffff8149d537: cmp dword ptr [rax+0x5b000000], 0x41; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff822f1ff1: cmp dword ptr [rbp+0x3f], 0xb; adc r15d, [rbx]; nop; pop rsp; iretd;
0xffffffff817191fe: cmp dword ptr [rbp+1], 0x415be889; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff82522b0f: cmp dword ptr [rbx+0x1e], 0xe968b80e; ficom st, word ptr [rbx-0x60815d0a]; leave; mov [rbx-0x14], esi; ret;
0xffffffff822691d7: cmp dword ptr [rbx+0x3e], 0xffffffd1; out 0xf9, eax; leave; ret;
0xffffffff812016be: cmp eax, 0; add [rax], al; add al, 0xf; xchg esp, eax; ret 0xc148;
0xffffffff81035467: cmp eax, 0x17b10cf; add [rdi], cl; xchg esp, eax; ret;
0xffffffff8343a2e5: cmp eax, 0x186725; add [rdi], cl; xchg esp, eax; shr bl, 2; xor eax, eax; ret;
0xffffffff82537827: cmp eax, 0x1add5fc; xchg esp, eax; outsd dx, [rsi]; pop rbx; iretd;
0xffffffff824b5e94: cmp eax, 0x1c0db80c; pop rsp; out 0x49, al; int 0xea; sar dword ptr [rip-0x4708d5a2], cl; ret;
0xffffffff8197dde6: cmp eax, 0x1c43cc4; add [rdi], cl; xchg esp, eax; ret 0xca20;
0xffffffff8122959e: cmp eax, 0x23f0194; add [rdi], cl; xchg esp, eax; ret 0x2040;
0xffffffff810b0211: cmp eax, 0x25c5801; add [rbp+6], dh; add rsp, 8; pop rbx; ret;
0xffffffff8264f071: cmp eax, 0x3a2fffc9; leave; dec dword ptr [rdi]; cmp cl, cl; call far fword ptr [rdi];
0xffffffff812177dd: cmp eax, 0x415bfff8; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff8141878e: cmp eax, 0x48f08944; add esp, 0x40; pop rbx; pop r14; pop rbp; ret;
0xffffffff81417b49: cmp eax, 0x48f08944; add esp, 0x48; pop rbx; pop r14; pop rbp; ret;
0xffffffff83488a4f: cmp eax, 0x48fdd260; add esp, 8; pop rbx; ret;
0xffffffff83472d4f: cmp eax, 0x48fdd3bd; add esp, 8; pop rbx; pop r14; ret;
0xffffffff8346c54f: cmp eax, 0x48fdd425; add esp, 8; pop rbx; ret;
0xffffffff8345664f: cmp eax, 0x48fdd584; add esp, 8; pop rbx; ret;
0xffffffff8101ef8f: cmp eax, 0x48fffffb; add esp, 8; pop rbx; pop r14; ret;
0xffffffff824177c9: cmp eax, 0x4d6989e9; xchg esp, eax; outsb dx, [rsi]; ret 0x6a69;
0xffffffff82569f61: cmp eax, 0x4dd1c6fe; fcom st, qword ptr [rbp+0x1748e88c]; outsd dx, [rsi]; mov esp, [rcx]; call far fword ptr [rbx];
0xffffffff824c62eb: cmp eax, 0x818411b7; lahf; cmpsb [rsi], [rdi]; xchg esp, eax; jmp rbp;
0xffffffff82558e0f: cmp eax, 0x8c46278d; adc al, 0x5a; add esp, ebx; pop rcx; iretd;
0xffffffff8250501c: cmp eax, 0x932e25fb; imul eax, [rcx-0x8a2fbf0], 0x23; pop rsp; iretd;
0xffffffff82351c54: cmp eax, 0xa1651dfe; fdiv st, st(0); adc esp, ebp; mov edi, 0x5da29229; iretd;
0xffffffff822ee711: cmp eax, 0xa72f8f9f; mov bh, 0xe4; pop rsp; ret;
0xffffffff8243c0d4: cmp eax, 0xba86c375; leave; cwde; xor al, 0x8d; ret 0x8416;
0xffffffff8233adee: cmp eax, 0xcae16314; mov esi, 0x15e03cfc; leave; mov al, 0x9d; pushfq; iretd;
0xffffffff8197fbe2: cmp eax, 0xcbebffd6; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff822edb00: cmp eax, 0xd12eaeda; xchg ecx, eax; pop rbp; mov eax, 0xf03754ea; xchg esp, eax; iretd;
0xffffffff824d805f: cmp eax, 0xd18c7034; pop rsp; and bh, al; ret;
0xffffffff8247ace5: cmp eax, 0xda5b80d5; xchg esp, eax; mov bl, 0x1b; ret;
0xffffffff822ae20f: cmp eax, 0xe5806c5e; mov esi, 0x73deedbd; leave; ret 0xaffc;
0xffffffff81912655: cmp eax, 0xfff0ff7c; mov esp, [rax+0xf00000c]; mov [rbp+0x75003678], bh; sbb ecx, [rax-0x7f]; ret;
0xffffffff8352f582: cmp eax, 0xffffff81; inc dword ptr [rax]; xchg esp, eax; cmp eax, 0xffffff81; call qword ptr [rax-0x69];
0xffffffff813f2162: cmp eax, [rcx+0xf]; xchg esp, eax; ret;
0xffffffff8126395b: cmp eax, [rdx]; add rsp, 4; ret;
0xffffffff82332c36: cmp eax, [rsi+0x28]; mov esp, esp; sub [rbx], dl; ret;
0xffffffff8343293a: cmp eax, [rsi+rdi*8+0x415bc031]; pop rsp; pop r14; pop r15; ret;
0xffffffff82284570: cmp eax, [rsi+rdx*4+0x61529f67]; lfs esi, [rbx-0x3e4d8a4b]; mov eax, [rbx+0x65]; xchg esp, eax; or edi, edi; ret 0x62cb;
0xffffffff8176adf1: cmp eax, ebp; xchg esp, eax; jmp qword ptr [rsi+0x66];
0xffffffff8235cf9f: cmp ebp, 0xfffffff1; add esp, edx; movsd [rdi], [rsi]; sbb ebp, [rcx]; ret 0xb141;
0xffffffff8251e711: cmp ebp, [rbp+0x6065e509]; fisubr st, dword ptr [rdx+0x3d]; pop rsp; shl ch, cl; iretd;
0xffffffff823a9452: cmp ebp, [rdi+0x4f]; mov ebp, 0x83708415; pop rsp; iretd;
0xffffffff823d5c6e: cmp ebp, esp; leave; add [rax], ebx; mov r14d, [rbx]; push qword ptr [r9+0x3b]; iretd;
0xffffffff82307111: cmp ebx, [rbx+0x40b822b8]; scasb [rdi]; xor dl, ah; leave; iretd;
0xffffffff81b0cdaf: cmp ebx, [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff824b7cc0: cmp ebx, [rbx]; and [rbp-0x24d95070], ebp; out 0xd4, eax; xchg esp, eax; ret;
0xffffffff8176be1b: cmp ecx, [rcx-0x39]; and [rax], r8b; add [rax], al; add al, ch; xchg [rdx-1], esp; jmp far fword ptr [rax+0x1e850f80];
0xffffffff81b3f49b: cmp ecx, [rdi]; xchg [rax], esp; add al, 0; add [rbp+0x31], al; in al, 0x83; ret;
0xffffffff813f283e: cmp ecx, [rdi]; xchg esp, eax; ret;
0xffffffff822a515b: cmp ecx, [rsi]; xchg edx, eax; pop rsp; ret;
0xffffffff81348853: cmp ecx, esi; add [r8-0x77], rcx; fsubp st(0), st; xchg ecx, eax; sbb esp, esi; jmp qword ptr [rbp+0x48];
0xffffffff835262eb: cmp edi, 0x10ffffff; mov esp, [rip-0x7f]; call qword ptr [rax-0x74];
0xffffffff8355e003: cmp edi, 0x10ffffff; mov esp, [rsi-0x7f]; jmp rax;
0xffffffff83567e63: cmp edi, 0x10ffffff; pop rdx; cmp edi, 0xe0ffffff; xchg esp, eax; ret 0xff81;
0xffffffff835646a3: cmp edi, 0x20ffffff; leave; mov ecx, 0xffffff81; jmp qword ptr [rax-0x7e4637];
0xffffffff83566c3b: cmp edi, 0x20ffffff; leave; mov edi, 0xffffff81; jmp qword ptr [rax];
0xffffffff8355dff3: cmp edi, 0x30ffffff; xchg [rsi-0x7f], esp; jmp qword ptr [rax-0x7e5979];
0xffffffff81b15c0f: cmp edi, 0x31; leave; test rax, rax; mov eax, 0xfffffff4; cmovne eax, ecx; ret;
0xffffffff835650eb: cmp edi, 0x40ffffff; leave; mov ebx, 0xffffff81; push qword ptr [rax-0x35]; mov ebx, 0xffffff81; call qword ptr [rax-0x7e4435];
0xffffffff8356897b: cmp edi, 0x40ffffff; leave; ret;
0xffffffff83563feb: cmp edi, 0x40ffffff; xchg esp, eax; mov eax, 0xffffff81; call rax;
0xffffffff83568983: cmp edi, 0x50ffffff; leave; ret;
0xffffffff83568013: cmp edi, 0x60ffffff; leave; ret 0xff81;
0xffffffff83565b93: cmp edi, 0x60ffffff; pop rsp; mov ebp, 0xffffff81; push qword ptr [rax+0x5c]; mov ebp, 0xffffff81; jmp qword ptr [rsi-0x7cb612];
0xffffffff8355c203: cmp edi, 0x70ffffff; leave; mov eax, [0xa1ca60ffffffff81]; cmp edi, 0xe0ffffff; iretd;
0xffffffff83519c03: cmp edi, 0x70ffffff; pop rsp; add eax, 0xffffff81; call rax;
0xffffffff83565b9b: cmp edi, 0x70ffffff; pop rsp; mov ebp, 0xffffff81; jmp qword ptr [rsi-0x7cb612];
0xffffffff835262db: cmp edi, 0x70ffffff; xchg [rip-0x7f], esp; call qword ptr [rax-0x7eda76];
0xffffffff835180d3: cmp edi, 0x70ffffff; xchg esp, eax; add eax, [rcx-1]; adc byte ptr [rdi-0x7efd], 0xff; call qword ptr [rax];
0xffffffff835684e3: cmp edi, 0x80ffffff; pop rsp; ret;
0xffffffff8355dfeb: cmp edi, 0x80ffffff; xchg [rsi-0x7f], ah; push qword ptr [rax]; xchg [rsi-0x7f], esp; jmp qword ptr [rax-0x7e5979];
0xffffffff83565c7b: cmp edi, 0x90ffffff; xchg esp, eax; mov ebp, 0xffffff81; call qword ptr [rax-0x7e4268];
0xffffffff83564ff3: cmp edi, 0x90ffffff; xchg esp, eax; mov ebx, 0xffffff81; jmp rax;
0xffffffff8356687b: cmp edi, 0x90ffffff; xchg esp, eax; mov edi, 0xffffff81; call rax;
0xffffffff83540a33: cmp edi, 0x90ffffff; xchg esp, eax; push 0xffffffffffffff81; jmp qword ptr [rax-0x6a];
0xffffffff8352da03: cmp edi, 0x90ffffff; xchg esp, eax; xor eax, 0xffffff81; jmp qword ptr [rax-0x6b];
0xffffffff835646ab: cmp edi, 0xa0ffffff; leave; mov ecx, 0xffffff81; call rax;
0xffffffff8352f4d3: cmp edi, 0xa0ffffff; pop rsp; cmp eax, 0xffffff81; jmp qword ptr [rax-0x7ec2a3];
0xffffffff8355dffb: cmp edi, 0xa0ffffff; xchg [rsi-0x7f], esp; call qword ptr [rax];
0xffffffff835168a3: cmp edi, 0xa0ffffff; xchg esp, eax; add [rcx-1], eax; rcl byte ptr [rcx+rax-0x7f], 1; call qword ptr [rax];
0xffffffff8352d77b: cmp edi, 0xb0ffffff; pop rsp; xor eax, 0xffffff81; jmp qword ptr [rax];
0xffffffff83565dd3: cmp edi, 0xd0ffffff; leave; mov ebp, 0xffffff81; jmp qword ptr [rax];
0xffffffff835646b3: cmp edi, 0xd0ffffff; leave; mov ecx, 0xffffff81; push qword ptr [rax-0x35]; mov ecx, 0xffffff81; call qword ptr [rax-0x7e4630];
0xffffffff8356801b: cmp edi, 0xd0ffffff; leave; ret 0xff81;
0xffffffff83563ff3: cmp edi, 0xd0ffffff; xchg esp, eax; mov eax, 0xffffff81; jmp qword ptr [rax];
0xffffffff83566883: cmp edi, 0xd0ffffff; xchg esp, eax; mov edi, 0xffffff81; call qword ptr [rax-0x7e4069];
0xffffffff8351c2e3: cmp edi, 0xe0ffffff; leave; or eax, 0xffffff81; jmp qword ptr [rax-0x36];
0xffffffff83567e6b: cmp edi, 0xe0ffffff; xchg esp, eax; ret 0xff81;
0xffffffff835219ab: cmp edi, 0xf0ffffff; pop rsp; adc eax, 0xffffff81; call qword ptr [rax+0x5e];
0xffffffff8355e80b: cmp edi, 0xf0ffffff; xchg [rdi-0x7f], esp; push qword ptr [rax]; mov [rdi-0x7f], ah; call qword ptr [rax-0x78];
0xffffffff8351c003: cmp edi, 0xf0ffffff; xchg esp, eax; or eax, 0xffffff81; call qword ptr [rax];
0xffffffff835238f3: cmp edi, 0xffffff; pop rsp; sbb eax, 0xffffff81; jmp qword ptr [rax];
0xffffffff8352f583: cmp edi, 0xffffff; xchg esp, eax; cmp eax, 0xffffff81; call qword ptr [rax-0x69];
0xffffffff83527783: cmp edi, 0xffffff; xchg esp, eax; sub [rcx-1], al; rcl byte ptr [rax+rbp-0x7f], 1; call qword ptr [rax];
0xffffffff823de642: cmp edi, [rdi+0x3506f941]; leave; iretd;
0xffffffff8197fbe1: cmp edi, [rip-0x3414002a]; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff82442c6c: cmp edi, esp; cli; xchg [rbp-0x24aa8fae], esp; notrack call rdi;
0xffffffff82365794: cmp edi, esp; pop rsp; mov bl, [rsi-0x190cfefc]; in al, 0xb6; or [rbp-0x5dc05c1f], dl; ret 0xc59a;
0xffffffff8113c141: cmp edx, [rbp-0x34]; add [rax-0x75], cl; xchg [rax+0x48000000], esp; sub eax, esi; ret;
0xffffffff8346aee7: cmp edx, esp; std; add rsp, 8; pop rbx; ret;
0xffffffff8343993d: cmp esi, 0x48; add esp, 0x10; ret;
0xffffffff8240444e: cmp esi, [rbx+rdx*2-0x2f3efec6]; leave; or al, 0x15; iretd;
0xffffffff8226e95a: cmp esi, [rdi-0x59]; xchg esp, eax; iretd;
0xffffffff81a322c3: cmp esi, ebp; pop rsp; add [rbx+0x41], bl; pop rsi; ret;
0xffffffff8234bbcf: cmp esi, ebp; pop rsp; iretd;
0xffffffff8246b2bb: cmp esi, ebp; pop rsp; nop; cmp bl, ah; ret;
0xffffffff8346f851: cmp esi, edx; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8240444d: cmp esi, gs:[rbx+rdx*2-0x2f3efec6]; leave; or al, 0x15; iretd;
0xffffffff8159b341: cmp esp, [rbx-0x7a]; add [rbx-0x7437f0fa], cl; or cl, [rdi]; leave; sub rax, rcx; ret;
0xffffffff8346af41: cmp rdx, r12; std; add rsp, 8; pop rbx; ret;
0xffffffff8230e169: cmpsb [rsi], [rdi]; adc esp, esp; movsxd edx, [rax+0x6c7fe88f]; jmp rsp;
0xffffffff8244af8c: cmpsb [rsi], [rdi]; adc esp, esp; pop r12; ret;
0xffffffff81c2795e: cmpsb [rsi], [rdi]; add [rbx+0x41], ebx; pop rsp; pop r14; pop r15; ret;
0xffffffff824b9c7c: cmpsb [rsi], [rdi]; and [rbx-0x7b74d60c], ebp; xchg esp, eax; add al, 0x2c; ret;
0xffffffff8251b8e8: cmpsb [rsi], [rdi]; cmc; xchg esp, eax; xchg esi, eax; ret 0xbc40;
0xffffffff8355e002: cmpsb [rsi], [rdi]; cmp edi, 0x10ffffff; mov esp, [rsi-0x7f]; jmp rax;
0xffffffff8355dff2: cmpsb [rsi], [rdi]; cmp edi, 0x30ffffff; xchg [rsi-0x7f], esp; jmp qword ptr [rax-0x7e5979];
0xffffffff8355dfea: cmpsb [rsi], [rdi]; cmp edi, 0x80ffffff; xchg [rsi-0x7f], ah; push qword ptr [rax]; xchg [rsi-0x7f], esp; jmp qword ptr [rax-0x7e5979];
0xffffffff8355dffa: cmpsb [rsi], [rdi]; cmp edi, 0xa0ffffff; xchg [rsi-0x7f], esp; call qword ptr [rax];
0xffffffff8346aee6: cmpsb [rsi], [rdi]; cmp edx, esp; std; add rsp, 8; pop rbx; ret;
0xffffffff8231ff13: cmpsb [rsi], [rdi]; cmpsb [rsi], [rdi]; push rcx; pop r12; xchg [rcx+0x7f], esp; iretd;
0xffffffff822bf169: cmpsb [rsi], [rdi]; fcomp st, st(2); mov eax, 0x1e83e7c6; pop rsp; iretd;
0xffffffff82493dcc: cmpsb [rsi], [rdi]; imul ebx, [rbx+rbp*4], 0x23; pop rsp; ret 0xc22e;
0xffffffff823446ca: cmpsb [rsi], [rdi]; leave; mov dl, 0xa3; iretd;
0xffffffff825256b3: cmpsb [rsi], [rdi]; mov ah, 0xda; add sp, di; and eax, 0xcd32345; mov al, bh; ret 0x5d82;
0xffffffff826884fa: cmpsb [rsi], [rdi]; mov eax, 0x75615412; leave; call rsi;
0xffffffff8245fd7a: cmpsb [rsi], [rdi]; mov edi, 0x60bca12f; adc esp, ecx; adc dl, ah; enter 0xdd96, 0xf2; iretd;
0xffffffff824e80f8: cmpsb [rsi], [rdi]; mov es, [rbx+0x1c598b87]; pop rsp; sub edi, esi; iretd;
0xffffffff82509b41: cmpsb [rsi], [rdi]; nop; cmpsd [rsi], [rdi]; push 0x31; xchg esp, eax; ret;
0xffffffff81418486: cmpsb [rsi], [rdi]; out dx, al; leave; jmp qword ptr [rsi+0xf];
0xffffffff81aecc6b: cmpsb [rsi], [rdi]; pop rsp; jmp qword ptr [rsi-0x70];
0xffffffff82373c2d: cmpsb [rsi], [rdi]; pop rsp; pop rdx; int3; mov ebp, 0x825c6bfa; ret 0xf049;
0xffffffff823a0c80: cmpsb [rsi], [rdi]; push r15; pop rsp; or [rip-0x7db6533b], esp; xor eax, 0xa415ac8f; call rbp;
0xffffffff8231ff14: cmpsb [rsi], [rdi]; push rcx; pop r12; xchg [rcx+0x7f], esp; iretd;
0xffffffff83474453: cmpsb [rsi], [rdi]; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82287c29: cmpsb [rsi], [rdi]; sbb al, 0x9e; shl dword ptr [rdi-0x6199aa69], cl; in al, dx; pop rsp; iretd;
0xffffffff82406f2b: cmpsb [rsi], [rdi]; xchg [rip-0x13531720], esp; iretd;
0xffffffff822a9456: cmpsb [rsi], [rdi]; xchg bl, bh; leave; sub al, 0x35; add esp, 0xffffffd1; ret;
0xffffffff8234bbcc: cmpsb [rsi], [rdi]; xchg ecx, edi; cmp esi, ebp; pop rsp; iretd;
0xffffffff813389c2: cmpsb [rsi], [rdi]; xchg esp, eax; add [rax-0x39], cl; mov eax, 0xe882e0a6; jmp qword ptr [rbp-0x76bbff6c];
0xffffffff8265a419: cmpsb [rsi], [rdi]; xchg esp, eax; call far fword ptr [rdi+0x1fff94a6];
0xffffffff8265a41d: cmpsb [rsi], [rdi]; xchg esp, eax; call far fword ptr [rdi];
0xffffffff8193f321: cmpsb [rsi], [rdi]; xchg esp, eax; dec dword ptr [rax-0x7b]; shl byte ptr [rsi+rcx*2+0x48], 0x89; ret;
0xffffffff824c62f2: cmpsb [rsi], [rdi]; xchg esp, eax; jmp rbp;
0xffffffff824c62f1: cmpsb [rsi], [rdi]; xchg esp, eax; jmp rbp;
0xffffffff8252f248: cmpsb [rsi], [rdi]; xchg esp, eax; lodsb [rsi]; ret 0x1b5d;
0xffffffff8236c04e: cmpsb [rsi], [rdi]; xchg esp, eax; xchg ebx, eax; ret;
0xffffffff8236c04d: cmpsb [rsi], [rdi]; xchg esp, eax; xchg ebx, eax; ret;
0xffffffff824cb5c8: cmpsb [rsi], [rdi]; xor eax, 0x4f39b3e4; xchg ecx, esp; adc eax, 0x251897d7; cmp al, 0xdb; ret;
0xffffffff8355e80a: cmpsd [rsi], [rdi]; cmp edi, 0xf0ffffff; xchg [rdi-0x7f], esp; push qword ptr [rax]; mov [rdi-0x7f], ah; call qword ptr [rax-0x78];
0xffffffff823fb75b: cmpsd [rsi], [rdi]; cwde; pop rsp; mov ebp, 0x405a239; ret;
0xffffffff8249877d: cmpsd [rsi], [rdi]; insb [rdi], dx; xchg esp, eax; mov ecx, 0xaf7c4b3; iretq;
0xffffffff8249877c: cmpsd [rsi], [rdi]; insb [rdi], dx; xchg esp, eax; mov ecx, 0xaf7c4b3; iretq;
0xffffffff8256c749: cmpsd [rsi], [rdi]; leave; and bh, [rcx+0x777c8cdb]; cwde; and eax, 0x8792fb3f; ret;
0xffffffff8240b37a: cmpsd [rsi], [rdi]; leave; iretd;
0xffffffff8141cb5f: cmpsd [rsi], [rdi]; leave; jmp qword ptr [rsi+0x66];
0xffffffff822be2ec: cmpsd [rsi], [rdi]; leave; push rsp; out 0x16, eax; ret;
0xffffffff8249eeea: cmpsd [rsi], [rdi]; leave; xor [rcx+0x55729965], edi; jmp qword ptr [rdi+0x75];
0xffffffff82551db8: cmpsd [rsi], [rdi]; lodsb [rsi]; xor [rax+0x5e0c41c9], edi; adc ebp, esp; xchg esp, eax; ret 0xf738;
0xffffffff822ee715: cmpsd [rsi], [rdi]; mov bh, 0xe4; pop rsp; ret;
0xffffffff8249ef88: cmpsd [rsi], [rdi]; mov ch, 0xc6; leave; ret;
0xffffffff822ee70f: cmpsd [rsi], [rdi]; mov ebp, 0x2f8f9f3d; cmpsd [rsi], [rdi]; mov bh, 0xe4; pop rsp; ret;
0xffffffff8224b555: cmpsd [rsi], [rdi]; mov esp, es; push rcx; faddp st(7), st; ret 0x8979;
0xffffffff810ac5c5: cmpsd [rsi], [rdi]; out 0x15, al; add esp, eax; ret 0x71;
0xffffffff823f9474: cmpsd [rsi], [rdi]; out 0x94, eax; test dh, 0x24; and edx, [rdi-0x5e9b7053]; leave; ret 0x95a6;
0xffffffff823a9869: cmpsd [rsi], [rdi]; out dx, al; xchg esp, eax; mov al, [0x187649510607c45e]; sahf; iretd;
0xffffffff82543b83: cmpsd [rsi], [rdi]; pop rsp; fisttp word ptr [rip+0x7172ba8], st; and esp, 0x66b85d8d; out 0x27, al; ret 0x9766;
0xffffffff82509b43: cmpsd [rsi], [rdi]; push 0x31; xchg esp, eax; ret;
0xffffffff834742f9: cmpsd [rsi], [rdi]; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8226e95c: cmpsd [rsi], [rdi]; xchg esp, eax; iretd;
0xffffffff8265a40d: cmpsd [rsi], [rdi]; xchg esp, eax; jmp far fword ptr [rdi-0x59];
0xffffffff826f04c2: cmpsd [rsi], [rdi]; xchg esp, eax; out 0x63, al; call far fword ptr [rbp+0x540d74f6];
0xffffffff822cae5c: cmpsd [rsi], [rdi]; xchg esp, eax; pop rdx; xchg ecx, eax; call far fword ptr [rax+0x20];
0xffffffff8239fb4a: cmpsd [rsi], [rdi]; xchg r8d, eax; insb [rdi], dx; insb [rdi], dx; pop rsp; iretd;
0xffffffff82258fee: cqo; leave; out 0xf9, al; mov ah, [rdi]; ret 0x2ecd;
0xffffffff818a5477: cwde; adc [rax], al; add [rdi], cl; xchg esp, eax; ret 0xc748;
0xffffffff82494d87: cwde; adc eax, 0xdf89ea08; xchg esp, eax; fild st, word ptr [rdi+0x417389e1]; leave; iretd;
0xffffffff81461f3c: cwde; add [rax], al; add [rax-0x7b], cl; leave; cmove rax, rcx; ret;
0xffffffff81c28ed6: cwde; add [rax], al; add [rbp+0x2a], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff81617356: cwde; add [rax], al; add [rbp+5], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff812f8d9f: cwde; add [rax], al; add [rbp+9], dh; add rsp, 0xa0; pop rbx; ret;
0xffffffff812f7e56: cwde; add [rbx+rbx*8+0x415b0874], al; pop rsp; pop r14; pop r15; ret;
0xffffffff815b26f7: cwde; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff817cbfa8: cwde; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8103817e: cwde; add rsp, 0x10; pop rbx; ret;
0xffffffff8114b235: cwde; add rsp, 0x10; ret;
0xffffffff810ec01a: cwde; add rsp, 0x18; pop rbx; ret;
0xffffffff81601715: cwde; add rsp, 0x18; ret;
0xffffffff8113d108: cwde; add rsp, 0x28; pop rbx; ret;
0xffffffff81968821: cwde; add rsp, 0x30; pop rbx; pop r14; ret;
0xffffffff818e1cb6: cwde; add rsp, 0x30; pop rbx; ret;
0xffffffff81c5bb75: cwde; add rsp, 0x30; ret;
0xffffffff817896ef: cwde; add rsp, 0x50; pop rbx; ret;
0xffffffff8198c6a9: cwde; add rsp, 0x70; ret;
0xffffffff81c822d0: cwde; add rsp, 0x80; pop rbx; pop r14; ret;
0xffffffff810aefb9: cwde; add rsp, 0x90; pop rbx; pop r14; pop r15; ret;
0xffffffff810af0ce: cwde; add rsp, 0x90; pop rbx; pop r14; pop rbp; ret;
0xffffffff810cb84e: cwde; add rsp, 0xb8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8182828d: cwde; add rsp, 8; pop rbx; ret;
0xffffffff8229c35c: cwde; cwde; mov ah, 9; leave; ret;
0xffffffff82371cfa: cwde; leave; cmpsd [rsi], [rdi]; movsb [rdi], [rsi]; or esi, edi; ret;
0xffffffff82255759: cwde; leave; fld st, dword ptr [rbp+0x72]; iretd;
0xffffffff81448c7f: cwde; leave; inc dword ptr [rax+rax*8-0xff88b]; or esi, [rbx+rbx+0x5b]; ret;
0xffffffff8224b672: cwde; leave; movsxd edi, [rcx-0x38b6cf51]; sysret;
0xffffffff82417934: cwde; leave; ret;
0xffffffff82485b7d: cwde; leave; ret;
0xffffffff8236f964: cwde; mov [0x38dc5d947e7935bf], eax; out 0xb9, al; leave; ret 0xd7dd;
0xffffffff8229c35d: cwde; mov ah, 9; leave; ret;
0xffffffff81042bb8: cwde; movsb [rdi], [rsi]; pop rsp; sub eax, 0xffffff8f; pop rbp; ret 0x8500;
0xffffffff8241f0e1: cwde; nop; xchg [rsp+rcx*2+0x41ec8be0], esp; adc al, 0xa9; stosb [rdi]; iretd;
0xffffffff81011e6d: cwde; or [rax], eax; add [rax-0x77], cl; xchg esp, eax; ret;
0xffffffff82668179: cwde; pop rsp; call far fword ptr [rdi];
0xffffffff82668175: cwde; pop rsp; dec dword ptr [rdi-0x68]; pop rsp; call far fword ptr [rdi];
0xffffffff8266817d: cwde; pop rsp; jmp far fword ptr [rdi];
0xffffffff823fb75c: cwde; pop rsp; mov ebp, 0x405a239; ret;
0xffffffff8247284d: cwde; pop rsp; ret 0x79e5;
0xffffffff822b32fa: cwde; pop rsp; test al, 0xc; push rcx; mov bh, 0x24; ret 0xc169;
0xffffffff82545f12: cwde; pop rsp; xor [rbx], dl; mov edi, 0xb82ca77c; pop rdi; iretd;
0xffffffff8252bbc6: cwde; push 0x351b9510; pop rsp; adc [rsi+0x7aeb0829], eax; ret;
0xffffffff826cf09b: cwde; ror dword ptr fs:[rax], 1; mov esp, [rbx+0x73]; ret;
0xffffffff83475280: cwde; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff824b4d0a: cwde; sbb eax, 0x3a980a1a; stosb [rdi]; cmp [rdx+0x152f41f2], r14; xchg esp, eax; ret;
0xffffffff820098c8: cwde; xchg esp, eax; cmp edi, 0x44; test byte ptr [rdi+rdi*8], 0x20; add al, 0xc7; call rdi;
0xffffffff822d5a32: cwde; xchg esp, eax; imul ebx, esi, 0x5a5ab7f0; iretd;
0xffffffff8265a479: cwde; xchg esp, eax; jmp far fword ptr [rdi+0x1fff9497];
0xffffffff817c439c: cwde; xchg esp, eax; jmp qword ptr [rbp+0x48];
0xffffffff82494243: cwde; xchg esp, eax; out dx, eax; iretd;
0xffffffff8254bcbd: cwde; xor [r14-0x4d], r10d; mov edi, 0xbdf70ede; mov esp, edx; ret 0xa48c;
0xffffffff82266a5c: data16 bnd ret 0x164d;
0xffffffff823a3cdd: data16 bnd ret;
0xffffffff8264eff1: data16 leave; call far fword ptr [rdi];
0xffffffff822aa06b: data16 leave; call qword ptr [rcx+rbp+0x4e27fa1a];
0xffffffff8264eff5: data16 leave; dec dword ptr [rdi+0x65]; leave; call far fword ptr [rdi+0x64];
0xffffffff82352947: data16 leave; iretd;
0xffffffff822b5c05: data16 leave; ret;
0xffffffff8298a524: data16 ret 0;
0xffffffff8251d4ee: data16 ret 0x14e8;
0xffffffff82472c83: data16 ret 0x1709;
0xffffffff824f2caa: data16 ret 0x192c;
0xffffffff82445d9d: data16 ret 0x1af9;
0xffffffff824e19ee: data16 ret 0x1cae;
0xffffffff824db684: data16 ret 0x1d3f;
0xffffffff822cb01b: data16 ret 0x1ec5;
0xffffffff826500f9: data16 ret 0x1fff;
0xffffffff82264637: data16 ret 0x28cb;
0xffffffff819c3736: data16 ret 0x2b;
0xffffffff8253279a: data16 ret 0x2ccc;
0xffffffff824645a3: data16 ret 0x2f6;
0xffffffff82314b89: data16 ret 0x3480;
0xffffffff82407a3b: data16 ret 0x3d4a;
0xffffffff823c3b25: data16 ret 0x3f43;
0xffffffff8241ba84: data16 ret 0x479e;
0xffffffff823c6467: data16 ret 0x4917;
0xffffffff8253d92a: data16 ret 0x4cae;
0xffffffff8244b5a8: data16 ret 0x4d05;
0xffffffff8242a114: data16 ret 0x4ebd;
0xffffffff8233ae61: data16 ret 0x4f4;
0xffffffff823d9d0a: data16 ret 0x50a6;
0xffffffff82558605: data16 ret 0x513c;
0xffffffff823a8bc7: data16 ret 0x51cf;
0xffffffff8249622d: data16 ret 0x5285;
0xffffffff822b07f2: data16 ret 0x534d;
0xffffffff824a6e0c: data16 ret 0x57c;
0xffffffff824a70c7: data16 ret 0x5a0;
0xffffffff824971d1: data16 ret 0x5ee4;
0xffffffff8136b4cb: data16 ret 0x7301;
0xffffffff82388951: data16 ret 0x79c6;
0xffffffff8225675b: data16 ret 0x7b9b;
0xffffffff82533e04: data16 ret 0x7dca;
0xffffffff82491c09: data16 ret 0x82f;
0xffffffff823f0fd4: data16 ret 0x87e0;
0xffffffff8104fae6: data16 ret 0x8900;
0xffffffff82353f9c: data16 ret 0x8b67;
0xffffffff824e9535: data16 ret 0x9102;
0xffffffff82283510: data16 ret 0x9112;
0xffffffff8245ddf3: data16 ret 0x912;
0xffffffff8223905b: data16 ret 0x97e1;
0xffffffff824ae954: data16 ret 0x9813;
0xffffffff823a3365: data16 ret 0x9814;
0xffffffff822c2305: data16 ret 0x9e24;
0xffffffff824eb3c7: data16 ret 0xa87b;
0xffffffff825307da: data16 ret 0xaefc;
0xffffffff82271372: data16 ret 0xb2b8;
0xffffffff822ccedc: data16 ret 0xb2fa;
0xffffffff811cfbe6: data16 ret 0xb;
0xffffffff825dd15b: data16 ret 0xc0c0;
0xffffffff8244e2a1: data16 ret 0xd2cc;
0xffffffff8248574d: data16 ret 0xd710;
0xffffffff823b1262: data16 ret 0xda51;
0xffffffff82538896: data16 ret 0xdd52;
0xffffffff825156b0: data16 ret 0xdf87;
0xffffffff8234e1cc: data16 ret 0xdfb4;
0xffffffff823f1672: data16 ret 0xe348;
0xffffffff8237aa80: data16 ret 0xeab7;
0xffffffff8104fac0: data16 ret 0xeb00;
0xffffffff8252acee: data16 ret 0xf54;
0xffffffff82534148: data16 ret 0xf6d5;
0xffffffff823108ff: data16 ret 0xf8a4;
0xffffffff8234b0e7: data16 ret 0xf936;
0xffffffff822f64d6: data16 ret 0xfdb1;
0xffffffff835ac1c8: data16 ret 0xfdde;
0xffffffff8252a3a7: data16 ret 0xfdfd;
0xffffffff835b2134: data16 ret 0xfe41;
0xffffffff817e9056: data16 ret 0xff8e;
0xffffffff828ce964: data16 ret 5;
0xffffffff824a7b98: data16 ret;
0xffffffff8103ec65: data16 ret;
0xffffffff8245129c: dec bl; xchg [rbp+0x40777e1e], esp; or [rcx], ch; fcom st, dword ptr [rbp-0x6e]; ret 0xd70;
0xffffffff8133426c: dec byte ptr [rax-0x39]; mov dword ptr [rax-0x5a], 0x57e882e0; in eax, dx; xchg esp, eax; add [rax+0x63], cl; ret;
0xffffffff8349bfdc: dec byte ptr [rcx-0x7a3fce3f]; leave; sete al; ret;
0xffffffff81737835: dec byte ptr [rdi+rcx]; xchg esp, eax; ret;
0xffffffff81b312a7: dec byte ptr [rdi]; xchg [rbp-0x76fffffe], esp; iretd;
0xffffffff819a9c82: dec byte ptr [rdi]; xchg ebp, eax; ror dword ptr [rax-0x7d], 0xe6; dec byte ptr [rdi]; xchg esp, eax; ret;
0xffffffff819a9c89: dec byte ptr [rdi]; xchg esp, eax; ret;
0xffffffff8224fe7e: dec byte ptr [rip-0x4167d942]; leave; out 0x25, eax; sbb [rdx+0x75bd7fce], dl; test eax, 0x6fded954; iretd;
0xffffffff82665e52: dec di; leave; call far dword ptr [rdi];
0xffffffff81e00edc: dec dword ptr [0x15cc8]; leave; ret;
0xffffffff82814601: dec dword ptr [r14-0x2b]; add al, [rax]; add [rax], al; add [rax], al; xchg esp, eax; call qword ptr [r15];
0xffffffff8266c08e: dec dword ptr [r15]; leave; dec dword ptr [r15]; mov dword ptr [rbp-1], 0xff45c52f; ffreep st(3); jmp far fword ptr [r15-0x2000ba3f];
0xffffffff81b8503c: dec dword ptr [rax+0x63]; leave; lea rcx, [rcx+rcx*4]; lea rax, [rax+rcx*4]; add rax, 0x38; ret;
0xffffffff812c3cec: dec dword ptr [rax+0xf]; mov ebp, 0xc180240c; add [rax+1], edi; shl rax, cl; add rsp, 8; ret;
0xffffffff83441cfe: dec dword ptr [rax+9]; shr ebx, 1; add dh, [rcx]; leave; mov [rax*8-0x7ca47000], rcx; call qword ptr [0xffffffff82e339e0];
0xffffffff8166cf1c: dec dword ptr [rax-0x75]; fmul st, dword ptr [r9+0x458bfc45]; cld; add rsp, 0x38; pop rbp; ret;
0xffffffff813aaaa9: dec dword ptr [rax-0x75]; xchg esp, eax; and al, 0x98; add [rax], al; add [rax-0x7d], cl; ret 0x48ff;
0xffffffff812570f9: dec dword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff81939fbd: dec dword ptr [rax-0x77]; fistp word ptr [rbx-0x17], st; leave; iretd;
0xffffffff81bcaefd: dec dword ptr [rax-0x77]; fistp word ptr [rbx-0x17], st; leave; mov ah, bh; jmp qword ptr [rsi+0xf];
0xffffffff8176b17d: dec dword ptr [rax-0x77]; fistp word ptr [rbx-0x17], st; leave; or al, 0xb2; jmp qword ptr [rsi+0xf];
0xffffffff815f7bc3: dec dword ptr [rax-0x77]; fucomip st, st(0); xchg esp, eax; mov dl, 0xcd; jmp qword ptr [rbp+0x48];
0xffffffff810db443: dec dword ptr [rax-0x7b]; leave; cmove rax, rcx; ret;
0xffffffff815bbbeb: dec dword ptr [rax-0x7b]; leave; mov rax, 0xffffffffffffff8b; cmovne rax, rcx; ret;
0xffffffff818474f5: dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; leave; add [rax], al; add [rax-0x77], cl; ret;
0xffffffff8135468d: dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; pop rsp; add [rax], eax; add [rax-0x77], cl; ret;
0xffffffff8181974a: dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; xchg esp, eax; add [rax], al; add [rax-0x77], cl; ret;
0xffffffff811542bc: dec dword ptr [rax-0x7b]; shl byte ptr [rax+rcx-0x7d], 0x38; add [rdi], cl; xchg esp, eax; ret;
0xffffffff812b0290: dec dword ptr [rax-0x7d]; clc; add [rax+0x19], ecx; leave; or rax, rcx; ret;
0xffffffff820099c7: dec dword ptr [rax-0xb]; add al, 0xff; leave; add eax, edi; jmp qword ptr [rdx+0x3cff8712];
0xffffffff8265a4bc: dec dword ptr [rbp-0x7590006c]; xchg esp, eax; jmp far fword ptr [rdi+0x6fff9488];
0xffffffff8128b153: dec dword ptr [rbx-0x2f8851fb]; add ebx, ebp; leave; pop rbx; pop rbp; ret;
0xffffffff819ef799: dec dword ptr [rcx+rcx*4-0x10]; add rsp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff819b1dd0: dec dword ptr [rcx-0x7a3fce3f]; leave; cmovns rax, rbx; pop rbx; ret;
0xffffffff810f6635: dec dword ptr [rcx-0x7a3fce3f]; leave; setne al; ret;
0xffffffff8265a60b: dec dword ptr [rdi+0x2c]; xchg esp, eax; dec dword ptr [rdi]; sub al, 0x94; call far fword ptr [rdi+0x2b];
0xffffffff8265a64f: dec dword ptr [rdi+0x2fff941d]; sbb eax, 0x1b8fff94; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff8264ef37: dec dword ptr [rdi+0x2fffc9a3]; mov [0x9ddfffc99f2fffc9], eax; leave; jmp far fword ptr [rdi+0x2fffc99d];
0xffffffff8265a5af: dec dword ptr [rdi+0x38]; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff8266830b: dec dword ptr [rdi+0x3fff5c1d]; sbb eax, 0x1cefff5c; pop rsp; jmp far fword ptr [rdi];
0xffffffff82669c83: dec dword ptr [rdi+0x4fff52ce]; leave; push rdx; jmp far fword ptr [rdi-0x5000ad38];
0xffffffff82659cbf: dec dword ptr [rdi+0x4fff965c]; pop rsp; xchg esi, eax; jmp far fword ptr [rdi];
0xffffffff8266825f: dec dword ptr [rdi+0x52]; pop rsp; call far fword ptr [rdi+0x51];
0xffffffff8265a537: dec dword ptr [rdi+0x5f]; xchg esp, eax; dec dword ptr [rdi]; pop rbp; xchg esp, eax; call far fword ptr [rdi+0x5fff945b];
0xffffffff82648a7b: dec dword ptr [rdi+0x5fffe52e]; sub al, 0xe5; dec dword ptr [rdi+0xfffe52b]; sub esp, ebp; call far fword ptr [rdi+0xfffe52a];
0xffffffff8264eff7: dec dword ptr [rdi+0x65]; leave; call far fword ptr [rdi+0x64];
0xffffffff82668213: dec dword ptr [rdi+0x6fff5c6d]; insd [rdi], dx; pop rsp; jmp far fword ptr [rdi+0x5fff5c6c];
0xffffffff8265e56b: dec dword ptr [rdi+0x6fff8595]; xchg esp, eax; test edi, edi; sete [rbp-0x7a6c1001]; jmp far fword ptr [rdi-0x70007a6e];
0xffffffff8265a3e7: dec dword ptr [rdi+0xfff94ab]; stosd [rdi]; xchg esp, eax; call far fword ptr [rdi-0x40006b56];
0xffffffff82648a83: dec dword ptr [rdi+0xfffe52b]; sub esp, ebp; call far fword ptr [rdi+0xfffe52a];
0xffffffff82646e07: dec dword ptr [rdi+0xfffec02]; add ch, ah; dec edi; add esp, ebp; call far fword ptr [rdi];
0xffffffff8265a6f7: dec dword ptr [rdi+1]; xchg esp, eax; call far fword ptr [rdi];
0xffffffff8265a2a7: dec dword ptr [rdi-0x1c]; xchg esp, eax; call far fword ptr [rdi];
0xffffffff82649287: dec dword ptr [rdi-0x20001c74]; mov esp, ebx; call far fword ptr [rdi-0x75];
0xffffffff826687fb: dec dword ptr [rdi-0x2000a536]; leave; pop rdx; jmp far fword ptr [rdi+0x4fff5ac9];
0xffffffff82655ec7: dec dword ptr [rdi-0x30005b6b]; xchg esp, eax; movsb [rdi], [rsi]; jmp far fword ptr [rdi-0x6d];
0xffffffff82657227: dec dword ptr [rdi-0x30006035]; leave; lahf; call far fword ptr [rdi+0x5fff9fc8];
0xffffffff8264eeab: dec dword ptr [rdi-0x34]; leave; call far fword ptr [rdi];
0xffffffff82668807: dec dword ptr [rdi-0x37]; pop rdx; dec dword ptr [rdi]; leave; pop rdx; call far fword ptr [rdi-0x7000a538];
0xffffffff82650dab: dec dword ptr [rdi-0x5000416b]; xchg esp, eax; mov esi, 0xbe935fff; dec dword ptr [rdi-0x6d]; mov esi, 0xbe92afff; call far fword ptr [rdi];
0xffffffff82667c6b: dec dword ptr [rdi-0x5000a1a2]; pop rsp; pop rsi; call far fword ptr [rdi+0x56];
0xffffffff8265a3df: dec dword ptr [rdi-0x52]; xchg esp, eax; call far fword ptr [rdi-0x70006b54];
0xffffffff8264edc3: dec dword ptr [rdi-0x60003611]; out dx, al; leave; jmp far fword ptr [rdi-0x40003613];
0xffffffff8265a453: dec dword ptr [rdi-0x63]; xchg esp, eax; dec edi; pushfq; xchg esp, eax; jmp far fword ptr [rdi-0x64];
0xffffffff82668177: dec dword ptr [rdi-0x68]; pop rsp; call far fword ptr [rdi];
0xffffffff8264d1bb: dec dword ptr [rdi-0x6b]; sar edi, 1; scasd [rdi]; xchg esp, eax; sar edi, 1; call qword ptr [rdx-0x6ec0002f];
0xffffffff826681af: dec dword ptr [rdi-0x7a]; pop rsp; jmp far fword ptr [rdi-0xa37b];
0xffffffff8265a22f: dec dword ptr [rdi-7]; xchg esp, eax; jmp far fword ptr [rdi-0x60006b08];
0xffffffff82646e0b: dec dword ptr [rdi]; add ch, ah; dec edi; add esp, ebp; call far fword ptr [rdi];
0xffffffff8265a2d7: dec dword ptr [rdi]; fst qword ptr [rdi+rdi*8-0x6b23a1], st; fstp st(3), st; xchg esp, eax; jmp far fword ptr [rdi+0x1fff94db];
0xffffffff8264f05f: dec dword ptr [rdi]; leave; call far fword ptr [rdi-0x400036c1];
0xffffffff8266c08f: dec dword ptr [rdi]; leave; dec dword ptr [r15]; mov dword ptr [rbp-1], 0xff45c52f; ffreep st(3); jmp far fword ptr [r15-0x2000ba3f];
0xffffffff8264f05b: dec dword ptr [rdi]; leave; dec dword ptr [rdi]; leave; call far fword ptr [rdi-0x400036c1];
0xffffffff826518f7: dec dword ptr [rdi]; leave; mov edx, 0xbac7afff; jmp far fword ptr [rdi-0x3a];
0xffffffff8266880b: dec dword ptr [rdi]; leave; pop rdx; call far fword ptr [rdi-0x7000a538];
0xffffffff818670ed: dec dword ptr [rdi]; or ebp, eax; mov esp, [rbp+0x76e90059]; or esp, esi; jmp qword ptr [rsi+0xf];
0xffffffff8114b8ce: dec dword ptr [rdi]; or ebx, [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff81489e9a: dec dword ptr [rdi]; or ecx, [rdi]; or ebp, eax; mov esp, ss; ret 0x66ff;
0xffffffff8265a53b: dec dword ptr [rdi]; pop rbp; xchg esp, eax; call far fword ptr [rdi+0x5fff945b];
0xffffffff826562bb: dec dword ptr [rdi]; pop rsp; mov [0xa35b8fffa35bcfff], eax; call far fword ptr [rdi+0x5b];
0xffffffff82655f67: dec dword ptr [rdi]; pop rsp; movsb [rdi], [rsi]; jmp far fword ptr [rdi];
0xffffffff82667f47: dec dword ptr [rdi]; pop rsp; pop rbp; jmp far fword ptr [rdi+0x59];
0xffffffff82649a33: dec dword ptr [rdi]; sbb esp, ecx; jmp far fword ptr [rdi+0x1a];
0xffffffff8265a3eb: dec dword ptr [rdi]; stosd [rdi]; xchg esp, eax; call far fword ptr [rdi-0x40006b56];
0xffffffff82648a87: dec dword ptr [rdi]; sub esp, ebp; call far fword ptr [rdi+0xfffe52a];
0xffffffff81627d46: dec dword ptr [rdi]; xchg [rsi], esp; or [rax], al; add [rax+0x63], cl; ret;
0xffffffff812976ff: dec dword ptr [rdi]; xchg ebp, eax; shr dword ptr [rcx+0x181], 0xf; xchg esp, eax; ret 0xbd;
0xffffffff8124abd9: dec dword ptr [rdi]; xchg ebp, eax; shr dword ptr [rcx+0x181], 0xf; xchg esp, eax; ret 0xd184;
0xffffffff82645b2b: dec dword ptr [rdi]; xchg esp, eax; out dx, eax; jmp far fword ptr [rdi+0x6fffef93];
0xffffffff82668f0b: dec dword ptr [rdi]; xchg esp, eax; pop rax; jmp far fword ptr [rdi-0x6d];
0xffffffff8126b7e2: dec dword ptr [rdi]; xchg esp, eax; ret 0x14c;
0xffffffff81af5f47: dec dword ptr [rdi]; xchg esp, eax; ret 0x1b0;
0xffffffff8168493d: dec dword ptr [rdi]; xchg esp, eax; ret 0x2941;
0xffffffff8182a0a5: dec dword ptr [rdi]; xchg esp, eax; ret 0x474;
0xffffffff816bbed7: dec dword ptr [rdi]; xchg esp, eax; ret 0x4c8d;
0xffffffff8182a05a: dec dword ptr [rdi]; xchg esp, eax; ret 0x4f74;
0xffffffff814bada7: dec dword ptr [rdi]; xchg esp, eax; ret 0x548d;
0xffffffff8126cd6e: dec dword ptr [rdi]; xchg esp, eax; ret 0x8341;
0xffffffff8171f769: dec dword ptr [rdi]; xchg esp, eax; ret 0x840;
0xffffffff8171fb55: dec dword ptr [rdi]; xchg esp, eax; ret 0x844;
0xffffffff8187eb9c: dec dword ptr [rdi]; xchg esp, eax; ret 0x8548;
0xffffffff81959033: dec dword ptr [rdi]; xchg esp, eax; ret 0x8948;
0xffffffff8178e777: dec dword ptr [rdi]; xchg esp, eax; ret 0xb60f;
0xffffffff816a6fe2: dec dword ptr [rdi]; xchg esp, eax; ret 0xc7f7;
0xffffffff8171fdf7: dec dword ptr [rdi]; xchg esp, eax; ret 0xc808;
0xffffffff818ce5de: dec dword ptr [rdi]; xchg esp, eax; ret 0xca30;
0xffffffff815d38a0: dec dword ptr [rdi]; xchg esp, eax; ret 0xdaf7;
0xffffffff81ab654c: dec dword ptr [rdi]; xchg esp, eax; ret 0xf45;
0xffffffff81013603: dec dword ptr [rdi]; xchg esp, eax; ret;
0xffffffff8156e11c: dec dword ptr [rdi]; xchg esp, eax; rol bl, 0x48; cmp dword ptr [rsi], 0xffffffff; sete al; ret;
0xffffffff8156e11d: dec dword ptr [rdi]; xchg esp, eax; rol bl, 0x48; cmp dword ptr [rsi], 0xffffffff; sete al; ret;
0xffffffff81104c6d: dec dword ptr [rdi]; xchg esp, eax; rol byte ptr [rbp-0x3d60f037], 0x20; ret 0x5488;
0xffffffff8156de60: dec dword ptr [rdi]; xchg esp, eax; ror byte ptr [rdi], 0xb6; rcr byte ptr [rbx+0x41], 0x5e; pop rbp; ret;
0xffffffff8171f762: dec dword ptr [rdi]; xchg esp, eax; ror dword ptr [rax-0x7d], 0xfa; dec dword ptr [rdi]; xchg esp, eax; ret 0x840;
0xffffffff8100356c: dec dword ptr [rdi]; xchg esp, eax; shl dword ptr [rax], 0xc1; movzx eax, cl; ret;
0xffffffff82654bcb: dec dword ptr [rdi]; xchg esp, eax; stosb [rdi]; call far fword ptr [rdi-0x6d];
0xffffffff82659ff7: dec dword ptr [rdi]; xchg esp, eax; xchg ebp, eax; jmp far fword ptr [rdi-0x6d];
0xffffffff8265a5cb: dec dword ptr [rdi]; xor eax, 0x349fff94; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff82516b88: dec dword ptr [rdx]; leave; iretd;
0xffffffff82668344: dec dword ptr [rip+0xc6fff5c]; pop rsp; call far fword ptr [rdi-0x3000a3f5];
0xffffffff82814603: dec dword ptr [rsi-0x2b]; add al, [rax]; add [rax], al; add [rax], al; xchg esp, eax; call qword ptr [r15];
0xffffffff81e00edb: dec dword ptr gs:[0x15cc8]; leave; ret;
0xffffffff8359ceeb: dec eax; leave; out dx, eax; call rbp;
0xffffffff8264eea0: dec ebp; leave; dec edi; int 0xc9; jmp far fword ptr [rdi];
0xffffffff82688110: dec ebp; or al, 0x79; or [rcx+0x75], edx; leave; jmp far fword ptr [rax+0xd790cff];
0xffffffff82646e0f: dec edi; add esp, ebp; call far fword ptr [rdi];
0xffffffff8264ed9b: dec edi; clc; leave; jmp far fword ptr [rdi-0x50003608];
0xffffffff8265a40b: dec edi; cmpsd [rsi], [rdi]; xchg esp, eax; jmp far fword ptr [rdi-0x59];
0xffffffff8265a503: dec edi; insb [rdi], dx; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff82665e53: dec edi; leave; call far dword ptr [rdi];
0xffffffff8265722b: dec edi; leave; lahf; call far fword ptr [rdi+0x5fff9fc8];
0xffffffff8264d06f: dec edi; leave; sar edi, 1; mov edi, 0xffffd1c5; ret;
0xffffffff826885e4: dec edi; mov bl, 0x77; cmc; mov esi, 0x7561540b; leave; jmp far fword ptr [rbp-0x19];
0xffffffff826565eb: dec edi; mov esp, [rdx-0x5d744001]; call far fword ptr [rdi+0x3fffa28b];
0xffffffff82668043: dec edi; out dx, eax; pop rsp; call far fword ptr [rdi+0xfff5cee];
0xffffffff8266823f: dec edi; pop rdi; pop rsp; jmp far fword ptr [rdi];
0xffffffff82650a6b: dec edi; pop rsp; mov edi, 0xbf5aafff; call far fword ptr [rdi+0x5a];
0xffffffff826656c3: dec edi; pop rsp; push 0x685cbfff; call far fword ptr [rdi-0x700097a4];
0xffffffff82642a2f: dec edi; pop rsp; sti; call far fword ptr [rdi+0x5c];
0xffffffff8265a44b: dec edi; popfq; xchg esp, eax; call far fword ptr [rdi-0x63];
0xffffffff8266825b: dec edi; push rbp; pop rsp; dec dword ptr [rdi+0x52]; pop rsp; call far fword ptr [rdi+0x51];
0xffffffff8265a457: dec edi; pushfq; xchg esp, eax; jmp far fword ptr [rdi-0x64];
0xffffffff82648af3: dec edi; sbb esp, ebp; jmp far fword ptr [rdi+0x1b];
0xffffffff82648167: dec edi; sbb esp, edi; jmp far fword ptr [rdi+0x1fffe71b];
0xffffffff8265a49f: dec edi; xchg ecx, eax; xchg esp, eax; call far fword ptr [rdi+0x3fff9491];
0xffffffff82658d7f: dec edi; xchg esp, eax; cdq; call far fword ptr [rdi+0xfff9994];
0xffffffff82655ecb: dec edi; xchg esp, eax; movsb [rdi], [rsi]; jmp far fword ptr [rdi-0x6d];
0xffffffff826678ab: dec edi; xchg esp, eax; pop rdi; jmp far fword ptr [rdi+0x4fff5f94];
0xffffffff826486fc: dec edx; in eax, 0xff; mov edi, 0xdfffe5ca; leave; in eax, 0xff; iretd;
0xffffffff8265a340: dec esi; xchg esp, eax; jmp far fword ptr [rdi-0x32];
0xffffffff82003373: dec esp; pop rsp; add eax, 0xacad3ff; call far fword ptr [rdi];
0xffffffff813aaaa8: dec qword ptr [r8-0x75]; xchg esp, eax; and al, 0x98; add [rax], al; add [rax-0x7d], cl; ret 0x48ff;
0xffffffff827e4768: div byte ptr [rbp+9]; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff81022b09: div byte ptr [rbp+9]; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff822ca047: div byte ptr [rcx+rdx*8+0x34a93e44]; leave; or al, 0x96; mov cl, 0x25; rcl cl, 0xc7; ret 0xb317;
0xffffffff8249877a: div byte ptr [rcx]; cmpsd [rsi], [rdi]; insb [rdi], dx; xchg esp, eax; mov ecx, 0xaf7c4b3; iretq;
0xffffffff813b498c: div byte ptr [rcx]; shr al, cl; pop rsp; and al, ah; push rsi; ret;
0xffffffff813b978c: div byte ptr [rcx]; shr al, cl; pop rsp; rcr bh, cl; push rsi; ret;
0xffffffff8154e054: div byte ptr [rcx]; shr al, cl; xchg esp, eax; mov esi, eax; push rsi; ret;
0xffffffff827e46e2: div byte ptr [rdi+rsi*8-0x77]; leave; mov qword ptr [rsi], 0; mov [rsi+8], rcx; pop rbp; ret;
0xffffffff82255751: div byte ptr [rsi+0x40]; sub eax, 0x5b6c02e8; cwde; leave; fld st, dword ptr [rbp+0x72]; iretd;
0xffffffff823b9b86: div dword ptr [rcx]; leave; ret;
0xffffffff82270fe4: div dword ptr [rcx]; mov esp, ss; mov dl, 0x2b; out 0x65, al; iretd;
0xffffffff8173f733: enter 0, 0x48; add esp, 8; pop rbx; pop r14; ret;
0xffffffff81a826e6: enter 0x124, 0x48; add esp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff81e00edf: enter 0x15c, 0; leave; ret;
0xffffffff810250ac: enter 0x1f6, 0x31; leave; and rax, rcx; or rax, rdi; ret;
0xffffffff81ae40ed: enter 0x277, 0x31; leave; sub eax, ecx; pop rbx; pop r14; ret;
0xffffffff81baadb7: enter 0x277, 0x31; leave; sub eax, ecx; pop rbx; ret;
0xffffffff81ae6f17: enter 0x277, 0x31; leave; sub eax, ecx; ret;
0xffffffff8245bd7b: enter 0x2e9c, 0x23; pop rsp; mov eax, 0x283183dc; mov bh, 0x90; ret 0x5534;
0xffffffff81561386: enter 0x3c89, 0x24; mov eax, 0xffffffff; bsf eax, [rsp]; add eax, r8d; add rsp, 4; ret;
0xffffffff81811e30: enter 0x4202, 8; add rsp, 4; ret;
0xffffffff81b09f97: enter 0x430f, 0xc1; mov [r8], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff824f5997: enter 0x4480, 0xae; leave; ret 0x5cac;
0xffffffff81263954: enter 0x4801, 0x89; add eax, 0x23b61b3; add rsp, 4; ret;
0xffffffff818edf56: enter 0x48d, 0x80; add eax, 0xfffffffb; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff819b0ab4: enter 0x4922, 0x89; or [rbx+0x41], r11b; pop rsp; pop r14; pop r15; ret;
0xffffffff825d6ff5: enter 0x4f1e, 0x41; xchg r8d, eax; rol dword ptr [rcx-0x13], 1; pop rsp; in eax, dx; ret 0x299d;
0xffffffff8124bab4: enter 0x5002, 0xe8; adc al, 0; add [rax], al; add rsp, 8; ret;
0xffffffff82432049: enter 0x5211, 0x63; push rcx; cmp al, 0xbf; leave; ret;
0xffffffff82005f48: enter 0x52f, 0xff; pop rsp; and bh, al; jmp qword ptr [rdx-0x4300cbe6];
0xffffffff81c124ae: enter 0x618, 0; add [rax-0x7b], cl; leave; mov rax, 0xffffffff827dd02d; cmovne rax, rcx; ret;
0xffffffff824e7f89: enter 0x6525, 0xcf; pop rdi; pop rsp; ret 0xbef2;
0xffffffff82559bef: enter 0x6782, 0xad; in al, dx; popfq; leave; jmp qword ptr [rdx+rbx*2-0x23];
0xffffffff8174e4b3: enter 0x7824, 0x84; leave; movzx eax, al; cmovs eax, ecx; ret;
0xffffffff82248157: enter 0x7e69, 0xb0; xchg esp, eax; ret 0x9b00;
0xffffffff82531c92: enter 0x7e8e, 0xa4; stosb [rdi]; xchg esp, eax; ret 0x8cec;
0xffffffff8171ed38: enter 0x8040, 0xff; add [rdi], ecx; xchg esp, eax; ret 0xd189;
0xffffffff82406f28: enter 0x8318, 0xa6; xchg [rip-0x13531720], esp; iretd;
0xffffffff81484421: enter 0x8348, 0xc4; adc [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81198fb7: enter 0x8348, 0xc4; and [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8254a413: enter 0x846b, 0x41; clc; xchg [rbp+rdx-0x90653af], esp; mov ch, 0x31; or rax, 0x7384b2c; ret;
0xffffffff8121afee: enter 0x8948, 0xd; leave; ret 0x1c5;
0xffffffff822423ca: enter 0x926e, 0x30; xchg esp, eax; setne cl; fsubr st, dword ptr [rcx-0x3d]; int 0xb; ret;
0xffffffff81774290: enter 0x9ae8, 0x30; xchg esp, eax; jmp qword ptr [rsi+0x2e];
0xffffffff8254f486: enter 0xa43f, 0x1b; and eax, 0xa82369dc; bswap ecx; xchg esp, eax; jmp far fword ptr [rdi-0x3361e5d4];
0xffffffff8166d02e: enter 0xa75, 0x48; mov eax, [rbp-0x38]; add rsp, 0x38; pop rbp; ret;
0xffffffff81559b09: enter 0xa8b, 0xf; leave; sub eax, ecx; mov eax, eax; ret;
0xffffffff81559bd8: enter 0xa8b, 0xf; leave; sub rax, rcx; ret;
0xffffffff823eb7bf: enter 0xb425, 0xcd; leave; iretd;
0xffffffff834300f9: enter 0xb60f, 0xc0; add rsp, 0x10; pop rbx; ret;
0xffffffff818e6681: enter 0xc031, 0x85; leave; setne al; pop rbx; ret;
0xffffffff81b2ff46: enter 0xc80f, 0x48; add esp, 0x18; ret;
0xffffffff83497ac4: enter 0xd16f, 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff834686c4: enter 0xd463, 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff82244546: enter 0xd5f4, 0xaf; adc esp, edx; out dx, al; push rbp; imul dword ptr [rbx-4]; ret 0x249f;
0xffffffff8342ecc4: enter 0xd7fd, 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff826cf4da: enter 0xd85f, 0xff; test [rbx], cl; mov esp, [rbx+0x73]; ret;
0xffffffff818cc614: enter 0xd8f7, 0x48; add esp, 0x10; ret;
0xffffffff8242513b: enter 0xd9dc, 0x39; leave; movsd [rdi], [rsi]; out 0x56, eax; ret;
0xffffffff8235274e: enter 0xddfb, 0x7c; leave; cdq; fxch st, st(5); ret;
0xffffffff8159b33e: enter 0xe8c3, 0x3b; movsxd eax, [rsi+0xf068b00]; enter 0xa8b, 0xf; leave; sub rax, rcx; ret;
0xffffffff82526b5e: enter 0xee59, 0xe1; xor bh, [rsi+0x127f7cb6]; sbb esp, esp; ret;
0xffffffff82226f0b: enter 0xf50c, 0x59; leave; ret 0x6a20;
0xffffffff826cfc35: enter 0xfc5f, 0x66; outsd dx, [rsi]; fstp dword ptr [rsi+0xe8c6c28], st; mov esp, [rbx+0x73]; ret;
0xffffffff835aa7ed: enter 0xfdcf, 0x16; leave; iretd;
0xffffffff834a2236: enter 0xfdd0, 0x48; add esp, 8; pop rbx; ret;
0xffffffff83472195: enter 0xfdd3, 0x48; add esp, 8; pop rbx; ret;
0xffffffff834621d0: enter 0xfdd4, 0x48; add esp, 8; pop rbx; ret;
0xffffffff8240ba13: enter 0xfeb, 0x81; xchg esp, eax; lodsd [rsi]; push 0xfffffffffffffff9; ret 0x2c19;
0xffffffff81c732b7: enter 0xff15, 0xff; add [rax], al; not eax; shr eax, 0x10; add rsp, 4; ret;
0xffffffff81e01932: enter 0xff3a, 0x48; mov edi, eax; mov rdx, [rsp+8]; mov rax, [rsp]; add rsp, 0x18; jmp rdi;
0xffffffff81c365d4: enter 0xff69, 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff81a47577: enter 0xff89, 0x48; add esp, 0x18; xor eax, eax; ret;
0xffffffff8359ca09: enter 0xffef, 0x21; leave; out dx, eax; call qword ptr [rdx+0x69ffefd0];
0xffffffff811f945b: fadd st, dword ptr [rax]; add [rax], al; add [rdi], cl; xchg esp, eax; ret 0xe2c1;
0xffffffff81415caa: fadd st, dword ptr [rbx+0x415b02c0]; pop rsp; pop r14; pop r15; ret;
0xffffffff8183d570: fadd st, dword ptr [rbx+0x415b04c0]; pop rsp; pop r14; pop r15; ret;
0xffffffff81049c66: fadd st, dword ptr [rbx+0x589fbc0]; leave; ret 0x257;
0xffffffff822ada2a: fadd st, dword ptr [rcx+0x66c1d4a3]; sub esp, esi; std; out 0x33, eax; scasd [rdi]; ret;
0xffffffff81700ebb: fadd st, dword ptr [rcx]; add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x1b0;
0xffffffff81718f06: fadd st, dword ptr [rcx]; add [rax], al; add [rdi], cl; xchg esp, eax; ret 0xd138;
0xffffffff8225a062: fadd st, dword ptr [rdi+rdx*2+0x6699e57a]; pop rsp; lahf; mov al, [0xd78c1bec52f07660]; outsb dx, [rsi]; call qword ptr [rdi];
0xffffffff82537301: fadd st, qword ptr [rax]; fxch st, st(0); adc esp, ebp; xchg [rbx], esp; mov eax, [0x62d1c52f6f46ac58]; iretd;
0xffffffff81418480: fadd st, qword ptr [rbp-0x17441500]; cmpsb [rsi], [rdi]; out dx, al; leave; jmp qword ptr [rsi+0xf];
0xffffffff822f6b82: fadd st, qword ptr [rbx]; insd [rdi], dx; test esi, ebx; pop rsp; ret;
0xffffffff82339ce5: fadd st, qword ptr [rbx]; nop; leave; adc ch, [rdx]; iretd;
0xffffffff8224027f: fadd st, qword ptr [rdx+0x25]; xchg esp, eax; adc [rbx+0xe], dl; or [rbx+rsi*8+0x74], bh; ret;
0xffffffff822f324d: fadd st, qword ptr [rdx-0x478a799d]; push rbp; nop; xchg esp, eax; ret 0x8abc;
0xffffffff8253f676: fadd st, qword ptr [rdx-9]; mov esp, [rcx-0x2c]; ficomp st, word ptr [rax+rsi+8]; jmp qword ptr [rsi-0x549273cc];
0xffffffff824177c7: faddp st(6), st; cmp eax, 0x4d6989e9; xchg esp, eax; outsb dx, [rsi]; ret 0x6a69;
0xffffffff826886a2: fbld st, tbyte ptr [rax+0x12]; or dl, gs:[rcx+0x75]; leave; call rcx;
0xffffffff826e3867: fbld st, tbyte ptr [rcx-0x6e]; or dh, [rcx+0x75]; leave; jmp qword ptr [rsi+0x64];
0xffffffff8253f458: fbld st, tbyte ptr [rsi-0x163d98e1]; lahf; xchg [rip+0x79121f05], esp; push rax; push rdi; ret;
0xffffffff8129cd6c: fbstp tbyte ptr [rcx], st; neg byte ptr [rbx-0x17]; fwait; leave; cld; jmp qword ptr [rsi+0x66];
0xffffffff81117c6f: fbstp tbyte ptr [rcx], st; shr al, cl; leave; int 0xff; jmp qword ptr [rbp+0x48];
0xffffffff8265a3b4: fbstp tbyte ptr [rdi-0x4880006c], st; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff822fb251: fbstp tbyte ptr [rdx], st; lodsb [rsi]; mov ebx, 0x6d010349; sar dword ptr [rcx-0x36f426c0], 0xfd; pop rsp; ret 0xae5b;
0xffffffff824998dc: fbstp tbyte ptr [rsi+rbp*4-0x21183c86], st; add esp, ebx; push rbx; adc edi, [rbx]; sub [rdi-0x2d], ebx; ret;
0xffffffff8265a5bc: fbstp tbyte ptr [rsi], st; xchg esp, eax; jmp far fword ptr [rdi-0x10006bca];
0xffffffff82229c06: fcmovb st, st(5); xchg esp, eax; fwait; xchg [rsi+rax+0x2f258bfd], edx; ret 0xfa53;
0xffffffff834a0fc6: fcmovbe st, st(0); std; add rsp, 8; pop rbx; ret;
0xffffffff834a0ff2: fcmovbe st, st(0); std; add rsp, 8; ret;
0xffffffff83460f9b: fcmovbe st, st(4); std; add rsp, 8; pop rbx; ret;
0xffffffff823887cd: fcmovnb st, st(3); xchg esp, eax; std; ret 0xaa8b;
0xffffffff834a0f08: fcmovnbe st, st(0); std; add rsp, 8; pop rbx; ret;
0xffffffff83470f13: fcmovnbe st, st(3); std; add rsp, 8; pop rbx; ret;
0xffffffff82470ede: fcmovnbe st, st(4); or eax, 0x6d041220; nop; xchg esp, eax; pushfq; iretd;
0xffffffff83460edd: fcmovnbe st, st(4); std; add rsp, 8; pop rbx; ret;
0xffffffff8245e539: fcmovnbe st, st(6); xor [rax+rcx-0x26], ah; push rbx; leave; cdq; ret;
0xffffffff834a10b1: fcmovnu st, st(1); sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff8235274c: fcmovu st, st(5); enter 0xddfb, 0x7c; leave; cdq; fxch st, st(5); ret;
0xffffffff823cb6b8: fcmovu st, st(6); leave; ret;
0xffffffff824a21f1: fcom st, dword ptr [rax]; pop rsp; out dx, al; iretd;
0xffffffff82297b92: fcom st, dword ptr [rcx+0x26]; xchg [rcx-7], esp; rcpps xmm1, [rbp+0x54964d40]; ret;
0xffffffff82569f65: fcom st, qword ptr [r13+0x1748e88c]; outsd dx, [rsi]; mov esp, [rcx]; call far fword ptr [rbx];
0xffffffff82569f66: fcom st, qword ptr [rbp+0x1748e88c]; outsd dx, [rsi]; mov esp, [rcx]; call far fword ptr [rbx];
0xffffffff8247e35d: fcom st, qword ptr [rcx+0x13]; pop rbp; xchg esp, eax; test byte ptr [rsi], 0x84; xchg ebx, eax; iretd;
0xffffffff824f7bbc: fcom st, qword ptr [rdi]; and [rdx], sil; sub ecx, esp; push rsp; pop rsp; ret 0xca40;
0xffffffff824f7bbb: fcom st, qword ptr [rdi]; and [rdx], sil; sub ecx, esp; push rsp; pop rsp; ret 0xca40;
0xffffffff824e692a: fcom st, qword ptr [rdx-0x34349d63]; mov ebp, 0x9fff6184; adc esp, esi; ret 0xec62;
0xffffffff82551db6: fcom st, qword ptr [rdx-0x59]; lodsb [rsi]; xor [rax+0x5e0c41c9], edi; adc ebp, esp; xchg esp, eax; ret 0xf738;
0xffffffff8243fd64: fcom st, st(0); pop rsp; xchg esi, eax; pop rcx; sbb eax, 0xd47443fe; iretd;
0xffffffff834a0dbb: fcom st, st(0); std; add rsp, 8; pop rbx; ret;
0xffffffff834a119c: fcom st, st(0); std; add rsp, 8; pop rbx; ret;
0xffffffff83470e2c: fcom st, st(3); std; add rsp, 8; pop rbx; ret;
0xffffffff83460e1f: fcom st, st(4); std; add rsp, 8; pop rbx; ret;
0xffffffff8346123c: fcom st, st(4); std; add rsp, 8; pop rbx; ret;
0xffffffff815ee870: fcom st, st(5); leave; push qword ptr [rcx]; fisttp dword ptr [rcx+0x5e415bd8], st; pop r15; ret;
0xffffffff834a14b0: fcom st, st(5); sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff823f21d6: fcom st, st(7); fld st, tbyte ptr [rdi+0x6286b1a0]; movsb [rdi], [rsi]; xchg esp, eax; iretd;
0xffffffff819d9224: fcomi st, st(6); rcl dword ptr [rax], 0xf; xchg esp, eax; ret;
0xffffffff82668040: fcomip st, st(3); pop rsp; dec edi; out dx, eax; pop rsp; call far fword ptr [rdi+0xfff5cee];
0xffffffff83453ec5: fcomp st, dword ptr [rbp+2]; add [rax-0x147ee45a], ah; leave; xor eax, eax; ret;
0xffffffff8101860a: fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff81005108: fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81021ef6: fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff82410121: fcomp st, dword ptr [rsi+0x6009c378]; mov edx, 0x13a5534; leave; xlat [rbx]; ret 0xc487;
0xffffffff834691b0: fcomp st, qword ptr [rax-0x2c]; std; add rsp, 8; pop rbx; ret;
0xffffffff81044613: fcomp st, qword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff810004c9: fcomp st, qword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff822a87f7: fcomp st, qword ptr [rdx+0x19]; cld; push rax; pop rsp; jmp qword ptr [rax-0x2bbfd25c];
0xffffffff834a0c6c: fcomp st, st(0); std; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff822bf16a: fcomp st, st(2); mov eax, 0x1e83e7c6; pop rsp; iretd;
0xffffffff822baf4c: fcomp st, st(3); leave; iretd;
0xffffffff83470c1d: fcomp st, st(3); std; add rsp, 8; pop rbx; ret;
0xffffffff824f6ac3: fcomp st, st(4); leave; xor [rdi-0x269d3d72], esp; cdq; pop rbp; call far fword ptr [rsi];
0xffffffff8245afd4: fcomp st, st(6); sub eax, 0x18f060b; mov [0x1847e1be9049ed28], al; pop rsp; mov esp, 0xd6f6f6f5; iretd;
0xffffffff834a0ab4: fcomp st, st(7); sar ch, 1; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff834a4033: fdiv st(5), st; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8345a3d8: fdiv st(5), st; xor ebx, ebx; mov eax, ebx; add rsp, 8; pop rbx; ret;
0xffffffff8264ab8a: fdiv st(7), st; inc dword ptr [rcx]; fdiv st(7), st; out dx, eax; add esp, ebx; call far fword ptr [rdi+0x1fffdc01];
0xffffffff8264ab92: fdiv st(7), st; lahf; add esp, ebx; call far fword ptr [rdi];
0xffffffff8264ab26: fdiv st(7), st; mov edi, 0xafffdc12; adc esp, ebx; call far fword ptr [rdi-0x400023f0];
0xffffffff8264ab8e: fdiv st(7), st; out dx, eax; add esp, ebx; call far fword ptr [rdi+0x1fffdc01];
0xffffffff8264ab2a: fdiv st(7), st; scasd [rdi]; adc esp, ebx; call far fword ptr [rdi-0x400023f0];
0xffffffff822d26ad: fdiv st, dword ptr [rbp-0xef8b28c]; xchg esp, eax; iretd;
0xffffffff834876b4: fdiv st, dword ptr [rbx-0x2e]; std; add rsp, 8; pop rbx; ret;
0xffffffff814919d4: fdiv st, dword ptr [rbx]; leave; call far fword ptr [rbx-0x3d];
0xffffffff8241011b: fdiv st, qword ptr [rbp-0x7a337cf9]; fcomp st, dword ptr [rsi+0x6009c378]; mov edx, 0x13a5534; leave; xlat [rbx]; ret 0xc487;
0xffffffff824b55fd: fdiv st, qword ptr [rcx+0x12]; xchg esp, eax; ret 0x6be2;
0xffffffff811c83eb: fdiv st, qword ptr [rcx]; leave; cmp qword ptr [rdi], 0; mov eax, 0xffffffe4; cmove eax, ecx; ret;
0xffffffff82351c59: fdiv st, st(0); adc esp, ebp; mov edi, 0x5da29229; iretd;
0xffffffff822de3a5: fdiv st, st(1); pop rsp; ret 0x7d0c;
0xffffffff817dbb64: fdiv st, st(2); xchg esp, eax; inc dword ptr [rbp+0xfee79c0]; or edi, [rax-0xc]; ret;
0xffffffff82421f2e: fdivp st(3), st; rcl esi, 1; leave; iretd;
0xffffffff83450381: fdivp st(5), st; add rsp, 8; mov [rip-0xc68dfe], rax; ret;
0xffffffff82372c30: fdivr st, dword ptr [rdx-0x304c8d28]; nop; adc ch, [rbx+0x34]; mov esp, esi; neg dword ptr [rsp+rax+0x2a27bc6a]; ret 0x8126;
0xffffffff8236f96c: fdivr st, qword ptr [rax]; out 0xb9, al; leave; ret 0xd7dd;
0xffffffff8235cf99: fdivr st, qword ptr [rbx-0x4d83e14]; cmp ebp, 0xfffffff1; add esp, edx; movsd [rdi], [rsi]; sbb ebp, [rcx]; ret 0xb141;
0xffffffff834276d4: fdivr st, st(5); add rsp, 8; pop rbx; ret;
0xffffffff8342764f: fdivr st, st(5); add rsp, 8; ret;
0xffffffff826cf4dc: fdivr st, st(7); test [rbx], cl; mov esp, [rbx+0x73]; ret;
0xffffffff82478df9: fdivrp st(5), st; leave; ret 0x2ab5;
0xffffffff8343993b: ffree st(7); cmp esi, 0x48; add esp, 0x10; ret;
0xffffffff823b4b6f: ffreep st(0); or eax, 0xa2e4c119; xchg esp, eax; lodsb [rsi]; sub [rbp-0x3de8d60d], ebp; iretd;
0xffffffff82231410: fiadd st, dword ptr [rbx+0x68]; leave; xor [rsi], ch; movsxd ebp, edi; ret 0xd175;
0xffffffff818cb4fa: fiadd st, dword ptr [rcx]; add [rdi], ecx; xchg esp, eax; ret 0xc220;
0xffffffff81061abf: fiadd st, word ptr [rcx]; add [rdi], ecx; xchg esp, eax; shl byte ptr [rax], 0xc8; ret;
0xffffffff810b0322: ficom st, dword ptr [rbx-0x12]; add [rdi], ecx; xchg esp, eax; ret 0xc208;
0xffffffff82522b16: ficom st, word ptr [rbx-0x60815d0a]; leave; mov [rbx-0x14], esi; ret;
0xffffffff823dd799: ficomp st, dword ptr [rbp+0x4c]; out 0x1f, al; pop rsp; sbb eax, 0xc3906163; mov [0xf73ab94283aa7577], al; ret;
0xffffffff823dd79a: ficomp st, dword ptr [rbp+0x4c]; out 0x1f, al; pop rsp; sbb eax, 0xc3906163; mov [0xf73ab94283aa7577], al; ret;
0xffffffff815b9862: ficomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff818239c2: ficomp st, word ptr [rbx+0x41]; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff811f68a5: ficomp st, word ptr [rbx+0x41]; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff8124f34e: ficomp st, word ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff81b2ff3e: ficomp st, word ptr [rbx]; shr rax, 0x32; add eax, ecx; bswap eax; add rsp, 0x18; ret;
0xffffffff824040e2: ficomp st, word ptr [rdx+0x3d]; leave; int1; xor [rax], bl; ret 0xab5d;
0xffffffff8249423e: fidiv st, dword ptr [rax]; adc [rax-0x77], esp; cwde; xchg esp, eax; out dx, eax; iretd;
0xffffffff8252f63e: fidiv st, dword ptr [rdi+0x56]; adc esp, esp; adc eax, 0xc8ed2267; iretd;
0xffffffff82702c6f: fidiv st, dword ptr [rdi-4]; in eax, dx; mov edi, 0x7561740a; leave; jmp qword ptr [rbx+3];
0xffffffff834978ae: fidiv st, word ptr [rcx-0x2f]; std; add rsp, 8; pop rbx; ret;
0xffffffff834672ae: fidiv st, word ptr [rdi-0x2c]; std; add rsp, 8; pop rbx; ret;
0xffffffff822bf16b: fidivr st, dword ptr [rax+0x1e83e7c6]; pop rsp; iretd;
0xffffffff822ec44f: fidivr st, dword ptr [rax]; xchg esp, eax; ret 0x3302;
0xffffffff8255a204: fidivr st, dword ptr [rdi+0x75]; pop rsp; mov [rcx-9], eax; ret 0xc8f0;
0xffffffff8239a329: fidivr st, dword ptr [rdi-0x4f]; mov esp, [rbx+0x46]; outsb dx, [rsi]; iretd;
0xffffffff823cd302: fidivr st, word ptr [rdi-0x5f7c2b36]; pop rdi; add al, 0x7e; pop rsp; jmp qword ptr [r15+0x69];
0xffffffff82567383: fild st, dword ptr [rax+0xf4c7b5]; leave; ret;
0xffffffff818995a1: fild st, dword ptr [rax-0x48f0ffaa]; xchg esp, esp; or eax, 0xc0010000; ret;
0xffffffff81350840: fild st, dword ptr [rbp-0x7b]; in al, 0xf; xchg esp, eax; ret;
0xffffffff81a3b062: fild st, dword ptr [rcx-0x7d]; cld; add [rdi], ecx; xchg esp, eax; ret;
0xffffffff814a8c5c: fild st, dword ptr [rcx-0x80]; mov edi, 0x124; add [rdi], cl; xchg esp, eax; ret;
0xffffffff81ab9311: fild st, dword ptr [rcx-0xa]; rol byte ptr [rdx], 0xf; xchg esp, eax; ret;
0xffffffff81bb9354: fild st, dword ptr [rcx-0xfbdb84]; add [rax], al; add [rdi], cl; xchg esp, eax; ret;
0xffffffff823ee41a: fild st, dword ptr [rdi]; adc esp, esi; or al, 0x91; ret 0x83f8;
0xffffffff82245ea7: fild st, dword ptr [rsp+rbx*2+0x5f6a4c0d]; xchg esi, eax; mov cl, 0xf; sub esi, ebp; xchg [rdi], esp; iretd;
0xffffffff8265a620: fild st, qword ptr [rax]; xchg esp, eax; jmp far fword ptr [rdi+0x6fff9428];
0xffffffff826682e8: fild st, qword ptr [rbx]; pop rsp; jmp far fword ptr [rdi+0x7fff5c27];
0xffffffff8265a500: fild st, qword ptr [rdi-0x6c]; dec edi; insb [rdi], dx; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff826682d8: fild st, qword ptr [rip+0x2d7fff5c]; pop rsp; call far fword ptr [rdi+0x2d];
0xffffffff83447dad: fild st, qword ptr [rsi+rdx*8-3]; add rsp, 8; pop rbx; ret;
0xffffffff8265a3d8: fild st, qword ptr [rsi-0x5160006c]; xchg esp, eax; dec dword ptr [rdi-0x52]; xchg esp, eax; call far fword ptr [rdi-0x70006b54];
0xffffffff8264ef7c: fild st, word ptr [rbp-0x7af00037]; leave; dec edi; test cl, cl; jmp far fword ptr [rdi];
0xffffffff822fdf47: fild st, word ptr [rcx-0xdcc27b7]; pop rsp; add [r14-0x42], spl; xchg edx, eax; call qword ptr [rbp*4+0x2d5b732a];
0xffffffff82494d8e: fild st, word ptr [rdi+0x417389e1]; leave; iretd;
0xffffffff8264f058: fild st, word ptr [rdx-0x37]; dec dword ptr [rdi]; leave; dec dword ptr [rdi]; leave; call far fword ptr [rdi-0x400036c1];
0xffffffff8265a6e4: fild st, word ptr [rdx]; xchg esp, eax; jmp far fword ptr [rdi-0x20006bfe];
0xffffffff810be6e3: fimul st, dword ptr [rax+0x39]; fimul st, dword ptr [rdi]; xchg esp, eax; ret 0xc75;
0xffffffff826cf72c: fimul st, dword ptr [rax]; mov esp, [rbx+0x73]; ret;
0xffffffff827076e3: fimul st, dword ptr [rax]; xchg esp, eax; out 0x74, eax; iretd;
0xffffffff823d21f8: fimul st, dword ptr [rcx-0x21]; xchg esp, eax; iretd;
0xffffffff8236fa9b: fimul st, dword ptr [rdi+0x493c0d2e]; pop rsp; iretd;
0xffffffff810be6e6: fimul st, dword ptr [rdi]; xchg esp, eax; ret 0xc75;
0xffffffff810edb22: fimul st, dword ptr [rdx]; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff826cff32: fimul st, dword ptr [rsi]; mov esp, [rbx+0x73]; ret;
0xffffffff818f3786: fimul st, word ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff8185e3f9: fimul st, word ptr [rax-0x77]; mov esp, [rax]; or [rax], eax; add [rax+rax*8-0x4917fa8b], al; imul ecx, [rdi+rdi*8+0x415bc031], 0x5e; ret;
0xffffffff811857ea: fimul st, word ptr [rcx-0x77]; or [rbx+0x41], r11b; pop rsp; pop r14; pop r15; ret;
0xffffffff822eae00: fimul st, word ptr [rdi-0x16]; sbb esp, 0xffffffdc; iretd;
0xffffffff82230943: fimul st, word ptr [rip-0x3357737f]; cmp dh, [rdi]; pop rsp; sub cl, cl; ret;
0xffffffff8237799b: fincstp; leave; or al, [rax+0x7af5b4d2]; mov esi, 0xa8341ec5; ret;
0xffffffff8347d5b1: fist dword ptr [rbx+rdx*8], st; std; add rsp, 8; pop rbx; ret;
0xffffffff8228b536: fist dword ptr [rdi+0x2255e399], st; pop rsp; test al, 0xa8; xchg ebx, eax; iretd;
0xffffffff8265a490: fist word ptr [rbp-0x6b70006c], st; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff824945c3: fist word ptr [rdi*4-0x77c62966], st; xchg esp, eax; call qword ptr [rsi+0x58];
0xffffffff82494d8c: fist word ptr [rdi+rbx*8+0x7389e187], st; leave; iretd;
0xffffffff8264901c: fist word ptr [rdx], st; in al, 0xff; scasd [rdi]; adc esp, esp; jmp far fword ptr [rdi+0x10];
0xffffffff815e0be8: fistp dword ptr [rbx+0x41], st; pop rsp; pop r14; pop r15; ret;
0xffffffff824205c9: fistp dword ptr [rcx+0x518f4fc2], st; or ecx, ebp; pop rsp; iretd;
0xffffffff823d4976: fistp dword ptr [rdi-0xc], st; mov ah, 0x31; pop rsp; iretd;
0xffffffff823f3da9: fistp qword ptr [rax], st; adc ecx, ecx; sub esp, esp; iretd;
0xffffffff82336dd3: fistp qword ptr [rdx+rax-0x55571a69], st; hlt; mov esp, [rcx-0x71bb9aff]; sbb [rax+0x1cc91183], bh; shl dword ptr [rbx-0x2ad49c63], 0x3d; iretd;
0xffffffff8264f070: fistp qword ptr [rip+0x3a2fffc9], st; leave; dec dword ptr [rdi]; cmp cl, cl; call far fword ptr [rdi];
0xffffffff8256bad8: fistp qword ptr [rsi+0x55], st; mov esp, 0xe81a9499; push 0x6ba553f9; xchg esp, eax; iretd;
0xffffffff823eb36b: fistp qword ptr [rsi-0x421cc42c], st; pop rsp; cmp eax, 0xd4fb9c62; ret 0xfed6;
0xffffffff823a944f: fistp word ptr [r14], st; cmp ebp, [rdi+0x4f]; mov ebp, 0x83708415; pop rsp; iretd;
0xffffffff81e0015c: fistp word ptr [rax+0x5f], st; pop rsp; swapgs; sysretq;
0xffffffff8265a66c: fistp word ptr [rax], st; xchg esp, eax; jmp far fword ptr [rdi+0x16];
0xffffffff82646708: fistp word ptr [rbp+rbp*8-1], st; lahf; pop rsp; in eax, dx; call far fword ptr [rdi];
0xffffffff8264ef44: fistp word ptr [rbp-0x62500037], st; leave; jmp far fword ptr [rdi];
0xffffffff818c1190: fistp word ptr [rbx+0x41], st; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff8145ba48: fistp word ptr [rbx+0x41], st; pop rsp; pop r14; pop r15; ret;
0xffffffff81939fc0: fistp word ptr [rbx-0x17], st; leave; iretd;
0xffffffff81bcaf00: fistp word ptr [rbx-0x17], st; leave; mov ah, bh; jmp qword ptr [rsi+0xf];
0xffffffff8176b180: fistp word ptr [rbx-0x17], st; leave; or al, 0xb2; jmp qword ptr [rsi+0xf];
0xffffffff822baf42: fistp word ptr [rbx-0x1e], st; mov dl, 0xab; and eax, 0xce259b97; fcomp st, st(3); leave; iretd;
0xffffffff823a9450: fistp word ptr [rsi], st; cmp ebp, [rdi+0x4f]; mov ebp, 0x83708415; pop rsp; iretd;
0xffffffff82463dbd: fistp word ptr [rsi], st; leave; fidivr st, word ptr [rip+0x1ac84aba]; movsd [rdi], [rsi]; cmpsb [rsi], [rdi]; iretd;
0xffffffff81021ef3: fisttp dword ptr [rax-0x77], st; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff816f906b: fisttp dword ptr [rax-0x7b], st; ror byte ptr [rdi], cl; xchg esp, eax; ret;
0xffffffff81829e0e: fisttp dword ptr [rcx-0x3b7cb728], st; adc [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8122bc62: fisttp dword ptr [rcx-0x7cfbdb94], st; std; add cl, [rdi]; xchg esp, eax; ret;
0xffffffff81287f08: fisttp dword ptr [rdi], st; xchg ebp, eax; shl esi, 0xc3; add [rdi], ecx; xchg esp, eax; ret 0xca20;
0xffffffff810c2c94: fisttp dword ptr [rdi], st; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; pop rbp; ret;
0xffffffff812dcce7: fisttp dword ptr [rdi], st; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; ret;
0xffffffff8105c026: fisttp dword ptr [rdi], st; xchg esp, eax; ret 0x2044;
0xffffffff817631ed: fisttp dword ptr [rdi], st; xchg esp, eax; ret 0x8349;
0xffffffff811894c7: fisttp dword ptr [rdi], st; xchg esp, eax; ret 0x894c;
0xffffffff812e4f62: fisttp dword ptr [rdi], st; xchg esp, eax; ret 0xc230;
0xffffffff813548b3: fisttp dword ptr [rdi], st; xchg esp, eax; ret 0xca30;
0xffffffff8180dce6: fisttp dword ptr [rdi], st; xchg esp, eax; ret;
0xffffffff8245dc2e: fisttp dword ptr [rsi], st; sar dword ptr [rcx+rdx+0x3d4b8d4f], cl; leave; pushfq; ret 0x4add;
0xffffffff8245dc2d: fisttp dword ptr [rsi], st; sar dword ptr [rcx+rdx+0x3d4b8d4f], cl; leave; pushfq; ret 0x4add;
0xffffffff819795ed: fisttp qword ptr [rax-0x77], st; fucomip st, st(0); leave; in al, dx; add [rax-0x77], cl; ret;
0xffffffff82336863: fisttp qword ptr [rax], st; pop rsp; xchg ecx, eax; fxch st, st(5); xor gs:[rdi-0x2c], bh; iretd;
0xffffffff8239f22e: fisttp qword ptr [rbp+0x7f], st; mov [rcx+0x4e], es; leave; jmp qword ptr [rax+rbx*8];
0xffffffff83469dad: fisttp word ptr [rsp+rdx*8-3], st; add rsp, 8; pop rbx; ret;
0xffffffff82563414: fisub st, dword ptr [rdx]; adc rsp, rax; sbb esi, edi; ret 0xb5a7;
0xffffffff814162ae: fisub st, word ptr [rsi+0x415b0084]; pop rsp; pop r14; pop r15; ret;
0xffffffff8251e718: fisubr st, dword ptr [rdx+0x3d]; pop rsp; shl ch, cl; iretd;
0xffffffff822edb01: fisubr st, dword ptr [rsi+0x5d91d12e]; mov eax, 0xf03754ea; xchg esp, eax; iretd;
0xffffffff826cf4a9: fisubr st, dword ptr [rsi+0x979d7fd]; mov esp, [rbx+0x73]; ret;
0xffffffff81bcd140: fisubr st, word ptr [rax-0x57f18ae0]; add cl, [rdi]; xchg esp, eax; ret 0x30a8;
0xffffffff824cb52f: fisubr st, word ptr [rdi]; pop rdx; push rax; pop rsp; add al, 0xa0; ret 0x4644;
0xffffffff818d8ebe: fisubr st, word ptr [rdx+1]; add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x3944;
0xffffffff8245afd5: fisubr st, word ptr [rip+0x18f060b]; mov [0x1847e1be9049ed28], al; pop rsp; mov esp, 0xd6f6f6f5; iretd;
0xffffffff8344bdae: fisubr st, word ptr [rsi+rdx*8]; std; add rsp, 8; pop rbx; ret;
0xffffffff82474da3: fld st, dword ptr [r12+rsi*4-0x63]; mov al, 0x2f; pop rsp; iretd;
0xffffffff825da842: fld st, dword ptr [rbp-0x22b1383]; push rax; xchg esp, eax; ret;
0xffffffff834277e3: fld st, dword ptr [rbp-0x35]; std; add rsp, 0x10; ret;
0xffffffff816ca215: fld st, dword ptr [rcx-0x76]; xchg esp, eax; and al, 0x38; add [rax], eax; add [rax], dh; ret 0x8a41;
0xffffffff8243f22a: fld st, dword ptr [rdi+0x6d]; mov esp, [rax]; jmp qword ptr [rdi];
0xffffffff823f9470: fld st, dword ptr [rsi-0x18587494]; xchg esp, eax; test dh, 0x24; and edx, [rdi-0x5e9b7053]; leave; ret 0x95a6;
0xffffffff82474da4: fld st, dword ptr [rsp+rsi*4-0x63]; mov al, 0x2f; pop rsp; iretd;
0xffffffff8200db11: fld st, qword ptr [rcx+1]; pop rsp; mov ch, 4; call far fword ptr [rcx-6];
0xffffffff8345a2af: fld st, qword ptr [rdi-0x2b]; std; add rsp, 8; pop rbx; ret;
0xffffffff8346a7af: fld st, qword ptr [rdx-0x2c]; std; add rsp, 8; pop rbx; ret;
0xffffffff82281d91: fld st, st(3); adc al, 0xe8; pop rsp; iretd;
0xffffffff8239d32b: fld st, tbyte ptr [rbp+0x61]; xchg edi, eax; xchg esp, eax; ret;
0xffffffff823f21d8: fld st, tbyte ptr [rdi+0x6286b1a0]; movsb [rdi], [rsi]; xchg esp, eax; iretd;
0xffffffff817cc66e: fld1; mov esp, fs; add [r9-0x3c9cb73d], cl; pop rbx; pop r14; ret;
0xffffffff8243b8fc: fldcw [rsi+0x7d]; leave; fidiv st, dword ptr [rbx+0x4b]; mov al, 0xf5; ret;
0xffffffff823bef96: fldcw [rsi-0x13f593c2]; push rsi; leave; outsb dx, [rsi]; ret;
0xffffffff823c5225: fldenv [rax+0x5a]; imul byte ptr [rsi+0x1a]; adc r14d, [rcx-0x44c1301d]; leave; ret;
0xffffffff823c2096: fldenv [rax+0x5cba30d2]; test eax, 0x1b0b3673; xchg esp, eax; mov gs, [rcx]; ret 0xdf46;
0xffffffff834489b3: fldenv [rax-0x2a]; std; add rsp, 8; ret;
0xffffffff8239d328: fldenv [rbp+0x616ddb7f]; xchg edi, eax; xchg esp, eax; ret;
0xffffffff8166cf1f: fmul st, dword ptr [r9+0x458bfc45]; cld; add rsp, 0x38; pop rbp; ret;
0xffffffff815bbbc9: fmul st, dword ptr [rax+0x63]; fsubr st, st(3); shr eax, cl; pop rsp; mov bh, 0xaf; jmp qword ptr [rsi+0x66];
0xffffffff810db407: fmul st, dword ptr [rax-0x7b]; leave; lea rax, [rcx+rax-0x530]; cmove rax, rcx; ret;
0xffffffff82325796: fmul st, dword ptr [rax]; push rdx; add esp, esp; scasd [rdi]; ret 0xae7;
0xffffffff8234909b: fmul st, dword ptr [rbp+rbp*8-0x36]; sub al, bh; and rax, 0x3470b76; adc eax, 0xd0fb7c76; leave; ret;
0xffffffff8166cf20: fmul st, dword ptr [rcx+0x458bfc45]; cld; add rsp, 0x38; pop rbp; ret;
0xffffffff816aa542: fmul st, dword ptr [rcx+0x63]; xchg esp, ecx; add [rax], al; add [rax+0x39], cl; ret;
0xffffffff812d9588: fmul st, dword ptr [rcx+rcx*4-0xe]; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff815230b7: fmul st, dword ptr [rdi]; xchg esp, eax; ret 0xca08;
0xffffffff8223667f: fmul st, dword ptr [rsp+rcx+0x3a8559c1]; leave; pop rax; iretd;
0xffffffff811fd58c: fmul st, qword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff8110a88b: fmul st, qword ptr [rax-0x77]; or [rax-0x77], cl; add [rbp+0x31], eax; leave; mov eax, r9d; ret;
0xffffffff812d68ca: fmul st, qword ptr [rax-0x7b]; leave; setne al; ret;
0xffffffff824989b3: fmul st, qword ptr [rcx-0x71]; mov bl, [rbx+rdx*4]; leave; cmpsb [rsi], [rdi]; ret 0xd614;
0xffffffff82509839: fmul st, qword ptr [rdx+0x6143678c]; leave; cmp cl, [rdi-0x4c]; iretd;
0xffffffff823446c2: fmul st, qword ptr [rsp+r14*2-0x58]; mov r14b, [r9+0x4c]; cmpsb [rsi], [rdi]; leave; mov dl, 0xa3; iretd;
0xffffffff823446c3: fmul st, qword ptr [rsp+rsi*2-0x58]; mov r14b, [r9+0x4c]; cmpsb [rsi], [rdi]; leave; mov dl, 0xa3; iretd;
0xffffffff82346545: fmulp st(0), st; pop rsp; int1; imul eax, 0xffffffe0; mov ecx, 0x40e68513; ret;
0xffffffff82303aae: fndisi; and ebx, [rsi-0x4c]; xchg esp, eax; and al, 0x17; ret 0x808f;
0xffffffff834a10b2: fnop; std; add rsp, 8; pop rbx; ret;
0xffffffff82522b25: fnsave [rbx+0x5b]; xchg edx, eax; scasb es:[rdi]; leave; call far fword ptr [rsi];
0xffffffff826cf6e2: fnsave [rbx+0xb]; mov esp, [rbx+0x73]; ret;
0xffffffff8345d030: fnsave [rdx-0x43]; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8255188d: fnstcw [rbx-0x98e745b]; in al, dx; scasd [rdi]; xchg [rcx-0x50], esp; cmp al, 0xf6; ret;
0xffffffff8242513d: fnstcw [rcx]; leave; movsd [rdi], [rsi]; out 0x56, eax; ret;
0xffffffff8249a82a: fnstenv [rbx-0x69]; in eax, 0xb3; xor [rcx], eax; pop rsp; ret 0xb686;
0xffffffff8235938d: fnstenv [rbx]; xlat [rbx]; leave; ret;
0xffffffff8250a8f8: fnstsw [rcx+0x45f368f4]; mov bl, 0x6b; mov [0xa0e9f21433215223], al; pop rsp; mov ebp, 0xb4a5eeff; iretd;
0xffffffff8235a66f: frndint; xchg esp, eax; iretd;
0xffffffff814197c1: fst qword ptr [rcx+rdx*2+0x415b8259], st; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff8265a2d1: fst qword ptr [rdi+rdi*8-0x6b22c1], st; paddusw mm2, [rdi+rdi*8-0x6b23a1]; fstp st(3), st; xchg esp, eax; jmp far fword ptr [rdi+0x1fff94db];
0xffffffff8265a2d9: fst qword ptr [rdi+rdi*8-0x6b23a1], st; fstp st(3), st; xchg esp, eax; jmp far fword ptr [rdi+0x1fff94db];
0xffffffff834a0cfa: fst st(0), st; std; add rsp, 8; pop rbx; ret;
0xffffffff83470d0a: fst st(3), st; std; add rsp, 8; pop rbx; ret;
0xffffffff83460d61: fst st(4), st; std; add rsp, 8; pop rbx; ret;
0xffffffff822f0f3c: fst st(5), st; xchg esp, eax; cld; ret;
0xffffffff816b554e: fstp dword ptr [rbx+0x41], st; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81185af3: fstp dword ptr [rsi+0x415b00af], st; pop rsp; pop r14; pop r15; xor eax, eax; ret;
0xffffffff826cfc3a: fstp dword ptr [rsi+0xe8c6c28], st; mov esp, [rbx+0x73]; ret;
0xffffffff83468bb3: fstp dword ptr [rsi-0x2c], st; std; add rsp, 8; pop rbx; ret;
0xffffffff8137705f: fstp qword ptr [rbx+0x41], st; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff811215fe: fstp qword ptr [rbx+0x41], st; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff82359c2e: fstp qword ptr [rdx+0x30], st; pop rsp; ret 0x941c;
0xffffffff82668090: fstp st(0), st; pop rsp; call far fword ptr [rdi+0x1fff5cd8];
0xffffffff834a0ab5: fstp st(0), st; std; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff834a0b78: fstp st(0), st; std; add rsp, 8; pop rbx; ret;
0xffffffff8265a338: fstp st(1), st; xchg esp, eax; call far fword ptr [rdi-0x6b31];
0xffffffff8235938c: fstp st(1), st; xor edx, edi; leave; ret;
0xffffffff8264ee54: fstp st(2), st; leave; jmp far fword ptr [rdi-0x26];
0xffffffff83470af8: fstp st(3), st; std; add rsp, 8; pop rbx; ret;
0xffffffff8265a2e0: fstp st(3), st; xchg esp, eax; jmp far fword ptr [rdi+0x1fff94db];
0xffffffff8227542b: fstp st(4), st; mov al, 0xe3; pop rsp; adc eax, 0x31ea1b52; iretd;
0xffffffff816a7041: fstp tbyte ptr [rbx], st; mov al, 0xff; add rsp, 8; ret;
0xffffffff83466bb1: fstp tbyte ptr [rsi-0x2c], st; std; add rsp, 8; pop rbx; ret;
0xffffffff824a7999: fstp tbyte ptr [rsi-8], st; sbb bl, [rax+0x392a1045]; fwait; pop rsp; iretd;
0xffffffff822de3a1: fsub st(3), st; and ebx, [rax]; fdiv st, st(1); pop rsp; ret 0x7d0c;
0xffffffff82276bd7: fsub st(5), st; leave; cmp [rdx+0x46d71d4b], ah; ret 0x56ba;
0xffffffff81a76bd4: fsub st, dword ptr [rcx+rax]; add rsp, 0x40; pop rbx; ret;
0xffffffff82332639: fsub st, qword ptr [rax+0x1d]; pop rsp; xor dword ptr [rdi], 0xb435f3f2; sbb dword ptr [rax], 0xffffffc7; cli; ret 0x32a3;
0xffffffff8251f4ad: fsub st, qword ptr [rax+rdx*4+0x14]; pop rsp; adc esi, [rsi+0x36cf4934]; lodsd [rsi]; ret 0xf7da;
0xffffffff82420399: fsub st, st(6); xchg esp, eax; mov [0xacac4e752fda18b4], al; and sil, [rip-0x6596467a]; call far fword ptr [rcx-0x30];
0xffffffff81b8163c: fsubp st(0), st; out dx, al; pop rsp; push rbx; jmp qword ptr [rsi+0x66];
0xffffffff81348859: fsubp st(0), st; xchg ecx, eax; sbb esp, esi; jmp qword ptr [rbp+0x48];
0xffffffff8255f0ed: fsubr st, dword ptr [rdi]; cmc; xchg [rsi], esp; fisub st, dword ptr [rsi+0x680865cc]; iretd;
0xffffffff822c4821: fsubr st, dword ptr [rdx-0x3a]; pop rsp; ret;
0xffffffff822bf166: fsubr st, dword ptr [rsi-0x25275972]; mov eax, 0x1e83e7c6; pop rsp; iretd;
0xffffffff822cb3e6: fsubr st, qword ptr [rax]; xchg esp, eax; and bl, [rdi]; imul dword ptr [rdx+0x51]; call far fword ptr [rcx+4];
0xffffffff8254f48b: fsubr st, qword ptr [rcx+0x23]; test al, 0xf; leave; xchg esp, eax; jmp far fword ptr [rdi-0x3361e5d4];
0xffffffff822b8986: fsubr st, qword ptr [rdi+0x43eacdb7]; xchg ecx, eax; pop rsp; ret;
0xffffffff8133453c: fsubr st, qword ptr [rsi]; add ch, cl; lodsb [rsi]; pop rsp; cmc; jmp qword ptr [rsi+0x66];
0xffffffff8177ab0a: fsubr st, st(0); adc [rbp+0x415b004f], ch; pop rsp; pop r14; pop r15; ret;
0xffffffff822eebc4: fsubr st, st(1); pop rsp; iretd;
0xffffffff815bbbcc: fsubr st, st(3); shr eax, cl; pop rsp; mov bh, 0xaf; jmp qword ptr [rsi+0x66];
0xffffffff8245f577: fsubr st, st(4); hlt; adc eax, 0x7ad7b233; leave; ret 0x94ff;
0xffffffff82451299: fucom st, st(6); cmp dh, 0xcb; xchg [rbp+0x40777e1e], esp; or [rcx], ch; fcom st, dword ptr [rbp-0x6e]; ret 0xd70;
0xffffffff811c81df: fucomi st, st(0); fwait; xchg esp, eax; ret;
0xffffffff82433637: fucomi st, st(1); xchg esp, eax; xchg ebx, eax; iretd;
0xffffffff813f215d: fucomi st, st(3); sbb [rax+0xf413bf9], eax; xchg esp, eax; ret;
0xffffffff813f2838: fucomi st, st(3); sbb [rax-0x80], al; std; cmp ecx, [rdi]; xchg esp, eax; ret;
0xffffffff814b26a1: fucomi st, st(7); xchg esp, eax; add dh, dh; add eax, 0x21d9058; add dh, [rbp+1]; ret;
0xffffffff81bca4dd: fucomip st, st(0); insd [rdi], dx; mov esp, ds; jmp qword ptr [rsi-0x7b];
0xffffffff819795f1: fucomip st, st(0); leave; in al, dx; add [rax-0x77], cl; ret;
0xffffffff8169b822: fucomip st, st(0); or dh, cl; pop rsp; add [rax-0x77], cl; ret;
0xffffffff81c80cee: fucomip st, st(0); pop rsp; or al, 0; add [rax-0x77], cl; ret;
0xffffffff8195d01e: fucomip st, st(0); pop rsp; ret 0xffd1;
0xffffffff81582ce1: fucomip st, st(0); sbb esp, esp; cmpsd [rsi], [rdi]; add [rax-0x77], cl; ret;
0xffffffff819b89ba: fucomip st, st(0); xchg [rax+rax-0x15], esp; add eax, 0xffffa1b8; jmp qword ptr [rbp+0x48];
0xffffffff815d59e6: fucomip st, st(0); xchg esp, eax; add [rax], al; add [rax+rax*8+0x415b0474], al; pop rsi; ret;
0xffffffff81b25d76: fucomip st, st(0); xchg esp, eax; and ch, al; jmp qword ptr [rbp+0x48];
0xffffffff815f0736: fucomip st, st(0); xchg esp, eax; in eax, dx; iretd;
0xffffffff8133fe56: fucomip st, st(0); xchg esp, eax; iretd;
0xffffffff811a8226: fucomip st, st(0); xchg esp, eax; jmp far fword ptr [rbx+0x5e894900];
0xffffffff815f7bc6: fucomip st, st(0); xchg esp, eax; mov dl, 0xcd; jmp qword ptr [rbp+0x48];
0xffffffff815fd116: fucomip st, st(0); xchg esp, eax; ret;
0xffffffff82343667: fucomip st, st(0); xor al, 0x8f; imul edx, [rcx-0xc], 0x8e756444; push 0xffffffffa01897e6; xchg esp, eax; jmp qword ptr [rbp-0x33];
0xffffffff83482e96: fucomp st, st(0); xchg esp, eax; ret;
0xffffffff8182b0d9: fucomp st, st(3); mov [rbp-0x7b], eax; in al, 0xf; xchg esp, eax; ret;
0xffffffff8182c4a7: fucomp st, st(3); mov eax, [rbp-0x7b]; in al, 0xf; xchg esp, eax; ret;
0xffffffff826882b7: fucomp st, st(6); andps xmm4, [rcx+0x75]; leave; jmp far fword ptr [rcx+rbp*2+0x27];
0xffffffff82513735: fwait; cmp al, 0x96; xchg sp, ax; ret 0x29;
0xffffffff813389c1: fwait; cmpsb [rsi], [rdi]; xchg esp, eax; add [rax-0x39], cl; mov eax, 0xe882e0a6; jmp qword ptr [rbp-0x76bbff6c];
0xffffffff834a0ff1: fwait; fcmovbe st, st(0); std; add rsp, 8; ret;
0xffffffff8236c369: fwait; lahf; leave; out 0x5f, al; call far fword ptr [rdi-0xe];
0xffffffff822dd185: fwait; leave; and eax, 0x3c4dd143; adc dl, [rdi-0x3c]; iretd;
0xffffffff8129cd71: fwait; leave; cld; jmp qword ptr [rsi+0x66];
0xffffffff82286764: fwait; leave; jmp qword ptr [rax-0x70];
0xffffffff822e4982: fwait; leave; mov al, 0x9a; mov ecx, 0x6469e2b; int1; iretd;
0xffffffff823ee452: fwait; leave; push rbp; or eax, 0x49cb2422; pop rcx; iretd;
0xffffffff824b9dd2: fwait; leave; ret 0x3de5;
0xffffffff823f9e8e: fwait; mov bh, 0x12; leave; jmp far fword ptr [rdx];
0xffffffff82307112: fwait; mov eax, 0xae40b822; xor dl, ah; leave; iretd;
0xffffffff8231ff11: fwait; mov edi, 0x4551a6a6; pop rsp; xchg [rcx+0x7f], esp; iretd;
0xffffffff8254625a: fwait; mov edx, 0x5cc38837; pop rsp; ret 0xa99a;
0xffffffff82568204: fwait; or [rdx-0x68a9a3a5], ch; leave; pop rbx; popfq; jmp qword ptr [rdi-0x72fca4eb];
0xffffffff824be81b: fwait; out dx, al; leave; call qword ptr [rax+0x28];
0xffffffff8224a6f4: fwait; pop rax; mov ebp, gs; pushfq; xchg esp, eax; ret 0x378b;
0xffffffff823ef3e3: fwait; pop rdi; cld; pop rsp; ret;
0xffffffff824a79a2: fwait; pop rsp; iretd;
0xffffffff823893d8: fwait; push rsi; adc esp, esp; iretd;
0xffffffff822e52a2: fwait; push rsp; std; xchg esp, eax; mov al, [0x9e5bb01895bb1816]; iretd;
0xffffffff824d98c3: fwait; rol dword ptr [rdi+0x55], 1; add esp, 0x3d2b68de; iret;
0xffffffff83484f0b: fwait; sar ch, cl; add rsp, 8; pop rbx; ret;
0xffffffff83474ed3: fwait; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82277ed0: fwait; sbb eax, 0x7919db49; pop rsp; and [rax-0x736ef268], bh; ret;
0xffffffff8256444d: fwait; sbb esp, edi; add bh, 0x36; iretd;
0xffffffff8227fb0a: fwait; sub al, 0xec; leave; iretd;
0xffffffff822731f4: fwait; xchg [rcx-0x3d], esp; mov ebp, 0x59f8d502; mov al, [rdi-0x1d]; ret 0x95ea;
0xffffffff810481e1: fwait; xchg esp, eax; fild st, dword ptr [rax]; mov eax, 1; ret;
0xffffffff811081e1: fwait; xchg esp, eax; iretd;
0xffffffff82395a21: fwait; xchg esp, eax; iretd;
0xffffffff811c81e1: fwait; xchg esp, eax; ret;
0xffffffff8226acb2: fwait; xchg esp, eax; std; xor ebp, [rcx+0xe750678]; call far fword ptr [rdi];
0xffffffff823f794c: fwait; xor [rax-0x2b700db0], ecx; sbb ebp, [rax+0x695cd4c1]; or esi, [rbx]; leave; syscall;
0xffffffff82537303: fxch st, st(0); adc esp, ebp; xchg [rbx], esp; mov eax, [0x62d1c52f6f46ac58]; iretd;
0xffffffff823c0fee: fxch st, st(4); pop rsp; ret 0xc844;
0xffffffff8222b3d6: getsec; pop rsp; ret 0xf322;
0xffffffff8245f579: hlt; adc eax, 0x7ad7b233; leave; ret 0x94ff;
0xffffffff8194a566: hlt; add [rdi], cl; xchg esp, eax; ret 0x894c;
0xffffffff826d5c12: hlt; and dword ptr [rbp+0x73], 0xa; mov esp, [rbx+0x73]; ret;
0xffffffff8242019c: hlt; cdq; pop rcx; leave; mov dl, dh; ret 0x239a;
0xffffffff81bcaefc: hlt; dec dword ptr [rax-0x77]; fistp word ptr [rbx-0x17], st; leave; mov ah, bh; jmp qword ptr [rsi+0xf];
0xffffffff826cf401: hlt; insd [rdi], dx; in eax, dx; add ch, [rsp+rcx*4+0xe]; mov esp, [rbx+0x73]; ret;
0xffffffff826ceead: hlt; insd [rdi], dx; xchg esp, eax; out 0x74, eax; adc [rax+0x733ccc93], edx; ret;
0xffffffff8240bad4: hlt; leave; iretd;
0xffffffff8264edb1: hlt; leave; jmp far fword ptr [rdi-0x7000360d];
0xffffffff8242b052: hlt; leave; sub eax, 0xd555af95; scasb [rdi]; ret;
0xffffffff823d4978: hlt; mov ah, 0x31; pop rsp; iretd;
0xffffffff8236c049: hlt; mov edx, 0x462603b4; cmpsb [rsi], [rdi]; xchg esp, eax; xchg ebx, eax; ret;
0xffffffff82336dda: hlt; mov esp, [rcx-0x71bb9aff]; sbb [rax+0x1cc91183], bh; shl dword ptr [rbx-0x2ad49c63], 0x3d; iretd;
0xffffffff82515e54: hlt; mov r12b, 0xec; leave; cmp ebp, edx; adc [rdx-0x6c], bh; iretd;
0xffffffff825505b0: hlt; pop rdx; out dx, eax; xchg esp, eax; fcomi st, st(0); ret;
0xffffffff822c906d: hlt; pop rsp; imul edx, [rsi-0x7d], 0xffffffd1; ret;
0xffffffff81ae7e4b: hlt; pop rsp; jmp qword ptr [rsi-0x70];
0xffffffff823fb284: hlt; pop rsp; ret 0x3e0f;
0xffffffff8233412b: hlt; pop rsp; ret 0xede7;
0xffffffff822aa5f4: hlt; psubb mm6, [rdi]; pop rsp; ret;
0xffffffff8250a8fa: hlt; push 0x6bb345f3; mov [0xa0e9f21433215223], al; pop rsp; mov ebp, 0xb4a5eeff; iretd;
0xffffffff8349f5d6: hlt; sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff826a9506: hlt; std; leave; jmp qword ptr [rbx+3];
0xffffffff835aa738: hlt; xchg esp, eax; iretd;
0xffffffff81800248: hlt; xchg esp, eax; std; jmp far fword ptr [rcx+0xff0000];
0xffffffff82564449: hlt; xlat [rbx]; sub dh, [rdi-0x65]; sbb esp, edi; add bh, 0x36; iretd;
0xffffffff81916c88: hlt; xor eax, 0xc7c74800; mov eax, 0xe882f3f0; leave; ret;
0xffffffff82230941: idiv byte ptr [rdi+0x4c]; fimul st, word ptr [rip-0x3357737f]; cmp dh, [rdi]; pop rsp; sub cl, cl; ret;
0xffffffff83496f96: idiv byte ptr [rdx-0x2f]; std; add rsp, 8; pop rbx; ret;
0xffffffff822b59d0: idiv dword ptr [rbx+0x7aac6826]; leave; cdq; iretd;
0xffffffff8234bbc2: idiv dword ptr [rbx-0x40d92053]; and [rdi-0x7859cb1d], al; stc; cmp esi, ebp; pop rsp; iretd;
0xffffffff823c5457: idiv dword ptr [rdx-0x45]; lahf; xchg esp, eax; call qword ptr [rcx+0x5eb8a65e];
0xffffffff823465a9: idiv dword ptr [rdx]; sti; add esp, eax; adc al, 0x15; ret;
0xffffffff8123bb50: idiv edi; add rsp, 0x10; ret;
0xffffffff8123fd7b: idiv edi; add rsp, 8; ret;
0xffffffff8129f2b2: idiv edi; push rsi; rol dword ptr [rcx], 0xf; xchg esp, eax; ret;
0xffffffff8190e7b0: idiv edi; push rsi; rol dword ptr [rdx], 0xf; xchg esp, eax; ret;
0xffffffff823465a8: idiv qword ptr [rdx]; sti; add esp, eax; adc al, 0x15; ret;
0xffffffff82551892: imul ah; scasd [rdi]; xchg [rcx-0x50], esp; cmp al, 0xf6; ret;
0xffffffff83489651: imul al; leave; ret 0xfe3d;
0xffffffff81c815a1: imul al; leave; sbb al, [rax]; add [rcx+0x5e415be8], cl; pop rbp; ret;
0xffffffff834898e1: imul al; leave; stc; ret 0x8bfd;
0xffffffff8164547d: imul al; popfq; xchg esp, eax; ret 0x48ff;
0xffffffff816454b3: imul al; xchg esp, eax; ret 0x48ff;
0xffffffff816454ce: imul al; xchg rsp, rax; ret 0x48ff;
0xffffffff823d60e0: imul byte ptr [r9-0x2738f9b4]; xchg esp, eax; ret 0xbde0;
0xffffffff8228d80b: imul byte ptr [rax+0x615e06fb]; leave; add bh, bh; out 0xce, eax; ret;
0xffffffff83448196: imul byte ptr [rax-0x2a]; std; add rsp, 8; pop rbx; ret;
0xffffffff82571189: imul byte ptr [rbp-0x6fd93aa4]; leave; mov al, 0xb7; mov es, [rip+0x7fa970ff]; ret 0xdc73;
0xffffffff823d60e1: imul byte ptr [rcx-0x2738f9b4]; xchg esp, eax; ret 0xbde0;
0xffffffff823c5228: imul byte ptr [rsi+0x1a]; adc r14d, [rcx-0x44c1301d]; leave; ret;
0xffffffff82295d06: imul cl; leave; out dx, al; movsb [rdi], [rsi]; in al, 0xe2; jmp far fword ptr [rbx-0x4e];
0xffffffff82421f27: imul dword ptr [rdx-0x32]; or [rdx], edx; fdivp st(3), st; rcl esi, 1; leave; iretd;
0xffffffff82319271: imul dword ptr [rsi+0x13]; xor [rip+0x5edc8493], ebx; leave; and esi, edi; mov eax, 0x339d3921; ret;
0xffffffff81b2ff3b: imul eax, 0x431bde83; shr rax, 0x32; add eax, ecx; bswap eax; add rsp, 0x18; ret;
0xffffffff81bafc64: imul eax, 0x61c88647; shr eax, 0x16; add rsp, 0x10; pop rbx; ret;
0xffffffff810f0817: imul eax, 0xf4240; mov [rip+0x1d672a1], eax; add rsp, 4; ret;
0xffffffff8108dc90: imul eax, [r13+r14*8], 0x446943c4; std; add esp, eax; ret;
0xffffffff8103343e: imul eax, [rax], 0x48; add esp, 0x10; ret;
0xffffffff8194920d: imul eax, [rax], 0xffffff85; shl byte ptr [rax+rcx+0x5b], 0x41; pop rsp; pop r14; pop r15; ret;
0xffffffff8108dc91: imul eax, [rbp+rsi*8], 0x446943c4; std; add esp, eax; ret;
0xffffffff819c8a55: imul eax, [rbx+rbx*2], 0x41; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff825372fc: imul eax, [rbx-0x76], 0xdcb72b; fxch st, st(0); adc esp, ebp; xchg [rbx], esp; mov eax, [0x62d1c52f6f46ac58]; iretd;
0xffffffff816be97f: imul eax, [rcx-0x7cb73fcf], 0xffffffc4; sbb [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff82505021: imul eax, [rcx-0x8a2fbf0], 0x23; pop rsp; iretd;
0xffffffff82418360: imul eax, [rsi], 0xcc47f114; xchg esp, eax; pop rsi; sahf; ret;
0xffffffff81a4e04f: imul eax, eax; shr rax, 0x20; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff82433ab7: imul eax, edx, 0xffffff8b; mov cl, 0x60; mov esp, ss; ret;
0xffffffff811bedc5: imul eax; cmc; xchg esp, eax; stosb [rdi]; add [rax-0x77], cl; ret;
0xffffffff81b8d2b7: imul eax; mov [0x415bd88948000f5d], eax; pop rsp; pop r14; pop r15; ret;
0xffffffff8177e39e: imul eax; pop rsp; mov dh, 0x98; jmp qword ptr [rbp+0x48];
0xffffffff82703783: imul ebp, 0x9bf809d; mov esp, ebp; call rcx;
0xffffffff8252747d: imul ebp, [rbx+0x10c0accc], 0xffffffc9; test [rdx+0x4e5d966d], dl; sbb ah, [rip+0x161fed76]; xchg esp, eax; iretd;
0xffffffff823353a2: imul ebp, [rcx-0x44], 0xfffffffc; pop rsp; test al, 0x59; fimul st, word ptr [rip+0x772d1dce]; ret;
0xffffffff823e326d: imul ebp, [rdi*2+0x58fa0b64], 0x71f4e5d6; pop rsp; xor eax, 0xa0406659; rcl dword ptr [rax], 1; call qword ptr [rbx+0x5b8144e0];
0xffffffff82245d3f: imul ebp, [rdi-0x24], 0x50; pop rsp; iretd;
0xffffffff822e436d: imul ebp, [rsi-0x4d9fa06c], 0xffffff80; pop rsi; pop rax; adc edi, [rcx]; leave; iretd;
0xffffffff822c481b: imul ebp, ecx, 0x2c; mov ch, 0xbe; in eax, 0xd8; push 0xffffffffffffffc6; pop rsp; ret;
0xffffffff826cacfe: imul ebp, edi, 0x30353238; pop rdi; pop rbx; xchg esp, eax; out 0x74, eax; iretd;
0xffffffff826caf3f: imul ebp, edi, 0x30353238; xchg esp, eax; out 0x74, eax; iretd;
0xffffffff826cf869: imul ebp, edi, 0xb657a69; mov esp, [rbx+0x73]; ret;
0xffffffff826f04b7: imul ebp, esp, 0xfb74f69d; sub eax, 0x96576f9; cmpsd [rsi], [rdi]; xchg esp, eax; out 0x63, al; call far fword ptr [rbp+0x540d74f6];
0xffffffff823e326c: imul ebp, gs:[rdi*2+0x58fa0b64], 0x71f4e5d6; pop rsp; xor eax, 0xa0406659; rcl dword ptr [rax], 1; call qword ptr [rbx+0x5b8144e0];
0xffffffff82247f0c: imul ebp; leave; sar dword ptr [rdi-0x1f], 1; ret;
0xffffffff8225fcda: imul ebx, [rax+0x21fec66a], 0xffffffa0; pop rsp; cmovnp ebx, [rbx-0x5f6e45ba]; stosb [rdi]; in eax, dx; iretd;
0xffffffff82493dcd: imul ebx, [rbx+rbp*4], 0x23; pop rsp; ret 0xc22e;
0xffffffff83469121: imul ebx, [rcx-0x2c], 0xfffffffd; add rsp, 8; pop rbx; ret;
0xffffffff826c4031: imul ebx, ecx, 0x6dfee5e2; xchg ebp, eax; xchg esp, eax; lahf; or esp, [rbp+0x736dc363]; ret;
0xffffffff810ace01: imul ebx, esi, 0x15; add esp, eax; ret 0x69;
0xffffffff822b59cd: imul ebx, esp, 0x6c; idiv dword ptr [rbx+0x7aac6826]; leave; cdq; iretd;
0xffffffff81572724: imul ebx; in eax, 0x31; leave; mov rax, rcx; ret;
0xffffffff81794972: imul ebx; mov [rbx+0x41], ds; pop rsp; pop r14; pop r15; ret;
0xffffffff824aa3c6: imul ecx, 0x6cea6e54; shl bl, 1; pop rsp; ret 0x4e66;
0xffffffff8345a221: imul ecx, [rax-0x2b], 0xfffffffd; add rsp, 8; ret;
0xffffffff811e60e1: imul ecx, [rax], 0x31; rol byte ptr [rax+0xf00137b], cl; xchg esp, eax; ret 0x894c;
0xffffffff83469d21: imul ecx, [rbp-0x2c], 0xfffffffd; add rsp, 8; pop rbx; ret;
0xffffffff8230710c: imul ecx, [rcx+0x47], 0x9b3b3f95; mov eax, 0xae40b822; xor dl, ah; leave; iretd;
0xffffffff810f080b: imul ecx, eax, 0x5b8d80; mov [rip+0x1d672a1], ecx; imul eax, 0xf4240; mov [rip+0x1d672a1], eax; add rsp, 4; ret;
0xffffffff8223e25f: imul ecx, eax, 0xc; sub [rip-0x4450339a], esi; xchg esp, eax; mov ebx, 0xe661c075; sub r9b, [rax+rbx*4+0x4a]; ret 0x8d38;
0xffffffff826d5c0f: imul ecx, ebx, 0x6d; hlt; and dword ptr [rbp+0x73], 0xa; mov esp, [rbx+0x73]; ret;
0xffffffff826cf021: imul ecx, edi, 0xa; mov esp, [rbx+0x73]; ret;
0xffffffff81240eec: imul ecx, esi, 0x70; mov rax, [rcx+rax*8-0x7d818900]; add rsp, 4; ret;
0xffffffff81c365d5: imul edi, 0x415bd889; pop rsp; pop r14; pop r15; ret;
0xffffffff834845c5: imul edi, 0x415bffff; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff8197fd65: imul edi, 0x48; add esp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff8197fd66: imul edi, 0x48; add esp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff826cf4cc: imul edi, [rax-0x3774f71a], 0x73ffd85f; mul byte ptr [rsi+rax-0x75]; enter 0xd85f, 0xff; test [rbx], cl; mov esp, [rbx+0x73]; ret;
0xffffffff8166acbe: imul edi, [rbp+0x5be889ff], 0x41; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff8268d464: imul edi, [rbp-0x1a], 0x6d; or eax, 0x94cf06d5; in eax, 0x61; pop rsp; iretd;
0xffffffff823954f9: imul edi, [rbp-0x1c], 0xffffffa0; xchg esp, eax; enter 0xfb53, 0xa8; movsxd edi, [rbx-0x54645965]; ret;
0xffffffff82337f1a: imul edi, [rcx], 0xffffff93; xchg esp, eax; iretd;
0xffffffff823eb369: imul edi, [rdx], 0xffffffdf; mov esi, 0xbde33bd4; pop rsp; cmp eax, 0xd4fb9c62; ret 0xfed6;
0xffffffff83466e21: imul edi, [rsp+rdx*8-3], 0x48; add esp, 8; pop rbx; ret;
0xffffffff82416ab5: imul edi, ebp, 0x3b; pop rsp; cmpsd [rsi], [rdi]; scasb [rdi]; iretd;
0xffffffff82aaf8f0: imul edi, ecx, 0; add [rbx+9], bl; add [rax], al; leave; rol byte ptr [rdx], 0; ret;
0xffffffff82a3db7c: imul edi, ecx, 0; add [rbx+9], bl; add [rax], al; xchg esp, eax; call qword ptr [rax+rax];
0xffffffff826886ad: imul edi, esi, 0x12; add eax, 0x125f8474; or gs:[rcx+0x75], edx; leave; jmp far fword ptr [rax+0xc6512ff];
0xffffffff835b4d12: imul edi, esi, 0xfe69e1ac; adc esp, edx; imul edi, esi, 0xfe69e5ac; cmp al, 0xe7; imul edi, esi, 0xfe69e746; ret;
0xffffffff823954f8: imul edi, gs:[rbp-0x1c], 0xffffffa0; xchg esp, eax; enter 0xfb53, 0xa8; movsxd edi, [rbx-0x54645965]; ret;
0xffffffff8236ee23: imul edx, 0xe4d695a6; mov [rsi+rdi*8], eax; xchg esp, eax; ret;
0xffffffff82330ede: imul edx, 0xffffffe0; xor [rbx-0x2a], dh; sub [rdi], eax; leave; jmp qword ptr [rdi];
0xffffffff8266a3a9: imul edx, [rax-1], 0xff505e5f; out dx, eax; pop rsp; push rax; jmp far fword ptr [rdi+0x7fff505c];
0xffffffff8234366b: imul edx, [rcx-0xc], 0x8e756444; push 0xffffffffa01897e6; xchg esp, eax; jmp qword ptr [rbp-0x33];
0xffffffff823f979b: imul edx, [rcx], 0x1dbc094c; adc esp, esp; ret;
0xffffffff823a24d8: imul edx, [rdi+0x20], 0xc116fd8d; leave; out dx, eax; iretq;
0xffffffff82275427: imul edx, [rdi+0x25], 0xffffffa3; fstp st(4), st; mov al, 0xe3; pop rsp; adc eax, 0x31ea1b52; iretd;
0xffffffff8265a509: imul edx, [rdi+rdi*8-0x6b9511], 0xffffffaf; xchg esp, eax; jmp far fword ptr [rdi+0x66];
0xffffffff83467f0f: imul edx, esp, 0xfffffffd; add rsp, 8; pop rbx; ret;
0xffffffff822ad907: imul esi, 0xffffffb8; test dh, al; pop rsp; xor [rax-0x3b86c7c7], bh; iretd;
0xffffffff826cf245: imul esi, [rbx+0x68], 0xa646df4; mov esp, [rbx+0x73]; ret;
0xffffffff824cb450: imul esi, [rip-0x1004ba25], 0xffffffa9; xchg esp, eax; ret 0x3c8c;
0xffffffff82688197: imul esi, [rsi+0x65], 0x75617408; leave; jmp qword ptr [rdx-4];
0xffffffff826b89b0: imul esi, [rsi+0x6f], 0x746f6ff7; or [rcx+0x75], dh; leave; call far fword ptr [rsi-0x2af28b26];
0xffffffff826e3eec: imul esi, eax, 0x61; pop rsp; mov bx, 0xd967; fld st, tbyte ptr [rsp+rbp*2+8]; ret 0x10d9;
0xffffffff82697eeb: imul esi, eax, 0x61; pop rsp; mov esp, 0x139f6cb8; call rbx;
0xffffffff826885f3: imul esi, eax, 0xfffffff5; push 0x7561540c; leave; jmp far fword ptr [rbp-0x19];
0xffffffff826cf507: imul esp, [rbp+0x3c], 0xa6e66fe; mov esp, [rbx+0x73]; ret;
0xffffffff82399637: imul esp, [rbx], 0x73fe5594; leave; cmpsb [rsi], [rdi]; adc [rbx-0x15], ah; xor [rdi], bl; ret;
0xffffffff82538d62: imul esp, [rbx], 0xffffff85; adc dh, bl; xor edi, [rcx-7]; xchg esp, eax; in eax, dx; iretd;
0xffffffff82403cec: imul esp, [rcx+0x4a], 0xb0a59519; xor dword ptr [rcx+0x3b], 0x9f8ba3a2; sub al, 2; xchg esp, eax; ret 0xc691;
0xffffffff824b9dcf: imul esp, ecx, 0xffffffd0; fwait; leave; ret 0x3de5;
0xffffffff81b2ff3a: imul rax, 0x431bde83; shr rax, 0x32; add eax, ecx; bswap eax; add rsp, 0x18; ret;
0xffffffff81a4e04e: imul rax, r8; shr rax, 0x20; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81240eeb: imul rcx, rsi, 0x70; mov rax, [rcx+rax*8-0x7d818900]; add rsp, 4; ret;
0xffffffff822d73a7: in al, 0x1b; xchg ebp, eax; pop rsp; ret 0xfc8e;
0xffffffff823fae53: in al, 0x42; pop rsp; add al, 1; call qword ptr [rbx-0x3e];
0xffffffff8244af8e: in al, 0x4d; pop rsp; ret;
0xffffffff8250f853: in al, 0x60; or eax, 0x463c4b72; add esp, ebx; ret 0x9e3a;
0xffffffff822ded19: in al, 0x68; mov esp, ebp; and [rbx+rdi*4+0x180b13d2], cl; fnsave [rax-0x49f9268e]; adc eax, 0x9a531c74; ret 0x39fd;
0xffffffff826884f0: in al, 0x6b; or [rcx+0x75], edx; leave; call rsi;
0xffffffff82687ff7: in al, 0x6b; or [rcx+0x75], edx; leave; jmp qword ptr [rbx+0x74];
0xffffffff812a623f: in al, 0x78; sbb [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff826cf77b: in al, 0x79; outsb dx, [rsi]; movsxd ecx, [rdx]; mov esp, [rbx+0x73]; ret;
0xffffffff82317d5b: in al, 0x7d; pop rsp; int1; and ch, dl; call qword ptr [rbp-0x231696a];
0xffffffff822e784f: in al, 0x82; xchg esp, edi; push rbx; ret;
0xffffffff835a3fe8: in al, 0x83; leave; std; mov qword ptr [rip+0x1c949], 0; ret;
0xffffffff81013601: in al, 0x85; dec dword ptr [rdi]; xchg esp, eax; ret;
0xffffffff8236ee28: in al, 0x89; add al, 0xfe; xchg esp, eax; ret;
0xffffffff8265a2a5: in al, 0x94; dec dword ptr [rdi-0x1c]; xchg esp, eax; call far fword ptr [rdi];
0xffffffff823954fb: in al, 0xa0; xchg esp, eax; enter 0xfb53, 0xa8; movsxd edi, [rbx-0x54645965]; ret;
0xffffffff823b4b74: in al, 0xa2; xchg esp, eax; lodsb [rsi]; sub [rbp-0x3de8d60d], ebp; iretd;
0xffffffff823ca5b6: in al, 0xa9; pop rsp; ret;
0xffffffff8236e43f: in al, 0xad; pop rsp; and dh, cl; cmp [rbx], bl; ret 0x40da;
0xffffffff82362462: in al, 0xb3; leave; push rcx; movsxd eax, [rsi]; mov dword ptr [rdi], 0x76af6e6b; iretd;
0xffffffff825cdc5c: in al, 0xb8; pop rsp; pop rsp; pop rbp; lahf; ret 0x6ec2;
0xffffffff825ce05d: in al, 0xb8; pop rsp; ret 0x9f5d;
0xffffffff8230b1e3: in al, 0xbe; pop rsp; ret 0x4679;
0xffffffff834a0596: in al, 0xd0; std; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff83470613: in al, 0xd3; std; add rsp, 8; pop rbx; ret;
0xffffffff811f7a4d: in al, 0xeb; add dh, [rcx]; leave; mov rax, rcx; ret;
0xffffffff8226bd8d: in al, 0xef; xchg esp, eax; sysret;
0xffffffff82564f5c: in al, 0xf5; leave; insb [rdi], dx; adc al, 0x1c; ret 0x9888;
0xffffffff824b2e57: in al, 0xf6; xchg esp, eax; sti; pop rcx; ret;
0xffffffff81298e3c: in al, 0xf; xchg ebp, eax; rol byte ptr [rcx-0xa], 0xc4; add [rdi], ecx; xchg esp, eax; ret 0xc220;
0xffffffff81298f8b: in al, 0xf; xchg ebp, eax; rol dword ptr [rcx-0xa], 0xc4; add [rdi], ecx; xchg esp, eax; ret 0xca20;
0xffffffff819c2c88: in al, 0xf; xchg esp, eax; ret 0xc748;
0xffffffff81350843: in al, 0xf; xchg esp, eax; ret;
0xffffffff8158511e: in al, 0xf; xchg esp, eax; ror dword ptr [rdi], 0x95; ret 0x8d43;
0xffffffff82413db7: in al, 0xfb; out dx, al; leave; fisttp word ptr [rbp-0x1e2221c7], st; ret;
0xffffffff82809742: in al, 0xfe; xchg esp, eax; ret 1;
0xffffffff8264901a: in al, 0xff; fist word ptr [rdx], st; in al, 0xff; scasd [rdi]; adc esp, esp; jmp far fword ptr [rdi+0x10];
0xffffffff8264901e: in al, 0xff; scasd [rdi]; adc esp, esp; jmp far fword ptr [rdi+0x10];
0xffffffff82648e16: in al, 0xff; scasd [rdi]; mov esp, fs; jmp far fword ptr [rdi];
0xffffffff82281eb4: in al, 1; nop; cmp dl, [rbx-0xd]; leave; pop rsp; iretd;
0xffffffff81ace170: in al, dx; dec dword ptr [rcx-0x7a3fce3f]; leave; cmovns rax, rbx; pop rbx; ret;
0xffffffff82646e06: in al, dx; dec dword ptr [rdi+0xfffec02]; add ch, ah; dec edi; add esp, ebp; call far fword ptr [rdi];
0xffffffff82646e0a: in al, dx; dec dword ptr [rdi]; add ch, ah; dec edi; add esp, ebp; call far fword ptr [rdi];
0xffffffff82646e0e: in al, dx; dec edi; add esp, ebp; call far fword ptr [rdi];
0xffffffff8245f578: in al, dx; hlt; adc eax, 0x7ad7b233; leave; ret 0x94ff;
0xffffffff824a5b77: in al, dx; insb [rdi], dx; pop rsp; ret 0xf325;
0xffffffff82515e57: in al, dx; leave; cmp ebp, edx; adc [rdx-0x6c], bh; iretd;
0xffffffff82332ed8: in al, dx; leave; fstp st(2), st; or eax, 0x787ee4ed; pop rbx; ret;
0xffffffff8227fb0c: in al, dx; leave; iretd;
0xffffffff8264edd1: in al, dx; leave; jmp far fword ptr [rdi-0x70003615];
0xffffffff81424c40: in al, dx; leave; jmp qword ptr [rsi+0x66];
0xffffffff814186b7: in al, dx; leave; jmp qword ptr [rsi+0xf];
0xffffffff82385e78: in al, dx; leave; movsxd eax, [rbx-0x64]; fsubr st, qword ptr [rbx+0xa]; ret 0x24a8;
0xffffffff82513a39: in al, dx; leave; stosd [rdi]; iretq;
0xffffffff82810514: in al, dx; mov esp, [rbx]; jmp qword ptr [rdi-0x41];
0xffffffff824e93c7: in al, dx; mov esp, ebp; cmovp esp, [rax-0x11]; mov [0x177a2218e6748b49], al; iretd;
0xffffffff82506f27: in al, dx; mov esp, esp; ret 0x69a8;
0xffffffff823aa582: in al, dx; movsx rsp, byte ptr [r14+rcx*8+0x25]; leave; push rcx; cdq; ret;
0xffffffff823d8079: in al, dx; pop rsi; leave; vmulps ymm1, ymm4, [rdi+0x45ec35f8]; ret 0xce4e;
0xffffffff82287c32: in al, dx; pop rsp; iretd;
0xffffffff82559bf3: in al, dx; popfq; leave; jmp qword ptr [rdx+rbx*2-0x23];
0xffffffff82559bf4: in al, dx; popfq; leave; jmp qword ptr [rdx+rbx*2-0x23];
0xffffffff826fa7e6: in al, dx; push 0x6cb4d765; test byte ptr [rsi], 0x8e; shl word ptr [rdx-0x63], cl; pop rsp; iretd;
0xffffffff823bef9b: in al, dx; push rsi; leave; outsb dx, [rsi]; ret;
0xffffffff8346fe13: in al, dx; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82551893: in al, dx; scasd [rdi]; xchg [rcx-0x50], esp; cmp al, 0xf6; ret;
0xffffffff82537306: in al, dx; xchg [rbx], esp; mov eax, [0x62d1c52f6f46ac58]; iretd;
0xffffffff8242e9e1: in al, dx; xchg [rdx-0x4e], esp; push 0x37bc25a7; sbb ah, [rdi+rax*2+0x4d]; call rsp;
0xffffffff82389e93: in al, dx; xchg ebx, eax; adc ah, [rdx]; xchg esp, eax; push rdi; ret;
0xffffffff82495a7c: in al, dx; xchg esp, eax; iretd;
0xffffffff8265a271: in al, dx; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff824e4324: in al, dx; xchg esp, eax; or [rbx-0x47b6d60a], esi; mov bl, 0x90; iretd;
0xffffffff82551dc1: in al, dx; xchg esp, eax; ret 0xf738;
0xffffffff82408247: in al, dx; xchg esp, eax; xchg ebx, eax; push rax; push 0x4f; iretd;
0xffffffff82452f70: in al, dx; xor al, 0xc4; leave; nop; adc r9, r13; iretd;
0xffffffff824f613f: in al, dx; xor eax, 0x689adcdb; pop rsp; scasd [rdi]; iretd;
0xffffffff823eb5cd: in ax, 0x14; leave; leave; sbb ebx, [rdx]; ret 0xdbff;
0xffffffff823eb5ce: in eax, 0x14; leave; leave; sbb ebx, [rdx]; ret 0xdbff;
0xffffffff810ac73b: in eax, 0x15; add esp, eax; ret 0x69;
0xffffffff810ac713: in eax, 0x15; add esp, eax; ret 0x71;
0xffffffff823e326a: in eax, 0x1f; imul ebp, gs:[rdi*2+0x58fa0b64], 0x71f4e5d6; pop rsp; xor eax, 0xa0406659; rcl dword ptr [rax], 1; call qword ptr [rbx+0x5b8144e0];
0xffffffff8255896e: in eax, 0x27; pop r11; pop rsp; ret;
0xffffffff81572726: in eax, 0x31; leave; mov rax, rcx; ret;
0xffffffff823bd137: in eax, 0x3b; adc [rbx-0x52991286], dl; stosb [rdi]; xchg esp, eax; ret;
0xffffffff823e2f58: in eax, 0x4a; sti; mov [0x75d063183f064dd8], eax; xchg esp, eax; ret;
0xffffffff8232e102: in eax, 0x4b; xor eax, edi; xchg esp, eax; ret 0x79dd;
0xffffffff825593da: in eax, 0x5e; out dx, al; sub eax, 0xb761c6ed; or [rdx+0x7e], ch; leave; iretd;
0xffffffff8268d446: in eax, 0x61; pop rsp; and bl, [rbx+0x6d50d65]; iretd;
0xffffffff8268d431: in eax, 0x61; pop rsp; iretd;
0xffffffff8268d4c7: in eax, 0x61; pop rsp; test [rax*4+0x6f46670], cl; iretd;
0xffffffff83477ca7: in eax, 0x6d; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff823b314d: in eax, 0x73; mov dh, 0x9f; xchg esp, eax; iretd;
0xffffffff82554aef: in eax, 0x74; add bh, [rax-0x57]; xchg esp, eax; iretd;
0xffffffff8232ec21: in eax, 0x77; outsd dx, [rsi]; test [rbp+0x7e], bh; leave; out dx, al; iretd;
0xffffffff83486ba7: in eax, 0x7e; sar ch, cl; add rsp, 8; ret;
0xffffffff83476ba7: in eax, 0x7e; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff816a2bb7: in eax, 0x7f; pop rsp; add [rax-0x68], cl; ret;
0xffffffff82471dd0: in eax, 0x8d; leave; iretd;
0xffffffff82522552: in eax, 0x93; shl dl, cl; rcr dword ptr [rcx], cl; leave; xor al, 0x5b; ret 0x7106;
0xffffffff8225a066: in eax, 0x99; pop sp; lahf; mov al, [0xd78c1bec52f07660]; outsb dx, [rsi]; call qword ptr [rdi];
0xffffffff8249a82d: in eax, 0xb3; xor [rcx], eax; pop rsp; ret 0xb686;
0xffffffff82396585: in eax, 0xb8; leave; mov ah, 0x4e; ret;
0xffffffff83470558: in eax, 0xd3; std; add rsp, 8; pop rbx; ret;
0xffffffff8112efc1: in eax, 0xd5; xchg esp, eax; mov edi, 0xe1f748d6; mov rax, rdx; shr rax, 0x17; ret;
0xffffffff822c4820: in eax, 0xd8; push 0xffffffffffffffc6; pop rsp; ret;
0xffffffff8103b89a: in eax, 0xf; xchg esp, eax; ret 0x3948;
0xffffffff826486fe: in eax, 0xff; mov edi, 0xdfffe5ca; leave; in eax, 0xff; iretd;
0xffffffff82648992: in eax, 0xff; out dx, eax; pop rsp; in eax, 0xff; iretd;
0xffffffff82648a7e: in eax, 0xff; pop rdi; sub al, 0xe5; dec dword ptr [rdi+0xfffe52b]; sub esp, ebp; call far fword ptr [rdi+0xfffe52a];
0xffffffff82648a7d: in eax, 0xff; pop rdi; sub al, 0xe5; dec dword ptr [rdi+0xfffe52b]; sub esp, ebp; call far fword ptr [rdi+0xfffe52a];
0xffffffff8234390a: in eax, dx; adc esp, [rdx]; pop rsp; iretd;
0xffffffff817144da: in eax, dx; add al, [rax]; add rsp, 8; ret;
0xffffffff826cf403: in eax, dx; add ch, [rsp+rcx*4+0xe]; mov esp, [rbx+0x73]; ret;
0xffffffff811449ff: in eax, dx; add r9b, [rdi]; xchg esp, eax; shl dword ptr [rax], 0xc1; movzx eax, cl; ret;
0xffffffff822bf165: in eax, dx; fsubr st, dword ptr [rsi-0x25275972]; mov eax, 0x1e83e7c6; pop rsp; iretd;
0xffffffff826cf72a: in eax, dx; insb [rdi], dx; fimul st, dword ptr [rax]; mov esp, [rbx+0x73]; ret;
0xffffffff81b5470f: in eax, dx; leave; add [rbx-0x397cff8b], cl; jmp qword ptr [rcx];
0xffffffff82276bd8: in eax, dx; leave; cmp [rdx+0x46d71d4b], ah; ret 0x56ba;
0xffffffff825ccfb2: in eax, dx; leave; ret 0x3b81;
0xffffffff82247f0d: in eax, dx; leave; sar dword ptr [rdi-0x1f], 1; ret;
0xffffffff8235af8a: in eax, dx; leave; sub [rbx+rsi*4+5], al; ficomp st, word ptr [rsi-0x6ed41e39]; ret;
0xffffffff823bd13c: in eax, dx; lodsw [rsi]; stosb [rdi]; xchg esp, eax; ret;
0xffffffff81713c7a: in eax, dx; mov [rcx], eax; xor eax, eax; add rsp, 4; ret;
0xffffffff81003b9e: in eax, dx; mov eax, ebp; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff82554f71: in eax, dx; mov ebp, 0x90478319; data16 leave; ret;
0xffffffff82702c72: in eax, dx; mov edi, 0x7561740a; leave; jmp qword ptr [rbx+3];
0xffffffff82687ff3: in eax, dx; mov esp, 0x6be47427; or [rcx+0x75], edx; leave; jmp qword ptr [rbx+0x74];
0xffffffff823f73bb: in eax, dx; mov rsp, r8; ret;
0xffffffff825d6ffd: in eax, dx; pop rsp; in eax, dx; ret 0x299d;
0xffffffff81ae857b: in eax, dx; pop rsp; jmp qword ptr [rsi-0x70];
0xffffffff822ab74a: in eax, dx; pop rsp; ret;
0xffffffff826cf095: in eax, dx; push 0xfffffffff177276f; cwde; ror dword ptr fs:[rax], 1; mov esp, [rbx+0x73]; ret;
0xffffffff8224a6f7: in eax, dx; pushfq; xchg esp, eax; ret 0x378b;
0xffffffff8349fce0: in eax, dx; sar ch, 1; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff8346fcf4: in eax, dx; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff823650bc: in eax, dx; sbb [rdi+0x39eaf238], al; test [rdi-0x552bd26b], cl; int 0x3c; pop rsp; ret 0xa1ff;
0xffffffff82328ecd: in eax, dx; sbb dl, [rbp-0xa]; pop rsp; ret 0xdeb6;
0xffffffff8252510d: in eax, dx; sti; or al, 0xc; xchg ebp, eax; pop rsp; ret;
0xffffffff82485ec2: in eax, dx; xchg edi, eax; xchg [rdi-0x7d506d03], cl; xchg esp, eax; mov [rsi], dh; iretd;
0xffffffff82226f09: in eax, dx; xchg edx, eax; enter 0xf50c, 0x59; leave; ret 0x6a20;
0xffffffff81334276: in eax, dx; xchg esp, eax; add [rax+0x63], cl; ret;
0xffffffff81c0de3f: in eax, dx; xchg esp, eax; call qword ptr [rax-0x6f6f6f70];
0xffffffff8230b1e1: in eax, dx; xchg esp, eax; in al, 0xbe; pop rsp; ret 0x4679;
0xffffffff835a8ec4: in eax, dx; xchg esp, eax; ret;
0xffffffff812778eb: inc byte ptr [rax+0xf]; xchg esp, eax; ret 0xf201;
0xffffffff83482ec5: inc byte ptr [rax+rax*8+0x415b0a75]; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff81625f74: inc byte ptr [rax]; add al, 0; add [rdi], cl; xchg esp, eax; rol byte ptr [rcx-0x73], 0x4d; jmp qword ptr [rsi-0x7d];
0xffffffff8349c6af: inc byte ptr [rbp+0x481275c0]; add esp, 8; pop rbx; ret;
0xffffffff8343e853: inc byte ptr [rbx+0x87341f8]; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff8126848e: inc byte ptr [rdi]; add [rax], al; add rsp, 8; ret;
0xffffffff8118627b: inc byte ptr [rip-0x9bff489]; mov byte ptr [rcx], 0xf; xchg esp, eax; add eax, 0x2490252; mov eax, 1; ret;
0xffffffff8254152f: inc byte ptr [rsp+rdx*4+0x171b90fc]; and ecx, [rax+4]; leave; ret 0xc39;
0xffffffff8250cab7: inc dl; leave; ret 0x2ccc;
0xffffffff8268857e: inc dword ptr [rax+0x77]; cmc; mov esi, 0x7561540a; leave; call rdi;
0xffffffff81977cb7: inc dword ptr [rax+rax*8+0x415b0874]; pop rsp; pop r14; pop r15; ret;
0xffffffff8190606c: inc dword ptr [rax+rax*8-0x3fce2d8c]; add rsp, 8; pop rbx; ret;
0xffffffff81a163fb: inc dword ptr [rax]; add [rcx], dh; leave; cmp edx, 0xfff2; cmovne eax, ecx; ret;
0xffffffff81a163ab: inc dword ptr [rax]; add [rcx], dh; leave; cmp esi, 0xfff2; cmovne eax, ecx; ret;
0xffffffff8103225f: inc dword ptr [rax]; add [rdi], cl; xchg esp, eax; ret 0xe2c1;
0xffffffff81b34d9e: inc dword ptr [rax]; add [rsi-0x77], ah; add dword ptr [rax+0x31000000], 0xffffffc0; add rsp, 8; pop rbx; ret;
0xffffffff820032bf: inc dword ptr [rax]; pop rsp; add eax, 0xacad0ff; call rdx;
0xffffffff835238f7: inc dword ptr [rax]; pop rsp; sbb eax, 0xffffff81; jmp qword ptr [rax];
0xffffffff8352f587: inc dword ptr [rax]; xchg esp, eax; cmp eax, 0xffffff81; call qword ptr [rax-0x69];
0xffffffff8200736b: inc dword ptr [rax]; xchg esp, eax; push rcx; jmp qword ptr [rax+0x15ff051b];
0xffffffff83527787: inc dword ptr [rax]; xchg esp, eax; sub [rcx-1], al; rcl byte ptr [rax+rbp-0x7f], 1; call qword ptr [rax];
0xffffffff8144edbb: inc dword ptr [rbp+0x311c78c0]; rol byte ptr [rcx-0x7d], cl; mov edi, 0xd4; add [rdi], cl; xchg esp, eax; ret 0x894c;
0xffffffff810374dc: inc dword ptr [rbp+0x480878c0]; add esp, 8; pop rbx; pop r14; ret;
0xffffffff81689822: inc dword ptr [rbp-0x3db7f037]; add rsp, 4; ret;
0xffffffff815fe8ec: inc dword ptr [rbp-0x76c88b40]; vhaddps xmm4, xmm15, [rsp+rcx]; add [rdi], cl; xchg esp, eax; ret;
0xffffffff814a4d2b: inc dword ptr [rbp-0x76da8b25]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff8200ce7f: inc dword ptr [rbx]; xchg esp, eax; mov ebx, 0x4c08cff; call far fword ptr [rdx-0x11];
0xffffffff81269c1e: inc dword ptr [rcx+0xf]; xchg esp, eax; ret 0x841;
0xffffffff8152b07f: inc dword ptr [rcx+0xf]; xchg esp, eax; ret;
0xffffffff819f8868: inc dword ptr [rcx-0x75]; xchg esp, ecx; add eax, [rax]; add [rax+0x39], cl; ret;
0xffffffff81811e2e: inc dword ptr [rcx]; enter 0x4202, 8; add rsp, 4; ret;
0xffffffff8264ab8c: inc dword ptr [rcx]; fdiv st(7), st; out dx, eax; add esp, ebx; call far fword ptr [rdi+0x1fffdc01];
0xffffffff82008f61: inc dword ptr [rdi+rdi*8]; pop rsp; or bh, al; jmp qword ptr [rsi-0x5b009a31];
0xffffffff8359ced7: inc dword ptr [rdi-0x6b001037]; leave; out dx, eax; jmp qword ptr [rcx-0x51001037];
0xffffffff8265a6c0: inc dword ptr [rip+0x5afff94]; xchg esp, eax; call far fword ptr [rdi+5];
0xffffffff81bdc6dd: inc dword ptr [rsi-0x25]; dec dword ptr [rcx-0x7a3fce3f]; leave; cmovns rax, rbx; pop rbx; ret;
0xffffffff820098af: inc dword ptr [rsi]; xchg esp, eax; cmp edi, 0x5c; test byte ptr [rdi+rdi*8], 0x2d; add al, 0xc7; call qword ptr [rdx+0x50ff8394];
0xffffffff81740634: inc eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8200337f: inc eax; pop rsp; add eax, 0xacad8ff; call far fword ptr [rbx];
0xffffffff826680c4: inc ecx; pop rsp; call far fword ptr [rdi+0x5fff5cc1];
0xffffffff82005f43: inc esp; sbb [rdi+rdi*8], esi; enter 0x52f, 0xff; pop rsp; and bh, al; jmp qword ptr [rdx-0x4300cbe6];
0xffffffff819d332d: insb [rdi], dx; add [rax], al; add rsp, 0x10; ret;
0xffffffff828fb77d: insb [rdi], dx; add [rax], al; pop rsp; sysret;
0xffffffff819a4ed4: insb [rdi], dx; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff812a6387: insb [rdi], dx; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81170837: insb [rdi], dx; add rsp, 0x18; pop rbx; ret;
0xffffffff810cbc12: insb [rdi], dx; add rsp, 0xb8; pop rbx; pop r14; pop rbp; ret;
0xffffffff81e01907: insb [rdi], dx; and al, 0x20; add rsp, 0xa8; ret;
0xffffffff81c75de9: insb [rdi], dx; and al, 0x28; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff825ce059: insb [rdi], dx; and al, 0x5c; in al, 0xb8; pop rsp; ret 0x9f5d;
0xffffffff8242513a: insb [rdi], dx; enter 0xd9dc, 0x39; leave; movsd [rdi], [rsi]; out 0x56, eax; ret;
0xffffffff826cf72b: insb [rdi], dx; fimul st, dword ptr [rax]; mov esp, [rbx+0x73]; ret;
0xffffffff826cff31: insb [rdi], dx; fimul st, dword ptr [rsi]; mov esp, [rbx+0x73]; ret;
0xffffffff822b59cf: insb [rdi], dx; idiv dword ptr [rbx+0x7aac6826]; leave; cdq; iretd;
0xffffffff824e4323: insb [rdi], dx; in al, dx; xchg esp, eax; or [rbx-0x47b6d60a], esi; mov bl, 0x90; iretd;
0xffffffff8239fb4e: insb [rdi], dx; insb [rdi], dx; pop rsp; iretd;
0xffffffff82494989: insb [rdi], dx; leave; add dl, [rdx-0x2f]; test [rdi-0x11654e3b], ah; mov ebx, 0x693fb3b3; ret 0xb12d;
0xffffffff826db7a9: insb [rdi], dx; leave; cmp al, 0x7e; mov eax, 0x1a639c1b; or eax, 0xe570f9ca; jmp far fword ptr [rcx+rcx*8+0x73];
0xffffffff826cf414: insb [rdi], dx; mov [rdx], cs; mov esp, [rbx+0x73]; ret;
0xffffffff826cf405: insb [rdi], dx; mov [rsi], cs; mov esp, [rbx+0x73]; ret;
0xffffffff824375f1: insb [rdi], dx; mov eax, [0xbcdf7b21c1ffc71a]; xchg edx, eax; pop rsp; ret;
0xffffffff825315b3: insb [rdi], dx; mov esp, [rcx]; iretd;
0xffffffff82509832: insb [rdi], dx; or [rbp-0x3d1e5033], ch; fmul st, qword ptr [rdx+0x6143678c]; leave; cmp cl, [rdi-0x4c]; iretd;
0xffffffff823bef98: insb [rdi], dx; or ch, ah; push rsi; leave; outsb dx, [rsi]; ret;
0xffffffff823bef99: insb [rdi], dx; or ch, ah; push rsi; leave; outsb dx, [rsi]; ret;
0xffffffff82255757: insb [rdi], dx; pop rbx; cwde; leave; fld st, dword ptr [rbp+0x72]; iretd;
0xffffffff8242292c: insb [rdi], dx; pop rsi; leave; scasb [rdi]; ret;
0xffffffff8242292d: insb [rdi], dx; pop rsi; leave; scasb [rdi]; ret;
0xffffffff8266821d: insb [rdi], dx; pop rsp; call far fword ptr [rdi+0x6c];
0xffffffff823bcd6d: insb [rdi], dx; pop rsp; fwait; cdq; ret;
0xffffffff8239fb4f: insb [rdi], dx; pop rsp; iretd;
0xffffffff825d4e63: insb [rdi], dx; pop rsp; mov [0x1f0cc11ce02c833c], al; out dx, eax; call far fword ptr [rbp-0x31];
0xffffffff825ce45a: insb [rdi], dx; pop rsp; pop rsp; in al, 0xb8; ret 0x5dc2;
0xffffffff824a5b78: insb [rdi], dx; pop rsp; ret 0xf325;
0xffffffff82480e3a: insb [rdi], dx; push rbx; xchg esp, eax; cli; call far fword ptr [rcx+0x54];
0xffffffff8243bd94: insb [rdi], dx; sar byte ptr [rax+0x7d4d908f], 1; leave; sbb eax, 0x6356fc6a; adc esi, ebx; call far fword ptr [rax+rbp*4+0x4048455b];
0xffffffff83497dcb: insb [rdi], dx; sar ebp, 1; add rsp, 8; pop rbx; ret;
0xffffffff826fb090: insb [rdi], dx; sar esp, cl; xchg esp, eax; cmc; mov al, [0x63aae8f46cefd50b]; jmp rdx;
0xffffffff814739f0: insb [rdi], dx; sbb esp, ebp; dec dword ptr [rax-0x77]; ret;
0xffffffff824aa3cb: insb [rdi], dx; shl bl, 1; pop rsp; ret 0x4e66;
0xffffffff8232e100: insb [rdi], dx; shl ebp, 0x4b; xor eax, edi; xchg esp, eax; ret 0x79dd;
0xffffffff8176c7c0: insb [rdi], dx; stosd [rdi]; xchg esp, eax; jmp qword ptr [rsi+0x66];
0xffffffff824bb865: insb [rdi], dx; sub r12d, [rbx-0x2562a68a]; pop rsp; ret;
0xffffffff824bb864: insb [rdi], dx; sub r12d, [rbx-0x2562a68a]; pop rsp; ret;
0xffffffff826fa7eb: insb [rdi], dx; test byte ptr [rsi], 0x8e; shl word ptr [rdx-0x63], cl; pop rsp; iretd;
0xffffffff82498ed4: insb [rdi], dx; xchg [rax+0x521d1543], esp; cmp al, 0x8c; stosd [rdi]; ret;
0xffffffff8250b067: insb [rdi], dx; xchg [rsp+rbp-0x28], esp; jmp qword ptr [rcx-0xdb14e02];
0xffffffff822f9d7c: insb [rdi], dx; xchg esp, eax; and al, 0xb9; ret 0xe7d1;
0xffffffff8265a505: insb [rdi], dx; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff8249877e: insb [rdi], dx; xchg esp, eax; mov ecx, 0xaf7c4b3; iretq;
0xffffffff823a11f5: insd [rdi], dx; adc [rcx-0x40], ecx; leave; cmovnp edx, [rdi+rax*8-0x5a]; xor eax, [rdx+0x54c43cb0]; ret;
0xffffffff81295fbf: insd [rdi], dx; adc esp, edx; call qword ptr [rax-0x6f6f6f70];
0xffffffff8100c978: insd [rdi], dx; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81717d72: insd [rdi], dx; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff823b259b: insd [rdi], dx; cmc; add eax, 0x96f19f0e; xchg esp, eax; ret 0x2449;
0xffffffff826d5c11: insd [rdi], dx; hlt; and dword ptr [rbp+0x73], 0xa; mov esp, [rbx+0x73]; ret;
0xffffffff826cf402: insd [rdi], dx; in eax, dx; add ch, [rsp+rcx*4+0xe]; mov esp, [rbx+0x73]; ret;
0xffffffff8264efd5: insd [rdi], dx; leave; call far fword ptr [rdi];
0xffffffff824917ab: insd [rdi], dx; leave; cmp eax, 0xbe72c54e; mov ebx, 0x63b9c071; xlat [rbx]; ret 0x8dd9;
0xffffffff824d2b23: insd [rdi], dx; leave; iretd;
0xffffffff811bf2af: insd [rdi], dx; leave; std; jmp qword ptr [rbp+0x48];
0xffffffff8253384f: insd [rdi], dx; mov cl, 0x1d; xchg esp, eax; or edi, [rax+0x55]; and dword ptr [rsi-0x60], 0x95627173; iretd;
0xffffffff8243f22b: insd [rdi], dx; mov esp, [rax]; jmp qword ptr [rdi];
0xffffffff81bca4df: insd [rdi], dx; mov esp, ds; jmp qword ptr [rsi-0x7b];
0xffffffff82470ee5: insd [rdi], dx; nop; xchg esp, eax; pushfq; iretd;
0xffffffff8234fb9e: insd [rdi], dx; not dword ptr [rdx-0x21dc1b0]; pop rsp; mov bh, 0x8c; out dx, eax; ret 0x72a1;
0xffffffff8268d468: insd [rdi], dx; or eax, 0x94cf06d5; in eax, 0x61; pop rsp; iretd;
0xffffffff8346df1f: insd [rdi], dx; or edx, esp; std; add rsp, 8; pop rbx; ret;
0xffffffff82688645: insd [rdi], dx; out 0x6b, eax; or dl, [rcx+0x75]; leave; call qword ptr [rdx];
0xffffffff82688743: insd [rdi], dx; out 0x6b, eax; pcmpeqb mm4, [rcx+0x75]; leave; call qword ptr [rdx];
0xffffffff81ae83bf: insd [rdi], dx; out dx, eax; pop rsp; jmp qword ptr [rsi+0x66];
0xffffffff82668219: insd [rdi], dx; pop rsp; jmp far fword ptr [rdi+0x5fff5c6c];
0xffffffff82668215: insd [rdi], dx; pop rsp; jmp far fword ptr [rdi+0x6d];
0xffffffff81c2593f: insd [rdi], dx; pop rsp; push rdi; call far fword ptr [rbx+0x41];
0xffffffff822a903b: insd [rdi], dx; pop rsp; ret;
0xffffffff834a191f: insd [rdi], dx; rcl eax, 1; std; add rsp, 8; pop rbx; ret;
0xffffffff83487cea: insd [rdi], dx; sar ch, cl; add rsp, 8; pop rbx; ret;
0xffffffff822fb258: insd [rdi], dx; sar dword ptr [rcx-0x36f426c0], 0xfd; pop rsp; ret 0xae5b;
0xffffffff83477ca8: insd [rdi], dx; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff822cd200: insd [rdi], dx; sbb al, 0x48; sub [rdi], esp; pop rsp; mov ecx, 0x8b0a3dfe; iretd;
0xffffffff83473c1f: insd [rdi], dx; scasb [rdi]; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff822b2ea5: insd [rdi], dx; scasd [rdi]; rcr dword ptr [rax-0x3136e61f], cl; mov sil, 0xc8; pop rsp; ret;
0xffffffff826b0ff3: insd [rdi], dx; stc; pop rsp; out 0x66, al; jmp far fword ptr [rdi+0x2f1174f6];
0xffffffff8240a4e4: insd [rdi], dx; sub esp, edx; and eax, 0xfa8f1ddc; enter 0x744b, 0xa9; ret 0x4af8;
0xffffffff822f6b84: insd [rdi], dx; test esi, ebx; pop rsp; ret;
0xffffffff826c4036: insd [rdi], dx; xchg ebp, eax; xchg esp, eax; lahf; or esp, [rbp+0x736dc363]; ret;
0xffffffff82527486: insd [rdi], dx; xchg esi, eax; pop rbp; sbb r12b, [rip+0x161fed76]; xchg esp, eax; iretd;
0xffffffff826ceeae: insd [rdi], dx; xchg esp, eax; out 0x74, eax; adc [rax+0x733ccc93], edx; ret;
0xffffffff826cf03d: insd [rdi], dx; xchg esp, eax; out 0x74, eax; adc edi, [rbp+0x60dfb093]; cmp al, 0x73; ret;
0xffffffff826df98e: insd [rdi], dx; xchg esp, eax; sbb esp, [rbx-0x1a]; out 0x15, eax; call far fword ptr [rdi+0x64];
0xffffffff8253d919: insd [rdi], dx; xchg esp, eax; xchg edx, eax; iretd;
0xffffffff82545c3d: insd [rdi], dx; xor esi, [rax-0x74a6b881]; xchg esp, eax; ret 0xc345;
0xffffffff82460d02: insd [rdi], dx; xor r9d, 0x2f; xchg esp, eax; ret;
0xffffffff826df98d: insd es:[rdi], dx; xchg esp, eax; sbb esp, [rbx-0x1a]; out 0x15, eax; call far fword ptr [rdi+0x64];
0xffffffff817022a3: int 0; add [rax], al; add rsp, 0x10; pop rbx; ret;
0xffffffff812f73fe: int 0; add [rax], al; add rsp, 0x28; ret;
0xffffffff822dd44f: int 0x18; leave; adc dword ptr [rsi], 0x65; sbb edi, [rsp+rax*8-0x48015a9b]; pop rdi; ret;
0xffffffff822dd44e: int 0x18; leave; adc dword ptr [rsi], 0x65; sbb edi, [rsp+rax*8-0x48015a9b]; pop rdi; ret;
0xffffffff82417932: int 0x22; cwde; leave; ret;
0xffffffff822547c0: int 0x2d; xchg esp, eax; cdq; ret;
0xffffffff81585119: int 0x31; rol byte ptr [rbp-0x7b], cl; in al, 0xf; xchg esp, eax; ror dword ptr [rdi], 0x95; ret 0x8d43;
0xffffffff823650c9: int 0x3c; pop rsp; ret 0xa1ff;
0xffffffff823680ad: int 0x41; leave; and [rdi-0x52], esi; ret;
0xffffffff8244af86: int 0x50; mov ch, 0x83; pop rsp; test eax, 0x4de413a6; pop rsp; ret;
0xffffffff82665e51: int 0x66; dec edi; leave; call far dword ptr [rdi];
0xffffffff8234fb9d: int 0x6d; not dword ptr [rdx-0x21dc1b0]; pop rsp; mov bh, 0x8c; out dx, eax; ret 0x72a1;
0xffffffff82688547: int 0x77; cmc; mov esi, 0x7561540a; leave; jmp far fword ptr [rax-0x410a8801];
0xffffffff8230ed40: int 0x7a; pop rsp; ret;
0xffffffff8147bb71: int 0x7e; add [rcx-0x7a3fce3f], cl; leave; sete al; ret;
0xffffffff824d5a08: int 0x80; cdq; leave; ret;
0xffffffff823c2a35: int 0x85; pop rsp; iretd;
0xffffffff82359c37: int 0x8f; leave; push rdx; ret 0x402f;
0xffffffff82433ab0: int 0x96; mov edx, 0x5d83c24f; imul eax, edx, 0xffffff8b; mov cl, 0x60; mov esp, ss; ret;
0xffffffff82433aaf: int 0x96; mov edx, 0x5d83c24f; imul eax, edx, 0xffffff8b; mov cl, 0x60; mov esp, ss; ret;
0xffffffff82657225: int 0x9f; dec dword ptr [rdi-0x30006035]; leave; lahf; call far fword ptr [rdi+0x5fff9fc8];
0xffffffff826ee1dc: int 0xaf; not byte ptr [rbp+0x540a73e8]; xchg [rax+rbp*4], esp; jmp far fword ptr [rdi+0x73e895f6];
0xffffffff8222dadf: int 0xbd; leave; imul ebx, [rcx], 0xffffffcc; ret 0xc600;
0xffffffff8222dade: int 0xbd; leave; imul ebx, [rcx], 0xffffffcc; ret 0xc600;
0xffffffff82398f30: int 0xc7; mov al, 0xf7; mov ch, 0x52; leave; xchg ebx, eax; iretd;
0xffffffff8264eea9: int 0xc9; dec dword ptr [rdi-0x34]; leave; call far fword ptr [rdi];
0xffffffff825521f7: int 0xca; test [rdx+0x48], al; xchg esi, esp; ret;
0xffffffff81618b3e: int 0xcc; push qword ptr [rcx]; leave; cmp eax, 0xffffffa1; cmove eax, ecx; ret;
0xffffffff819688ce: int 0xd0; add [rcx-0x75], eax; sbb al, 0xf; xchg esp, eax; ret 0x8b41;
0xffffffff83471cb9: int 0xd3; std; add rsp, 8; pop rbx; ret;
0xffffffff8243f229: int 0xd9; insd [rdi], dx; mov esp, [rax]; jmp qword ptr [rdi];
0xffffffff8112804b: int 0xe0; mov ah, 0; add rsp, 0x18; pop rbx; ret;
0xffffffff822b8989: int 0xea; xchg r9d, eax; pop rsp; ret;
0xffffffff823e3d3f: int 0xf7; xchg esp, eax; fxch st, st(3); shr byte ptr [rcx+6], 1; sahf; jmp rbx;
0xffffffff8241cd12: int 3; leave; ret;
0xffffffff810c2c8f: int 3; mov esp, 0xfdb8500; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; pop rbp; ret;
0xffffffff824a4b60: int 8; mov esp, esi; std; iretd;
0xffffffff81348854: int1; add [r8-0x77], rcx; fsubp st(0), st; xchg ecx, eax; sbb esp, esi; jmp qword ptr [rbp+0x48];
0xffffffff8173852a: int1; add [rax], al; add [rax+0x39], cl; ror byte ptr [rdi], 1; xchg esp, eax; ret;
0xffffffff816f76a6: int1; add eax, 0xf400000; xchg esp, eax; ret 0x8948;
0xffffffff8235cfa1: int1; add esp, edx; movsd [rdi], [rsi]; sbb ebp, [rcx]; ret 0xb141;
0xffffffff82343905: int1; and edx, edi; mov [rdi-0x13], edx; adc esp, [rdx]; pop rsp; iretd;
0xffffffff8346ad9b: int1; cmp al, 0xd4; std; add rsp, 8; pop rbx; ret;
0xffffffff826cf09a: int1; cwde; ror dword ptr fs:[rax], 1; mov esp, [rbx+0x73]; ret;
0xffffffff82248156: int1; enter 0x7e69, 0xb0; xchg esp, eax; ret 0x9b00;
0xffffffff82248155: int1; enter 0x7e69, 0xb0; xchg esp, eax; ret 0x9b00;
0xffffffff834a119b: int1; fcom st, st(0); std; add rsp, 8; pop rbx; ret;
0xffffffff82687ff2: int1; in eax, dx; mov esp, 0x6be47427; or [rcx+0x75], edx; leave; jmp qword ptr [rbx+0x74];
0xffffffff82687ff1: int1; in eax, dx; mov esp, 0x6be47427; or [rcx+0x75], edx; leave; jmp qword ptr [rbx+0x74];
0xffffffff82418363: int1; int3; xchg esp, eax; pop rsi; sahf; ret;
0xffffffff82282633: int1; leave; sbb al, 0xee; ret;
0xffffffff824a218f: int1; movsd [rdi], [rsi]; xchg sp, ax; iretd;
0xffffffff81142d91: int1; movzx ecx, cl; add eax, ecx; add rsp, 0x48; ret;
0xffffffff822de3a6: int1; pop rsp; ret 0x7d0c;
0xffffffff824dad43: int1; push rbp; leave; call qword ptr [rax];
0xffffffff828ce9d8: int1; push rdx; add [rax], al; xchg esp, eax; ret 5;
0xffffffff8349f97a: int1; sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff8346f8de: int1; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82274a18: int1; xchg [rcx-0x50], esp; push rdi; iretd;
0xffffffff82483a0d: int1; xchg edx, esp; iretd;
0xffffffff823b25a0: int1; xchg esi, eax; xchg esp, eax; ret 0x2449;
0xffffffff822d26b2: int1; xchg esp, eax; iretd;
0xffffffff823eba7f: int1; xchg esp, eax; jmp far fword ptr [rdi-0x1b8eb9ad];
0xffffffff8234d1e5: int1; xchg esp, eax; mov al, [0xf374567608d1455]; mov bpl, 0x81; xchg esi, eax; ret;
0xffffffff82442537: int1; xchg esp, eax; movsxd eax, [rbx-0x5a]; imul ebp, edi, 0xffffff8f; scasb [rdi]; ret 0x684c;
0xffffffff8234af4c: int1; xchg esp, eax; sub al, 0xe5; in eax, 0x69; and cl, [rcx-0x15]; ret 0x2a84;
0xffffffff823a7f12: int1; xlat [rbx]; std; mov edi, 0xc3c5a7c2; leave; ret 0x2c99;
0xffffffff8113c143: int3; add [rax-0x75], cl; xchg [rax+0x48000000], esp; sub eax, esi; ret;
0xffffffff822a9037: int3; add eax, [rbx]; push rdi; insd [rdi], dx; pop rsp; ret;
0xffffffff82230949: int3; cmp dh, [rdi]; pop rsp; sub cl, cl; ret;
0xffffffff8193f320: int3; cmpsb [rsi], [rdi]; xchg esp, eax; dec dword ptr [rax-0x7b]; shl byte ptr [rsi+rcx*2+0x48], 0x89; ret;
0xffffffff824e6929: int3; fcom st, qword ptr [rdx-0x34349d63]; mov ebp, 0x9fff6184; adc esp, esi; ret 0xec62;
0xffffffff8264eeac: int3; leave; call far fword ptr [rdi];
0xffffffff8243ebd0: int3; leave; ret 0x5f2d;
0xffffffff82355807: int3; leave; scasb [rdi]; cmp al, 0xd4; adc ebx, [rdx-0x42d827e5]; iretd;
0xffffffff824d5323: int3; mov cl, 0xba; pop rsp; int 0x45; iretd;
0xffffffff82282630: int3; mov dl, 0x70; int1; leave; sbb al, 0xee; ret;
0xffffffff825565ec: int3; pop rsi; xchg esi, eax; xchg esp, eax; iretd;
0xffffffff82003374: int3; pop rsp; add eax, 0xacad3ff; call far fword ptr [rdi];
0xffffffff824e2674: int3; pop rsp; push rbx; ret 0x3c3d;
0xffffffff823b6a3b: int3; pop rsp; ret 0xc3e2;
0xffffffff823c0fef: int3; pop rsp; ret 0xc844;
0xffffffff822b8a16: int3; pop rsp; ret 0xe458;
0xffffffff81aa64b0: int3; pop rsp; ret;
0xffffffff81618b3f: int3; push qword ptr [rcx]; leave; cmp eax, 0xffffffa1; cmove eax, ecx; ret;
0xffffffff83471e47: int3; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff822f3248: int3; sbb [rsi-0x7d238cac], ah; movsxd eax, [rsi-0x6faa478b]; xchg esp, eax; ret 0x8abc;
0xffffffff8222b3d3: int3; sbb al, 0x95; getsec; pop rsp; ret 0xf322;
0xffffffff822374fd: int3; shl byte ptr [rdx], 2; leave; fwait; ret 0x1ed1;
0xffffffff8280bbf4: int3; sub esp, ebx; call far fword ptr [rdx+0x1a4];
0xffffffff822f48af: int3; sub esp, ebx; ret 0x6f50;
0xffffffff834641c0: int3; test al, 0xd4; std; add rsp, 8; pop rbx; ret;
0xffffffff8265a35d: int3; xchg esp, eax; call far fword ptr [rdi+0xfff94cb];
0xffffffff8265a355: int3; xchg esp, eax; call far fword ptr [rdi-0x34];
0xffffffff8265a359: int3; xchg esp, eax; call far fword ptr [rdi];
0xffffffff82418364: int3; xchg esp, eax; pop rsi; sahf; ret;
0xffffffff8103cc4c: int3; xchg esp, eax; ret;
0xffffffff82366f76: int3; xlat [rbx]; lodsb [rsi]; xchg esp, eax; rcl byte ptr [rax-0x44], cl; ret 0x462f;
0xffffffff824e6934: lahf; adc esp, esi; ret 0xec62;
0xffffffff81287349: lahf; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff819fb03d: lahf; add dword ptr [rbp+0x31], 0xe099e8c0; xchg esp, eax; dec dword ptr [rax-0x7b]; sar byte ptr [rax-0xc], 0xf; ret;
0xffffffff8264ab94: lahf; add esp, ebx; call far fword ptr [rdi];
0xffffffff8264ef5c: lahf; cdq; leave; jmp far fword ptr [rdi];
0xffffffff82498ebb: lahf; cmp [rbp+0x72], ebx; leave; iretd;
0xffffffff8265a41c: lahf; cmpsb [rsi], [rdi]; xchg esp, eax; call far fword ptr [rdi];
0xffffffff824c62f0: lahf; cmpsb [rsi], [rdi]; xchg esp, eax; jmp rbp;
0xffffffff82657226: lahf; dec dword ptr [rdi-0x30006035]; leave; lahf; call far fword ptr [rdi+0x5fff9fc8];
0xffffffff8265722a: lahf; dec edi; leave; lahf; call far fword ptr [rdi+0x5fff9fc8];
0xffffffff8236fa9a: lahf; fimul st, dword ptr [rdi+0x493c0d2e]; pop rsp; iretd;
0xffffffff8123fd7a: lahf; idiv edi; add rsp, 8; ret;
0xffffffff823b259f: lahf; int1; xchg esi, eax; xchg esp, eax; ret 0x2449;
0xffffffff824296e4: lahf; leave; adc ecx, edx; ror byte ptr [rdx+rdx*2-0x7a], cl; adc ebx, [rbx-0x5b]; ret;
0xffffffff82645190: lahf; leave; int1; call far fword ptr [rdi+0x7ffff1c8];
0xffffffff82522b1b: lahf; leave; mov [rbx-0x14], esi; ret;
0xffffffff8237dcbc: lahf; leave; mov edx, 0x9c73056d; sub eax, 0xfdf57e39; pop rdx; ret 0xbf16;
0xffffffff8237dcbd: lahf; leave; mov edx, 0x9c73056d; sub eax, 0xfdf57e39; pop rdx; ret 0xbf16;
0xffffffff8236c36a: lahf; leave; out 0x5f, al; call far fword ptr [rdi-0xe];
0xffffffff822514f1: lahf; mov [0x47158850db0289c7], al; clc; sub [rdi+0x38], ch; pop rsp; call qword ptr [rcx-0x67f22c67];
0xffffffff824435c0: lahf; mov [0x89e94b8df24f7112], al; leave; iretd;
0xffffffff82288057: lahf; mov [rcx], dl; sbb esp, edx; or [rdx+0x1ded883c], dh; iretd;
0xffffffff82288058: lahf; mov [rcx], dl; sbb esp, edx; or [rdx+0x1ded883c], dh; iretd;
0xffffffff82668140: lahf; mov eax, [0xa10fff5ca15fff5c]; pop rsp; call far fword ptr [rdi-0x60];
0xffffffff826680dc: lahf; mov ebp, 0xbd5fff5c; pop rsp; jmp far fword ptr [rdi+0x5fff5cbc];
0xffffffff826565f4: lahf; mov esp, [rdx-0x5d74c001]; call far fword ptr [rdi];
0xffffffff8264f92c: lahf; mov esp, es; call far fword ptr [rdi-0x75];
0xffffffff823d380a: lahf; or esi, [rcx]; sar byte ptr [rsi], 0x60; mov ch, 6; mov esp, eax; ret 0x8b71;
0xffffffff8264edc8: lahf; out dx, al; leave; jmp far fword ptr [rdi-0x40003613];
0xffffffff8265a540: lahf; pop rbx; xchg esp, eax; call far fword ptr [rdi+0x58];
0xffffffff81a37184: lahf; pop rsp; add [rbx+0x41], bl; pop rsi; ret;
0xffffffff8264670c: lahf; pop rsp; in eax, dx; call far fword ptr [rdi];
0xffffffff82235359: lahf; pop rsp; iretd;
0xffffffff82668155: lahf; pop rsp; jmp far fword ptr [rdi-0x7000a361];
0xffffffff8264f018: lahf; pop rsp; leave; call far fword ptr [rdi+0x7fffc95b];
0xffffffff825431cd: lahf; pop rsp; mov [0x7ef1fd363c0a16c4], al; test eax, 0xc9ee022; sub dl, [rsi-0x4d]; iretd;
0xffffffff82230717: lahf; pop rsp; ret 0x5a29;
0xffffffff8344557d: lahf; pop rsp; sub eax, 0x5b; add [rbx], esp; inc byte ptr [rbp-0x76b88b40]; ret;
0xffffffff822e91d9: lahf; push rsp; pop rsp; cld; jmp far fword ptr [rdi];
0xffffffff826680c8: lahf; rcr dword ptr [rdi+rdi*8+0x5f], 0xc1; pop rsp; jmp far fword ptr [rdi-0x40];
0xffffffff83484abc: lahf; sar ch, cl; add rsp, 8; pop rbx; ret;
0xffffffff83474af6: lahf; sar ebp, cl; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff8245ead0: lahf; sbb esp, edx; mov ecx, [rdi+0x2132500]; push rdi; mov ebp, 0x9a9a71e7; iretd;
0xffffffff8265a3dc: lahf; scasb [rdi]; xchg esp, eax; dec dword ptr [rdi-0x52]; xchg esp, eax; call far fword ptr [rdi-0x70006b54];
0xffffffff82403cf9: lahf; sub al, 2; xchg esp, eax; ret 0xc691;
0xffffffff8264eda8: lahf; test cl, 0xff; scasd [rdi]; cmc; leave; jmp far fword ptr [rdi-0x5000360c];
0xffffffff8253f45e: lahf; xchg [rip+0x79121f05], esp; push rax; push rdi; ret;
0xffffffff823101f8: lahf; xchg ebp, eax; mov ch, 0x21; add esp, eax; ret;
0xffffffff8228f745: lahf; xchg edx, eax; cli; mov esp, ss; ret;
0xffffffff8266628c: lahf; xchg esp, eax; call far fword ptr gs:[rdi];
0xffffffff823c545a: lahf; xchg esp, eax; call qword ptr [rcx+0x5eb8a65e];
0xffffffff822f13fc: lahf; xchg esp, eax; cmpsd [rsi], [rdi]; ret;
0xffffffff8266cda8: lahf; xchg esp, eax; dec dword ptr [r15-0x71]; jmp far fword ptr [r15];
0xffffffff8265a449: lahf; xchg esp, eax; dec edi; popfq; xchg esp, eax; call far fword ptr [rdi-0x63];
0xffffffff82568acd: lahf; xchg esp, eax; in al, 0xee; push rcx; iretd;
0xffffffff823b3150: lahf; xchg esp, eax; iretd;
0xffffffff8230da3d: lahf; xchg esp, eax; movsd [rdi], [rsi]; cld; ret 0x11bd;
0xffffffff82667ec8: lahf; xchg esp, eax; pop rbp; jmp far fword ptr [rdi];
0xffffffff8264d600: lahf; xchg esp, eax; sar bh, 1; iretd;
0xffffffff824e2fc1: lahf; xor eax, 0x8cf040ee; adc esp, 0x755b419; ret;
0xffffffff82646e0c: lar ebp, esp; dec edi; add esp, ebp; call far fword ptr [rdi];
0xffffffff818edf57: lea eax, [rax+rax*4]; add eax, 0xfffffffb; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8113fb57: lea eax, [rax-0x77000000]; cmp [r9], sil; shl dh, cl; add al, 0xf; xchg esp, eax; ret 0x8b48;
0xffffffff818979f8: lea eax, [rax]; add [rax], al; add rsp, 0x10; pop rbx; ret;
0xffffffff816ab066: lea eax, [rax]; add [rax], al; add rsp, 0x18; pop rbx; ret;
0xffffffff81c63905: lea eax, [rbx+rax*8]; add rax, 0x28; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff824083c6: lea eax, [rdi-0x7e86b585]; leave; xor dl, [rsi+0xf5b820c]; or [rsi+rbx*8], ah; fidiv st, dword ptr [rdx]; ret;
0xffffffff8252204c: lea eax, [rsi]; push rcx; add [rax-0x28c93569], ecx; pop rsp; ret;
0xffffffff82226f06: lea ebp, [rbx+rax+0xcc892ed]; cmc; pop rcx; leave; ret 0x6a20;
0xffffffff82226f05: lea ebp, [rbx+rax+0xcc892ed]; cmc; pop rcx; leave; ret 0x6a20;
0xffffffff810f080e: lea ebx, [rbx]; mov [rip+0x1d672a1], ecx; imul eax, 0xf4240; mov [rip+0x1d672a1], eax; add rsp, 4; ret;
0xffffffff82396580: lea ebx, [rcx*2-0x471a75a6]; leave; mov ah, 0x4e; ret;
0xffffffff8225d162: lea ebx, [rdx]; stosb [rdi]; push rbp; xchg esp, eax; iretd;
0xffffffff822e6ec9: lea ecx, [rbp+0x1e881467]; xchg esp, eax; fwait; ret;
0xffffffff8245dc34: lea ecx, [rbx+0x3d]; leave; pushfq; ret 0x4add;
0xffffffff82558965: lea ecx, [rcx-0x692053d5]; sbb al, 0x76; or eax, 0x5b4d27e5; pop rsp; ret;
0xffffffff82538d5f: lea edx, [rcx-0x7adc943e]; adc dh, bl; xor edi, [rcx-7]; xchg esp, eax; in eax, dx; iretd;
0xffffffff82230aa8: lea edx, [rdx]; pop rsp; add [rsi+0x4e910198], ebp; call far fword ptr [rcx-0x21265bc];
0xffffffff81af3b9f: lea esi, [rdi]; pop rsp; jmp qword ptr [rsi+0x66];
0xffffffff82359384: lea esi, [rsi+0x64556e0]; mov ss, bx; fstp st(1), st; xor edx, edi; leave; ret;
0xffffffff834773ff: lea esi, [rsi-0x2d]; std; add rsp, 8; pop rbx; ret;
0xffffffff824aa72b: lea esp, [rax+0x5d]; leave; mov eax, 0xcbb1bb1a; or [rdx], al; xchg ecx, eax; iretd;
0xffffffff8235ab06: lea esp, [rax]; xchg esp, eax; popfq; ret;
0xffffffff822e6eca: lea esp, [rdi+0x14]; mov [rsi], bl; xchg esp, eax; fwait; ret;
0xffffffff82558e10: lea esp, [rdi]; mov [rdx+r11*2], ss; add esp, ebx; pop rcx; iretd;
0xffffffff82247f05: lea esp, [rdx-0x27]; or [rdx+0x1a], ch; imul ebp; leave; sar dword ptr [rdi-0x1f], 1; ret;
0xffffffff8245dc33: lea r9, [r11+0x3d]; leave; pushfq; ret 0x4add;
0xffffffff81c63904: lea rax, [r11+r8*8]; add rax, 0x28; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff822b0926: leave; adc [rbp+0x2a], ebp; push rdx; mov edi, fs; iretd;
0xffffffff819d0f27: leave; adc [rcx-0x7c99e7b8], cl; cli; dec dword ptr [rdi]; test [rbp-0x7d000000], al; ret 0x66ec;
0xffffffff81668b4b: leave; adc [rcx], dh; rol dword ptr [rcx], 1; enter 0xc289, 0xc1; ret 0x3103;
0xffffffff823e6f1e: leave; adc [rsi+0x66a926ce], ebp; insb [rdi], dx; xlat [rbx]; iretd;
0xffffffff82487441: leave; adc ah, dl; ret;
0xffffffff810576e3: leave; adc al, 0; pop rbx; pop r14; ret;
0xffffffff820062e0: leave; adc al, 0x40; jmp far fword ptr [rsp+rbp];
0xffffffff823ac922: leave; adc ax, 0xef47; iretd;
0xffffffff82339ce8: leave; adc ch, [rdx]; iretd;
0xffffffff81c4b71d: leave; adc cl, [rax-0x77]; ret 0x7eb;
0xffffffff822dd452: leave; adc dword ptr [rsi], 0x65; sbb edi, [rsp+rax*8-0x48015a9b]; pop rdi; ret;
0xffffffff817ced7b: leave; adc eax, 0xbce801ea; pushfq; mov bh, bh; xor eax, eax; ret;
0xffffffff82559806: leave; adc eax, 0xc9ff2d26; call rdi;
0xffffffff8158f9d4: leave; adc eax, [rax]; not eax; mov [rbx+0x64], eax; pop rbx; ret;
0xffffffff82a27bc1: leave; adc eax, [rax]; or eax, [rax]; add [rax], al; ret 1;
0xffffffff835a8e00: leave; adc eax, edx; std; rcl dword ptr [rbx], cl; ret 0xf8fd;
0xffffffff824296e5: leave; adc ecx, edx; ror byte ptr [rdx+rdx*2-0x7a], cl; adc ebx, [rbx-0x5b]; ret;
0xffffffff82509c67: leave; adc edx, [rbp+0x69]; cmovle ecx, ecx; sub al, 0x97; sub [r10+0x5434d4bb], rdi; ret 0x71d4;
0xffffffff823854aa: leave; adc edx, ecx; push 0xffffffff9bba0f7d; iretd;
0xffffffff822994ab: leave; adc esi, ebp; sbb ecx, [rax-0x3b]; fwait; jmp qword ptr [rcx-0x24e91fb8];
0xffffffff823b6644: leave; adc esp, [rsi]; dec dh; iretd;
0xffffffff829d0d3c: leave; add [r8], r8b; ret 0xfbb;
0xffffffff819de0c3: leave; add [rax+0x29], ecx; ret;
0xffffffff819de07c: leave; add [rax+1], ecx; iretd;
0xffffffff819b4d22: leave; add [rax-0x39], r9b; or [r8], r8b; add [rax], al; add [rcx+0x78948f0], cl; ret;
0xffffffff819b4cb2: leave; add [rax-0x75], r9b; xor rax, rax; test cl, 4; sete al; ret;
0xffffffff8174dc44: leave; add [rax-0x76b7efb5], ecx; ret;
0xffffffff810533bb: leave; add [rax-0x77], cl; ret;
0xffffffff812c2bfa: leave; add [rax-0x77], ecx; fisttp word ptr [rax-0x39], st; ret 0x9cce;
0xffffffff811098fc: leave; add [rax-0x77], ecx; or [r8+1], r15b; ret;
0xffffffff81198e2a: leave; add [rax-0x77], ecx; or [rcx+rcx*4-0x11], cl; call qword ptr [0xffffffff82e33a08];
0xffffffff8136302a: leave; add [rax-0x7b], cl; shl byte ptr [rdi+rbx+0x48], 0x89; ret;
0xffffffff8185b88b: leave; add [rax-0x7d], cl; ret;
0xffffffff8129c54f: leave; add [rax], al; add [rax+0x48], al; mov [rsi], ecx; pop rbx; ret;
0xffffffff814c8d79: leave; add [rax], al; add [rax-0x39], cl; ret;
0xffffffff818474fb: leave; add [rax], al; add [rax-0x77], cl; ret;
0xffffffff81123a7c: leave; add [rax], al; add [rax-0x7f], cl; ret;
0xffffffff818205f6: leave; add [rax], al; add [rax], ah; mov [rax+0x10], rcx; xor eax, eax; ret;
0xffffffff82a39349: leave; add [rax], al; add [rax], al; add cl, bh; ret;
0xffffffff81a02b15: leave; add [rax], al; add [rbx+0xf004878], al; xchg ebp, eax; ret 0xc931;
0xffffffff81890a74: leave; add [rax], al; add [rcx+0x5e415be8], cl; pop r15; pop rbp; ret;
0xffffffff8184b04a: leave; add [rax], al; add al, [rax]; mov [rdi+0x28], r9d; ret;
0xffffffff810c5959: leave; add [rax], al; add al, [rax]; mov [rdi+0x470], rcx; ret;
0xffffffff8129149c: leave; add [rax], al; add al, [rax]; mov [rdi+8], ecx; ret;
0xffffffff82994fe9: leave; add [rax], al; cwde; or eax, 0; or al, 0xde; ret;
0xffffffff828ddb9d: leave; add [rax], al; iretd;
0xffffffff810db8cd: leave; add [rax], al; mov eax, ebx; pop rbx; ret;
0xffffffff82a96430: leave; add [rax], al; push rbp; add [rax], eax; ret 0x18b0;
0xffffffff8163cee2: leave; add [rax], cl; add [rax], al; mov [rax+0x28], cx; ret;
0xffffffff819d4e69: leave; add [rax], eax; add [rax-0x39], cl; ret;
0xffffffff827fb1ad: leave; add [rax], eax; add [rax], al; add [rax], al; ret;
0xffffffff827fd3a9: leave; add [rax], eax; add [rax], al; add [rax], al; sbb byte ptr [rdx-0x6f], 0xfe; ret 0x1c9;
0xffffffff823d5c71: leave; add [rax], ebx; mov r14d, [rbx]; push qword ptr [r9+0x3b]; iretd;
0xffffffff8248e61a: leave; add [rax], esp; int 0xb0; ret;
0xffffffff8225c964: leave; add [rbp+0x6d], eax; ret;
0xffffffff8116a563: leave; add [rbx+0x17601fa], al; ret;
0xffffffff813632c7: leave; add [rbx+0x41], bl; pop rsi; ret;
0xffffffff81367ab9: leave; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff813633d3: leave; add [rbx+0x47303f8], al; ret;
0xffffffff81b54710: leave; add [rbx-0x397cff8b], cl; jmp qword ptr [rcx];
0xffffffff819d4d22: leave; add [rbx-0x7d], dl; jmp qword ptr [rdi];
0xffffffff81a6ffa5: leave; add [rcx-0x78], eax; add r14b, r14b; ret;
0xffffffff81291672: leave; add [rcx], al; add [rax], al; mov [rdi+8], ecx; ret;
0xffffffff818528d6: leave; add [rdi+rdi*8+0x148ffff], ebx; enter 0xc148, 0xe8; add ecx, [rax-0x47]; iretd;
0xffffffff8230349d: leave; add [rsi-0x4920cb6b], esp; cmp al, 0x58; sub dword ptr [rbx], 0xffffffd0; mov eax, [0x1b03604bf54f52cf]; ret 0x3a91;
0xffffffff822d5d38: leave; add ah, bh; ret 0xa5e1;
0xffffffff817ea41d: leave; add al, 0; add [rax-0x39], cl; ret 0x9208;
0xffffffff818604bf: leave; add al, 0; add [rax-0x7875f1ba], cl; enter 4, 0; mov [rsi+0xd], al; ret;
0xffffffff8139f52f: leave; add al, 0xbe; iretd;
0xffffffff835ac2d0: leave; add al, 0xdf; std; iretd;
0xffffffff8200c5f1: leave; add al, 0xff; test eax, 0x46ffc6f2; mov r9d, 0x4c914ff; jmp qword ptr [rsi+0x3bffc6f2];
0xffffffff81673fe6: leave; add al, [rax+0x17503f9]; ret;
0xffffffff82806d69: leave; add al, [rax]; add [rax], al; add [rax], al; add [rbp+4], cl; jmp qword ptr [rbx+0x2ca];
0xffffffff82806dbd: leave; add al, [rax]; add [rax], al; add [rax], al; fcom st, qword ptr [rdi+4]; jmp far fword ptr [rdx];
0xffffffff81bb58ff: leave; add al, [rax]; add [rcx-0x7d], al; call far fword ptr [rcx];
0xffffffff822fd87a: leave; add bh, [rax]; lodsb [rsi]; cmp al, 0xe6; in eax, 0x34; jmp qword ptr [rdx];
0xffffffff8228d811: leave; add bh, bh; out 0xce, eax; ret;
0xffffffff824b479f: leave; add bh, bl; sbb ebx, 0x7e; iretd;
0xffffffff81566f11: leave; add byte ptr [rax], 0; add [rcx-0x77], al; iretd;
0xffffffff824fc974: leave; add byte ptr [rip+0x2d950b70], 0xeb; ret;
0xffffffff8116bf23: leave; add cl, ch; call qword ptr [rcx];
0xffffffff824a6c7a: leave; add dl, [rcx+0x4c16123]; ret 0x27ea;
0xffffffff8249498a: leave; add dl, [rdx-0x2f]; test [rdi-0x11654e3b], ah; mov ebx, 0x693fb3b3; ret 0xb12d;
0xffffffff81728def: leave; add dword ptr [rax+rcx*8], 1; ret;
0xffffffff823d1147: leave; add dword ptr [rcx-0x7ccd2a0c], 0xffffffaf; mov edx, 0x6bdde666; xor al, 0xb9; jmp far fword ptr [rax+0x15c1c604];
0xffffffff82313e09: leave; add dword ptr [rdi-0x35], 0x70; neg ecx; mov [rbp-0x7e], fs; jmp far fword ptr [rdi+3];
0xffffffff8142b12e: leave; add eax, 0x75100226; pop rbx; pop r14; ret;
0xffffffff82478cc4: leave; add eax, 0x7863a018; ret;
0xffffffff824ea2f8: leave; add eax, 0xa3497906; sbb eax, 0x8b68633a; stc; mov eax, [0xd9e8615566e9380a]; ret 0xfc38;
0xffffffff824b7448: leave; add eax, 0xa588ce2d; lodsd [rsi]; mov [0x84f8e6058a554a22], eax; adc eax, 0xe3c4588c; iretd;
0xffffffff811f161b: leave; add eax, 0xbf01da; add [rax], eax; add [rax-0x39], cl; ret 0x8980;
0xffffffff81afdc92: leave; add eax, [rax]; add [rcx+0xf], al; mov dh, 0x87; iretd;
0xffffffff82507fe1: leave; add eax, [rsp+rdx*2-0x7b]; adc cl, [rdx+0x3c]; or dl, [rdi-0x559d47d]; ret 0x69a2;
0xffffffff8159b31d: leave; add eax, ecx; add eax, 0xffffffff; bswap eax; mov [rdi], eax; ret;
0xffffffff8155f31b: leave; add eax, ecx; add eax, 6; and eax, 0x1fffc; ret;
0xffffffff81142d94: leave; add eax, ecx; add rsp, 0x48; ret;
0xffffffff820099cc: leave; add eax, edi; jmp qword ptr [rdx+0x3cff8712];
0xffffffff811f6f63: leave; add ebp, esp; jmp qword ptr [rsi+0xf];
0xffffffff8159db49: leave; add ecx, 0xffffffff; imul ecx, esi; add eax, ecx; ret;
0xffffffff81a74678: leave; add ecx, 3; and ecx, 0xfffffffc; sub eax, ecx; ret;
0xffffffff8183287d: leave; add ecx, [rax-0x7cfff2bc]; ret;
0xffffffff815d83cb: leave; add ecx, [rdx]; mov [rdx], ecx; add dword ptr [rsi], 1; ret;
0xffffffff81127163: leave; add ecx, edi; jmp qword ptr [rsi+0xf];
0xffffffff82415154: leave; add edx, [rsi]; jmp far fword ptr [rcx+0x15];
0xffffffff812a5fd8: leave; add gs:[rax+0x3b0], rcx; ret;
0xffffffff8112ec00: leave; add rcx, rax; mov rax, 0xfffffff186b1bf80; add rax, rcx; pop rbx; ret;
0xffffffff8167404f: leave; and [rax], ah; mov eax, 0xffffffb6; ret;
0xffffffff8220d211: leave; and [rbx-0x7c563f], al; or cl, [rdi]; iretd;
0xffffffff8254d328: leave; and [rcx+0x25e39ca2], ecx; ret;
0xffffffff825193e3: leave; and [rcx], ecx; iretd;
0xffffffff823680ae: leave; and [rdi-0x52], esi; ret;
0xffffffff8227674b: leave; and ah, [rdx]; jmp qword ptr [rbx];
0xffffffff824132c7: leave; and al, 1; push rbp; mov eax, [0x138abc47b61437ee]; out 0xf0, eax; ret 0xc781;
0xffffffff8256c74a: leave; and bh, [rcx+0x777c8cdb]; cwde; and eax, 0x8792fb3f; ret;
0xffffffff82005e68: leave; and bh, al; dec esp; add al, 0x34; jmp qword ptr [rax-0x3c00fad0];
0xffffffff825226ab: leave; and dword ptr [rdx], 0xf8c32c0f; xchg edi, eax; push rbx; ret 0x5f50;
0xffffffff8248d784: leave; and eax, 0x367a7305; ret 0xc278;
0xffffffff822dd186: leave; and eax, 0x3c4dd143; adc dl, [rdi-0x3c]; iretd;
0xffffffff8232700e: leave; and eax, 0x46d330d9; iretd;
0xffffffff823b717d: leave; and eax, 0x8a2a095a; out dx, eax; mov [rbp+0x274813c3], dl; iretd;
0xffffffff8158eb33: leave; and eax, 0xc03100a7; ret;
0xffffffff82558fad: leave; and eax, 0xc25fb7fd; jmp qword ptr [r8+0x394261a];
0xffffffff813b5163: leave; and eax, edx; jmp qword ptr [rsi+0xf];
0xffffffff822c50d1: leave; and ebp, eax; int 0x80;
0xffffffff8254c40d: leave; and ebx, [rip+0x16d54be8]; adc bl, [rsi-0x22]; cld; pop rsi; iretd;
0xffffffff824a7b95: leave; and ecx, [rsi+rsi]; data16 ret;
0xffffffff8232c1e1: leave; and ecx, esp; call qword ptr [rcx];
0xffffffff8231927a: leave; and esi, edi; mov eax, 0x339d3921; ret;
0xffffffff82274c1f: leave; and qword ptr [r13-0x17c71455], 0x74b6943b; sbb [rbx-0x3a], edi; outsb dx, [rsi]; iret;
0xffffffff81635782: leave; and r8d, 0x20000000; or r8d, ecx; or r8d, 0x200; mov [rax], r8d; ret;
0xffffffff810250b0: leave; and rax, rcx; or rax, rdi; ret;
0xffffffff824a2435: leave; and rsi, [r14]; xchg edx, eax; mov [0x4b3e0be1b3c44600], al; ret;
0xffffffff8236aa10: leave; bswap ecx; push 0xffffffffca14bcad; pop rax; iretq;
0xffffffff8103e336: leave; bt [rip+0x1f53821], rbx; mov eax, 0xfffffffa; cmovb eax, ecx; pop rbx; ret;
0xffffffff81048dee: leave; bt [rip+0x2577c21], rax; setb cl; mov eax, ecx; ret;
0xffffffff82665e55: leave; call far dword ptr [rdi];
0xffffffff8266c66d: leave; call far fword ptr [r15+0x1fff43c5];
0xffffffff82382195: leave; call far fword ptr [rax*4-0x37ac5e11];
0xffffffff82006ff5: leave; call far fword ptr [rax];
0xffffffff820071b0: leave; call far fword ptr [rbp+r11+5];
0xffffffff82687fe9: leave; call far fword ptr [rbx+0x61540b65];
0xffffffff814919d6: leave; call far fword ptr [rbx-0x3d];
0xffffffff8264f0aa: leave; call far fword ptr [rdi+0x2fffc8fd];
0xffffffff8264ef5a: leave; call far fword ptr [rdi+0x2fffc999];
0xffffffff8264effa: leave; call far fword ptr [rdi+0x64];
0xffffffff8264eff8: leave; call far fword ptr [rdi+0x64];
0xffffffff8264efae: leave; call far fword ptr [rdi+0x77];
0xffffffff8264efa6: leave; call far fword ptr [rdi+0x7b];
0xffffffff8264ef96: leave; call far fword ptr [rdi+0x7f];
0xffffffff8264f01a: leave; call far fword ptr [rdi+0x7fffc95b];
0xffffffff8266a6f1: leave; call far fword ptr [rdi-0x1000b138];
0xffffffff8264ee36: leave; call far fword ptr [rdi-0x24];
0xffffffff8264eec2: leave; call far fword ptr [rdi-0x39];
0xffffffff8264eeda: leave; call far fword ptr [rdi-0x3d];
0xffffffff8264f061: leave; call far fword ptr [rdi-0x400036c1];
0xffffffff8264eda6: leave; call far fword ptr [rdi-0x5000360a];
0xffffffff8264edc6: leave; call far fword ptr [rdi-0x50003612];
0xffffffff8264edda: leave; call far fword ptr [rdi-0x50003617];
0xffffffff8264ef2a: leave; call far fword ptr [rdi-0x58];
0xffffffff8264f016: leave; call far fword ptr [rdi-0x600036a4];
0xffffffff8264ee26: leave; call far fword ptr [rdi-0x70003624];
0xffffffff8264f096: leave; call far fword ptr [rdi-0x700036e5];
0xffffffff8264ee0a: leave; call far fword ptr [rdi];
0xffffffff826b89bb: leave; call far fword ptr [rsi-0x2af28b26];
0xffffffff82522b2b: leave; call far fword ptr [rsi];
0xffffffff824be81d: leave; call qword ptr [rax+0x28];
0xffffffff814213cd: leave; call qword ptr [rax-0x61fd5418];
0xffffffff8142505d: leave; call qword ptr [rax-0x6239e418];
0xffffffff81448cad: leave; call qword ptr [rax-0x64763418];
0xffffffff81417592: leave; call qword ptr [rax-0x6f6f6f70];
0xffffffff824dad45: leave; call qword ptr [rax];
0xffffffff82688154: leave; call qword ptr [rbp+0x5fef6e67];
0xffffffff826b7cbc: leave; call qword ptr [rbp-0xb109199];
0xffffffff8242526b: leave; call qword ptr [rbx+0x54];
0xffffffff82802ba1: leave; call qword ptr [rcx+0x3fd];
0xffffffff822aa06c: leave; call qword ptr [rcx+rbp+0x4e27fa1a];
0xffffffff8268864c: leave; call qword ptr [rdx];
0xffffffff82506dab: leave; call qword ptr [rsi+0x2c];
0xffffffff8170fa03: leave; call qword ptr [rsi];
0xffffffff824a1c70: leave; call rax;
0xffffffff8253e929: leave; call rbx;
0xffffffff82516707: leave; call rcx;
0xffffffff8255980b: leave; call rdi;
0xffffffff826e977a: leave; call rsi;
0xffffffff826884f6: leave; call rsi;
0xffffffff82aad050: leave; cdq; add [rax], al; add [rax], al; add [rax], al; ret;
0xffffffff82658c31: leave; cdq; call far fword ptr [rdi-0x37];
0xffffffff824d14d9: leave; cdq; cmc; or esi, [rbx]; iretd;
0xffffffff82352752: leave; cdq; fxch st, st(5); ret;
0xffffffff822b59d6: leave; cdq; iretd;
0xffffffff8359ce54: leave; cdq; out dx, eax; jmp far fword ptr [rax];
0xffffffff8239cc3c: leave; cdq; ret 0xb1d2;
0xffffffff8245e540: leave; cdq; ret;
0xffffffff823ce0c6: leave; cdq; xchg [rbx+rax*4-0x1f034c1f], edx; jmp rsp;
0xffffffff82252e16: leave; clc; call rcx;
0xffffffff823c81a1: leave; clc; sysexit;
0xffffffff822b423c: leave; clc; xchg esi, eax; in eax, 0xfb; movsxd ebx, edi; ret 0x3e8f;
0xffffffff823222e4: leave; clc; xor [rdi-0x4bcf741e], ecx; ret 0xbd08;
0xffffffff825d827c: leave; cld; call qword ptr [rbx-0x7e];
0xffffffff823908d6: leave; cld; fisubr st, dword ptr [r11+r14*2-0x54]; ret 0x372f;
0xffffffff8129cd72: leave; cld; jmp qword ptr [rsi+0x66];
0xffffffff810f2763: leave; cld; jmp qword ptr [rsi+0xf];
0xffffffff81182bf6: leave; cld; jmp qword ptr [rsi+0xf];
0xffffffff822a7038: leave; cld; outsd dx, [rsi]; ret;
0xffffffff825731e6: leave; cld; ret 0xdc06;
0xffffffff825166fc: leave; cli; mov cl, 0x23; jmp far fword ptr [rcx-0x5aa0a0de];
0xffffffff823c5073: leave; cmc; add [rax-0x1c], ah; iretd;
0xffffffff8253d423: leave; cmc; iretd;
0xffffffff8115a9ee: leave; cmc; jmp qword ptr [rsi+0x66];
0xffffffff8251b26a: leave; cmc; sbb ebp, [rdi]; and [rdx+rbx*4+0x51b98e30], esi; mov dh, 0x2c; ret;
0xffffffff823748ce: leave; cmc; sub [rbp-0x1f], eax; iretd;
0xffffffff823693d3: leave; cmc; xchg esi, esp; iretd;
0xffffffff83491dc9: leave; cmovae eax, edx; ret;
0xffffffff818e6d23: leave; cmove eax, ecx; ret;
0xffffffff81c2c57f: leave; cmove eax, edx; ret;
0xffffffff81270af0: leave; cmove ecx, eax; mov [rsi+8], ecx; pop rax; ret;
0xffffffff814ecc42: leave; cmove ecx, eax; mov eax, ecx; ret;
0xffffffff8197ee21: leave; cmove ecx, eax; movzx eax, cl; ret;
0xffffffff810db446: leave; cmove rax, rcx; ret;
0xffffffff810c57bb: leave; cmove rcx, rax; tzcnt rax, rcx; add eax, 1; ret;
0xffffffff816b1ba8: leave; cmovne eax, edx; ret;
0xffffffff8172b221: leave; cmovne rax, r15; pop rbx; pop r14; pop r15; ret;
0xffffffff815e535c: leave; cmovne rax, rdx; ret;
0xffffffff816bf4c0: leave; cmovne rdx, rax; test rdx, rdx; mov rax, 0xffffffff8366cb30; cmovne rax, rdx; ret;
0xffffffff823a11f9: leave; cmovnp edx, [rdi+rax*8-0x5a]; xor eax, [rdx+0x54c43cb0]; ret;
0xffffffff813bc768: leave; cmovns rax, rbx; pop rbx; ret;
0xffffffff812a9ccf: leave; cmovns rax, rcx; add rax, rdx; shl rax, 0xc; ret;
0xffffffff81236ba1: leave; cmovns rax, rcx; add rax, rsi; ret;
0xffffffff81235250: leave; cmovns rax, rcx; ret;
0xffffffff81689824: leave; cmovs eax, edx; add rsp, 4; ret;
0xffffffff823a5f3b: leave; cmovs ebx, esi; mov al, [0x721fc9296de64d47]; ret;
0xffffffff811328af: leave; cmovs rax, rdx; cmp rcx, rsi; cmovl rax, rdx; ret;
0xffffffff81132a3f: leave; cmovs rdx, r8; cmp rcx, r10; cmovl rdx, r8; mov [rdi+0x20], rdx; ret;
0xffffffff819f92d2: leave; cmp [rax+0x38], esi; cmovne rax, rcx; ret;
0xffffffff82277841: leave; cmp [rax-0x33], ah; ret 0x7d56;
0xffffffff81327ff6: leave; cmp [rax-0x39], cl; ret 0xf000;
0xffffffff829c9228: leave; cmp [rax], ecx; add [rax], cl; add [rax], al; iretd;
0xffffffff822566fe: leave; cmp [rbp-0x5234bb93], dh; or eax, 0xfe424ab0; test [rbx+0x1ac298b8], ch; ret 0x6f15;
0xffffffff82276bd9: leave; cmp [rdx+0x46d71d4b], ah; ret 0x56ba;
0xffffffff81027d06: leave; cmp [rsi+8], rdi; setb cl; mov eax, 0xffffffff; cmovbe eax, ecx; ret;
0xffffffff825086ea: leave; cmp [rsi-0x2a], dh; sub ebp, [rax+0x7de88159]; iretd;
0xffffffff822773bf: leave; cmp al, 0x55; int3; ror byte ptr [rbp+0x1e], 0xb5; ret 0x4b6f;
0xffffffff82250e23: leave; cmp al, 0x57; iretd;
0xffffffff826db7aa: leave; cmp al, 0x7e; mov eax, 0x1a639c1b; or eax, 0xe570f9ca; jmp far fword ptr [rcx+rcx*8+0x73];
0xffffffff816e3663: leave; cmp al, 0x9d; jmp qword ptr [rsi+0xf];
0xffffffff826e9ab0: leave; cmp al, 0xa; test eax, 0xbb67ceb9; jmp word ptr [rbx+3];
0xffffffff826ae1dc: leave; cmp al, 0xe7; hlt; add esi, [rbx+0xe]; call rbx;
0xffffffff826f6b6d: leave; cmp al, 0xe7; or dl, fs:[rdi+rax*4+0x23]; iretd;
0xffffffff826f745e: leave; cmp al, 0xf4; out 0xdd, al; iretd;
0xffffffff8343b28c: leave; cmp al, 2; mov eax, 0x3a; cmovne eax, ecx; ret;
0xffffffff8238c4e9: leave; cmp al, [rax-0x43]; in eax, 0x5c; pop r9; or dword ptr [rbp+0x602c28c7], 0x5ad2a2d2; ret;
0xffffffff818dbacf: leave; cmp al, [rbx+0x72]; mov eax, 0x41; cmove eax, ecx; pop rbx; ret;
0xffffffff814b6213: leave; cmp al, dl; jmp qword ptr [rsi+0xf];
0xffffffff8173e53f: leave; cmp byte ptr [rax+0x20], 0; cmove rsi, rcx; mov [rax+0x18], rsi; xor eax, eax; ret;
0xffffffff81a765fa: leave; cmp byte ptr [rax+0xb], 0x10; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff81c0f4da: leave; cmp byte ptr [rax+1], 2; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff81b60bfa: leave; cmp byte ptr [rax+3], 2; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff81a7e64a: leave; cmp byte ptr [rax+8], 2; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff81a766fa: leave; cmp byte ptr [rax+8], 4; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff81a78d7a: leave; cmp byte ptr [rax], 0x40; mov eax, 0xffffffdf; cmovb eax, ecx; ret;
0xffffffff81931873: leave; cmp byte ptr [rbp-1], 0x31; rcr byte ptr [rbx+0x41], 0x5c; pop r14; pop r15; ret;
0xffffffff81c59136: leave; cmp byte ptr [rdi+0xc], 0; mov eax, 0xffffffea; cmove eax, ecx; ret;
0xffffffff81b8c271: leave; cmp byte ptr [rdi+0xd7], 0; mov eax, 0xffffffea; cmove eax, ecx; ret;
0xffffffff81b8c254: leave; cmp byte ptr [rdi+0xd8], 0; mov eax, 0xffffffea; cmovns eax, ecx; ret;
0xffffffff81978836: leave; cmp byte ptr [rdi], 5; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff8250983f: leave; cmp cl, [rdi-0x4c]; iretd;
0xffffffff81733528: leave; cmp dl, 8; cmovae eax, ecx; ret;
0xffffffff8112d507: leave; cmp dword ptr [rax+0x1a280], 0; sete cl; mov [rax+0x1a280], ecx; ret;
0xffffffff81a32d1c: leave; cmp dword ptr [rax+0x28], 0; cmovne rcx, rax; mov rax, rcx; ret;
0xffffffff81756202: leave; cmp dword ptr [rax+0x548], 0; setne cl; mov [rsi], ecx; xor eax, eax; ret;
0xffffffff81a7dd2a: leave; cmp dword ptr [rax+4], 2; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff819f2171: leave; cmp dword ptr [rbx+8], 0xff80; mov eax, 0xfffffff9; cmovb eax, ecx; pop rbx; ret;
0xffffffff818dd9ca: leave; cmp dword ptr [rdi], 0x3c; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff8148715b: leave; cmp eax, 0x19270000; cmove eax, ecx; ret;
0xffffffff819f2693: leave; cmp eax, 0x20; mov eax, 0xffffffea; cmove eax, ecx; ret;
0xffffffff8148636b: leave; cmp eax, 0x2b270000; cmove eax, ecx; ret;
0xffffffff811e6c8e: leave; cmp eax, 0x4000000; mov eax, 0xffffffea; cmove eax, ecx; ret;
0xffffffff81a24c82: leave; cmp eax, 0x468b4800; ret;
0xffffffff82383d5e: leave; cmp eax, 0x6bd5cda4; ret 0xd959;
0xffffffff8178e89c: leave; cmp eax, 0x7a; cmovb ecx, eax; lea rax, [rcx+rcx*2]; mov rax, [rax*8-0x7da13f50]; ret;
0xffffffff822dd1a8: leave; cmp eax, 0x852bff76; ret 0xa800;
0xffffffff824917ad: leave; cmp eax, 0xbe72c54e; mov ebx, 0x63b9c071; xlat [rbx]; ret 0x8dd9;
0xffffffff82397da5: leave; cmp eax, 0xf40a3309; mov dl, 0x80; cmovo edx, [rax-0x6b116671]; jmp far fword ptr [rdx-0xbca9cef];
0xffffffff8141cbfb: leave; cmp eax, 0xffffffa1; cmove eax, ecx; ret;
0xffffffff81bb0a35: leave; cmp eax, 0xfffffffd; cmove eax, ecx; ret;
0xffffffff81159aaf: leave; cmp eax, 1; mov eax, 0xffffff9d; cmove eax, ecx; ret;
0xffffffff8112cb87: leave; cmp eax, 1; sete cl; mov eax, ecx; ret;
0xffffffff81858ab7: leave; cmp eax, 1; sete cl; xor ecx, 0x2003; mov eax, ecx; ret;
0xffffffff819dc232: leave; cmp eax, 2; cmovge ecx, edx; mov eax, ecx; ret;
0xffffffff81b65df3: leave; cmp eax, 3; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff815b7368: leave; cmp eax, [rbx+0x18]; mov eax, 0xffffff83; cmovne eax, ecx; pop rbx; ret;
0xffffffff81c0ea8e: leave; cmp eax, [rdi+0x404]; mov eax, 0xfffff400; cmovle eax, ecx; ret;
0xffffffff816041b4: leave; cmp eax, [rdi+0xb8]; mov eax, 0xffffffea; cmovle eax, ecx; ret;
0xffffffff81a22ba7: leave; cmp eax, [rdx+0x3c8]; cmovbe ecx, eax; mov eax, ecx; ret;
0xffffffff8252b317: leave; cmp eax, [rip-0x7d5e9468]; fst qword ptr [rbx-0x16], st; or esp, [rbx+0x3d]; ret 0x9371;
0xffffffff81be5ea2: leave; cmp eax, [rsi+0x14]; lea eax, [rax+1]; cmovne ecx, eax; mov [rsi+8], ecx; ret;
0xffffffff81172ae9: leave; cmp eax, [rsi+4]; seta cl; mov eax, 0xffffffff; cmovae eax, ecx; ret;
0xffffffff81172ac8: leave; cmp eax, [rsi]; seta cl; mov eax, 0xffffffff; cmovae eax, ecx; ret;
0xffffffff81bfa09f: leave; cmp eax, ebx; sete cl; mov eax, ecx; pop rbx; ret;
0xffffffff8176f144: leave; cmp eax, ecx; setae al; ret;
0xffffffff82515e58: leave; cmp ebp, edx; adc [rdx-0x6c], bh; iretd;
0xffffffff8169f23e: leave; cmp ecx, [rax+rsi*4+0x198]; sbb rax, rax; or rax, 0x50000; pop rbx; ret;
0xffffffff822f1cb9: leave; cmp ecx, [rbp-0x13]; sbb [r14], cl; mov esp, 0xf3a857ee; ret;
0xffffffff822f1cba: leave; cmp ecx, [rbp-0x13]; sbb [r14], cl; mov esp, 0xf3a857ee; ret;
0xffffffff8104f62c: leave; cmp edi, 0x80; mov eax, 0xffffffc2; cmovge eax, ecx; ret;
0xffffffff824425c7: leave; cmp edx, 0x10; or edx, esp; mov eax, 0x4fe7261f; mov bh, 0xf2; iretd;
0xffffffff81a163ff: leave; cmp edx, 0xfff2; cmovne eax, ecx; ret;
0xffffffff81a163af: leave; cmp esi, 0xfff2; cmovne eax, ecx; ret;
0xffffffff81669e59: leave; cmp esi, 3; mov eax, 0xffffffea; cmovae eax, ecx; ret;
0xffffffff817faecf: leave; cmp esi, 4; mov eax, 0x124; cmovae eax, ecx; ret;
0xffffffff81a22bc2: leave; cmp esi, edx; cmovb ecx, eax; mov eax, ecx; ret;
0xffffffff81b81a10: leave; cmp esi, edx; mov eax, 0xffffffea; cmovbe eax, ecx; ret;
0xffffffff811c668e: leave; cmp qword ptr [rax+0xe8], 0; mov eax, 0xfffffff4; cmovne eax, ecx; pop rbx; ret;
0xffffffff8197c790: leave; cmp qword ptr [rbx+0x18], 0; mov eax, 0x4003; cmove eax, ecx; pop rbx; ret;
0xffffffff818e11ff: leave; cmp qword ptr [rbx+0x3e8], 0; mov eax, 0x41; cmove eax, ecx; pop rbx; ret;
0xffffffff8164ee16: leave; cmp qword ptr [rdi+0x28], 0; mov eax, 0xffffffa1; cmove eax, ecx; ret;
0xffffffff8160ffa6: leave; cmp qword ptr [rdi+0x30], 0; mov eax, 0xffffffea; cmove eax, ecx; ret;
0xffffffff8179af86: leave; cmp qword ptr [rdi+0x78], 0; mov eax, 0xffffffed; cmovne eax, ecx; ret;
0xffffffff8174ab0e: leave; cmp qword ptr [rdi+8], 0; mov eax, 0x1001; cmovne eax, ecx; ret;
0xffffffff816f5952: leave; cmp qword ptr [rdi-0x48], 0; mov eax, 0xffffffda; cmove eax, ecx; ret;
0xffffffff811c83ed: leave; cmp qword ptr [rdi], 0; mov eax, 0xffffffe4; cmove eax, ecx; ret;
0xffffffff8185db8c: leave; cmp qword ptr [rsi+0x30], 0; mov eax, 0xffffffea; cmove eax, ecx; ret;
0xffffffff811e3eb4: leave; cmp r8d, 0x400001; mov eax, 0xfffffff9; cmovb eax, ecx; ret;
0xffffffff81855643: leave; cmp rax, 0x1000; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff8147ddfb: leave; cmp rax, 0x1001; setb cl; mov eax, ecx; pop rbx; ret;
0xffffffff81a7d6ee: leave; cmp rax, 0xfffffffffffff001; cmovb eax, ecx; pop rbx; ret;
0xffffffff811a5026: leave; cmp rax, 0xfffffffffffff001; cmovb eax, ecx; ret;
0xffffffff8118a9e8: leave; cmp rax, [rbx+0x20]; mov eax, 0x41; cmove eax, ecx; pop rbx; ret;
0xffffffff8137c60a: leave; cmp rax, [rdx+0x18]; seta cl; mov eax, 0xffffffff; cmovae eax, ecx; ret;
0xffffffff8159f6ca: leave; cmp rax, [rdx+0x28]; setg cl; mov eax, 0xffffffff; cmovge eax, ecx; ret;
0xffffffff81608338: leave; cmp rax, [rsi+8]; mov eax, 0xffffffea; cmovae eax, ecx; ret;
0xffffffff810e3769: leave; cmp rax, [rsi]; seta cl; mov eax, 0xffffffff; cmovae eax, ecx; ret;
0xffffffff81872b43: leave; cmp rax, rbx; mov eax, 0xffffffa1; cmovb eax, ecx; pop rbx; ret;
0xffffffff817aa29f: leave; cmp rax, rbx; sete cl; mov eax, ecx; pop rbx; ret;
0xffffffff81199e4f: leave; cmp rax, rdx; cmovb rcx, rsi; mov rax, rcx; pop rbx; ret;
0xffffffff812e8ea9: leave; cmp rsi, rax; mov eax, 0xffffffe5; cmovbe eax, ecx; ret;
0xffffffff8239963d: leave; cmpsb [rsi], [rdi]; adc [rbx-0x15], ah; xor [rdi], bl; ret;
0xffffffff822a5bc0: leave; cmpsb [rsi], [rdi]; int1; cmp eax, 0xf5b0856b; iretd;
0xffffffff82419048: leave; cmpsb [rsi], [rdi]; ret 0xb050;
0xffffffff824989b9: leave; cmpsb [rsi], [rdi]; ret 0xd614;
0xffffffff82371cfb: leave; cmpsd [rsi], [rdi]; movsb [rdi], [rsi]; or esi, edi; ret;
0xffffffff823003df: leave; cmpsd [rsi], [rdi]; out dx, al; mov bh, 0xbf; ret;
0xffffffff81050972: leave; cpuid; mov eax, edx; pop rbx; ret;
0xffffffff81050942: leave; cpuid; pop rbx; ret;
0xffffffff812bc30d: leave; cwde; add [rax], al; add [rax+1], cl; iretd;
0xffffffff82659135: leave; cwde; dec dword ptr [rdi-0x37]; cwde; jmp far fword ptr [rdi];
0xffffffff82659138: leave; cwde; jmp far fword ptr [rdi];
0xffffffff8357935c: leave; cwde; ret;
0xffffffff8243c0d9: leave; cwde; xor al, 0x8d; ret 0x8416;
0xffffffff8266c091: leave; dec dword ptr [r15]; mov dword ptr [rbp-1], 0xff45c52f; ffreep st(3); jmp far fword ptr [r15-0x2000ba3f];
0xffffffff814473a3: leave; dec dword ptr [rax-0x39]; adc [r8], al; add [rax], al; add [rax-0x7d], cl; ret;
0xffffffff815ee337: leave; dec dword ptr [rax-0x39]; ret;
0xffffffff81470d35: leave; dec dword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsi; ret;
0xffffffff815f4e18: leave; dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; ret;
0xffffffff815ec775: leave; dec dword ptr [rax-0x7b]; shl byte ptr [rdi+rbp+0x48], 0x89; ret;
0xffffffff81448b61: leave; dec dword ptr [rax-0x7b]; shl byte ptr [rdx+rdi+0x48], 0x89; ret;
0xffffffff815f23c0: leave; dec dword ptr [rax-0x7b]; shl byte ptr [rsp+rdi+0x48], 0x89; ret;
0xffffffff8147c2c5: leave; dec dword ptr [rax-0x7d]; ret;
0xffffffff81448c16: leave; dec dword ptr [rcx+0x5e415be8]; pop rbp; ret;
0xffffffff81c82973: leave; dec dword ptr [rcx-1]; pop rbx; pop r14; pop rbp; ret;
0xffffffff8264ef36: leave; dec dword ptr [rdi+0x2fffc9a3]; mov [0x9ddfffc99f2fffc9], eax; leave; jmp far fword ptr [rdi+0x2fffc99d];
0xffffffff8264eff6: leave; dec dword ptr [rdi+0x65]; leave; call far fword ptr [rdi+0x64];
0xffffffff8264ee2a: leave; dec dword ptr [rdi+0x7fffc9dc]; fmul st(1), st; jmp far fword ptr [rdi-0x24];
0xffffffff8264eeaa: leave; dec dword ptr [rdi-0x34]; leave; call far fword ptr [rdi];
0xffffffff8264edc2: leave; dec dword ptr [rdi-0x60003611]; out dx, al; leave; jmp far fword ptr [rdi-0x40003613];
0xffffffff8264f076: leave; dec dword ptr [rdi]; cmp cl, cl; call far fword ptr [rdi];
0xffffffff8264ee5a: leave; dec dword ptr [rdi]; fcmove st, st(1); jmp far fword ptr [rdi-0x10003627];
0xffffffff8264edee: leave; dec dword ptr [rdi]; in eax, 0xc9; jmp far fword ptr [rdi];
0xffffffff8264f05d: leave; dec dword ptr [rdi]; leave; call far fword ptr [rdi-0x400036c1];
0xffffffff8264f059: leave; dec dword ptr [rdi]; leave; dec dword ptr [rdi]; leave; call far fword ptr [rdi-0x400036c1];
0xffffffff8266d019: leave; dec dword ptr [rdi]; mov dword ptr [rax-1], 0xff40bf0f; iretd;
0xffffffff8264ef7e: leave; dec dword ptr [rdi]; test ecx, ecx; dec edi; test cl, cl; jmp far fword ptr [rdi];
0xffffffff8268810f: leave; dec ebp; or al, 0x79; or [rcx+0x75], edx; leave; jmp far fword ptr [rax+0xd790cff];
0xffffffff8264ed9a: leave; dec edi; clc; leave; jmp far fword ptr [rdi-0x50003608];
0xffffffff8264eea2: leave; dec edi; int 0xc9; jmp far fword ptr [rdi];
0xffffffff8264ef82: leave; dec edi; test cl, cl; jmp far fword ptr [rdi];
0xffffffff8266b27c: leave; dec qword ptr [rdi+0x2fff4ac3]; ret;
0xffffffff824fe596: leave; div byte ptr [rdx+0x14]; stosb es:[rdi]; add dh, [rsi-0x73]; iretd;
0xffffffff8254307d: leave; div dword ptr [rbx-0x32]; ret 0x1b10;
0xffffffff81a593cd: leave; enter 0x8d48, 0x1c; add [rax-0x7d], ecx; ret;
0xffffffff81c1d023: leave; enter 0xffff, 0xf6; add eax, 0x1a6e6ca; or byte ptr [rdi], 0x85; ret 0;
0xffffffff8238d414: leave; fcmovnbe st, st(6); fsub st, st(6); ret;
0xffffffff8264a809: leave; fdiv st(7), st; lahf; enter 0xffdc, 0xff; ret;
0xffffffff8243b8ff: leave; fidiv st, dword ptr [rbx+0x4b]; mov al, 0xf5; ret;
0xffffffff82463dbf: leave; fidivr st, word ptr [rip+0x1ac84aba]; movsd [rdi], [rsi]; cmpsb [rsi], [rdi]; iretd;
0xffffffff8344805f: leave; fidivr st, word ptr [rsp+rdi*2+0xce]; ret;
0xffffffff82570ee3: leave; fimul st, word ptr [rdx+rsi*8]; iretd;
0xffffffff8243d41b: leave; fistp dword ptr [rip+0x4a9894fb], st; mov ebx, 0x81610155; iretd;
0xffffffff82413dba: leave; fisttp word ptr [rbp-0x1e2221c7], st; ret;
0xffffffff8225575a: leave; fld st, dword ptr [rbp+0x72]; iretd;
0xffffffff825d6804: leave; fld st, dword ptr [rsp+rax*8]; stosd [edi]; nop; ret 0xcc78;
0xffffffff824ce4b7: leave; fldcw [rax-0x59]; iretd;
0xffffffff823d2142: leave; fldcw [rcx+0x2a]; ret 0x29e3;
0xffffffff825da9a1: leave; fmul st, st(2); psraw mm2, mm5; mov dl, 0x22; cdq; ret 0x393a;
0xffffffff8222c560: leave; fnstcw [rdx-0x25]; cwde; sbb al, 0x21; ret 0x8f09;
0xffffffff825db0ab: leave; fsin; add r11, [rdi+0x5a]; ret 0xfb04;
0xffffffff8229df58: leave; fstp qword ptr [r10], st; cmp byte ptr [rsi+0x3d09a202], 0xcb; ret 0xbcf4;
0xffffffff82332ed9: leave; fstp st(2), st; or eax, 0x787ee4ed; pop rbx; ret;
0xffffffff82440551: leave; fucomi st, st(5); iretd;
0xffffffff82237501: leave; fwait; ret 0x1ed1;
0xffffffff8255cb7e: leave; fwait; ret;
0xffffffff823a880c: leave; fxch st, st(0); out dx, eax; mov dl, 0xd7; ret;
0xffffffff8250fa0a: leave; fxch st, st(7); imul eax; out dx, eax; xor edi, [rdx-0x13]; ret 0x8f4a;
0xffffffff812ecc4f: leave; hlt; dec dword ptr [rax-0x77]; ret;
0xffffffff825373a8: leave; hlt; iretd;
0xffffffff82392a80: leave; hlt; test ch, al; outsb dx, [rsi]; iretd;
0xffffffff8223c0d0: leave; hlt; xor bh, [rcx+rbx]; ret;
0xffffffff816b2593: leave; idiv edi; call qword ptr [rax-0x6f6f6f70];
0xffffffff82571187: leave; imul byte ptr [rbp-0x6fd93aa4]; leave; mov al, 0xb7; mov es, [rip+0x7fa970ff]; ret 0xdc73;
0xffffffff81bf8208: leave; imul eax, ecx, 0x2c; add eax, 0xf8; cdqe; ret;
0xffffffff8222dae1: leave; imul ebx, [rcx], 0xffffffcc; ret 0xc600;
0xffffffff81a52f77: leave; imul ecx, 0x3e8; mov [rax+4], ecx; xor eax, eax; ret;
0xffffffff823eb368: leave; imul edi, [rdx], 0xffffffdf; mov esi, 0xbde33bd4; pop rsp; cmp eax, 0xd4fb9c62; ret 0xfed6;
0xffffffff8246fe10: leave; imul edi; mov al, [0x83ef2aed4a358f01]; mov eax, [0x7bc00ce4b7612cca]; adc edi, [rsi]; iretd;
0xffffffff82352cb2: leave; imul edx, [rbp-0x1c6ee94], 0x7279405a; sbb [r8-0x62], al; xor dl, ah; call far fword ptr [rcx];
0xffffffff8224ce4b: leave; imul edx, [rsi-0x3c], 0x777e4d20; iretd;
0xffffffff83483f0c: leave; imul rcx, 0x1e0; add rax, rcx; ret;
0xffffffff81327ff3: leave; imul rcx, 0x38; mov rdx, 0xfffffffffffff000; and rdx, [rdi+rcx+0x10]; sub rax, rdx; ret;
0xffffffff823fae52: leave; in al, 0x42; pop rsp; add al, 1; call qword ptr [rbx-0x3e];
0xffffffff8359e777: leave; in al, 0xa8; std; ret;
0xffffffff819795f3: leave; in al, dx; add [rax-0x77], cl; ret;
0xffffffff8222da54: leave; in al, dx; fwait; iretd;
0xffffffff8229160b: leave; in al, dx; iretd;
0xffffffff822d0fb5: leave; in al, dx; mov ebp, 0x70fefedd; sar dword ptr [rbp-0x3f], cl; sub eax, 0x5ed072ae; iretd;
0xffffffff823957e8: leave; in al, dx; ret 0xcbc4;
0xffffffff8231a865: leave; in eax, 0x32; imul ebx, [rdx+0x766c9eca], 0xffffffa1; iretd;
0xffffffff824328b7: leave; in eax, 0x50; imul edi, eax, 0x25; fcom st, qword ptr [rdx-0x3fbcfd9]; ret;
0xffffffff81985873: leave; in eax, 0x95; jmp qword ptr [rsi+0xf];
0xffffffff82648705: leave; in eax, 0xff; iretd;
0xffffffff81c2e3f3: leave; in eax, dx; cli; jmp far fword ptr [rax+0x44417420];
0xffffffff823892e7: leave; in eax, dx; stc; enter 0x3b04, 0x48; push rdx; ret;
0xffffffff8268857d: leave; inc dword ptr [rax+0x77]; cmc; mov esi, 0x7561540a; leave; call rdi;
0xffffffff81448c80: leave; inc dword ptr [rax+rax*8-0xff88b]; or esi, [rbx+rbx+0x5b]; ret;
0xffffffff81980acb: leave; inc dword ptr [rbp+0x5b0574c0]; pop r14; pop rbp; ret;
0xffffffff82687fe2: leave; inc dword ptr [rdi+rax-0x368a9eac]; call far fword ptr [rbx+0x61540b65];
0xffffffff81475e55: leave; inc esi; sbb dword ptr [rax], 0x5b; ret;
0xffffffff82564f5e: leave; insb [rdi], dx; adc al, 0x1c; ret 0x9888;
0xffffffff824f3b30: leave; insb [rdi], dx; call far fword ptr [rax+rdx*2-0x5784b23d];
0xffffffff8133c6c3: leave; insb [rdi], dx; cld; dec dword ptr [rax-0x77]; ret;
0xffffffff8234bdab: leave; insb [rdi], dx; cwde; jmp far fword ptr [rbp+rsi*4+0x482d08ea];
0xffffffff823a8f85: leave; insb [rdi], dx; iretd;
0xffffffff823b6227: leave; insd [rdi], dx; fsubr st, dword ptr [rbp+0x231f8012]; iretd;
0xffffffff823ca739: leave; insd [rdi], dx; iretd;
0xffffffff82498178: leave; insd [rdi], dx; jmp qword ptr [rbp+0x69];
0xffffffff82431283: leave; insd [rdi], dx; xchg edx, eax; mov dh, [rdx+rdx*8]; ret;
0xffffffff8237fb28: leave; int 0xcd; inc byte ptr [rcx]; iretd;
0xffffffff81117c73: leave; int 0xff; jmp qword ptr [rbp+0x48];
0xffffffff82458858: leave; int1; add eax, 0xd721ef53; mov ecx, 0x86c80e2d; iretd;
0xffffffff822636d9: leave; int1; and al, 0xf1; ret 0x7909;
0xffffffff82645191: leave; int1; call far fword ptr [rdi+0x7ffff1c8];
0xffffffff825333f8: leave; int1; cwde; ret 0xde5d;
0xffffffff8119a8fa: leave; int1; dec dword ptr [rdi]; or eax, ebx; xor eax, eax; ret;
0xffffffff8119a8cf: leave; int1; dec dword ptr [rdi]; or edi, [rax-0x13]; ret;
0xffffffff824040e5: leave; int1; xor [rax], bl; ret 0xab5d;
0xffffffff81617510: leave; int3; call far fword ptr [rbx+0x41];
0xffffffff8264e291: leave; int3; call far fword ptr [rdi+0x5fffccc8];
0xffffffff824435ca: leave; iretd;
0xffffffff812960ea: leave; iretd;
0xffffffff822dc1ab: leave; iretd;
0xffffffff8241f352: leave; iretd;
0xffffffff82318885: leave; iretd;
0xffffffff82516b8a: leave; iretd;
0xffffffff8236c1ca: leave; iretq;
0xffffffff822c010f: leave; jmp far fword ptr [r10-0x7424b78b];
0xffffffff8227e6fd: leave; jmp far fword ptr [rax+0x23];
0xffffffff82688657: leave; jmp far fword ptr [rax+0x6bdabeff];
0xffffffff826ca50b: leave; jmp far fword ptr [rax+0xc096873];
0xffffffff826886bb: leave; jmp far fword ptr [rax+0xc6512ff];
0xffffffff82688118: leave; jmp far fword ptr [rax+0xd790cff];
0xffffffff8268854f: leave; jmp far fword ptr [rax-0x410a8801];
0xffffffff8268849f: leave; jmp far fword ptr [rbp+0x22];
0xffffffff826883f1: leave; jmp far fword ptr [rbp+0x5e];
0xffffffff826883fb: leave; jmp far fword ptr [rbp+0x71];
0xffffffff826b7bee: leave; jmp far fword ptr [rbp+0x73];
0xffffffff826885ef: leave; jmp far fword ptr [rbp-0x19];
0xffffffff82688265: leave; jmp far fword ptr [rbp-0xb];
0xffffffff82688513: leave; jmp far fword ptr [rbx+0x69];
0xffffffff826882bd: leave; jmp far fword ptr [rcx+rbp*2+0x27];
0xffffffff8264ef46: leave; jmp far fword ptr [rdi+0x2fffc99d];
0xffffffff8264efce: leave; jmp far fword ptr [rdi+0x3fffc96d];
0xffffffff8264f039: leave; jmp far fword ptr [rdi+0x4b];
0xffffffff8264ef02: leave; jmp far fword ptr [rdi+0x4fffc9ba];
0xffffffff8264f00e: leave; jmp far fword ptr [rdi+0x5d];
0xffffffff8264f002: leave; jmp far fword ptr [rdi+0x63];
0xffffffff8264f00a: leave; jmp far fword ptr [rdi+0x6fffc95d];
0xffffffff8117fa03: leave; jmp far fword ptr [rdi+0x7c8b4900];
0xffffffff8264ef8e: leave; jmp far fword ptr [rdi+0x7fffc982];
0xffffffff8264ee5e: leave; jmp far fword ptr [rdi-0x10003627];
0xffffffff8264ee32: leave; jmp far fword ptr [rdi-0x24];
0xffffffff8264ee56: leave; jmp far fword ptr [rdi-0x26];
0xffffffff8264ee66: leave; jmp far fword ptr [rdi-0x28];
0xffffffff8264ee86: leave; jmp far fword ptr [rdi-0x2c];
0xffffffff8264ef9e: leave; jmp far fword ptr [rdi-0x3682];
0xffffffff8266a6ed: leave; jmp far fword ptr [rdi-0x37];
0xffffffff8264edca: leave; jmp far fword ptr [rdi-0x40003613];
0xffffffff8264edde: leave; jmp far fword ptr [rdi-0x40003618];
0xffffffff8264eef6: leave; jmp far fword ptr [rdi-0x43];
0xffffffff82354b95: leave; jmp far fword ptr [rdi-0x49];
0xffffffff8264ed9e: leave; jmp far fword ptr [rdi-0x50003608];
0xffffffff8264edaa: leave; jmp far fword ptr [rdi-0x5000360b];
0xffffffff8264edae: leave; jmp far fword ptr [rdi-0x5000360c];
0xffffffff8264eefe: leave; jmp far fword ptr [rdi-0x50003644];
0xffffffff8264ef1e: leave; jmp far fword ptr [rdi-0x52];
0xffffffff8264eda2: leave; jmp far fword ptr [rdi-0x60003609];
0xffffffff8264ee22: leave; jmp far fword ptr [rdi-0x60003624];
0xffffffff8264edb2: leave; jmp far fword ptr [rdi-0x7000360d];
0xffffffff8264edd2: leave; jmp far fword ptr [rdi-0x70003615];
0xffffffff8264f082: leave; jmp far fword ptr [rdi-0x700036cb];
0xffffffff822e1ac2: leave; jmp far fword ptr [rdi];
0xffffffff822d56bb: leave; jmp far fword ptr [rdx+0x25];
0xffffffff82808210: leave; jmp far fword ptr [rdx+0x53];
0xffffffff82688180: leave; jmp far fword ptr [rdx+0x7409bfff];
0xffffffff82688189: leave; jmp far fword ptr [rdx+0xaf1deff];
0xffffffff826b89da: leave; jmp far fword ptr [rdx+0xb6263ff];
0xffffffff823f9e91: leave; jmp far fword ptr [rdx];
0xffffffff8118614f: leave; jmp far fword ptr [rsi+0x748b4c00];
0xffffffff826884d3: leave; jmp far fword ptr [rsi+0x74];
0xffffffff824448e8: leave; jmp far fword ptr [rsi+0x79];
0xffffffff8246e77d: leave; jmp far fword ptr [rsi];
0xffffffff82666501: leave; jmp far fword ptr fs:[rdi-0x37];
0xffffffff82666505: leave; jmp far fword ptr fs:[rdi];
0xffffffff8239f232: leave; jmp qword ptr [rax+rbx*8];
0xffffffff82286765: leave; jmp qword ptr [rax-0x70];
0xffffffff81470b6b: leave; jmp qword ptr [rbp+0x48];
0xffffffff826882a2: leave; jmp qword ptr [rbp+rbx*2+0x5f];
0xffffffff826e9764: leave; jmp qword ptr [rbp+rsi*2-0x48];
0xffffffff826e9763: leave; jmp qword ptr [rbp+rsi*2-0x48];
0xffffffff826b7c4a: leave; jmp qword ptr [rbx+0x62];
0xffffffff82687ffd: leave; jmp qword ptr [rbx+0x74];
0xffffffff826787f8: leave; jmp qword ptr [rbx+3];
0xffffffff826e976f: leave; jmp qword ptr [rbx-0x1a];
0xffffffff826e976e: leave; jmp qword ptr [rbx-0x1a];
0xffffffff826884de: leave; jmp qword ptr [rbx-0x1b];
0xffffffff826883c6: leave; jmp qword ptr [rbx-0x3f];
0xffffffff822f1bd4: leave; jmp qword ptr [rdi+0x3862be65];
0xffffffff81a1edcf: leave; jmp qword ptr [rdi+rax];
0xffffffff82006fe9: leave; jmp qword ptr [rdi+rbx];
0xffffffff82688271: leave; jmp qword ptr [rdi+rcx*8-2];
0xffffffff826882e5: leave; jmp qword ptr [rdi-0x63];
0xffffffff82330ee6: leave; jmp qword ptr [rdi];
0xffffffff82688439: leave; jmp qword ptr [rdx+0x70];
0xffffffff82559bf6: leave; jmp qword ptr [rdx+rbx*2-0x23];
0xffffffff8268819e: leave; jmp qword ptr [rdx-4];
0xffffffff827040f4: leave; jmp qword ptr [rdx-8];
0xffffffff81418054: leave; jmp qword ptr [rsi+0x2e];
0xffffffff82688450: leave; jmp qword ptr [rsi+0x64];
0xffffffff826882fa: leave; jmp qword ptr [rsi+0x64fee7b8];
0xffffffff82688043: leave; jmp qword ptr [rsi+0x65];
0xffffffff814182e0: leave; jmp qword ptr [rsi+0x66];
0xffffffff81424c41: leave; jmp qword ptr [rsi+0x66];
0xffffffff82688325: leave; jmp qword ptr [rsi+0x72fee7b8];
0xffffffff81417945: leave; jmp qword ptr [rsi+0xf];
0xffffffff826882cd: leave; jmp qword ptr [rsi-0x1a0a1848];
0xffffffff826ca4f3: leave; jmp qword ptr [rsi-0x1b];
0xffffffff826884b9: leave; jmp qword ptr [rsi-0x23];
0xffffffff8142460c: leave; jmp qword ptr [rsi-0x70];
0xffffffff826f527c: leave; jmp qword ptr [rsi-0xf179293];
0xffffffff82008e6c: leave; jmp qword ptr fs:[eax-0x2e00fb00];
0xffffffff826f5464: leave; jmp rdx;
0xffffffff8265722d: leave; lahf; call far fword ptr [rdi+0x5fff9fc8];
0xffffffff8250ffe0: leave; lahf; call rdi;
0xffffffff816ba97e: leave; lahf; jmp qword ptr [rsi+0x66];
0xffffffff81559bad: leave; lea eax, [rax+rcx-1]; bswap eax; mov [rdi], eax; mov dword ptr [rdi+4], 0; ret;
0xffffffff8245e56d: leave; lea eax, [rbp+0x4b70e649]; ret;
0xffffffff81888ed4: leave; lea eax, [rcx+rax*2]; add eax, 0x1d; ret;
0xffffffff810e43e7: leave; lea eax, [rcx+rax*8]; movzx eax, ax; pop rbx; ret;
0xffffffff8185dd5c: leave; lea eax, [rcx+rcx*2]; lea eax, [rax*4+4]; cmove eax, ecx; add rax, 0x18; ret;
0xffffffff816b29d5: leave; lea ecx, [rcx+rcx*4]; sub edi, ecx; or eax, edi; ret;
0xffffffff811ee4d2: leave; lea rax, [rcx+0x108]; test rcx, rcx; cmove rax, rcx; ret;
0xffffffff8118f893: leave; lea rax, [rcx+0x18]; test rcx, rcx; cmove rax, rcx; ret;
0xffffffff811ef0ba: leave; lea rax, [rcx+8]; test rcx, rcx; cmove rax, rcx; ret;
0xffffffff810db40a: leave; lea rax, [rcx+rax-0x530]; cmove rax, rcx; ret;
0xffffffff81b8503f: leave; lea rcx, [rcx+rcx*4]; lea rax, [rax+rcx*4]; add rax, 0x38; ret;
0xffffffff823eb5d0: leave; leave; sbb ebx, [rdx]; ret 0xdbff;
0xffffffff822bbe45: leave; lodsb [rsi]; ret;
0xffffffff8238dc11: leave; mov [0x136f958024538c7d], eax; xchg esi, eax; adc al, 0x53; pop rcx; ret;
0xffffffff822520f2: leave; mov [0x274e13b9c79caf66], al; insd [rdi], dx; mov ah, 0x4b; ret 0xfb53;
0xffffffff823dda66: leave; mov [0x94764e0c02ebc10], al; out 0x56, al; sbb eax, 0xadef7958; push rsp; iretd;
0xffffffff825473cb: leave; mov [0xd9c4d51557d88d50], eax; ret 0x5e04;
0xffffffff823eff97: leave; mov [0xf4ccaebd863dbe74], eax; or ah, [rax]; iretd;
0xffffffff8144abbb: leave; mov [r14+0x88], ecx; pop rbx; pop r14; pop r15; ret;
0xffffffff81c055dc: leave; mov [r14], cx; pop rbx; pop r14; ret;
0xffffffff81633f55: leave; mov [r8], r9; ret;
0xffffffff81aee4de: leave; mov [r9+0x14], ecx; movzx eax, word ptr [r10+rax+6]; and eax, 0x20; mov [r9+0x1c], ax; ret;
0xffffffff83441d05: leave; mov [rax*8-0x7ca47000], rcx; call qword ptr [0xffffffff82e339e0];
0xffffffff8148b200: leave; mov [rax+0x10], ecx; xor eax, eax; pop rbx; ret;
0xffffffff8148bdb6: leave; mov [rax+0x24], ecx; xor eax, eax; pop rbx; ret;
0xffffffff8159d550: leave; mov [rax+0x28], rcx; mov qword ptr [r8+0x1b0], 0xffffffff825c1860; mov eax, 0x38; ret;
0xffffffff818983ac: leave; mov [rax+0x458], ecx; ret;
0xffffffff81899967: leave; mov [rax+0xc4], ecx; mov eax, ecx; ret;
0xffffffff81c2fec0: leave; mov [rax+0xc], ecx; pop rbx; pop r14; ret;
0xffffffff8148afd3: leave; mov [rax+4], ecx; xor eax, eax; pop rbx; ret;
0xffffffff8148c3f0: leave; mov [rax+4], rcx; xor eax, eax; pop rbx; ret;
0xffffffff8141bb5a: leave; mov [rax+8], ecx; pop rbx; pop r14; pop r15; ret;
0xffffffff8230137b: leave; mov [rax+rdi*8], cs; or r14, rcx; ret 0xf61a;
0xffffffff8148bf3c: leave; mov [rax], ecx; mov dword ptr [rax+4], 0; xor eax, eax; pop rbx; ret;
0xffffffff81553af0: leave; mov [rbx+0x38], ecx; pop rbx; pop r14; pop r15; ret;
0xffffffff81619f01: leave; mov [rbx+0x38], rax; mov eax, ecx; pop rbx; ret;
0xffffffff82522b1c: leave; mov [rbx-0x14], esi; ret;
0xffffffff81738466: leave; mov [rbx], cl; pop rbx; ret;
0xffffffff812d2f82: leave; mov [rbx], ecx; pop rbx; ret;
0xffffffff81bbc33e: leave; mov [rcx+0x54], eax; pop rbx; pop r14; ret;
0xffffffff81affc32: leave; mov [rdi+0x758], ecx; ret;
0xffffffff810e92a7: leave; mov [rdi+0x80], rcx; mov eax, [rax*4-0x7dddc450]; mov [rdi+0x88], eax; mov [rdi+0x90], rcx; ret;
0xffffffff8345a5b3: leave; mov [rdi], rcx; mov [rax], rdi; ret;
0xffffffff8343b1ef: leave; mov [rdi], rcx; mov [rsi], rdx; mov rcx, [rip-0x63387d]; mov [rax], rcx; ret;
0xffffffff81c3b20a: leave; mov [rdi], rcx; mov qword ptr [rdi+8], 0; mov qword ptr [rdi+0x10], 0; ret;
0xffffffff81c3b25a: leave; mov [rdi], rcx; mov qword ptr [rdi+8], 0; mov qword ptr [rdi+0x10], 0xffffffff8263a928; ret;
0xffffffff8156d04e: leave; mov [rdi], rcx; ret;
0xffffffff83483f05: leave; mov [rdx+0x42], cx; movsxd rcx, ecx; imul rcx, 0x1e0; add rax, rcx; ret;
0xffffffff825cee3f: leave; mov [rdx+0x75], ebp; ret 0x7879;
0xffffffff81b4c30d: leave; mov [rdx], rcx; pop rbx; ret;
0xffffffff824e8bac: leave; mov [rip-0x157eb449], edi; ret;
0xffffffff82541b63: leave; mov [rip-0x35542375], ah; adc [rdi+0x19], ebp; xchg cl, dh; ret;
0xffffffff8343021f: leave; mov [rip-0x49e926], ecx; mov eax, 1; pop rbx; ret;
0xffffffff81596f42: leave; mov [rsi+0x10], rcx; ret;
0xffffffff81561254: leave; mov [rsi+0x20], rdx; mov [rsi+0x28], r9; mov qword ptr [rsi+0x30], 0xffffffffffffffff; mov eax, 0x38; ret;
0xffffffff8181dc62: leave; mov [rsi+0x24], rcx; mov dword ptr [rsi+0x1c], 0x1000000; xor eax, eax; ret;
0xffffffff8142a062: leave; mov [rsi+0x60], rcx; ret;
0xffffffff8158b699: leave; mov [rsi+8], r9d; ret;
0xffffffff81528f9f: leave; mov [rsi+8], rcx; ret;
0xffffffff81c05666: leave; mov [rsi], cx; ret;
0xffffffff8225d7ca: leave; mov ah, 0x36; cmc; jmp rdx;
0xffffffff82396587: leave; mov ah, 0x4e; ret;
0xffffffff81bcaf03: leave; mov ah, bh; jmp qword ptr [rsi+0xf];
0xffffffff822e4983: leave; mov al, 0x9a; mov ecx, 0x6469e2b; int1; iretd;
0xffffffff8233adf8: leave; mov al, 0x9d; pushfq; iretd;
0xffffffff8257118f: leave; mov al, 0xb7; mov es, [rip+0x7fa970ff]; ret 0xdc73;
0xffffffff826538e1: leave; mov al, 0xff; out dx, eax; ret;
0xffffffff82360558: leave; mov al, [0x1d03e9b505651950]; call qword ptr [rdx+rdi];
0xffffffff824bc065: leave; mov al, [0x42e631b607e47e0b]; push rbp; adc ch, [rcx]; ret 0x7f93;
0xffffffff812bfe43: leave; mov al, [0x5c415bc36348ffff]; pop r14; pop r15; pop rbp; ret;
0xffffffff822501a3: leave; mov al, [0x7624637d96988f21]; test [rsi+0x3ece4c25], edx; push rdi; insd [rdi], dx; call far fword ptr [rax-0x67];
0xffffffff835ade5c: leave; mov al, [0xa8b7fdf1a0cafdf1]; int1; std; iretd;
0xffffffff8243e2ab: leave; mov bh, 0x94; sbb eax, 0x150dd877; test [rbx-0x7f], ecx; xchg edi, eax; iretd;
0xffffffff8238450a: leave; mov bh, 3; ret;
0xffffffff8244f8ed: leave; mov bl, 0x67; ret;
0xffffffff8224cdb5: leave; mov bl, 0x7f; ret;
0xffffffff8227c1a7: leave; mov byte ptr [rdi], 0xd4; ret;
0xffffffff8110e247: leave; mov ch, 0; cdqe; ret;
0xffffffff8225931f: leave; mov ch, 0x1a; ret;
0xffffffff823b97df: leave; mov ch, 0x87; int1; ret 0xa6be;
0xffffffff82262ce9: leave; mov ch, 0xb6; jmp qword ptr [rcx-0x5728bca5];
0xffffffff8241663f: leave; mov ch, 0xc8; iretd;
0xffffffff83433a28: leave; mov ch, 0xff; sub dh, [rdx+4]; mov eax, ebx; pop rbx; ret;
0xffffffff82480089: leave; mov ch, 8; and [rsp+rax-0x56], dh; ret 0x4a5;
0xffffffff824c91bb: leave; mov cl, 0x9a; iretd;
0xffffffff8248d958: leave; mov cl, 0xb3; call far fword ptr [rdi-0x22];
0xffffffff8154c163: leave; mov cl, 0xb6; jmp qword ptr [rsi+0xf];
0xffffffff82335f8b: leave; mov cl, 0xd3; adc al, 0x28; or [rax], cl; ret;
0xffffffff8241355e: leave; mov cl, 0xd8; ret;
0xffffffff8232cb16: leave; mov cl, 3; fsub st(4), st; cmp byte ptr [rbp-0x527cb970], 0x45; or [rsp+rbp-0x71], ebx; ret;
0xffffffff824d7d2a: leave; mov dh, 0x5a; cmc; call far fword ptr [rbx];
0xffffffff8238a312: leave; mov dh, 0x88; pop rsi; adc eax, ecx; iretd;
0xffffffff8242d66c: leave; mov dh, 0x99; clc; cmp [rbp+0x7455d0cb], esp; stosd [rdi]; ret 0xabe3;
0xffffffff82529008: leave; mov dh, 0x9b; int3; ret;
0xffffffff824164ee: leave; mov dh, 0xf0; ret;
0xffffffff8257045d: leave; mov dl, 0x47; bswap edi; mov ecx, 0x87e0ce2; iretd;
0xffffffff822783b1: leave; mov dl, 0x72; int 0x37; pop rbx; mov edx, 0x1b4f7a3c; ret 0x8020;
0xffffffff823446cc: leave; mov dl, 0xa3; iretd;
0xffffffff8242019f: leave; mov dl, dh; ret 0x239a;
0xffffffff81aecd19: leave; mov dword ptr [rax+rcx-0x15], 0; pop rbx; pop r14; ret;
0xffffffff8148e4e9: leave; mov eax, 0x14270000; cmove eax, ecx; ret;
0xffffffff815bbce1: leave; mov eax, 0x20; cmovne eax, ecx; ret;
0xffffffff81ba4efe: leave; mov eax, 0x268; cmove rax, rcx; ret;
0xffffffff81b2dbce: leave; mov eax, 0x84; cmove rax, rcx; ret;
0xffffffff835aa7a0: leave; mov eax, 0xb909fdcf; iretd;
0xffffffff82540f8b: leave; mov eax, 0xb96591aa; lodsd [rsi]; iretd;
0xffffffff824aa72e: leave; mov eax, 0xcbb1bb1a; or [rdx], al; xchg ecx, eax; iretd;
0xffffffff823fb517: leave; mov eax, 0xf287950; ret;
0xffffffff816997c5: leave; mov eax, 0xffffffea; cmove eax, ecx; ret;
0xffffffff815eb270: leave; mov eax, 0xfffffff2; cmove eax, ecx; ret;
0xffffffff8171470d: leave; mov eax, 1; cmove eax, edx; ret;
0xffffffff81109493: leave; mov eax, 1; ret;
0xffffffff8355c209: leave; mov eax, [0xa1ca60ffffffff81]; cmp edi, 0xe0ffffff; iretd;
0xffffffff8192fe80: leave; mov eax, eax; add rax, rcx; imul rax, 0x58; add rax, [rdi+0xe0]; ret;
0xffffffff81781b72: leave; mov eax, ecx; lea rdi, [rax*4-0x7da15540]; mov eax, [rdi]; ret;
0xffffffff81c5e006: leave; mov eax, ecx; pop rbx; pop r14; pop r15; ret;
0xffffffff81060bc9: leave; mov eax, ecx; pop rbx; pop r14; pop rbp; ret;
0xffffffff810dbdab: leave; mov eax, ecx; pop rbx; pop r14; ret;
0xffffffff813356b3: leave; mov eax, ecx; pop rbx; ret;
0xffffffff81c731fc: leave; mov eax, ecx; pop rcx; ret;
0xffffffff815ebd26: leave; mov eax, ecx; ret;
0xffffffff8110a895: leave; mov eax, r9d; ret;
0xffffffff8251b387: leave; mov ebp, 0xa80eaecc; ret;
0xffffffff83565dd9: leave; mov ebp, 0xffffff81; jmp qword ptr [rax];
0xffffffff82252d96: leave; mov ebx, 0x2ba48262; insb [rdi], dx; ret 0x4ec0;
0xffffffff822442f6: leave; mov ebx, 0x5a584a05; ret 0x3d1;
0xffffffff8256c141: leave; mov ebx, 0x81600f5; mov dh, 0xd4; ret;
0xffffffff82455945: leave; mov ebx, 0x938c7af4; iretd;
0xffffffff826515a5: leave; mov ebx, 0xbbc91fff; jmp far fword ptr [rdi-0x38];
0xffffffff8226a98b: leave; mov ebx, 0xe62809d3; push 0xffffffffffffffb1; out dx, al; iretd;
0xffffffff835650f0: leave; mov ebx, 0xffffff81; push qword ptr [rax-0x35]; mov ebx, 0xffffff81; call qword ptr [rax-0x7e4435];
0xffffffff8236b66b: leave; mov ecx, 0x17183f3d; mov esp, 0xba52a105; scasd [rdi]; ret 0x9f55;
0xffffffff82436230: leave; mov ecx, 0x81de3e8e; lea ebx, [rbx-0x2f]; enter 0x2596, 0x18; iretd;
0xffffffff82464225: leave; mov ecx, 0xa548a3f3; pop rsi; or al, 0x36; iretd;
0xffffffff835aa7b0: leave; mov ecx, 0xbaa6fdcf; iretd;
0xffffffff8248f9ff: leave; mov ecx, 0xc1f0f1e1; iretd;
0xffffffff8299dfec: leave; mov ecx, 0xd; add [rcx+rcx*8], cl; iretd;
0xffffffff835646b1: leave; mov ecx, 0xffffff81; call rax;
0xffffffff835646a9: leave; mov ecx, 0xffffff81; jmp qword ptr [rax-0x7e4637];
0xffffffff835646b9: leave; mov ecx, 0xffffff81; push qword ptr [rax-0x35]; mov ecx, 0xffffff81; call qword ptr [rax-0x7e4630];
0xffffffff810079cf: leave; mov ecx, 0xfffffff4; cmove eax, ecx; pop rbx; ret;
0xffffffff817c11f5: leave; mov edi, 0x8b488279; add [rax-0x7b], cl; shl byte ptr [rbx+rax+0x48], cl; mov [rdx], ecx; ret;
0xffffffff83566c41: leave; mov edi, 0xffffff81; jmp qword ptr [rax];
0xffffffff824f7f20: leave; mov edi, [rax]; rol byte ptr [rbp+0x7cb02bb9], 1; adc al, 0x96; ret;
0xffffffff8228659f: leave; mov edx, 0x43e57fdc; push 0x53; iretd;
0xffffffff82412cef: leave; mov edx, 0x702edfa0; movsd [rdi], [rsi]; iretd;
0xffffffff8237dcbe: leave; mov edx, 0x9c73056d; sub eax, 0xfdf57e39; pop rdx; ret 0xbf16;
0xffffffff826518f9: leave; mov edx, 0xbac7afff; jmp far fword ptr [rdi-0x3a];
0xffffffff8231b958: leave; mov edx, 0xd109d4a; stosd [rdi]; add eax, 0x852060e7; sbb ecx, 5; ret 0xfa03;
0xffffffff819315a8: leave; mov edx, [r8]; xor eax, eax; cmp rcx, rdx; setne al; ret;
0xffffffff824f4d92: leave; mov esi, 0x16811df8; sar dword ptr [rbp+0x7f], cl; iretd;
0xffffffff82272f86: leave; mov esi, 0xa3dc4593; or bl, ah; or ebp, [rbx]; mov esi, 0xbf8b6f85; ret;
0xffffffff82343c43: leave; mov esi, 0xe3246aae; iretd;
0xffffffff82636ea9: leave; mov esi, 0xffffff81; jmp qword ptr [rax-0x7e4137];
0xffffffff822bb675: leave; mov esi, [rcx]; pop rsp; iretd;
0xffffffff827e46e6: leave; mov qword ptr [rsi], 0; mov [rsi+8], rcx; pop rbp; ret;
0xffffffff825263bf: leave; mov r14b, 0x25; movsb [rdi], [rsi]; or al, 0xeb; iretd;
0xffffffff812b07bb: leave; mov rax, 0xffffffff8273b161; cmovne rax, rcx; ret;
0xffffffff81c12964: leave; mov rax, 0xffffffff8274bd30; cmovne rax, rcx; ret;
0xffffffff81c124b5: leave; mov rax, 0xffffffff827dd02d; cmovne rax, rcx; ret;
0xffffffff815bbbee: leave; mov rax, 0xffffffffffffff8b; cmovne rax, rcx; ret;
0xffffffff81579265: leave; mov rax, 0xffffffffffffff; and rax, rcx; ret;
0xffffffff817b952e: leave; mov rax, 0xffffffffffffffef; cmove rax, rcx; ret;
0xffffffff819f8c72: leave; mov rax, [rcx+0x10]; ret;
0xffffffff8220d47f: leave; mov rax, r9; ret;
0xffffffff812616d5: leave; mov rax, rcx; pop rbx; pop r14; pop r15; ret;
0xffffffff81261667: leave; mov rax, rcx; pop rbx; pop r14; ret;
0xffffffff8135486e: leave; mov rax, rcx; pop rbx; ret;
0xffffffff81314f30: leave; mov rax, rcx; pop rcx; ret;
0xffffffff810b3126: leave; mov rax, rcx; ret;
0xffffffff834497e8: leave; mov rcx, [rcx*8-0x7d819990]; mov [rcx+0x16000], rax; ret;
0xffffffff8119957c: leave; mov rdi, r14; call qword ptr [0xffffffff82e33a08];
0xffffffff8166a9de: leave; movsb [rdi], [rsi]; call qword ptr [rax-0x6f6f6f70];
0xffffffff82655e41: leave; movsb [rdi], [rsi]; jmp far fword ptr [rdi];
0xffffffff8166a972: leave; movsb [rdi], [rsi]; jmp qword ptr [rsi+0x66];
0xffffffff8231a51f: leave; movsb [rdi], [rsi]; std; xchg edi, eax; out 0x25, eax; ret 0x8768;
0xffffffff82450356: leave; movsb [rdi], [rsi]; xor [rbx-0x18050ce], ebp; sbb eax, [rsi-0x122aad0c]; jmp qword ptr [rcx-0x25dcd45];
0xffffffff8242513f: leave; movsd [rdi], [rsi]; out 0x56, eax; ret;
0xffffffff822a421d: leave; movsd [rdi], [rsi]; ret 0xa4cc;
0xffffffff82431a5b: leave; movsd [rdi], [rsi]; ret;
0xffffffff817c4d72: leave; movsxd eax, [rax]; mov [rip+0x1eab534], rdi; mov [rip+0x1eab535], rsi; ret;
0xffffffff823d9f8b: leave; movsxd eax, [rbx-0x445fc542]; push rdx; insd [rdi], dx; ret;
0xffffffff82385e79: leave; movsxd eax, [rbx-0x64]; fsubr st, qword ptr [rbx+0xa]; ret 0x24a8;
0xffffffff814eb353: leave; movsxd eax, ecx; jmp qword ptr [rsi+0xf];
0xffffffff819d4574: leave; movsxd ebp, ecx; ret;
0xffffffff8224b673: leave; movsxd edi, [rcx-0x38b6cf51]; sysret;
0xffffffff8174e4b7: leave; movzx eax, al; cmovs eax, ecx; ret;
0xffffffff8104c658: leave; movzx eax, cl; pop rbx; pop rbp; ret;
0xffffffff8173d5fb: leave; movzx eax, r9b; cmovae eax, ecx; ret;
0xffffffff822b2bf9: leave; neg eax; cli; int 0x30; ret;
0xffffffff82452f73: leave; nop; adc r9, r13; iretd;
0xffffffff8265b211: leave; nop; jmp far fword ptr [rdi-0x70006f39];
0xffffffff813dfb68: leave; not ecx; and [rax+0x28], ecx; ret;
0xffffffff811634e4: leave; not ecx; and eax, ecx; ret;
0xffffffff829281cd: leave; or [rax], al; add al, 0; add [rax], al; ret;
0xffffffff811ff4bd: leave; or [rax], al; mov rax, r14; pop rbx; pop r14; ret;
0xffffffff8248e917: leave; or [rcx+0x6a], dh; iretd;
0xffffffff81012cf0: leave; or [rcx+0xf], cl; mov edx, 0xf4121e4; iretd;
0xffffffff82007ed0: leave; or [rdx-1], ah; cmp al, 0x10; add eax, 0xc7103dff; jmp qword ptr [rax];
0xffffffff823d04c3: leave; or [rsi+0x47], ecx; pop r13; mov ebp, 0xd0164ac8; push rax; ret;
0xffffffff822cfa37: leave; or [rsi], ecx; ret 0xa168;
0xffffffff822f77f8: leave; or ah, ch; rcr byte ptr [rbx-0x614f0045], cl; xor eax, [rax-0x26]; iretd;
0xffffffff82404455: leave; or al, 0x15; iretd;
0xffffffff82551dbc: leave; or al, 0x5e; adc ebp, esp; xchg esp, eax; ret 0xf738;
0xffffffff822ca04e: leave; or al, 0x96; mov cl, 0x25; rcl cl, 0xc7; ret 0xb317;
0xffffffff8176b183: leave; or al, 0xb2; jmp qword ptr [rsi+0xf];
0xffffffff82813575: leave; or al, 0xff; call far fword ptr [rdx];
0xffffffff8237799e: leave; or al, [rax+0x7af5b4d2]; mov esi, 0xa8341ec5; ret;
0xffffffff8237799d: leave; or al, [rax+0x7af5b4d2]; mov esi, 0xa8341ec5; ret;
0xffffffff824dc79a: leave; or al, [rip-0x41a1a699]; ret;
0xffffffff8255fb41: leave; or al, cl; mov esi, 0x751950f3; scasb [rdi]; iretd;
0xffffffff816a65cc: leave; or al, cl; pop rbx; pop r14; pop rbp; ret;
0xffffffff813b6a63: leave; or al, dl; jmp qword ptr [rsi+0xf];
0xffffffff82566141: leave; or bh, [rdi-0x18bea2f1]; add [rcx-0x7e5860c0], edi; mov [rbp+0x4edddef4], fs; push 0xc; ret 0x67a4;
0xffffffff82003211: leave; or bh, bh; and cl, cl; or bh, bh; sub [rsi+5], bl; jmp qword ptr [rcx];
0xffffffff82003161: leave; or bh, bh; fcomp st, qword ptr [rsi+5]; jmp qword ptr [rbx-0x37];
0xffffffff82003149: leave; or bh, bh; hlt; pop rsi; add eax, 0xac96fff; jmp far fword ptr [rsi-0x37];
0xffffffff820031fd: leave; or bh, bh; pop rsi; add eax, 0xac92cff; jmp far fword ptr [rbx];
0xffffffff8200315d: leave; or bh, bh; push 0xffffffffdcff0ac9; pop rsi; add eax, 0xac963ff; jmp qword ptr [rdx-0x37];
0xffffffff8200316d: leave; or bh, bh; rcr byte ptr [rsi+5], 1; jmp qword ptr [rax-0x37];
0xffffffff82003215: leave; or bh, bh; sub [rsi+5], bl; jmp qword ptr [rcx];
0xffffffff82003209: leave; or bh, bh; xor al, 0x5e; add eax, 0xac923ff; jmp qword ptr [rdx];
0xffffffff82295119: leave; or byte ptr [rax+0x2a], 0x58; ret 0xb62e;
0xffffffff816b6e48: leave; or byte ptr [rax+0xf24084b], 0xc; mov [rbx+6], al; pop rbx; ret;
0xffffffff816b6e18: leave; or byte ptr [rax+0xf24084b], 0xc; mov [rbx+7], al; pop rbx; ret;
0xffffffff815e2449: leave; or cl, [rcx+0xa088]; add [rax-0xffee3b1], al; or byte ptr [rax+0x40], 8; ret;
0xffffffff8252e8cd: leave; or dh, bl; sbb ecx, [rbx+rdx*8+0x247f2ed7]; jmp qword ptr [rax-0x51ca3cb3];
0xffffffff81c4b705: leave; or dh, dh; ret 0x4812;
0xffffffff8249b65c: leave; or eax, 0x5c6067a; or byte ptr [rdx], 0x89; push rdx; iretd;
0xffffffff8249b65d: leave; or eax, 0x5c6067a; or byte ptr [rdx], 0x89; push rdx; iretd;
0xffffffff812e6743: leave; or eax, 0x98480000; ret;
0xffffffff8351c2e9: leave; or eax, 0xffffff81; jmp qword ptr [rax-0x36];
0xffffffff8296d85c: leave; or eax, [rax]; ret;
0xffffffff823cc7ab: leave; or ecx, edi; sbb eax, 0x40445d46; ret 0x7121;
0xffffffff8199d9f9: leave; or ecx, edi; xor eax, eax; cmp rsi, rdx; cmove eax, ecx; ret;
0xffffffff82336860: leave; or edi, [rbp-0x23]; or [rcx+rdx*4+0x49], bl; fxch st, st(5); xor gs:[rdi-0x2c], bh; iretd;
0xffffffff813b6763: leave; or edx, eax; jmp qword ptr [rsi+0xf];
0xffffffff8267536f: leave; or edx, gs:[rax+0x6d6ecc93]; ret;
0xffffffff812b0297: leave; or rax, rcx; ret;
0xffffffff817d04d5: leave; or rdx, rsi; mov eax, 0xffffffea; cmove eax, ecx; ret;
0xffffffff8224fe84: leave; out 0x25, eax; sbb [rdx+0x75bd7fce], dl; test eax, 0x6fded954; iretd;
0xffffffff822fc6d9: leave; out 0x3c, al; call qword ptr [rdi-0x5307470f];
0xffffffff822316a1: leave; out 0x3d, eax; iretd;
0xffffffff8236c36c: leave; out 0x5f, al; call far fword ptr [rdi-0xe];
0xffffffff82487c54: leave; out 0x76, al; ret;
0xffffffff8230fcac: leave; out 0xb, al; add dword ptr [rdi], 0xffffff93; xchg eax, esi; or [rcx], bl; iretd;
0xffffffff82258ff0: leave; out 0xf9, al; mov ah, [rdi]; ret 0x2ecd;
0xffffffff81bfc4d3: leave; out 6, al; add [rax-0x68], cl; pop rbx; ret;
0xffffffff8198b169: leave; out dx, al; add [rbx+0x41], bl; pop rsi; ret;
0xffffffff8232ec28: leave; out dx, al; iretd;
0xffffffff82295d08: leave; out dx, al; movsb [rdi], [rsi]; in al, 0xe2; jmp far fword ptr [rbx-0x4e];
0xffffffff82460b5b: leave; out dx, al; ret;
0xffffffff822b7ffa: leave; out dx, eax; add al, 5; pop rcx; mov eax, 0x5466f440; ret;
0xffffffff81655032: leave; out dx, eax; and [r14+0x84], ecx; pop rbx; pop r14; ret;
0xffffffff8359ced9: leave; out dx, eax; call qword ptr [rcx+rcx*8-0x365e0011];
0xffffffff8359ca0d: leave; out dx, eax; call qword ptr [rdx+0x69ffefd0];
0xffffffff8359ceed: leave; out dx, eax; call rbp;
0xffffffff8359cee9: leave; out dx, eax; dec eax; leave; out dx, eax; call rbp;
0xffffffff8359ced5: leave; out dx, eax; inc dword ptr [rdi-0x6b001037]; leave; out dx, eax; jmp qword ptr [rcx-0x51001037];
0xffffffff823b4054: leave; out dx, eax; iretd;
0xffffffff823a24df: leave; out dx, eax; iretq;
0xffffffff8359cee1: leave; out dx, eax; jmp far fword ptr [rsi-0x44001037];
0xffffffff8359cedd: leave; out dx, eax; jmp qword ptr [rcx-0x51001037];
0xffffffff8359cef5: leave; out dx, eax; jmp rax;
0xffffffff8359cef1: leave; out dx, eax; jmp rdx;
0xffffffff82543119: leave; out dx, eax; mov bh, 0x5f; ret;
0xffffffff8222e359: leave; out dx, eax; ret 0x35fc;
0xffffffff8232a520: leave; out dx, eax; ret 0xe221;
0xffffffff81798b03: leave; outsb dx, [rsi]; add [rbp-0x7b], r9b; dec dword ptr [rax+0x63]; ret;
0xffffffff823a167a: leave; outsb dx, [rsi]; ret;
0xffffffff824ed2de: leave; outsb dx, [rsi]; xor dl, [rdx-0x71]; stosd [rdi]; shl esi, 1; ret;
0xffffffff82538e57: leave; outsd dx, [rsi]; iretd;
0xffffffff824381b5: leave; outsd dx, [rsi]; pop r10; push rsp; iretd;
0xffffffff8239f293: leave; outsd dx, [rsi]; pop rax; ret 0x96b5;
0xffffffff816f02b3: leave; outsd dx, [rsi]; pushfq; dec dword ptr [rdi]; or edi, [rax-0x13]; ret;
0xffffffff8252bf85: leave; pfcmpge mm4, mm2; fiadd st, dword ptr [r9+0x2b5adb5f]; out dx, al; ret;
0xffffffff8240c67f: leave; pop r9; ret 0x3c8e;
0xffffffff8240c681: leave; pop r9; ret 0x3c8e;
0xffffffff82554376: leave; pop rax; add eax, ecx; iretq;
0xffffffff82668de1: leave; pop rax; call far fword ptr [rdi];
0xffffffff82236686: leave; pop rax; iretd;
0xffffffff824d6e86: leave; pop rax; ret;
0xffffffff82472077: leave; pop rbp; adc ah, dl; ret 0x167e;
0xffffffff824bbc95: leave; pop rbp; and al, 0xf2; leave; out dx, al; ret;
0xffffffff8240456a: leave; pop rbp; iretd;
0xffffffff822b3668: leave; pop rbp; mov [rdi+0x51f1f3f3], edi; and dl, bl; xchg [rcx+0x2dfde1d8], bh; call qword ptr [rsi+0x7b];
0xffffffff8235edb7: leave; pop rbp; xor dword ptr [rax-0x77], 0xffffffb5; stosb [rdi]; iretd;
0xffffffff817f97fe: leave; pop rbx; pop r14; pop r15; ret;
0xffffffff810610b7: leave; pop rbx; pop rbp; ret;
0xffffffff8256820c: leave; pop rbx; popfq; jmp qword ptr [rdi-0x72fca4eb];
0xffffffff81c259e3: leave; pop rbx; push rdi; call far fword ptr [rbx+0x41];
0xffffffff82419043: leave; pop rdi; in eax, 0xa2; iretd;
0xffffffff823081a3: leave; pop rdi; ret;
0xffffffff8266880d: leave; pop rdx; call far fword ptr [rdi-0x7000a538];
0xffffffff82668808: leave; pop rdx; dec dword ptr [rdi]; leave; pop rdx; call far fword ptr [rdi-0x7000a538];
0xffffffff82668801: leave; pop rdx; jmp far fword ptr [rdi+0x4fff5ac9];
0xffffffff824bf495: leave; pop rsp; add eax, 0xf8261b62; cld; ret;
0xffffffff8228bc95: leave; pop rsp; and dword ptr [rsi-0x1a], 0x8b3c6f77; push rbp; test [rdx+r8*4+0x3e], r15d; ret 0xa5d0;
0xffffffff8229d7ce: leave; pop rsp; cdq; iretd;
0xffffffff82281eba: leave; pop rsp; iretd;
0xffffffff8227feac: leave; pop rsp; ret;
0xffffffff819baab3: leave; popfq; iretd;
0xffffffff8185fa90: leave; popfq; jmp qword ptr [rsi+0x66];
0xffffffff81290dd3: leave; popfq; popfq; add [rax-0x68], cl; ret;
0xffffffff811d6ea3: leave; push 0x247c8b48; and [rax+1], cl; iretd;
0xffffffff81764604: leave; push 0xffffffff89000001; ret 0xca29;
0xffffffff8236aa12: leave; push 0xffffffffca14bcad; pop rax; iretq;
0xffffffff822b8f48: leave; push 0xffffffffffffff82; xchg [rdx-0x63], ch; sti; sahf; ret 0x15ec;
0xffffffff8184edc3: leave; push 0xffffffffffffffe6; dec dword ptr [rax-0x77]; ret 0x8b48;
0xffffffff82536af7: leave; push qword ptr [rax+7]; and [rcx+0x3b], al; cmpsb [rsi], [rdi]; ret;
0xffffffff82688467: leave; push qword ptr [rax-0x15]; adc dl, gs:[rcx+0x75]; leave; call qword ptr [rbp+0x5fef6e67];
0xffffffff8222f493: leave; push qword ptr [rbx-0xdfb6d31]; ret;
0xffffffff815edf0d: leave; push qword ptr [rcx]; fisttp dword ptr [rcx+0x5e415bd8], st; pop r15; ret;
0xffffffff815f3538: leave; push qword ptr [rcx]; rcr byte ptr [rbx+0x41], 0x5e; ret;
0xffffffff8247c04e: leave; push qword ptr [rip+0xe4eb678]; jmp qword ptr [rsi-0x46];
0xffffffff81845ad3: leave; push rax; add [rax-0x68], cl; ret;
0xffffffff810b025a: leave; push rax; add cl, [rax-0x77]; ret 0xc148;
0xffffffff81612263: leave; push rax; stosb [rdi]; jmp qword ptr [rsi+0xf];
0xffffffff82307da7: leave; push rbp; cmc; iretd;
0xffffffff8349f2c3: leave; push rbp; dec byte ptr [rcx-0x763ca428]; ret;
0xffffffff82251f8c: leave; push rbp; insb [rdi], dx; in al, dx; iretd;
0xffffffff82276afc: leave; push rbp; lahf; mov bl, 0x54; cld; iretd;
0xffffffff824b1c3e: leave; push rbp; mov edi, 0xf296392c; fisttp qword ptr [rax-0x45f75cf0], st; ret 0xae89;
0xffffffff823ee454: leave; push rbp; or eax, 0x49cb2422; pop rcx; iretd;
0xffffffff82300ebb: leave; push rbp; out 0xc6, eax; clc; iretd;
0xffffffff82419f03: leave; push rbp; ret;
0xffffffff823aa589: leave; push rcx; cdq; ret;
0xffffffff823ff2e5: leave; push rcx; fwait; call far fword ptr [rsi+0x36a737a1];
0xffffffff815f63e3: leave; push rcx; mov edx, 0x5e415bff; ret;
0xffffffff82362464: leave; push rcx; movsxd eax, [rsi]; mov dword ptr [rdi], 0x76af6e6b; iretd;
0xffffffff825000b3: leave; push rcx; sti; ret;
0xffffffff82669c88: leave; push rdx; jmp far fword ptr [rdi-0x5000ad38];
0xffffffff826884eb: leave; push rdx; mov [0xc9756154096be474], al; call rsi;
0xffffffff8253a677: leave; push rdx; ret 0x244;
0xffffffff82359c3a: leave; push rdx; ret 0x402f;
0xffffffff827040eb: leave; push rsi; mov cl, 0xe6; adc [rcx+0x75], dh; leave; jmp qword ptr [rdx-8];
0xffffffff82253a57: leave; push rsi; ret;
0xffffffff82236c18: leave; push rsp; adc al, 0xdf; cmp eax, 0x75f32699; ret;
0xffffffff822be2ed: leave; push rsp; out 0x16, eax; ret;
0xffffffff816f0b63: leave; pushfq; jmp qword ptr [rsi+0xf];
0xffffffff8245dc37: leave; pushfq; ret 0x4add;
0xffffffff824d1e31: leave; pushfq; ret;
0xffffffff82506d43: leave; pushfq; sbb [rdi], edi; cmp edi, edx; cld; ret;
0xffffffff822fc9d2: leave; rcr dword ptr [rbx-0x68ca7587], 0x17; iretd;
0xffffffff824f5a9a: leave; rcr eax, 0xa9; int 0xf7; imul edi, ebx, 0x237ea68e; ret 0x6d6f;
0xffffffff8231aa38: leave; rep ret;
0xffffffff8103151c: leave; ret 0;
0xffffffff824ab835: leave; ret 0x12bf;
0xffffffff81ae9473: leave; ret 0x16;
0xffffffff824b1531: leave; ret 0x17a1;
0xffffffff815e0dcb: leave; ret 0x199;
0xffffffff812983bb: leave; ret 0x1ba;
0xffffffff8121aff3: leave; ret 0x1c5;
0xffffffff81159a8b: leave; ret 0x1d0;
0xffffffff81049c6c: leave; ret 0x257;
0xffffffff823d4ba0: leave; ret 0x26a6;
0xffffffff8246b10c: leave; ret 0x26ca;
0xffffffff8238d5de: leave; ret 0x298a;
0xffffffff82478dfb: leave; ret 0x2ab5;
0xffffffff823a7f1a: leave; ret 0x2c99;
0xffffffff8250cab9: leave; ret 0x2ccc;
0xffffffff825ccfb5: leave; ret 0x3b81;
0xffffffff825ccfb3: leave; ret 0x3b81;
0xffffffff824b9dd3: leave; ret 0x3de5;
0xffffffff824b9dd6: leave; ret 0x3de5;
0xffffffff8249bd9a: leave; ret 0x40f3;
0xffffffff823b868b: leave; ret 0x4171;
0xffffffff816c6fdf: leave; ret 0x4481;
0xffffffff816c6fde: leave; ret 0x4481;
0xffffffff8254bd8f: leave; ret 0x47d5;
0xffffffff8241ed3b: leave; ret 0x480a;
0xffffffff8226b961: leave; ret 0x49ff;
0xffffffff82246194: leave; ret 0x4b7d;
0xffffffff8105e503: leave; ret 0x4c00;
0xffffffff8231ad7e: leave; ret 0x4c0a;
0xffffffff824f599b: leave; ret 0x5cac;
0xffffffff8243ebd1: leave; ret 0x5f2d;
0xffffffff8253f260: leave; ret 0x6292;
0xffffffff822cedbf: leave; ret 0x6970;
0xffffffff824fdcb0: leave; ret 0x69e2;
0xffffffff82226f0f: leave; ret 0x6a20;
0xffffffff813651c7: leave; ret 0x7301;
0xffffffff8246a114: leave; ret 0x7767;
0xffffffff810530a0: leave; ret 0x8900;
0xffffffff8236e076: leave; ret 0x8eb3;
0xffffffff824640f3: leave; ret 0x9256;
0xffffffff8239d573: leave; ret 0x94a8;
0xffffffff8245f57f: leave; ret 0x94ff;
0xffffffff823f9480: leave; ret 0x95a6;
0xffffffff8248adec: leave; ret 0x9d1f;
0xffffffff81266d93: leave; ret 0xa1;
0xffffffff823769c2: leave; ret 0xac79;
0xffffffff822e7fa3: leave; ret 0xad63;
0xffffffff822ae219: leave; ret 0xaffc;
0xffffffff822aed98: leave; ret 0xb07d;
0xffffffff82564a23: leave; ret 0xb581;
0xffffffff82370f69: leave; ret 0xb99f;
0xffffffff81053047: leave; ret 0xbb00;
0xffffffff824c8932: leave; ret 0xbc27;
0xffffffff82541539: leave; ret 0xc39;
0xffffffff8254b55e: leave; ret 0xcf97;
0xffffffff82470405: leave; ret 0xd564;
0xffffffff8236f970: leave; ret 0xd7dd;
0xffffffff824bf484: leave; ret 0xe1e4;
0xffffffff8348a97c: leave; ret 0xe8fd;
0xffffffff82454bd5: leave; ret 0xfa2d;
0xffffffff82517e26: leave; ret 0xfa8b;
0xffffffff83489653: leave; ret 0xfe3d;
0xffffffff835b2140: leave; ret 0xfe41;
0xffffffff83568019: leave; ret 0xff81;
0xffffffff822aa2a2: leave; ret 0xffc;
0xffffffff816556f3: leave; ret 0xffff;
0xffffffff8288bb24: leave; ret 2;
0xffffffff82927980: leave; ret 8;
0xffffffff82440eff: leave; ret;
0xffffffff822c6df6: leave; ret;
0xffffffff82432050: leave; ret;
0xffffffff81038a48: leave; ret;
0xffffffff835a96cc: leave; rol bh, 0xfd; push rcx; ret 0xfdc7;
0xffffffff8164c2b7: leave; rol byte ptr [rcx], 1; add bl, [rbx+0x41]; pop rsi; pop r15; ret;
0xffffffff829b23bc: leave; rol byte ptr [rdx], 0; ret;
0xffffffff82657619: leave; sahf; jmp far fword ptr [rdi-0x38];
0xffffffff823ca3ad: leave; sahf; outsb dx, [rsi]; sub bl, [rcx+0x49d77090]; ret 0x39aa;
0xffffffff8243c220: leave; sahf; outsd dx, [rsi]; cmp rax, 0xffffffff963cd64e; jmp far fword ptr [rdx-0x2d289af3];
0xffffffff817955b3: leave; sar bh, cl; jmp qword ptr [rbp+0x48];
0xffffffff82247f0e: leave; sar dword ptr [rdi-0x1f], 1; ret;
0xffffffff8264d071: leave; sar edi, 1; mov edi, 0xffffd1c5; ret;
0xffffffff8250088c: leave; sbb [rcx+0x23537ca6], edi; iretd;
0xffffffff82384dbf: leave; sbb [rdx+0x27], ah; iretd;
0xffffffff81785663: leave; sbb al, 0x93; jmp qword ptr [rsi+0xf];
0xffffffff82495b0f: leave; sbb al, 0xd7; iretq;
0xffffffff82282634: leave; sbb al, 0xee; ret;
0xffffffff81c815a3: leave; sbb al, [rax]; add [rcx+0x5e415be8], cl; pop rbp; ret;
0xffffffff81c54c92: leave; sbb al, [rax]; mov eax, 1; ret;
0xffffffff8245f2b8: leave; sbb cl, dl; xor esp, edx; ret;
0xffffffff823dedc5: leave; sbb dh, [rbp+0x4eede1b5]; or al, 0xda; jmp qword ptr [rbp-0x2f];
0xffffffff819b1928: leave; sbb dh, dh; ret 0xf08;
0xffffffff823c5d69: leave; sbb dl, [rax-0x7fe78c25]; adc eax, 0xda85201b; ret 0x1e51;
0xffffffff82382898: leave; sbb dl, [rdx-0x15eff87b]; iretd;
0xffffffff824cc95f: leave; sbb eax, 0x493f422f; mov [rcx], bh; ret;
0xffffffff8243bd9c: leave; sbb eax, 0x6356fc6a; adc esi, ebx; call far fword ptr [rax+rbp*4+0x4048455b];
0xffffffff8284afe4: leave; sbb eax, 0x72b0000; add [rax], al; add [rip+0x1dd10000], cl; add [rax], al; ret 3;
0xffffffff823db89d: leave; sbb eax, ebx; ret 0x7064;
0xffffffff823178be: leave; sbb ebp, [rax+0x475afd]; ret;
0xffffffff8232183e: leave; sbb ebp, eax; lea r14d, [r13+0x4a7bab09]; xor ch, [rbp-0x210454ec]; call far fword ptr [rbx];
0xffffffff8359c6cc: leave; sbb ebp, ecx; jmp qword ptr [rax+0x41ffe920];
0xffffffff8359ce18: leave; sbb ebp, edi; dec dword ptr [rcx-0x4e0010e4]; sbb al, 0xef; call far fword ptr [rbp+0x1d];
0xffffffff823eb5d1: leave; sbb ebx, [rdx]; ret 0xdbff;
0xffffffff82435ea1: leave; sbb ebx, [rsi]; xor [rdx+rbp], ebx; lea ebx, [rdi]; ret;
0xffffffff822acd5c: leave; sbb esp, 0xfffffff8; sub edi, [rsp+rdi*4]; ret;
0xffffffff8118af6f: leave; scasb [rdi]; add [rsi+rax+0x5b], dh; pop r14; pop r15; ret;
0xffffffff82355808: leave; scasb [rdi]; cmp al, 0xd4; adc ebx, [rdx-0x42d827e5]; iretd;
0xffffffff815ca9ee: leave; scasb [rdi]; jmp qword ptr [rsi+0x66];
0xffffffff8241a3df: leave; scasb [rdi]; out dx, al; int3; adc bl, [rbx]; ret 0x61e1;
0xffffffff8242292f: leave; scasb [rdi]; ret;
0xffffffff811aab93: leave; sete al; mov [rip+0x246dc3b], eax; xor eax, eax; ret;
0xffffffff81a80331: leave; sete al; pop rbx; pop r14; pop rbp; ret;
0xffffffff8102d49c: leave; sete al; pop rcx; ret;
0xffffffff810ea703: leave; sete al; ret;
0xffffffff8115e546: leave; sete al; shl eax, 4; add eax, 0xfffffff0; ret;
0xffffffff811955ed: leave; sete dl; lea rax, [rdi+rax*4]; lea rax, [rax+rdx*4]; add rax, 4; ret;
0xffffffff818fcae0: leave; setg al; cmove eax, esi; ret;
0xffffffff81932eb4: leave; setg al; pop rbx; ret;
0xffffffff812c286d: leave; setg al; ret;
0xffffffff81441a16: leave; setne [r14+0x51]; pop rbx; pop r14; pop r15; ret;
0xffffffff81c3177f: leave; setne al; or al, dl; movzx eax, al; neg eax; ret;
0xffffffff818e6686: leave; setne al; pop rbx; ret;
0xffffffff810f663b: leave; setne al; ret;
0xffffffff81c0f3e2: leave; setne cl; cmp [rax+0x10], cl; setne al; ret;
0xffffffff8228d256: leave; shl byte ptr [rdx-0x1d], 0xe0; iretd;
0xffffffff8249331f: leave; shl byte ptr [rsi-0x3f12a8d0], 7; movsxd ebp, [rdx]; ret;
0xffffffff8240aa62: leave; shl dword ptr [r9-0x70], 0x1f; cmpsb [rsi], [rdi]; ret;
0xffffffff8241f4ed: leave; shl dword ptr [rdx+0x5508eb1b], 0x8d; in eax, dx; ret;
0xffffffff82565689: leave; shl ebx, 0xd2; push rdx; ret;
0xffffffff8224e703: leave; shl qword ptr [rip+0x6f85397f], 0x5f; iretd;
0xffffffff813c502c: leave; shl rax, cl; cmp rax, rdx; cmovg rax, rdx; ret;
0xffffffff8157db92: leave; shl rcx, 3; sub rax, rcx; ret;
0xffffffff817e9cb7: leave; shl rcx, 4; mov rax, [rcx-0x7da04948]; ret;
0xffffffff8132b1d4: leave; shl rcx, 5; mov ecx, [rdi+rcx+8]; and ecx, 0xfffff000; sub rax, rcx; ret;
0xffffffff824f94f3: leave; shr byte ptr [rax+0x439274a8], 0x57; xlat [rbx]; cmp esp, [rcx]; ret 0x8eec;
0xffffffff82313569: leave; shr byte ptr [rbx+0x63], cl; adc ecx, eax; iretd;
0xffffffff822a3502: leave; shr byte ptr [rcx+0x7a], 0x3a; ret 0x7200;
0xffffffff824ab374: leave; shr dword ptr [rax], cl; mov ah, 6; and eax, eax; cld; iretd;
0xffffffff82003bc4: leave; shr dword ptr [rbx-1], 0xde; sar bh, 1; jmp qword ptr [rsp+rdx*2];
0xffffffff81704c57: leave; shr rax, 0x20; mov [rdi+0x6a5], al; mov [rdi+0x6a1], ecx; ret;
0xffffffff81563f6e: leave; shr rcx, 4; cmp rcx, rax; setb al; ret;
0xffffffff8156c6da: leave; shr rcx, 9; mov rax, 0x3fffffffffffff; and rax, rcx; ret;
0xffffffff8253eaec: leave; stc; iretd;
0xffffffff822328be: leave; stc; mov ah, 0x7d; ret;
0xffffffff834898e3: leave; stc; ret 0x8bfd;
0xffffffff81502796: leave; std; dec dword ptr [rax-0x7b]; shl byte ptr [rsp+rbp*2+0x48], 0x89; ret;
0xffffffff8170d80f: leave; std; dec dword ptr [rcx+0x5c415bd8]; pop r14; pop r15; ret;
0xffffffff8254687e: leave; std; iretd;
0xffffffff811bf2b0: leave; std; jmp qword ptr [rbp+0x48];
0xffffffff834563f4: leave; std; mov [rip+0x1c332b], rbx; xor eax, eax; pop rbx; ret;
0xffffffff83450cfe: leave; std; mov [rip+0x1c57c8], rbx; xor eax, eax; pop rbx; ret;
0xffffffff835a3fea: leave; std; mov qword ptr [rip+0x1c949], 0; ret;
0xffffffff835a416f: leave; std; mov qword ptr [rip+0x7f1b4], 0; ret;
0xffffffff8268c537: leave; std; movsxd edi, edi; mov esp, 0xe9f6cb8; call rbx;
0xffffffff8269f073: leave; std; movsxd edi, edi; pop r15; test byte ptr [rax], 0xe; call rbx;
0xffffffff826f04d5: leave; std; movsxd esi, [rbx+rcx+0x54]; xchg [rsi-0x4b], esi; iretd;
0xffffffff8269c3f3: leave; std; outsb dx, [rsi]; jmp far fword ptr [rcx-5];
0xffffffff822f4360: leave; std; pop rdx; sbb [rbx+rbp*2], esi; xlat [rbx]; ret 0x77a7;
0xffffffff822fb25e: leave; std; pop rsp; ret 0xae5b;
0xffffffff824716d9: leave; std; ret 0x5ed4;
0xffffffff8344cb81: leave; std; xor eax, eax; ret;
0xffffffff81a06cb6: leave; sti; call qword ptr [rax-0x6f6f6f70];
0xffffffff8244a1e6: leave; sti; pushfq; ret;
0xffffffff8227c34e: leave; stosb es:[rdi]; ret 0xebec;
0xffffffff811b8cc4: leave; stosd [rdi]; add [rax+0x63], cl; ret;
0xffffffff817d7013: leave; stosd [rdi]; dec dword ptr [rax-0x7b]; ror byte ptr [rdi], 0x84; iretd;
0xffffffff82513a3a: leave; stosd [rdi]; iretq;
0xffffffff817cf524: leave; stosd [rdi]; jmp qword ptr [rbp+0x48];
0xffffffff8235af8b: leave; sub [rbx+rsi*4+5], al; ficomp st, word ptr [rsi-0x6ed41e39]; ret;
0xffffffff823f3120: leave; sub [rbx-0x38ccbd6a], dl; iretd;
0xffffffff823f311f: leave; sub [rbx-0x38ccbd6a], dl; iretd;
0xffffffff825156a9: leave; sub [rdi+0x69], ah; mov ebx, edi; outsd dx, [rsi]; data16 ret 0xdf87;
0xffffffff82366668: leave; sub [rip+0x1d05195e], edx; mov al, [0xf96344c0dc20e8f]; and ebp, ecx; or [rcx], r12b; iretd;
0xffffffff8245ebfe: leave; sub [rip-0x61308490], edi; push rax; sbb [rbp], ecx; ret;
0xffffffff822a9459: leave; sub al, 0x35; add esp, 0xffffffd1; ret;
0xffffffff824137aa: leave; sub al, 0x6f; out 0x18, al; ret 0x972b;
0xffffffff82509c6c: leave; sub al, 0x97; sub [r10+0x5434d4bb], rdi; ret 0x71d4;
0xffffffff8245e015: leave; sub al, 0xd5; movsb [rdi], [rsi]; push rdi; fldenv [rdx]; iretd;
0xffffffff81396aef: leave; sub al, 2; add [rax], al; add [rax], al; ret;
0xffffffff81a2e633: leave; sub bl, [rbp]; pop rbx; pop r14; ret;
0xffffffff8235b3c8: leave; sub dl, [rcx-0x51]; sbb esp, [rsi-0x33]; jmp far fword ptr [rbx+rbx*8+0x51f64948];
0xffffffff82278239: leave; sub dword ptr [rsi], 0xe563c0b9; or cl, ch; iretd;
0xffffffff8233b66a: leave; sub eax, 0x637d62bd; iretd;
0xffffffff82365326: leave; sub eax, 0xad550133; sub esi, [rbx]; xor al, 0x4e; mov al, [0xfe2041ac96e99337]; ret 0x6643;
0xffffffff8242b053: leave; sub eax, 0xd555af95; scasb [rdi]; ret;
0xffffffff822e0f94: leave; sub eax, [rcx]; mov al, 0x17; ret 0x7e90;
0xffffffff817801dc: leave; sub eax, [rdi+0x90]; cmovs eax, ecx; ret;
0xffffffff81559b0d: leave; sub eax, ecx; mov eax, eax; ret;
0xffffffff81ae40f1: leave; sub eax, ecx; pop rbx; pop r14; ret;
0xffffffff81baadbb: leave; sub eax, ecx; pop rbx; ret;
0xffffffff81ae6f1b: leave; sub eax, ecx; ret;
0xffffffff8225e979: leave; sub edx, [rdx]; mov es, [rdx+0x3f]; ret 0xb79a;
0xffffffff823f3dac: leave; sub esp, esp; iretd;
0xffffffff8241752c: leave; sub r13, rsi; sbb al, 0x98; cmp edx, [rbx-0x20b574d2]; ret 0x4fc;
0xffffffff815e6db9: leave; sub rax, [rsi+0x158]; cmovae rcx, rax; mov [rdi+0x30], rcx; ret;
0xffffffff81559bdc: leave; sub rax, rcx; ret;
0xffffffff8193d00f: leave; sub rsi, rax; cmovae rcx, rsi; mov rax, rcx; ret;
0xffffffff823f795b: leave; syscall;
0xffffffff817b470e: leave; test [rax], al; xor eax, eax; ret;
0xffffffff822fe137: leave; test [rdi+0x3e32c7fd], edx; mov edi, 0xf63dceee; fidiv st, dword ptr [rcx+0x7a0bf31a]; ret;
0xffffffff82527483: leave; test [rdx+0x4e5d966d], dl; sbb ah, [rip+0x161fed76]; xchg esp, eax; iretd;
0xffffffff822fbae2: leave; test al, 0x70; ret;
0xffffffff82273d6f: leave; test al, 0xf0; ret;
0xffffffff814794ec: leave; test al, al; mov eax, 0x20270000; cmovne eax, ecx; ret;
0xffffffff8171ebab: leave; test al, al; mov eax, 0x4003; cmove eax, ecx; ret;
0xffffffff816993db: leave; test al, al; mov eax, 0xfffffdfd; cmovne eax, ecx; ret;
0xffffffff8182c5aa: leave; test al, al; mov eax, 0xffffffa1; cmovns eax, ecx; ret;
0xffffffff816f1de2: leave; test al, al; mov eax, 0xffffffe7; cmovne eax, ecx; ret;
0xffffffff8125df98: leave; test al, al; mov eax, 0xfffffff3; cmovne eax, ecx; ret;
0xffffffff8101e030: leave; test byte ptr [r8+0xb20], 2; mov eax, 0xfffffff2; cmove eax, ecx; ret;
0xffffffff813f1b3f: leave; test byte ptr [rbx], 1; mov eax, 0xffffffe2; cmovne eax, ecx; pop rbx; ret;
0xffffffff816e0f78: leave; test eax, eax; cmove rcx, rbx; mov rax, rcx; pop rbx; ret;
0xffffffff81b229f5: leave; test eax, eax; cmovg ecx, edx; mov eax, ecx; add rsp, 0x10; ret;
0xffffffff81156100: leave; test eax, eax; cmovne rcx, rbx; mov rax, rcx; pop rbx; ret;
0xffffffff81bbc3ee: leave; test eax, eax; cmovs eax, ecx; pop rbx; pop r14; ret;
0xffffffff811aeb9a: leave; test eax, eax; mov eax, 0xffffffed; cmovne eax, ecx; ret;
0xffffffff81c5716d: leave; test eax, eax; mov rax, 0xfffffffffffffff2; cmove rax, rcx; pop rbx; ret;
0xffffffff811b3f94: leave; test eax, eax; sete cl; lea eax, [rcx+rcx*2]; pop rbx; ret;
0xffffffff814aecf9: leave; test eax, eax; sete cl; lea eax, [rcx+rcx*4]; add eax, 0xfffffffb; ret;
0xffffffff8102c911: leave; test eax, eax; sete cl; mov eax, ecx; ret;
0xffffffff819d3c71: leave; test eax, eax; setg cl; lea rax, [rcx+rcx]; add rax, 0xfffffffffffffffe; ret;
0xffffffff8113cd09: leave; test eax, eax; setg cl; mov eax, ecx; ret;
0xffffffff81aeb9fb: leave; test eax, eax; setne cl; mov eax, ecx; ret;
0xffffffff813fbf88: leave; test edi, 0x4400; mov eax, 0xffffffea; cmovne eax, ecx; ret;
0xffffffff822cf5eb: leave; test edi, edx; push rdi; mov edx, 0x36199cd7; mov r14b, 0xe3; ret;
0xffffffff810d2094: leave; test edx, edx; mov rax, 0xfffffffffffffff2; cmove rax, rcx; pop rbx; ret;
0xffffffff8158b0ea: leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x2bc]; ret;
0xffffffff8158b0ca: leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x2c4]; ret;
0xffffffff81559a4a: leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x348]; ret;
0xffffffff81559a2a: leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x350]; ret;
0xffffffff8156c803: leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x358]; ret;
0xffffffff8156cf93: leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x360]; ret;
0xffffffff81596eba: leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x368]; ret;
0xffffffff81596e9a: leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x370]; ret;
0xffffffff8159b2aa: leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x378]; ret;
0xffffffff8159b28a: leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x380]; ret;
0xffffffff8120fe50: leave; test qword ptr [rbx+0xa8], 2; mov eax, 0xffffffe4; cmove eax, ecx; pop rbx; ret;
0xffffffff816c4290: leave; test rax, rax; mov eax, 0xffffff82; cmovne eax, ecx; ret;
0xffffffff83487092: leave; test rax, rax; mov eax, 0xffffffed; cmovne eax, ecx; ret;
0xffffffff810c9e64: leave; test rax, rax; mov eax, 0xfffffff2; cmove eax, ecx; pop rbx; ret;
0xffffffff8115af40: leave; test rax, rax; mov eax, 0xfffffff2; cmove eax, ecx; ret;
0xffffffff8114c5cf: leave; test rax, rax; mov eax, 0xfffffff4; cmovne eax, ecx; pop rbx; ret;
0xffffffff81051480: leave; test rax, rax; mov eax, 0xfffffff4; cmovne eax, ecx; ret;
0xffffffff81760e6c: leave; test rax, rax; mov edi, 0xfffffff4; cmovne edi, ecx; mov eax, edi; ret;
0xffffffff817145e9: leave; test rax, rax; sete cl; mov eax, ecx; pop rbx; ret;
0xffffffff81713881: leave; test rax, rax; setne cl; lea eax, [rcx+rcx*4]; add eax, 0xfffffffb; ret;
0xffffffff83450da0: leave; test rax, rax; setne cl; mov [rip-0x4bedb1], ecx; mov eax, 1; ret;
0xffffffff83450e5b: leave; test rax, rax; setne cl; mov [rip-0x4bee68], ecx; mov eax, 1; ret;
0xffffffff811b63d4: leave; test rax, rax; setne cl; mov eax, ecx; ret;
0xffffffff812804e7: leave; test rax, rsi; mov eax, 0xffffffea; cmove eax, ecx; ret;
0xffffffff8118eba8: leave; test rcx, rcx; cmove rax, rcx; ret;
0xffffffff823d807c: leave; vmulps ymm1, ymm4, [rdi+0x45ec35f8]; ret 0xce4e;
0xffffffff8113c753: leave; xchg bh, bh; jmp qword ptr [rsi+0xf];
0xffffffff824dae01: leave; xchg ebp, eax; iretd;
0xffffffff824874da: leave; xchg ebp, eax; rcr cl, 1; mov gs, [rax-0x4cd2d8a4]; mov esp, 0x283baa84; ret 0x173;
0xffffffff823530dc: leave; xchg ebx, eax; in al, 0x71; ret;
0xffffffff82398f36: leave; xchg ebx, eax; iretd;
0xffffffff8265ad61: leave; xchg ecx, eax; jmp far fword ptr [rdi+0x2fff91c8];
0xffffffff8196f4c1: leave; xchg ecx, eax; jmp qword ptr [rbp+0x48];
0xffffffff82278f59: leave; xchg edi, eax; iretd;
0xffffffff8257268b: leave; xchg edi, eax; ret 0xbea4;
0xffffffff8241bf6f: leave; xchg edi, eax; xchg esi, eax; xor eax, 0x28df3d4e; push 0xfffffffffffffffa; ret 0xe21e;
0xffffffff817d18d3: leave; xchg edx, eax; add [r8-0x68], cl; ret;
0xffffffff8256beea: leave; xchg edx, eax; in al, 0xc0; xor eax, 0x3bc25ee6; iretd;
0xffffffff823c7617: leave; xchg edx, eax; iretd;
0xffffffff822e97fd: leave; xchg edx, eax; mov [rdx+0x20], ds; movsxd eax, [rsi-0x21]; ret 0x1346;
0xffffffff82499b40: leave; xchg edx, eax; ret 0xf464;
0xffffffff822941bf: leave; xchg esi, eax; push qword ptr [rdi]; iretq;
0xffffffff8254454f: leave; xchg esi, eax; ret 0x5780;
0xffffffff81298413: leave; xchg esp, eax; iretd;
0xffffffff8254f490: leave; xchg esp, eax; jmp far fword ptr [rdi-0x3361e5d4];
0xffffffff823cc0da: leave; xchg r10, rax; pop rbx; scasb [rdi]; sub eax, 0xe417cd10; ret;
0xffffffff817c9853: leave; xchg r9d, eax; jmp qword ptr [rsi+0xf];
0xffffffff82401d2c: leave; xlat [rbx]; iretd;
0xffffffff8264b7d5: leave; xlat [rbx]; jmp far fword ptr [rdi-0x10002838];
0xffffffff8133a950: leave; xlat [rbx]; jmp qword ptr [rsi+0x66];
0xffffffff8241012c: leave; xlat [rbx]; ret 0xc487;
0xffffffff8249eeeb: leave; xor [rcx+0x55729965], edi; jmp qword ptr [rdi+0x75];
0xffffffff82437ae9: leave; xor [rcx+0x74a3b1fb], ah; inc byte ptr [rbp+0x3428ec73]; mov dl, 0x16; xor [rsi-0x3f3a0f42], ch; call qword ptr [rbp-0x7d];
0xffffffff824f6ac5: leave; xor [rdi-0x269d3d72], esp; cdq; pop rbp; call far fword ptr [rsi];
0xffffffff82261267: leave; xor [rdx], ah; cmp bl, [rbx]; sub eax, 0xe8b89187; fstp qword ptr [rdx+0x75], st; ret 0xfb1;
0xffffffff82231413: leave; xor [rsi], ch; movsxd ebp, edi; ret 0xd175;
0xffffffff8252255a: leave; xor al, 0x5b; ret 0x7106;
0xffffffff82537539: leave; xor al, 0xc0; nop; or [rbx+0x671c6788], ah; scasb [rdi]; iretd;
0xffffffff82343967: leave; xor al, 0xc0; shl edi, 1; iretd;
0xffffffff8248e8c0: leave; xor al, [rsi+0x3a018ef2]; ret 0x2329;
0xffffffff824ad255: leave; xor al, al; and eax, 0xdc789223; in al, 0xc0; xor [rax-0x1e], ah; call far fword ptr [rdi];
0xffffffff826f34f8: leave; xor byte ptr [rdi-0x1b], 0xe1; outsb dx, [rsi]; or edx, [rsp+rdi*8+0x65]; jmp qword ptr [rsi-0x45];
0xffffffff8229e6ff: leave; xor ch, [rcx]; sbb dh, al; mov ch, 0xff; jmp qword ptr [rbp+0x53];
0xffffffff825684a8: leave; xor ch, ah; and esp, esi; mov cl, 0x52; test eax, 0x4632b04b; ret;
0xffffffff82289d5f: leave; xor cl, [rax+rax*4]; mov ebx, 0xc5116742; iretd;
0xffffffff82509d8e: leave; xor dh, dl; and al, dh; sub eax, 0x26909dfe; ret;
0xffffffff824083cc: leave; xor dl, [rsi+0xf5b820c]; or [rsi+rbx*8], ah; fidiv st, dword ptr [rdx]; ret;
0xffffffff81c47fe3: leave; xor eax, 0x415bff55; pop rsi; ret;
0xffffffff8230e6d6: leave; xor eax, 0xc5a6c17f; jmp qword ptr [rax-0x4b7f4d0b];
0xffffffff822830fd: leave; xor eax, 0xd7c4dcf3; sub al, 0x7c; pop rdx; ret;
0xffffffff83453ece: leave; xor eax, eax; ret;
0xffffffff8231602d: leave; xor edi, [rcx-0x32]; fwait; mov ecx, 0xbc3b3aaf; ret;
0xffffffff8116cc23: leave; xor edi, edi; dec dword ptr [rax-0x7b]; shl byte ptr [rdx+rsi*2+0x48], 0x89; ret;
0xffffffff8125f49b: leave; xor edx, ebx; add [rbx-0x38b70240], eax; ret 0xfff4;
0xffffffff823f03a1: leave; xor esi, [rip-0x7ee5052a]; fdivr st, dword ptr [rip-0x7bd7f1f6]; xchg r9d, eax; mov ch, 0xac; ret 0xd78c;
0xffffffff824d5b8a: leave; xor esi, ebx; and edx, edi; cmpsd [rsi], [rdi]; call rsp;
0xffffffff82270fe2: leave; xor esi, edi; xor [rsp+rdx*8+0x65e62bb2], ecx; iretd;
0xffffffff8252431c: leave; xor esp, [rsi]; ret;
0xffffffff81e015dd: leave; xor r10d, r10d; swapgs; sysret;
0xffffffff8102d7c1: leave; xsetbv; ret;
0xffffffff82284577: lfs esi, [rbx-0x3e4d8a4b]; mov eax, [rbx+0x65]; xchg esp, eax; or edi, edi; ret 0x62cb;
0xffffffff810333b0: lgdt [rsp]; add rsp, 0x10; ret;
0xffffffff8103502d: lldt ax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff82226f07: lodsb [rsi]; add ebp, ebp; xchg edx, eax; enter 0xf50c, 0x59; leave; ret 0x6a20;
0xffffffff824ba268: lodsb [rsi]; and [rsi-0x3e], ecx; mov ecx, 0xbd8acc42; xchg esp, eax; ret 0x7282;
0xffffffff823769c1: lodsb [rsi]; leave; ret 0xac79;
0xffffffff834561e0: lodsb [rsi]; mov ch, dl; std; add rsp, 8; ret;
0xffffffff824d98c0: lodsb [rsi]; mov eax, 0x47d19bda; push rbp; add esp, 0x3d2b68de; iret;
0xffffffff824fdae2: lodsb [rsi]; mov ebp, 0xfd0f9690; pop rsp; scasb [rdi]; iretd;
0xffffffff822fb253: lodsb [rsi]; mov ebx, 0x6d010349; sar dword ptr [rcx-0x36f426c0], 0xfd; pop rsp; ret 0xae5b;
0xffffffff82546547: lodsb [rsi]; or eax, 0xdfd68f5f; xchg esp, eax; punpckhwd mm6, [rbx]; iretd;
0xffffffff82494d84: lodsb [rsi]; pop rbp; sub bl, [rax-0x7615f7eb]; fist word ptr [rdi+rbx*8+0x7389e187], st; leave; iretd;
0xffffffff8233b667: lodsb [rsi]; pop rcx; leave; sub eax, 0x637d62bd; iretd;
0xffffffff81334540: lodsb [rsi]; pop rsp; cmc; jmp qword ptr [rsi+0x66];
0xffffffff811766b8: lodsb [rsi]; pop rsp; iretd;
0xffffffff822f14dc: lodsb [rsi]; pop rsp; mov [0x5dc18f50a7e99f14], eax; imul edx; call rsp;
0xffffffff82527480: lodsb [rsi]; rcl byte ptr [rax], 0xc9; test [rdx+0x4e5d966d], dl; sbb ah, [rip+0x161fed76]; xchg esp, eax; iretd;
0xffffffff83473e6d: lodsb [rsi]; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82007364: lodsb [rsi]; sbb eax, [rip-0x38e9e401]; inc dword ptr [rax]; xchg esp, eax; push rcx; jmp qword ptr [rax+0x15ff051b];
0xffffffff82554374: lodsb [rsi]; stosd [rdi]; leave; pop rax; add eax, ecx; iretq;
0xffffffff82338fba: lodsb [rsi]; sub eax, 0xd0370ff8; xchg esp, eax; mov [rcx-0x46], gs; xchg bh, bl; iretd;
0xffffffff824c3739: lodsb [rsi]; sub edi, [rdx]; xor eax, 0xeec05843; mov esp, [rcx-0x52]; ret;
0xffffffff8265a3e5: lodsb [rsi]; xchg esp, eax; dec dword ptr [rdi+0xfff94ab]; stosd [rdi]; xchg esp, eax; call far fword ptr [rdi-0x40006b56];
0xffffffff8176c66b: lodsb [rsi]; xchg esp, eax; jmp qword ptr [rsi-0x70];
0xffffffff8236e879: lodsb [rsi]; xchg esp, eax; mov cl, 0x4b; ret 0x4ea7;
0xffffffff823c71e5: lodsb [rsi]; xchg esp, eax; popfq; ret;
0xffffffff82366f79: lodsb [rsi]; xchg esp, eax; rcl byte ptr [rax-0x44], cl; ret 0x462f;
0xffffffff8249dce2: lodsb [rsi]; xchg esp, eax; ret;
0xffffffff82551db9: lodsb [rsi]; xor [rax+0x5e0c41c9], edi; adc ebp, esp; xchg esp, eax; ret 0xf738;
0xffffffff823769bd: lodsb [rsi]; xor al, 0x70; pop rbx; lodsb [rsi]; leave; ret 0xac79;
0xffffffff82559bf1: lodsd [esi]; in al, dx; popfq; leave; jmp qword ptr [rdx+rbx*2-0x23];
0xffffffff824e09c7: lodsd [rsi]; adc [rsi], ch; pop rsp; xor dword ptr [rbx-0x6e54f028], 0x898ee960; pop rdx; ret 0xd80b;
0xffffffff8177ab0d: lodsd [rsi]; add [r11+0x41], r11b; pop rsp; pop r14; pop r15; ret;
0xffffffff811a828d: lodsd [rsi]; add [rbx+0x47052b05], cl; add cl, [rbx+0x4705290d]; add cl, [rcx+0xfca09c2]; xchg esp, eax; ret 0xfb83;
0xffffffff82006a78: lodsd [rsi]; add ecx, [rax-1]; xchg esp, eax; and al, 5; call far fword ptr [rdx+rbx+0x4dbffc7];
0xffffffff82559bf2: lodsd [rsi]; in al, dx; popfq; leave; jmp qword ptr [rdx+rbx*2-0x23];
0xffffffff824d2b22: lodsd [rsi]; insd [rdi], dx; leave; iretd;
0xffffffff82316c50: lodsd [rsi]; leave; ret;
0xffffffff82395a1c: lodsd [rsi]; mov dl, al; add ah, bl; fwait; xchg esp, eax; iretd;
0xffffffff8236e440: lodsd [rsi]; pop rsp; and dh, cl; cmp [rbx], bl; ret 0x40da;
0xffffffff8200d870: lodsd [rsi]; pop rsp; call far fword ptr [rsi+rsi*4-0x153800fc];
0xffffffff835aa638: lodsd [rsi]; pop rsp; iretd;
0xffffffff8226e956: lodsd [rsi]; push 0x773b32c0; cmpsd [rsi], [rdi]; xchg esp, eax; iretd;
0xffffffff8232bc60: lodsd [rsi]; push rdx; movsd [rdi], [rsi]; leave; ret;
0xffffffff82382443: lodsd [rsi]; push rsi; add esp, edx; ret;
0xffffffff823abd6c: lodsd [rsi]; sahf; xchg esp, eax; ret 0xd1f2;
0xffffffff83473d16: lodsd [rsi]; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff823d7a5c: lodsd [rsi]; scasb [rdi]; xchg esi, esp; jmp rbp;
0xffffffff823bd13e: lodsd [rsi]; stosb [rdi]; xchg esp, eax; ret;
0xffffffff823bd13d: lodsw [rsi]; stosb [rdi]; xchg esp, eax; ret;
0xffffffff82668248: maxps xmm3, [rdi+rdi*8-0x11]; pop rsi; pop rsp; jmp far fword ptr [rdi+0x5e];
0xffffffff8265a53c: minps xmm2, [rdi+rdi*8-0x6ba461]; pop rdi; pop rax; xchg esp, eax; jmp far fword ptr [rdi+0x56];
0xffffffff8247e357: mov [0x1351dc3250daff82], eax; pop rbp; xchg esp, eax; test byte ptr [rsi], 0x84; xchg ebx, eax; iretd;
0xffffffff8245afdb: mov [0x1847e1be9049ed28], al; pop rsp; mov esp, 0xd6f6f6f5; iretd;
0xffffffff82463db6: mov [0x1edf371b21e75c33], al; leave; fidivr st, word ptr [rip+0x1ac84aba]; movsd [rdi], [rsi]; cmpsb [rsi], [rdi]; iretd;
0xffffffff81684931: mov [0x31000000c9830fd3], eax; rol byte ptr [rbp-0x7b], cl; dec dword ptr [rdi]; xchg esp, eax; ret 0x2941;
0xffffffff822636cd: mov [0x362edd7ab5e7d0c6], al; test al, 0x3c; leave; int1; and al, 0xf1; ret 0x7909;
0xffffffff8236f965: mov [0x38dc5d947e7935bf], eax; out 0xb9, al; leave; ret 0xd7dd;
0xffffffff82270925: mov [0x3b313171b00e9f4d], eax; ror dword ptr [rbx-0x2b68a02], cl; or ebx, esi; scasb [rdi]; xchg esp, eax; ret 0x9bcf;
0xffffffff81125d1c: mov [0x415b000000000001], al; pop rsp; pop r14; pop r15; ret;
0xffffffff81b8d2b9: mov [0x415bd88948000f5d], eax; pop rsp; pop r14; pop r15; ret;
0xffffffff8113fbca: mov [0x415be0894400b434], al; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff817ed629: mov [0x415be0894c004923], eax; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff83435531: mov [0x415be8d002240018], eax; pop rsp; pop r14; pop r15; ret;
0xffffffff8121e269: mov [0x415bf8894c0009bc], eax; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff82470ed8: mov [0x46d4dbcb02c0a1a8], al; or eax, 0x6d041220; nop; xchg esp, eax; pushfq; iretd;
0xffffffff822514f2: mov [0x47158850db0289c7], al; clc; sub [rdi+0x38], ch; pop rsp; call qword ptr [rcx-0x67f22c67];
0xffffffff81022b04: mov [0x480975f68545ffff], eax; add esp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8145ba3f: mov [0x54246480410e73ca], eax; fistp word ptr [rbx+0x41], st; pop rsp; pop r14; pop r15; ret;
0xffffffff8228d249: mov [0x5de21ace2f47ed89], eax; sbb ah, [rsi+rbx*4+0x23]; leave; shl byte ptr [rdx-0x1d], 0xe0; iretd;
0xffffffff825565e5: mov [0x5ecc7ba0751f097c], al; xchg esi, eax; xchg esp, eax; iretd;
0xffffffff8245afd0: mov [0x60b2dded8cbf4c3], eax; pop qword ptr [rcx]; mov [0x1847e1be9049ed28], al; pop rsp; mov esp, 0xd6f6f6f5; iretd;
0xffffffff822915f7: mov [0x684bf298ebcca0aa], eax; or edi, [rsi-0x50afe048]; or ah, [rcx+0x4b826ba8]; leave; in al, dx; iretd;
0xffffffff8250982a: mov [0x6c17e5ce059219ec], eax; or [rbp-0x3d1e5033], ch; fmul st, qword ptr [rdx+0x6143678c]; leave; cmp cl, [rdi-0x4c]; iretd;
0xffffffff823e2f5b: mov [0x75d063183f064dd8], eax; xchg esp, eax; ret;
0xffffffff817047ec: mov [0x8000571d17e88278], al; mov esp, [rsi+0x1000006]; pop rbx; ret;
0xffffffff8239ea46: mov [0x828e27f98eb6dfbc], al; xchg [rsi], esp; iretd;
0xffffffff81a6a98b: mov [0x8341128b444873e9], eax; cli; add [rdi], ecx; xchg esp, eax; ret;
0xffffffff815fe8e9: mov [0x893774c085fffff0], eax; vhaddps xmm4, xmm15, [rsp+rcx]; add [rdi], cl; xchg esp, eax; ret;
0xffffffff824435c1: mov [0x89e94b8df24f7112], al; leave; iretd;
0xffffffff824f598d: mov [0x8d6000d95523710e], al; xchg esp, eax; enter 0x4480, 0xae; leave; ret 0x5cac;
0xffffffff822e529a: mov [0x9b09a55c55382354], al; push rsp; std; xchg esp, eax; mov al, [0x9e5bb01895bb1816]; iretd;
0xffffffff8264ef3d: mov [0x9ddfffc99f2fffc9], eax; leave; jmp far fword ptr [rdi+0x2fffc99d];
0xffffffff8245eac8: mov [0x9f7ca2be8f653fd0], eax; sbb esp, edx; mov ecx, [rdi+0x2132500]; push rdi; mov ebp, 0x9a9a71e7; iretd;
0xffffffff8250a900: mov [0xa0e9f21433215223], al; pop rsp; mov ebp, 0xb4a5eeff; iretd;
0xffffffff8265a439: mov [0xa15fff94a17fff94], al; xchg esp, eax; call far fword ptr [rdi+0x7fff949f];
0xffffffff8265a435: mov [0xa17fff94a23fff94], eax; xchg esp, eax; call far fword ptr [rdi-0x5f];
0xffffffff82668139: mov [0xa19fff5ca1cfff5c], eax; pop rsp; call far fword ptr [rdi-0x5f];
0xffffffff82668135: mov [0xa1cfff5ca37fff5c], eax; pop rsp; call far fword ptr [rdi+0x5fff5ca1];
0xffffffff826565e2: mov [0xa28bdfffa28c3fff], al; dec edi; mov esp, [rdx-0x5d744001]; call far fword ptr [rdi+0x3fffa28b];
0xffffffff826562b2: mov [0xa35cbfffa35cffff], eax; dec dword ptr [rdi]; pop rsp; mov [0xa35b8fffa35bcfff], eax; call far fword ptr [rdi+0x5b];
0xffffffff82815864: mov [0xa4000000000002d8], al; pop rsp; jmp qword ptr [rbp+rdx*8+2];
0xffffffff826bf70b: mov [0xb17440a28b067403], al; out 5, al; mov esp, [rdx+0x765e840]; ret 0xa2fa;
0xffffffff82335399: mov [0xb626eee5b98fa0b1], al; imul ebp, [rcx-0x44], 0xfffffffc; pop rsp; test al, 0x59; fimul st, word ptr [rip+0x772d1dce]; ret;
0xffffffff82373b7d: mov [0xb76cd5de61b5efdf], eax; or eax, [rcx+0x1a]; xchg [rsi+0x3d], eax; xchg esp, eax; xchg esi, eax; ret 0x94bd;
0xffffffff835aa634: mov [0xbdfdcf5cadfdcf5c], eax; pop rsp; iretd;
0xffffffff822d25f5: mov [0xc387bbca23bdc767], eax; add [rdi], esp; pop rsp; ret;
0xffffffff826cf579: mov [0xca362dacde70c06], eax; mov esp, [rbx+0x73]; ret;
0xffffffff82316c41: mov [0xd17bd1aaa2048870], al; mov dh, [rcx-0x527586ed]; leave; ret;
0xffffffff8231297f: mov [0xd4766988cde0d199], al; leave; ret;
0xffffffff824d1787: mov [0xdecada2f0a819d5], al; xchg esp, eax; iretd;
0xffffffff823d5c68: mov [0xe53942e2837f9f82], al; leave; add [rax], ebx; mov r14d, [rbx]; push qword ptr [r9+0x3b]; iretd;
0xffffffff824e8796: mov [0xe7463337d4ec0b35], eax; mov esp, ebp; ret;
0xffffffff823d8072: mov [0xec4ec700ad79ca78], eax; pop rsi; leave; vmulps ymm1, ymm4, [rdi+0x45ec35f8]; ret 0xce4e;
0xffffffff818dd5b9: mov [0xf01ff83c0920f00], eax; xchg esp, eax; shl dword ptr [rax], 0xc1; movzx eax, cl; add eax, r8d; ret;
0xffffffff834f06ba: mov [edx+0x20], eax; add sp, 8; pop di; data16 ret;
0xffffffff82411bdc: mov [esi], ch; pop rsp; data16 ret;
0xffffffff834f06ae: mov [esp+6], gs; movzx ax, word ptr [esp+6]; mov [edx+0x20], eax; add sp, 8; pop di; data16 ret;
0xffffffff822ae78d: mov [r10], cs; pop rsp; iretq;
0xffffffff8103365d: mov [r14+0xde], bp; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff8103365e: mov [r14+0xde], ebp; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff816bc905: mov [r14+8], ecx; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff81a6b944: mov [r14], ax; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81a6b945: mov [r14], eax; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff82303aab: mov [r14], r8; fndisi; and ebx, [rsi-0x4c]; xchg esp, eax; and al, 0x17; ret 0x808f;
0xffffffff81b12575: mov [r8+rcx+0x10], ax; movzx eax, word ptr [rdi+0xb2]; mov [rdi+0x88], ax; mov word ptr [rdi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff81b12576: mov [r8+rcx+0x10], eax; movzx eax, word ptr [rdi+0xb2]; mov [rdi+0x88], ax; mov word ptr [rdi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff81b125fe: mov [r8+rdi+0x10], ax; movzx eax, word ptr [rsi+0xb2]; mov [rsi+0x88], ax; mov word ptr [rsi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff81b125ff: mov [r8+rdi+0x10], eax; movzx eax, word ptr [rsi+0xb2]; mov [rsi+0x88], ax; mov word ptr [rsi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff81b09f9b: mov [r8], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8182eac1: mov [rax+0x31000008], eax; rol byte ptr [rcx+0x10802f9], cl; add [rdi], cl; xchg esp, eax; ret 0x2a8;
0xffffffff816afd3d: mov [rax+0xeb], cl; mov rax, [rdi+0x438]; mov rax, [rax+0x58]; or dword ptr [rax+0x5c], 8; add rsp, 4; ret;
0xffffffff8166c706: mov [rax+8], ecx; add rsp, 8; pop rbp; ret;
0xffffffff8166c705: mov [rax+8], rcx; add rsp, 8; pop rbp; ret;
0xffffffff81561b63: mov [rax+rax*4], fs; add [rax], al; add [rbp+0x28], dh; add rsp, 0x88; ret;
0xffffffff8112e787: mov [rax+rax*4], fs; add [rax], al; add [rbp+8], dh; add rsp, 0x88; ret;
0xffffffff810ca372: mov [rax+rax*4], fs; add [rax], al; add [rbp+9], dh; add rsp, 0x88; pop rbx; ret;
0xffffffff81617354: mov [rax+rbx*4], fs; add [rax], al; add [rbp+5], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff812f8d9d: mov [rax+rbx*4], fs; add [rax], al; add [rbp+9], dh; add rsp, 0xa0; pop rbx; ret;
0xffffffff81546a4b: mov [rax+rbx*8], fs; add [rax], eax; add [rdi], cl; xchg esp, eax; ret 0x5089;
0xffffffff81546a63: mov [rax+rbx], fs; add al, [rax]; add [rdi], cl; xchg esp, eax; ret 0x5089;
0xffffffff8151e0f6: mov [rax+rcx*4], fs; add [rax], al; add [rbp+9], dh; add rsp, 0x90; pop rbx; ret;
0xffffffff814e27f4: mov [rax+rcx*8], fs; add [rax], al; add [rbp+5], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff81b12577: mov [rax+rcx+0x10], eax; movzx eax, word ptr [rdi+0xb2]; mov [rdi+0x88], ax; mov word ptr [rdi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff8184a0ea: mov [rax+rcx], fs; add [rax], eax; add [rbp+5], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff814226ab: mov [rax+rdi*4], fs; add [rax], al; add [rbp+9], dh; add rsp, 0xc0; pop rbx; ret;
0xffffffff81b12600: mov [rax+rdi+0x10], eax; movzx eax, word ptr [rsi+0xb2]; mov [rsi+0x88], ax; mov word ptr [rsi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff812f993e: mov [rax+rdx*4], fs; add [rax], al; add [rbp+9], dh; add rsp, 0x98; pop rbx; ret;
0xffffffff81515289: mov [rax+rsi], fs; add [rax], eax; add [rbp+8], dh; add rsp, 0x138; ret;
0xffffffff823ca93a: mov [rax-0x6b], ebx; pop rsp; xor [rbx+0x24d526cc], edx; push rcx; jmp qword ptr [rcx-0x51];
0xffffffff815e2443: mov [rax-0x7d000000], ah; leave; or cl, [rcx+0xa088]; add [rax-0xffee3b1], al; or byte ptr [rax+0x40], 8; ret;
0xffffffff819cd413: mov [rax], al; add [rax], al; add rsp, 0x18; ret;
0xffffffff819cd5b0: mov [rax], al; add [rax], al; add rsp, 0xc; ret;
0xffffffff819cf741: mov [rax], al; add [rax], al; mov eax, eax; add rsp, 4; ret;
0xffffffff81b12585: mov [rax], al; add [rax], al; mov word ptr [rdi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff81b1260e: mov [rax], al; add [rax], al; mov word ptr [rsi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff81986a4d: mov [rax], eax; add [rdi], cl; xchg esp, eax; ret 0x8948;
0xffffffff81b09f9c: mov [rax], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8166cc9b: mov [rax], ecx; mov rax, [rbp-0x38]; add rsp, 0x40; pop rbp; ret;
0xffffffff8166cc9a: mov [rax], rcx; mov rax, [rbp-0x38]; add rsp, 0x40; pop rbp; ret;
0xffffffff823a21ed: mov [rbp+0x11f00517], edi; sbb al, 0x1b; mov bl, 0x14; xchg esp, eax; ret;
0xffffffff8256b10b: mov [rbp+0x49], es; pushfq; or eax, 0xa0121b01; pop rsp; sub al, 0xa9; ret;
0xffffffff82697ee7: mov [rbp+0x62], esp; clc; imul esi, eax, 0x61; pop rsp; mov esp, 0x139f6cb8; call rbx;
0xffffffff8182b0db: mov [rbp-0x7b], eax; in al, 0xf; xchg esp, eax; ret;
0xffffffff8166cf21: mov [rbp-4], eax; mov eax, [rbp-4]; add rsp, 0x38; pop rbp; ret;
0xffffffff8166c7d2: mov [rbp-8], eax; mov rax, [rbp-8]; add rsp, 0x18; pop rbp; ret;
0xffffffff8166c7d1: mov [rbp-8], rax; mov rax, [rbp-8]; add rsp, 0x18; pop rbp; ret;
0xffffffff8151f86b: mov [rbx+0x2e8], eax; add rsp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff8151f86a: mov [rbx+0x2e8], rax; add rsp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff8159c1cf: mov [rbx+0x3a4], eax; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff82558e0a: mov [rbx+0x3da14cd5], gs; lea esp, [rdi]; mov [rdx+r11*2], ss; add esp, ebx; pop rcx; iretd;
0xffffffff8164d836: mov [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff8135d1d4: mov [rbx+0x41], ds; pop rsp; pop r14; pop r15; ret;
0xffffffff82494d91: mov [rbx+0x41], esi; leave; iretd;
0xffffffff8236a528: mov [rbx+0x4c], al; pop rsp; mov edx, 0xd157df3a; shl esi, 1; iretd;
0xffffffff81baff29: mov [rbx+0x74000cbb], bl; or [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8187c9c3: mov [rbx+0x80], ax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81b34da1: mov [rbx+0x80], ax; xor eax, eax; add rsp, 8; pop rbx; ret;
0xffffffff8199477d: mov [rbx+0x80], cx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81be0571: mov [rbx+0x80], cx; xor eax, eax; add rsp, 8; pop rbx; ret;
0xffffffff8187c9c4: mov [rbx+0x80], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81b34da2: mov [rbx+0x80], eax; xor eax, eax; add rsp, 8; pop rbx; ret;
0xffffffff8199477e: mov [rbx+0x80], ecx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81be0572: mov [rbx+0x80], ecx; xor eax, eax; add rsp, 8; pop rbx; ret;
0xffffffff81af0bda: mov [rbx+0x88], edx; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff822afb84: mov [rbx-0x60], ss; xchg esp, eax; ret 0x940a;
0xffffffff82360555: mov [rbx-9], cs; leave; mov al, [0x1d03e9b505651950]; call qword ptr [rdx+rdi];
0xffffffff823f311d: mov [rbx], al; leave; sub [rbx-0x38ccbd6a], dl; iretd;
0xffffffff81031ad1: mov [rcx+0x10010], ax; add rsp, 4; pop rbx; ret;
0xffffffff81031ad2: mov [rcx+0x10010], eax; add rsp, 4; pop rbx; ret;
0xffffffff810302b5: mov [rcx+0x3fe8], eax; xor ebx, ebx; mov eax, ebx; add rsp, 8; pop rbx; ret;
0xffffffff810302b4: mov [rcx+0x3fe8], rax; xor ebx, ebx; mov eax, ebx; add rsp, 8; pop rbx; ret;
0xffffffff824177cb: mov [rcx+0x4d], ebp; xchg esp, eax; outsb dx, [rsi]; ret 0x6a69;
0xffffffff8239f231: mov [rcx+0x4e], es; leave; jmp qword ptr [rax+rbx*8];
0xffffffff82236680: mov [rcx+rax*8], cs; pop rcx; test [rdx], edi; leave; pop rax; iretd;
0xffffffff81b68314: mov [rcx+rdi*8-1], cl; add rsp, 2; ret;
0xffffffff822f3243: mov [rcx-0x3355b8c8], bl; sbb [rsi-0x7d238cac], ah; movsxd eax, [rsi-0x6faa478b]; xchg esp, eax; ret 0x8abc;
0xffffffff816104ab: mov [rcx-0x7a], cl; add [rdi], cl; xchg esp, eax; ret;
0xffffffff823d7a5a: mov [rcx], cl; lodsd [rsi]; scasb [rdi]; xchg esi, esp; jmp rbp;
0xffffffff8228805a: mov [rcx], dl; sbb esp, edx; or [rdx+0x1ded883c], dh; iretd;
0xffffffff81713c7b: mov [rcx], eax; xor eax, eax; add rsp, 4; ret;
0xffffffff822fc482: mov [rdi+0x1a], gs; xchg esp, eax; ret 0x5bdb;
0xffffffff81a261ab: mov [rdi+0x28], eax; add rsp, 8; pop rbx; ret;
0xffffffff81a261aa: mov [rdi+0x28], rax; add rsp, 8; pop rbx; ret;
0xffffffff81a261a7: mov [rdi+0x30], eax; mov [rdi+0x28], rax; add rsp, 8; pop rbx; ret;
0xffffffff81a261a6: mov [rdi+0x30], rax; mov [rdi+0x28], rax; add rsp, 8; pop rbx; ret;
0xffffffff8183b7f9: mov [rdi+0x4c], eax; shr r8d, 8; and r8d, 1; mov eax, r8d; add rsp, 4; ret;
0xffffffff81a42762: mov [rdi+0x80], edx; xor eax, eax; add rsp, 0x18; pop rbx; ret;
0xffffffff81a42761: mov [rdi+0x80], r10d; xor eax, eax; add rsp, 0x18; pop rbx; ret;
0xffffffff81a42760: mov [rdi+0x80], r10w; xor eax, eax; add rsp, 0x18; pop rbx; ret;
0xffffffff81b12582: mov [rdi+0x88], ax; mov word ptr [rdi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff819cf73f: mov [rdi+0x88], eax; mov eax, eax; add rsp, 4; ret;
0xffffffff81b12583: mov [rdi+0x88], eax; mov word ptr [rdi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff819410a9: mov [rdi+0xa0], eax; xor eax, eax; add rsp, 4; ret;
0xffffffff81039b63: mov [rdi+0xa], dh; add rsp, 4; pop rbx; ret;
0xffffffff81039b62: mov [rdi+0xa], sil; add rsp, 4; pop rbx; ret;
0xffffffff8123e11e: mov [rdi+0xc], esi; mov [rdi+8], eax; add rsp, 0x10; ret;
0xffffffff8123e10c: mov [rdi+4], esi; mov [rdi], eax; add rsp, 0x10; ret;
0xffffffff8123e121: mov [rdi+8], eax; add rsp, 0x10; ret;
0xffffffff823f3da6: mov [rdi+rdi*4-0x21], es; cmp [rbx], dl; leave; sub esp, esp; iretd;
0xffffffff822b2bf2: mov [rdi+rdx*2-0x2663daab], fs; leave; neg eax; cli; int 0x30; ret;
0xffffffff82370f65: mov [rdi+rsi], eax; scasd [rdi]; leave; ret 0xb99f;
0xffffffff82343908: mov [rdi-0x13], edx; adc esp, [rdx]; pop rsp; iretd;
0xffffffff8344a304: mov [rdi-0x2a], al; std; add rsp, 8; pop rbx; ret;
0xffffffff83469300: mov [rdi-0x2c], ss; std; add rsp, 8; pop rbx; ret;
0xffffffff822c9fb6: mov [rdi-0x31ab9970], al; out 0x8c, al; leave; ret;
0xffffffff823e269b: mov [rdi], al; add eax, 0xc69d0f0b; sub esi, [rsi+0x706dc8d2]; xchg esp, eax; adc ecx, [rsi+0x3476cb15]; call qword ptr [rsi-0x69e2c4ed];
0xffffffff819cd39b: mov [rdi], ax; add rsp, 0x18; ret;
0xffffffff82493dc5: mov [rdi], ch; mov r11, 0x23ab1c6ba631ff42; pop rsp; ret 0xc22e;
0xffffffff812cc944: mov [rdi], cs; xchg esp, eax; ret;
0xffffffff822746a3: mov [rdi], dh; leave; iretd;
0xffffffff819cd54f: mov [rdi], dx; add rsp, 0xc; ret;
0xffffffff8123e10f: mov [rdi], eax; add rsp, 0x10; ret;
0xffffffff819cd39c: mov [rdi], eax; add rsp, 0x18; ret;
0xffffffff8123e11c: mov [rdi], eax; mov [rdi+0xc], esi; mov [rdi+8], eax; add rsp, 0x10; ret;
0xffffffff819cd550: mov [rdi], edx; add rsp, 0xc; ret;
0xffffffff82493dc4: mov [rdi], r13b; mov r11, 0x23ab1c6ba631ff42; pop rsp; ret 0xc22e;
0xffffffff8123e11b: mov [rdi], r8d; mov [rdi+0xc], esi; mov [rdi+8], eax; add rsp, 0x10; ret;
0xffffffff823f3a06: mov [rdx+0x10], ecx; mov cl, 0x5b; sub esp, esp; jmp qword ptr [rdi+0x26f0b8fe];
0xffffffff834f06bb: mov [rdx+0x20], eax; add sp, 8; pop di; data16 ret;
0xffffffff82384cd8: mov [rdx+0x436ab14d], cl; and cl, bh; xchg rsp, rax; ret 0x50d5;
0xffffffff8228a59a: mov [rdx+0x52], ebp; mov dh, [rbx-9]; xchg esp, eax; sub [rdi+0x316fdf05], al; ret 0xcb0b;
0xffffffff82558e12: mov [rdx+r11*2], ss; add esp, ebx; pop rcx; iretd;
0xffffffff8161ef52: mov [rdx+rax*4-0x18], ebx; xchg esi, eax; xchg esp, eax; int3; inc dword ptr [rbp+0x5b0274c0]; ret;
0xffffffff82558e13: mov [rdx+rbx*2], ss; add esp, ebx; pop rcx; iretd;
0xffffffff81c0565e: mov [rdx-0x14ffffff], eax; add dh, [rcx]; leave; mov [rsi], cx; ret;
0xffffffff826565e5: mov [rdx-0x5d742001], fs; dec edi; mov esp, [rdx-0x5d744001]; call far fword ptr [rdi+0x3fffa28b];
0xffffffff82316c40: mov [rdx-0x5dfb7790], esp; stosb [rdi]; sar dword ptr [rbx-0x2f], 1; mov dh, [rcx-0x527586ed]; leave; ret;
0xffffffff82462bf0: mov [rdx-0x62], ss; cmc; xchg esp, eax; add [rbx+rax*4-0x32], edi; and [rdi-0x45f2e787], esp; ret 0x275;
0xffffffff82462bef: mov [rdx-0x62], ss; cmc; xchg esp, eax; add [rbx+rax*4-0x32], edi; and [rdi-0x45f2e787], esp; ret 0x275;
0xffffffff82316c43: mov [rdx], al; stosb [rdi]; sar dword ptr [rbx-0x2f], 1; mov dh, [rcx-0x527586ed]; leave; ret;
0xffffffff826cf415: mov [rdx], cs; mov esp, [rbx+0x73]; ret;
0xffffffff822ae78e: mov [rdx], cs; pop rsp; iretq;
0xffffffff82248152: mov [rdx], ebx; xchg esi, eax; int1; enter 0x7e69, 0xb0; xchg esp, eax; ret 0x9b00;
0xffffffff810c0350: mov [rdx], ecx; xor eax, eax; add rsp, 4; ret;
0xffffffff812558d9: mov [rip+0x1d3cfd1], eax; xor eax, eax; add rsp, 8; ret;
0xffffffff812558d8: mov [rip+0x1d3cfd1], rax; xor eax, eax; add rsp, 8; ret;
0xffffffff810f081d: mov [rip+0x1d672a1], eax; add rsp, 4; ret;
0xffffffff810f0811: mov [rip+0x1d672a1], ecx; imul eax, 0xf4240; mov [rip+0x1d672a1], eax; add rsp, 4; ret;
0xffffffff81263957: mov [rip+0x23b61b3], eax; add rsp, 4; ret;
0xffffffff81263956: mov [rip+0x23b61b3], rax; add rsp, 4; ret;
0xffffffff81bdafb0: mov [rip+0x74000a0f], al; or [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff825474ca: mov [rip+0x75bba393], ecx; pop rsp; ret 0x69cb;
0xffffffff825474c9: mov [rip+0x75bba393], rcx; pop rsp; ret 0x69cb;
0xffffffff8244783b: mov [rsi+0x19], ss; xchg esp, eax; xchg edi, eax; ret;
0xffffffff81b1260b: mov [rsi+0x88], ax; mov word ptr [rsi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff819cd411: mov [rsi+0x88], eax; add rsp, 0x18; ret;
0xffffffff81b1260c: mov [rsi+0x88], eax; mov word ptr [rsi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff819cd5ae: mov [rsi+0x88], edx; add rsp, 0xc; ret;
0xffffffff8103365f: mov [rsi+0xde], ebp; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff816bc906: mov [rsi+8], ecx; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff8236ee29: mov [rsi+rdi*8], eax; xchg esp, eax; ret;
0xffffffff824466e8: mov [rsi-0x1919e5d1], bl; xchg esp, eax; pop rcx; or [rcx-0x20], ebx; sbb [rdi-0x421356a7], ecx; iretd;
0xffffffff83467c03: mov [rsi-0x2c], ebp; std; add rsp, 8; pop rbx; ret;
0xffffffff822ca05b: mov [rsi-0x38f59e83], edx; sbb esp, ebp; ret 0x6313;
0xffffffff823a7e26: mov [rsi], ah; sub eax, 0x12a2adbc; add esp, esp; fucomp st, st(7); mov dh, 0x5f; jmp qword ptr [rbx+0xe];
0xffffffff82005e78: mov [rsi], al; xor al, 0xff; xchg esp, eax; xor [rip-0x38df4201], al; jmp qword ptr [rsi+9];
0xffffffff822e6ecd: mov [rsi], bl; xchg esp, eax; fwait; ret;
0xffffffff82411bdd: mov [rsi], ch; pop rsp; data16 ret;
0xffffffff826cf406: mov [rsi], cs; mov esp, [rbx+0x73]; ret;
0xffffffff81a6b946: mov [rsi], eax; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff82303aac: mov [rsi], eax; fndisi; and ebx, [rsi-0x4c]; xchg esp, eax; and al, 0x17; ret 0x808f;
0xffffffff810c0428: mov [rsi], ecx; xor eax, eax; add rsp, 4; ret;
0xffffffff810333ca: mov [rsp+2], eax; mov word ptr [rsp], 0x7f; lgdt [rsp]; add rsp, 0x10; ret;
0xffffffff810333a6: mov [rsp+2], ecx; mov word ptr [rsp], 0x7f; lgdt [rsp]; add rsp, 0x10; ret;
0xffffffff810333c9: mov [rsp+2], rax; mov word ptr [rsp], 0x7f; lgdt [rsp]; add rsp, 0x10; ret;
0xffffffff810333a5: mov [rsp+2], rcx; mov word ptr [rsp], 0x7f; lgdt [rsp]; add rsp, 0x10; ret;
0xffffffff834f06af: mov [rsp+6], gs; movzx ax, word ptr [esp+6]; mov [edx+0x20], eax; add sp, 8; pop di; data16 ret;
0xffffffff816b71a5: mov [rsp], cl; add rsp, 1; ret;
0xffffffff816c2c78: mov [rsp], eax; tzcnt rcx, [rsp]; shl rdi, cl; mov rax, rdi; add rsp, 0x20; ret;
0xffffffff81c83080: mov [rsp], ebx; push qword ptr [rsp]; popfq; add rsp, 8; pop rbx; ret;
0xffffffff81992dc1: mov [rsp], ecx; add eax, [rsp]; adc eax, 0; add rsp, 4; ret;
0xffffffff81561387: mov [rsp], edi; mov eax, 0xffffffff; bsf eax, [rsp]; add eax, r8d; add rsp, 4; ret;
0xffffffff81c73054: mov [rsp], edx; add eax, [rsp]; adc eax, 0; add rsp, 0xc; ret;
0xffffffff816c2c77: mov [rsp], rax; tzcnt rcx, [rsp]; shl rdi, cl; mov rax, rdi; add rsp, 0x20; ret;
0xffffffff81c8307f: mov [rsp], rbx; push qword ptr [rsp]; popfq; add rsp, 8; pop rbx; ret;
0xffffffff8112804d: mov ah, 0; add rsp, 0x18; pop rbx; ret;
0xffffffff822fe8ba: mov ah, 0x16; adc esp, edi; ret;
0xffffffff8246cba0: mov ah, 0x1b; cli; movsd [rdi], [rsi]; leave; iretd;
0xffffffff823f09e3: mov ah, 0x27; sahf; xchg gs:[rbx+0x7896b3ab], cl; pop rsp; push rsi; iretd;
0xffffffff81565348: mov ah, 0x31; leave; mov rax, rcx; ret;
0xffffffff823d4979: mov ah, 0x31; pop rsp; iretd;
0xffffffff8249eee8: mov ah, 0x56; cmpsd [rsi], [rdi]; leave; xor [rcx+0x55729965], edi; jmp qword ptr [rdi+0x75];
0xffffffff826fa7ea: mov ah, 0x6c; test byte ptr [rsi], 0x8e; shl word ptr [rdx-0x63], cl; pop rsp; iretd;
0xffffffff825230a7: mov ah, 0x84; mov dh, 0x81; pop rsp; sar dword ptr [rcx-0x4f], cl; xchg ebp, eax; ret 0x92fc;
0xffffffff822ea65e: mov ah, 0x9c; pop rsp; cmp bh, dl; ret;
0xffffffff82474da6: mov ah, 0x9d; mov al, 0x2f; pop rsp; iretd;
0xffffffff824bf48e: mov ah, 0xa; sub dword ptr [rdi], 0xc9ee3a31; pop rsp; add eax, 0xf8261b62; cld; ret;
0xffffffff823eb7c1: mov ah, 0xcd; leave; iretd;
0xffffffff8200bd5c: mov ah, 0xd1; add al, 0xff; test r14b, 0xff; adc esp, 0xffffffb6; jmp far fword ptr [rax+0x3bff04d1];
0xffffffff834735d8: mov ah, 0xd3; std; add rsp, 8; pop rbx; ret;
0xffffffff834535fa: mov ah, 0xd5; std; add rsp, 8; pop rbx; ret;
0xffffffff825256b4: mov ah, 0xda; add sp, di; and eax, 0xcd32345; mov al, bh; ret 0x5d82;
0xffffffff82515e56: mov ah, 0xec; leave; cmp ebp, edx; adc [rdx-0x6c], bh; iretd;
0xffffffff822e18ba: mov ah, 0xec; leave; iretd;
0xffffffff8236c04b: mov ah, 3; cmpsb [rsi], [rdi]; xchg esp, eax; xchg ebx, eax; ret;
0xffffffff8229c35e: mov ah, 9; leave; ret;
0xffffffff8177428b: mov ah, [rdi]; push rax; add bl, ch; enter 0x9ae8, 0x30; xchg esp, eax; jmp qword ptr [rsi+0x2e];
0xffffffff834661ae: mov ah, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff8230f2c7: mov al, 0x10; pop rsp; ret 0x10a0;
0xffffffff822b5c31: mov al, 0x1e; sahf; pop rsp; ret;
0xffffffff82474da8: mov al, 0x2f; pop rsp; iretd;
0xffffffff82471bdb: mov al, 0x60; push rbx; xchg esp, eax; fstp qword ptr [rbp+0x7c], st; stosb [rdi]; ret 0xd81f;
0xffffffff834985dc: mov al, 0x64; sar ebp, 1; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff83475adc: mov al, 0x8f; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff819fb03c: mov al, 0x9f; add dword ptr [rbp+0x31], 0xe099e8c0; xchg esp, eax; dec dword ptr [rax-0x7b]; sar byte ptr [rax-0xc], 0xf; ret;
0xffffffff823101f7: mov al, 0x9f; xchg ebp, eax; mov ch, 0x21; add esp, eax; ret;
0xffffffff8251455e: mov al, 0xbc; pop rsp; iretd;
0xffffffff83473a37: mov al, 0xd3; std; add rsp, 8; pop rbx; ret;
0xffffffff822acd59: mov al, 0xd4; leave; sbb esp, 0xfffffff8; sub edi, [rsp+rdi*4]; ret;
0xffffffff83463a89: mov al, 0xd4; std; add rsp, 8; pop rbx; ret;
0xffffffff8227542d: mov al, 0xe3; pop rsp; adc eax, 0x31ea1b52; iretd;
0xffffffff834700dc: mov al, 0xe9; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82398f32: mov al, 0xf7; mov ch, 0x52; leave; xchg ebx, eax; iretd;
0xffffffff82008f60: mov al, 0xff; add al, 0xff; pop rsp; or bh, al; jmp qword ptr [rsi-0x5b009a31];
0xffffffff816b13e4: mov al, 0xff; add rsp, 0x10; ret;
0xffffffff816a0386: mov al, 0xff; add rsp, 8; ret;
0xffffffff826538de: mov al, 0xff; pop rdi; leave; mov al, 0xff; out dx, eax; ret;
0xffffffff81b2916b: mov al, 1; add rsp, 0x78; ret;
0xffffffff82007f70: mov al, [0x10ffc70fe6ff050f]; adc [rdx-1], esp; xchg esp, eax; syscall;
0xffffffff8355e000: mov al, [0x10ffffffff81a687]; mov esp, [rsi-0x7f]; jmp rax;
0xffffffff810767bf: mov al, [0x14ef1121c4000000]; sbb esp, eax; ret 0xdd71;
0xffffffff82278230: mov al, [0x176029b759ab0b54]; leave; sub dword ptr [rsi], 0xe563c0b9; or cl, ch; iretd;
0xffffffff823693c3: mov al, [0x2bf45ee4e668e8c5]; or ch, [rdi+0x382fbc74]; sub al, 0xc9; cmc; xchg esi, esp; iretd;
0xffffffff834634a7: mov al, [0x2de8c031458134dd]; pop rsp; out dx, al; std; xor eax, eax; ret;
0xffffffff824989aa: mov al, [0x2f58e88ef9e7c8d6]; fmul st, qword ptr [rcx-0x71]; mov bl, [rbx+rdx*4]; leave; cmpsb [rsi], [rdi]; ret 0xd614;
0xffffffff81108ecb: mov al, [0x415b087e00024c56]; pop rsp; pop r14; pop r15; ret;
0xffffffff81605752: mov al, [0x415bf88944000006]; pop rsp; pop r14; pop r15; ret;
0xffffffff8344c291: mov al, [0x415bffffff6ce9ff]; pop rsp; pop r14; pop r15; ret;
0xffffffff8349c6ac: mov al, [0x481275c085fe500c]; add esp, 8; pop rbx; ret;
0xffffffff82006d70: mov al, [0x4cffc71914ff0521]; or cl, [rdx-1]; xchg esp, eax; and [rip-0x38e6f201], eax; call qword ptr [rsp+rcx];
0xffffffff826b3f3a: mov al, [0x73f16d696c7164ff]; mov rsp, cr4; mov dl, 0x6f; call far fword ptr [rax];
0xffffffff81108ec8: mov al, [0x7e00024c56a03d83]; or [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff82235351: mov al, [0x9f348483133ff4cb]; pop rsp; iretd;
0xffffffff8266814d: mov al, [0x9fbfff5ca04fff5c]; pop rsp; jmp far fword ptr [rdi-0x7000a361];
0xffffffff82509b39: mov al, [0xa66837d306bb8ff8]; nop; cmpsd [rsi], [rdi]; push 0x31; xchg esp, eax; ret;
0xffffffff824b4d08: mov al, [0xaa3a980a1a1d987d]; cmp [rdx+0x152f41f2], r14; xchg esp, eax; ret;
0xffffffff822f77ef: mov al, [0xad3aa0057199877]; leave; or ah, ch; rcr byte ptr [rbx-0x614f0045], cl; xor eax, [rax-0x26]; iretd;
0xffffffff82006a70: mov al, [0xadffc71aa3ff0524]; add ecx, [rax-1]; xchg esp, eax; and al, 5; call far fword ptr [rdx+rbx+0x4dbffc7];
0xffffffff822de395: mov al, [0xb11db8234a881534]; mov eax, 0xebdc96bb; and ebx, [rax]; fdiv st, st(1); pop rsp; ret 0x7d0c;
0xffffffff8250173c: mov al, [0xb43894119bef6f83]; xchg esp, eax; cmp [rdi], edx; iretd;
0xffffffff82007370: mov al, [0xbcffc71615ff051b]; xchg esp, eax; push rcx; call qword ptr [rbx+rbx+0x160fff05];
0xffffffff824e7f84: mov al, [0xcf6525c883636f2e]; pop rdi; pop rsp; ret 0xbef2;
0xffffffff835646b0: mov al, [0xd0ffffffff81b9c9]; leave; mov ecx, 0xffffff81; push qword ptr [rax-0x35]; mov ecx, 0xffffff81; call qword ptr [rax-0x7e4630];
0xffffffff824d805b: mov al, [0xd18c70343d9a0b48]; pop rsp; and bh, al; ret;
0xffffffff83463400: mov al, [0xd4e8c031458134c6]; pop rsp; out dx, al; std; xor eax, eax; ret;
0xffffffff82245d2f: mov al, [0xd59c08cbe452a92b]; push 0xffffffffd5cc8e90; pushfq; imul ebp, [rdi-0x24], 0x50; pop rsp; iretd;
0xffffffff822b11c1: mov al, [0xd61ebc32e6fa6213]; xchg esp, eax; stosd [rdi]; cmc; ret;
0xffffffff823d496e: mov al, [0xdb7838e66672a1ae]; pop rdi; hlt; mov ah, 0x31; pop rsp; iretd;
0xffffffff8248ade1: mov al, [0xe84e7a5e4a2f97ca]; xor al, dh; leave; ret 0x9d1f;
0xffffffff8196f0a2: mov al, [0xf003f8041826179]; xchg esp, eax; ret;
0xffffffff82278f50: mov al, [0xf39cabf651738c38]; leave; xchg edi, eax; iretd;
0xffffffff82567381: mov al, [0xf4c7b580db44ab]; leave; ret;
0xffffffff816a88c2: mov al, [0xf7480f7401000001]; and dword ptr [rax], 0x20000001; add [rax], al; add [rcx+0xf], al; xchg esp, eax; ret 0x8944;
0xffffffff813cf998: mov al, [0xfc339d231000005]; xchg esp, eax; ret 0x8948;
0xffffffff8181dc95: mov al, [0xffff88366000000]; xchg esp, eax; ret;
0xffffffff8174c643: mov al, [rax-0x7d86bf50]; add rsp, 0x10; pop rbx; ret;
0xffffffff81b1258c: mov al, [rax]; add [rax], al; adc [rax], al; add rsp, 0xc; ret;
0xffffffff8227f539: mov al, [rdi]; or edi, esi; nop; xchg esp, eax; ret 0xfc21;
0xffffffff8231297a: mov al, [rdx+rdx+0x1f]; push rcx; mov [0xd4766988cde0d199], al; leave; ret;
0xffffffff816b71ad: mov al, [rsp]; xor eax, eax; add rsp, 1; ret;
0xffffffff8230710a: mov al, bh; imul ecx, [rcx+0x47], 0x9b3b3f95; mov eax, 0xae40b822; xor dl, ah; leave; iretd;
0xffffffff81145ae2: mov al, cl; add rsp, 0x18; ret;
0xffffffff8193148a: mov al, cl; mov rsp, rbp; pop rbp; ret;
0xffffffff818cc613: mov al, cl; neg eax; add rsp, 0x10; ret;
0xffffffff834f08e1: mov ax, [eax*4+0xf0]; add sp, 0x58; pop si; pop di; data16 ret;
0xffffffff834f08e2: mov ax, [rax*4+0xf0]; add sp, 0x58; pop si; pop di; data16 ret;
0xffffffff8116ce04: mov ax, bp; add rsp, 0x68; pop rbx; pop r14; pop rbp; ret;
0xffffffff823f9e8f: mov bh, 0x12; leave; jmp far fword ptr [rdx];
0xffffffff824dad3e: mov bh, 0x1a; sub ax, dx; int1; push rbp; leave; call qword ptr [rax];
0xffffffff8347c5d5: mov bh, 0x24; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff819de078: mov bh, 0x3d; mov dh, 0x87; leave; add [rax+1], ecx; iretd;
0xffffffff834f06b6: mov bh, 0x44; and al, 6; mov [edx+0x20], eax; add sp, 8; pop di; data16 ret;
0xffffffff81ae6f13: mov bh, 0x49; add al, 0x39; enter 0x277, 0x31; leave; sub eax, ecx; ret;
0xffffffff813282c2: mov bh, 0x4d; adc [rsi-0x7d], ah; stc; add cl, [rdi]; xchg esp, eax; ret 0x7c89;
0xffffffff8172f856: mov bh, 0x4e; or dh, [rcx]; rol byte ptr [rcx+0x5b13f9], cl; add [rdi], cl; xchg esp, eax; ret 0xca83;
0xffffffff81892e9b: mov bh, 0x4f; sub cl, [rcx+0x415b081c]; pop rsp; pop r14; pop r15; ret;
0xffffffff824fd290: mov bh, 0x5d; pop rbp; xchg esp, eax; cmp edi, [rbx-0x3f]; mov dh, 0x52; ret 0xbd4e;
0xffffffff8252684b: mov bh, 0x61; xchg esp, eax; sbb al, 0x40; cmp al, 0x1b; ret;
0xffffffff82384508: mov bh, 0x71; leave; mov bh, 3; ret;
0xffffffff823abcdf: mov bh, 0x71; leave; ret;
0xffffffff824a6c78: mov bh, 0x73; leave; add dl, [rcx+0x4c16123]; ret 0x27ea;
0xffffffff82493dc1: mov bh, 0x77; mov gs:[rdi], r13b; mov r11, 0x23ab1c6ba631ff42; pop rsp; ret 0xc22e;
0xffffffff8181dc93: mov bh, 0x81; mov al, [0xffff88366000000]; xchg esp, eax; ret;
0xffffffff824bee2f: mov bh, 0x86; push rsi; xchg esp, eax; in al, dx; sbb [rbp-0x30a12b6], dl; iretd;
0xffffffff8256e210: mov bh, 0x87; pop rsp; mov esp, 0x83a354d3; mov [rax+0x37], ebp; ret;
0xffffffff816ad982: mov bh, 0xa0; add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x8948;
0xffffffff824e09c6: mov bh, 0xad; adc [rsi], ch; pop rsp; xor dword ptr [rbx-0x6e54f028], 0x898ee960; pop rdx; ret 0xd80b;
0xffffffff8241810b: mov bh, 0xb6; sub eax, 0xdd88b9ef; pop rsp; stosd [rdi]; ret;
0xffffffff8244bc54: mov bh, 0xc; sub al, 0xf5; outsd dx, [rsi]; xchg ebx, esp; jmp far fword ptr [rbp-0x6613a3f];
0xffffffff83493293: mov bh, 0xd1; std; add rsp, 8; pop rbx; ret;
0xffffffff83473363: mov bh, 0xd3; std; add rsp, 8; pop rbx; ret;
0xffffffff834532d7: mov bh, 0xd5; std; add rsp, 8; pop rbx; ret;
0xffffffff822ee716: mov bh, 0xe4; pop rsp; ret;
0xffffffff8349f5d5: mov bh, 0xf4; sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff8115903e: mov bh, 0xf8; add al, [rax]; add al, ch; mov eax, 0x4800ea80; add esp, 8; ret;
0xffffffff8200bfb2: mov bh, 0xff; pop rsp; iretd;
0xffffffff825593e1: mov bh, 8; push 0x7e; leave; iretd;
0xffffffff823b7a1c: mov bh, 9; xchg esp, eax; movsd [rdi], [rsi]; in al, 0x8d; xor ebp, [rdx]; ret 0xe319;
0xffffffff822d5a2f: mov bh, [rdx-0x68]; xchg esp, eax; imul ebx, esi, 0x5a5ab7f0; iretd;
0xffffffff8236d3e6: mov bh, ch; mov esp, ecx; ror byte ptr [rbp+rdx*8+0xa3c7214], 1; adc ebp, 0x63; ret;
0xffffffff8255a436: mov bl, 0; pop rbx; xchg esp, eax; ret;
0xffffffff823a21f5: mov bl, 0x14; xchg esp, eax; ret;
0xffffffff8249a82e: mov bl, 0x42; xor [rcx], eax; pop rsp; ret 0xb686;
0xffffffff82359c2c: mov bl, 0x5a; fstp qword ptr [rdx+0x30], st; pop rsp; ret 0x941c;
0xffffffff81263959: mov bl, 0x61; cmp eax, [rdx]; add rsp, 4; ret;
0xffffffff822dfca9: mov bl, 0x69; pop rsp; ret 0xfd2a;
0xffffffff8250a8fe: mov bl, 0x6b; mov [0xa0e9f21433215223], al; pop rsp; mov ebp, 0xb4a5eeff; iretd;
0xffffffff826885e6: mov bl, 0x77; cmc; mov esi, 0x7561540b; leave; jmp far fword ptr [rbp-0x19];
0xffffffff826885e7: mov bl, 0x77; cmc; mov esi, 0x7561540b; leave; jmp far fword ptr [rbp-0x19];
0xffffffff823d7381: mov bl, 0x82; xchg esp, eax; lea eax, [rdi-0x11]; adc byte ptr [rax], 0xe7; iretd;
0xffffffff823ca737: mov bl, 0x8e; leave; insd [rdi], dx; iretd;
0xffffffff8225828b: mov bl, 0x90; add r14d, r14d; push rbp; scasd [rdi]; xchg esp, eax; ret 0xedae;
0xffffffff8241bbf9: mov bl, 0x94; pop rsp; adc al, 0x32; iretd;
0xffffffff81470b69: mov bl, 0xb; leave; jmp qword ptr [rbp+0x48];
0xffffffff8222b3d0: mov bl, 0xbb; and al, 0xcc; sbb al, 0x95; getsec; pop rsp; ret 0xf322;
0xffffffff82372c34: mov bl, 0xcf; nop; adc ch, [rbx+0x34]; mov esp, esi; neg dword ptr [rsp+rax+0x2a27bc6a]; ret 0x8126;
0xffffffff8348376e: mov bl, 0xd2; std; add rsp, 8; ret;
0xffffffff834736cb: mov bl, 0xd3; std; add rsp, 8; pop rbx; ret;
0xffffffff834536f3: mov bl, 0xd5; std; add rsp, 8; pop rbx; ret;
0xffffffff82682e7a: mov bl, 0xdd; xchg esp, eax; out 0x74, eax; iretd;
0xffffffff8246b107: mov bl, 0xe9; sub [rcx], eax; leave; ret 0x26ca;
0xffffffff823ca5b1: mov bl, 0xf0; adc ah, [rax-0x72]; in al, 0xa9; pop rsp; ret;
0xffffffff81ba723e: mov bl, 0xff; add rsp, 8; ret;
0xffffffff82232963: mov bl, 6; shr dword ptr [rsi+rax*8+0x42f3ec93], cl; xchg [rbx+rax*4], esp; or al, 0x1a; iretd;
0xffffffff825333c9: mov bl, 8; mov bl, [rcx+0x35a48a30]; sub esp, esi; ret 0x8c4f;
0xffffffff823c71e0: mov bl, [rbp-0x53a4309f]; xchg esp, eax; popfq; ret;
0xffffffff824989b6: mov bl, [rbx+rdx*4]; leave; cmpsb [rsi], [rdi]; ret 0xd614;
0xffffffff825333cb: mov bl, [rcx+0x35a48a30]; sub esp, esi; ret 0x8c4f;
0xffffffff8242d51f: mov bl, [rcx]; pop rsp; sbb eax, 0xac1f98; add [rsi], ch; iretd;
0xffffffff81121b22: mov bl, [rdx+0x415b0007]; pop rsp; pop r14; pop r15; ret;
0xffffffff8254625e: mov bl, al; pop rsp; pop rsp; ret 0xa99a;
0xffffffff83476239: mov bl, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff81466a0d: mov byte ptr [r9+0x5bd88900], 0x41; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81466a0e: mov byte ptr [rcx+0x5bd88900], 0x41; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81039b5f: mov byte ptr [rcx], 0xce; mov [rdi+0xa], sil; add rsp, 4; pop rbx; ret;
0xffffffff81186281: mov byte ptr [rcx], 0xf; xchg esp, eax; add eax, 0x2490252; mov eax, 1; ret;
0xffffffff81281ef7: mov byte ptr [rcx], 0xf; xchg esp, eax; ret 0xca20;
0xffffffff81519617: mov byte ptr [rcx], 0xf; xchg esp, eax; ret;
0xffffffff834a6416: mov byte ptr [rip+0x175f6b], 1; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8242021c: mov byte ptr [rsi-0xa1604aa], 0xe2; pop rsp; iretd;
0xffffffff81641152: mov ch, 0; add [rax], al; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff823f56a2: mov ch, 0x1a; leave; ret;
0xffffffff82332b32: mov ch, 0x1d; pop rsp; adc eax, [rbx-0x31]; adc eax, 0x50ad6907; iretd;
0xffffffff825255a7: mov ch, 0x1f; mov esp, [rsi]; lodsd [rsi]; or esp, [rdx-0x5e]; stosd [rdi]; ret;
0xffffffff822c9067: mov ch, 0x21; adc [rsi], ch; or r12d, r14d; pop rsp; imul edx, [rsi-0x7d], 0xffffffd1; ret;
0xffffffff823101fa: mov ch, 0x21; add esp, eax; ret;
0xffffffff825635fd: mov ch, 0x23; cli; cli; pop rbp; pop rsp; jmp rsp;
0xffffffff81190c27: mov ch, 0x34; add [rax], al; add rsp, 8; ret;
0xffffffff82398f34: mov ch, 0x52; leave; xchg ebx, eax; iretd;
0xffffffff8256c13f: mov ch, 0x54; leave; mov ebx, 0x81600f5; mov dh, 0xd4; ret;
0xffffffff83477ad7: mov ch, 0x6f; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8228457a: mov ch, 0x75; mov dl, 0xc1; mov eax, [rbx+0x65]; xchg esp, eax; or edi, edi; ret 0x62cb;
0xffffffff8244af88: mov ch, 0x83; pop rsp; test eax, 0x4de413a6; pop rsp; ret;
0xffffffff825480f0: mov ch, 0x96; cli; mov esp, [rdi+rbp+0xf575933]; mov esi, 0xcdd355e2; call qword ptr [rcx+rcx*8+0x50];
0xffffffff834735d7: mov ch, 0xb4; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff822c481e: mov ch, 0xbe; in eax, 0xd8; push 0xffffffffffffffc6; pop rsp; ret;
0xffffffff8249ef89: mov ch, 0xc6; leave; ret;
0xffffffff8230c3a2: mov ch, 0xca; pop rsp; xor [rbx+rbx], dl; ret;
0xffffffff834934a7: mov ch, 0xd1; std; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff82522b0d: mov ch, 0xd2; cmp dword ptr [rbx+0x1e], 0xe968b80e; ficom st, word ptr [rbx-0x60815d0a]; leave; mov [rbx-0x14], esi; ret;
0xffffffff83473514: mov ch, 0xd3; std; add rsp, 8; pop rbx; ret;
0xffffffff8345350a: mov ch, 0xd5; std; add rsp, 8; pop rbx; ret;
0xffffffff829026ac: mov ch, 0xee; add al, 0; pop rsp; add [rax], al; ret;
0xffffffff823d3810: mov ch, 6; mov esp, eax; ret 0x8b71;
0xffffffff8240a4e2: mov ch, [rax]; insd [rdi], dx; sub esp, edx; and eax, 0xfa8f1ddc; enter 0x744b, 0xa9; ret 0x4af8;
0xffffffff8250e977: mov ch, [rcx]; xchg esp, eax; sub esp, [rdx+0x72]; mov bh, 0x1c; inc byte ptr [rdx-0x6bc2b8f9]; ret;
0xffffffff82418110: mov ch, bl; pop rsp; stosd [rdi]; ret;
0xffffffff834561b5: mov ch, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff834561e1: mov ch, dl; std; add rsp, 8; ret;
0xffffffff81bb1042: mov cl, 0; add [rax], al; add rsp, 0x18; ret;
0xffffffff8296d851: mov cl, 0; add [rcx+rbp*4+0xb], al; add [rsi+0x42000000], ah; leave; or eax, [rax]; ret;
0xffffffff82533850: mov cl, 0x1d; xchg esp, eax; or edi, [rax+0x55]; and dword ptr [rsi-0x60], 0x95627173; iretd;
0xffffffff824b0e80: mov cl, 0x2b; xchg esp, eax; pop rsi; xchg edx, eax; in eax, 0x2e; call rsp;
0xffffffff822edaff: mov cl, 0x3d; fisubr st, dword ptr [rsi+0x5d91d12e]; mov eax, 0xf03754ea; xchg esp, eax; iretd;
0xffffffff817a7f14: mov cl, 0x4d; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81699fba: mov cl, 0x57; or [rdi], cl; xchg esp, eax; ret 0x474;
0xffffffff823f3a09: mov cl, 0x5b; sub esp, esp; jmp qword ptr [rdi+0x26f0b8fe];
0xffffffff82433aba: mov cl, 0x60; mov esp, ss; ret;
0xffffffff82384cdb: mov cl, 0x6a; and r9b, dil; xchg rsp, rax; ret 0x50d5;
0xffffffff81977cb5: mov cl, 0x7b; inc dword ptr [rax+rax*8+0x415b0874]; pop rsp; pop r14; pop r15; ret;
0xffffffff81621a63: mov cl, 0x7d; add [rdi], cl; xchg esp, eax; ret;
0xffffffff8235bcc2: mov cl, 0x82; and eax, 0x297db19f; pop rsp; iretd;
0xffffffff82562434: mov cl, 0x99; sub esp, edi; iretd;
0xffffffff8224f0c5: mov cl, 0xa4; sbb esp, ebp; fxch st, st(5); iretd;
0xffffffff8133431b: mov cl, 0xb6; xchg esp, eax; add [rcx+0x5e415be8], cl; pop r15; pop rbp; ret;
0xffffffff822de39d: mov cl, 0xb8; mov ebx, 0x23ebdc96; sbb al, bl; int1; pop rsp; ret 0x7d0c;
0xffffffff82544c03: mov cl, 0xb8; xchg esp, eax; ret;
0xffffffff824d5324: mov cl, 0xba; pop rsp; int 0x45; iretd;
0xffffffff83483894: mov cl, 0xd2; std; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff83453986: mov cl, 0xd5; std; add rsp, 8; pop rbx; ret;
0xffffffff827040ee: mov cl, 0xe6; adc [rcx+0x75], dh; leave; jmp qword ptr [rdx-8];
0xffffffff8252b182: mov cl, 0xeb; outsb dx, [rsi]; movsd [rdi], [rsi]; xor ecx, [rsi+0x1a5318e8]; xchg esp, eax; jmp qword ptr [rbx-0xf266927];
0xffffffff82245eaf: mov cl, 0xf; sub esi, ebp; xchg [rdi], esp; iretd;
0xffffffff82406703: mov cl, 0xfe; xchg esp, eax; and al, 0xb6; iretd;
0xffffffff816a3435: mov cl, 0xff; add rsp, 0x10; ret;
0xffffffff8115045e: mov cl, 4; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8247c04c: mov cl, 4; leave; push qword ptr [rip+0xe4eb678]; jmp qword ptr [rsi-0x46];
0xffffffff82384cd9: mov cl, [rbp-0x4f]; push 0x43; and cl, bh; xchg rsp, rax; ret 0x50d5;
0xffffffff82305266: mov cl, [rdi+0x31]; xor [rax-0x38], dh; pop rsp; iretd;
0xffffffff82246d93: mov cl, bl; out dx, eax; xchg esp, eax; ret 0x9395;
0xffffffff810b057f: mov cr0, rsi; mov rsp, [rsp]; pop rbp; ret;
0xffffffff81e0015a: mov cr3, rdi; pop rax; pop rdi; pop rsp; swapgs; sysretq;
0xffffffff818a897c: mov dh, 0; add [rax], al; add rsp, 0x10; pop rbx; ret;
0xffffffff8133cf0b: mov dh, 0; add [rax], al; add rsp, 0x40; pop rbx; pop rbp; ret;
0xffffffff8222c55e: mov dh, 0x2a; leave; fnstcw [rdx-0x25]; cwde; sbb al, 0x21; ret 0x8f09;
0xffffffff824d1ecc: mov dh, 0x37; pop rsp; ficom st, dword ptr [rax+0x730c97fe]; jmp qword ptr [rbx+0x58c4d3f6];
0xffffffff82280255: mov dh, 0x38; shr byte ptr [rax+0x27cbf409], cl; xchg esp, eax; iretd;
0xffffffff81c72c99: mov dh, 0x48; mov ebx, [rsp]; mov r12, [rsp+8]; add rsp, 0x10; ret;
0xffffffff823fb759: mov dh, 0x5c; cmpsd [rsi], [rdi]; cwde; pop rsp; mov ebp, 0x405a239; ret;
0xffffffff81421176: mov dh, 0x61; leave; jmp qword ptr [rsi+0xf];
0xffffffff834881d6: mov dh, 0x68; sar ch, cl; add rsp, 8; pop rbx; ret;
0xffffffff8231f6e7: mov dh, 0x6a; xchg edx, eax; movsb [rdi], [rsi]; pop rsp; mov ah, 0x22; ret 0x9a7c;
0xffffffff82494987: mov dh, 0x6c; leave; add dl, [rdx-0x2f]; test [rdi-0x11654e3b], ah; mov ebx, 0x693fb3b3; ret 0xb12d;
0xffffffff82494988: mov dh, 0x6c; leave; add dl, [rdx-0x2f]; test [rdi-0x11654e3b], ah; mov ebx, 0x693fb3b3; ret 0xb12d;
0xffffffff825230a9: mov dh, 0x81; pop rsp; sar dword ptr [rcx-0x4f], cl; xchg ebp, eax; ret 0x92fc;
0xffffffff82251f8a: mov dh, 0x82; leave; push rbp; insb [rdi], dx; in al, dx; iretd;
0xffffffff819de07a: mov dh, 0x87; leave; add [rax+1], ecx; iretd;
0xffffffff81553f42: mov dh, 0x8f; xchg esp, eax; add [rax], al; add [rax-0x77], cl; ret 0xd348;
0xffffffff823c1791: mov dh, 0x93; cmp bl, [rdi+0x7edb1203]; pop rsp; ret;
0xffffffff822f8681: mov dh, 0x99; xchg ebx, eax; or eax, 0x96774c70; xchg esp, eax; cmp dword ptr [rip+0x5422469b], 4; ret;
0xffffffff823b314f: mov dh, 0x9f; xchg esp, eax; iretd;
0xffffffff81a40546: mov dh, 0xb; pop rsp; add bl, al; xor eax, eax; ret;
0xffffffff834300fb: mov dh, 0xc0; add rsp, 0x10; pop rbx; ret;
0xffffffff8197e349: mov dh, 0xc0; add rsp, 0x10; ret;
0xffffffff81562a04: mov dh, 0xc0; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff817d50b9: mov dh, 0xc1; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff822b2eae: mov dh, 0xc8; pop rsp; ret;
0xffffffff81142d93: mov dh, 0xc9; add eax, ecx; add rsp, 0x48; ret;
0xffffffff834933b8: mov dh, 0xd1; std; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff816c2e31: mov dh, 0xd2; shl rdx, 0x20; or rdx, rcx; or rax, rdx; add rsp, 4; ret;
0xffffffff834733ef: mov dh, 0xd3; std; add rsp, 8; pop rbx; ret;
0xffffffff834533e8: mov dh, 0xd5; std; add rsp, 8; pop rbx; ret;
0xffffffff82270012: mov dh, 0xd8; xchg esp, eax; iretd;
0xffffffff817f7100: mov dh, 0xff; add rsp, 0x10; ret;
0xffffffff8200bd5a: mov dh, 0xff; mov ah, 0xd1; add al, 0xff; test r14b, 0xff; adc esp, 0xffffffb6; jmp far fword ptr [rax+0x3bff04d1];
0xffffffff822dd1a4: mov dh, 4; movsxd ebp, eax; leave; cmp eax, 0x852bff76; ret 0xa800;
0xffffffff8228a59d: mov dh, [rbx-9]; xchg esp, eax; sub [rdi+0x316fdf05], al; ret 0xcb0b;
0xffffffff823446c8: mov dh, [rcx+0x4c]; cmpsb [rsi], [rdi]; leave; mov dl, 0xa3; iretd;
0xffffffff82316c4b: mov dh, [rcx-0x527586ed]; leave; ret;
0xffffffff82316c4a: mov dh, [rcx-0x527586ed]; leave; ret;
0xffffffff823b3147: mov dh, [rsi+0x1aa64b8d]; in eax, 0x73; mov dh, 0x9f; xchg esp, eax; iretd;
0xffffffff825505af: mov dh, ah; pop rdx; out dx, eax; xchg esp, eax; fcomi st, st(0); ret;
0xffffffff834468c3: mov dl, 0; add [rax], al; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff818eeeb5: mov dl, 0; add [rax], al; add rsp, 0x10; pop rbx; ret;
0xffffffff81b1257e: mov dl, 0; add [rax], al; mov [rdi+0x88], ax; mov word ptr [rdi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff81b12607: mov dl, 0; add [rax], al; mov [rsi+0x88], ax; mov word ptr [rsi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff8251f4a9: mov dl, 0x20; mov esp, [rcx+0x149064dc]; pop rsp; adc esi, [rsi+0x36cf4934]; lodsd [rsi]; ret 0xf7da;
0xffffffff8348c3da: mov dl, 0x26; sar ch, cl; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff81a32d31: mov dl, 0x31; leave; mov rax, rcx; ret;
0xffffffff82510d5e: mov dl, 0x54; sub [rbx-0x3d57ddd4], eax; pop rsp; fadd st, st(1); sub [rdi+5], eax; jmp qword ptr [rsi-0x7b];
0xffffffff8255af47: mov dl, 0x60; add [rax-0x9a70c36], ebp; pop rsp; ret;
0xffffffff810a0ea9: mov dl, 0x67; add esp, eax; ret 0x61;
0xffffffff82282631: mov dl, 0x70; int1; leave; sbb al, 0xee; ret;
0xffffffff822e4372: mov dl, 0x80; pop rsi; pop rax; adc edi, [rcx]; leave; iretd;
0xffffffff823b2599: mov dl, 0x82; insd [rdi], dx; cmc; add eax, 0x96f19f0e; xchg esp, eax; ret 0x2449;
0xffffffff812f7e55: mov dl, 0x98; add [rbx+rbx*8+0x415b0874], al; pop rsp; pop r14; pop r15; ret;
0xffffffff824f598b: mov dl, 0xa2; mov [0x8d6000d95523710e], al; xchg esp, eax; enter 0x4480, 0xae; leave; ret 0x5cac;
0xffffffff822baf45: mov dl, 0xab; and eax, 0xce259b97; fcomp st, st(3); leave; iretd;
0xffffffff8162b6e8: mov dl, 0xb0; add al, [rax]; add [rdi], cl; xchg esp, eax; ret;
0xffffffff8228457c: mov dl, 0xc1; mov eax, [rbx+0x65]; xchg esp, eax; or edi, edi; ret 0x62cb;
0xffffffff82289d5b: mov dl, 0xc2; sbb edi, edi; leave; xor cl, [rax+rax*4]; mov ebx, 0xc5116742; iretd;
0xffffffff834837cc: mov dl, 0xd2; std; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff834737ed: mov dl, 0xd3; std; add rsp, 8; pop rbx; ret;
0xffffffff8345384a: mov dl, 0xd5; std; add rsp, 8; pop rbx; ret;
0xffffffff834708da: mov dl, 0xe1; sar ebp, cl; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff82370dba: mov dl, 0xe9; xchg esp, eax; iretd;
0xffffffff82385e77: mov dl, 0xec; leave; movsxd eax, [rbx-0x64]; fsubr st, qword ptr [rbx+0xa]; ret 0x24a8;
0xffffffff81ae857a: mov dl, 0xed; pop rsp; jmp qword ptr [rsi-0x70];
0xffffffff8255af40: mov dl, 0xfb; sub eax, eax; push 0x60b20b91; add [rax-0x9a70c36], ebp; pop rsp; ret;
0xffffffff81bb1bff: mov dl, 0xff; add rsp, 8; ret;
0xffffffff8265343a: mov dl, 0xff; out dx, eax; xchg esp, eax; mov dl, 0xff; fist word ptr [rdx+rsi*4-0x4d6b3001], st; jmp far fword ptr [rdi];
0xffffffff8252f159: mov dl, [rbx-0x1ae4b0c3]; leave; iretd;
0xffffffff8252a825: mov dl, [rsp+rdx+0xb]; pop rsp; ret;
0xffffffff83466064: mov dl, ah; std; add rsp, 8; pop rbx; ret;
0xffffffff82395a1d: mov dl, al; add ah, bl; fwait; xchg esp, eax; iretd;
0xffffffff82470403: mov dl, al; leave; ret 0xd564;
0xffffffff82ac6a0c: mov dl, al; sbb al, [rax]; add [rax], al; add [rax], al; xchg esp, eax; ret 0x1a;
0xffffffff83475ff8: mov dl, bl; std; add rsp, 8; pop rbx; ret;
0xffffffff83456025: mov dl, ch; std; add rsp, 8; pop rbx; ret;
0xffffffff822e7f9d: mov ds, [rax-0x250a6532]; leave; ret 0xad63;
0xffffffff8345de24: mov ds, [rbx+0x41]; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff822cedba: mov ds, [rbx+0x76]; cmp dl, [rsi]; leave; ret 0x6970;
0xffffffff823ee237: mov ds, [rbx-0x11ef8aae]; cmp ah, [rip-0x309d2d11]; xor [rbx], ch; xchg sp, ax; iretd;
0xffffffff811e469c: mov dword ptr [rax+0x18], 0xb7; sub rax, rsi; add rax, 0x20; shr rax, 3; add rsp, 4; ret;
0xffffffff811e506c: mov dword ptr [rax+0x28], 0xb7; sub rax, rsi; add rax, 0x30; shr rax, 3; add rsp, 4; ret;
0xffffffff81042bb0: mov dword ptr [rax+0x4882f91b], 0xa498c6c7; pop rsp; sub eax, 0xffffff8f; pop rbp; ret 0x8500;
0xffffffff8160dfb7: mov dword ptr [rax+0x56], 0xffe982f0; sbb esp, edx; jmp qword ptr [rsi+0x66];
0xffffffff8133426f: mov dword ptr [rax-0x5a], 0x57e882e0; in eax, dx; xchg esp, eax; add [rax+0x63], cl; ret;
0xffffffff813389bb: mov dword ptr [rax-0x5a], 0x9be882e0; cmpsb [rsi], [rdi]; xchg esp, eax; add [rax-0x39], cl; mov eax, 0xe882e0a6; jmp qword ptr [rbp-0x76bbff6c];
0xffffffff8133935f: mov dword ptr [rax-0x5a], 0xf7e882e0; pushfq; xchg esp, eax; add [rax-0x7d], cl; ret;
0xffffffff8166cd2b: mov dword ptr [rbp-4], 0; mov eax, [rbp-4]; add rsp, 0x28; pop rbp; ret;
0xffffffff8166c625: mov dword ptr [rbp-4], 0; mov eax, [rbp-4]; add rsp, 0x30; pop rbp; ret;
0xffffffff818f1bc1: mov dword ptr [rbx+0x30], 0; add rsp, 0x10; pop rbx; ret;
0xffffffff818f1bb9: mov dword ptr [rbx+0x38], 0; mov qword ptr [rbx+0x30], 0; add rsp, 0x10; pop rbx; ret;
0xffffffff81b1c0ce: mov dword ptr [rbx+0x38], 0xc0310001; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81bdefaf: mov dword ptr [rbx+0x38], 0xc0310001; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff818f1bb1: mov dword ptr [rbx+0x40], 0; mov qword ptr [rbx+0x38], 0; mov qword ptr [rbx+0x30], 0; add rsp, 0x10; pop rbx; ret;
0xffffffff81b5bdac: mov dword ptr [rbx+0xb0], 0x415b0008; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81bdc897: mov dword ptr [rbx+0xb0], 0x415bdd86; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81c73050: mov dword ptr [rcx], 0x14892c75; and al, 3; add al, 0x24; adc eax, 0; add rsp, 0xc; ret;
0xffffffff8343f52a: mov dword ptr [rcx], 0xc0310000; add rsp, 0x60; pop rbx; pop r14; pop r15; ret;
0xffffffff8123e0dd: mov dword ptr [rdi], 0; add rsp, 0x10; ret;
0xffffffff8344d398: mov dword ptr [rip+0x1c4dae], 0; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8110a725: mov dword ptr [rsi+0x10], 0; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8256e209: mov dword ptr [rsi+0x17], 0xafbe7cf0; mov bh, 0x87; pop rsp; mov esp, 0x83a354d3; mov [rax+0x37], ebp; ret;
0xffffffff81941091: mov dword ptr [rsi+0x48], 0x827c1fb7; mov eax, 0xffffffea; add rsp, 4; ret;
0xffffffff810333ab: mov dword ptr [rsp], 0x10f007f; adc al, 0x24; add rsp, 0x10; ret;
0xffffffff81240efc: mov eax, 0x10; add rsp, 4; ret;
0xffffffff8232c1dc: mov eax, 0x14640aa9; leave; and ecx, esp; call qword ptr [rcx];
0xffffffff8112d509: mov eax, 0x1a280; add [rdi], cl; xchg esp, eax; ror dword ptr [rcx+0x1a28088], 0; ret;
0xffffffff81ba33e7: mov eax, 0x1ac; add [rdi], cl; xchg esp, eax; ret 0xa889;
0xffffffff822bf16c: mov eax, 0x1e83e7c6; pop rsp; iretd;
0xffffffff816bc490: mov eax, 0x1f; sub eax, ecx; add rsp, 4; ret;
0xffffffff822cb3e3: mov eax, 0x28dc0e42; xchg esp, eax; and bl, [rdi]; imul dword ptr [rdx+0x51]; call far fword ptr [rcx+4];
0xffffffff823cb7af: mov eax, 0x364f3837; pop rsp; xor [rbx+0x46], edi; imul edi, esp, 0xa86b9f71; iretd;
0xffffffff81ba77ad: mov eax, 0x415b000d; pop rsp; pop r14; pop r15; ret;
0xffffffff811e77f0: mov eax, 0x415b00a9; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81145801: mov eax, 0x415b00eb; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81afe42f: mov eax, 0x415b0101; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff815d3519: mov eax, 0x415bc475; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff812efd37: mov eax, 0x415bffea; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff824d98c1: mov eax, 0x47d19bda; push rbp; add esp, 0x3d2b68de; iret;
0xffffffff81159044: mov eax, 0x4800ea80; add esp, 8; ret;
0xffffffff8349f9d4: mov eax, 0x48fdd0f0; add esp, 8; pop rbx; ret;
0xffffffff8346a8d4: mov eax, 0x48fdd441; add esp, 8; pop rbx; ret;
0xffffffff81265a44: mov eax, 0x48fffffc; add esp, 0x18; ret;
0xffffffff8199beb4: mov eax, 0x48fffffe; add esp, 8; ret;
0xffffffff8238eb2b: mov eax, 0x4a835e94; xchg ebx, eax; mov esp, es; ret 0x3f43;
0xffffffff81035028: mov eax, 0x50; lldt ax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff82551dbb: mov eax, 0x5e0c41c9; adc ebp, esp; xchg esp, eax; ret 0xf738;
0xffffffff822f5b59: mov eax, 0x709a8b49; xchg esp, eax; xor edi, [rip+0x49c8a878]; xor byte ptr [rbp-0x69], 0x11; mov [rcx], ebx; jmp far fword ptr [rsi+0x700ed73];
0xffffffff826884fb: mov eax, 0x75615412; leave; call rsi;
0xffffffff826883ec: mov eax, 0x7561a709; leave; jmp far fword ptr [rbp+0x5e];
0xffffffff8243bd97: mov eax, 0x7d4d908f; leave; sbb eax, 0x6356fc6a; adc esi, ebx; call far fword ptr [rax+rbp*4+0x4048455b];
0xffffffff81123a74: mov eax, 0x8400005a; ror byte ptr [rdi], 0x84; leave; add [rax], al; add [rax-0x7f], cl; ret;
0xffffffff824f3b27: mov eax, 0x87aedff8; pop rsp; imul ecx, ebp, 0x9cff6cc9; push rax; ret;
0xffffffff8146b0d4: mov eax, 0x89fffa2c; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff8191f552: mov eax, 0x8a827566; adc [rcx], dh; rol byte ptr [rdx+rdx*8-0x2dceee8b], 0x3c; or cl, [rdi]; xchg esp, eax; ret 0x3c80;
0xffffffff82307113: mov eax, 0xae40b822; xor dl, ah; leave; iretd;
0xffffffff824a1c60: mov eax, 0xb4c8f28a; test eax, 0x6e0575a3; shl dword ptr [rbp-0x732882c3], cl; leave; call rax;
0xffffffff8264ef09: mov eax, 0xb4efffc9; leave; call far fword ptr [rdi];
0xffffffff82240b5d: mov eax, 0xb9431b2d; pop rsp; fwait; call qword ptr [rbx-0x19dd51d7];
0xffffffff82446adb: mov eax, 0xc1388792; adc esp, esi; call qword ptr [rbx-0x10];
0xffffffff8252e8c8: mov eax, 0xca268e71; leave; or dh, bl; sbb ecx, [rbx+rdx*8+0x247f2ed7]; jmp qword ptr [rax-0x51ca3cb3];
0xffffffff82447836: mov eax, 0xd595c658; mov [rsi+0x19], ss; xchg esp, eax; xchg edi, eax; ret;
0xffffffff811f945a: mov eax, 0xd8; add [rdi], cl; xchg esp, eax; ret 0xe2c1;
0xffffffff826beee6: mov eax, 0xde8eae6; test [rsi+0x71], esp; xchg esp, eax; cmc; sti; iretd;
0xffffffff82307115: mov eax, 0xe230ae40; leave; iretd;
0xffffffff82478cbf: mov eax, 0xe3e75c34; leave; add eax, 0x7863a018; ret;
0xffffffff8191264f: mov eax, 0xe800000d; cmp [rip-0xf0084], bh; mov esp, [rax+0xf00000c]; mov [rbp+0x75003678], bh; sbb ecx, [rax-0x7f]; ret;
0xffffffff81036cfb: mov eax, 0xe882e328; pushfq; mov esp, es; add [rbx-0x2044b9fb], cl; add [rbx-0x76fbdbb4], ecx; ret 0xe283;
0xffffffff81916c8e: mov eax, 0xe882f3f0; leave; ret;
0xffffffff822de39e: mov eax, 0xebdc96bb; and ebx, [rax]; fdiv st, st(1); pop rsp; ret 0x7d0c;
0xffffffff822edb07: mov eax, 0xf03754ea; xchg esp, eax; iretd;
0xffffffff8248e0a3: mov eax, 0xf9602e1f; pop rsp; cmp bl, [rcx+0x77911ada]; ret;
0xffffffff810cd268: mov eax, 0xfffffdfe; add rsp, 0x10; ret;
0xffffffff818e748c: mov eax, 0xffffffa1; add rsp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff81bd3f88: mov eax, 0xffffffa6; add rsp, 0x60; pop rbx; pop r14; pop rbp; ret;
0xffffffff8220d5d1: mov eax, 0xffffffde; add rsp, 4; pop rbx; ret;
0xffffffff81941098: mov eax, 0xffffffea; add rsp, 4; ret;
0xffffffff81811e2a: mov eax, 0xfffffff4; add eax, ecx; add al, [rdx+8]; add rsp, 4; ret;
0xffffffff81b623f4: mov eax, 0xfffffff4; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff81b19264: mov eax, 0xfffffff4; cmove ebx, eax; mov eax, ebx; add rsp, 8; pop rbx; ret;
0xffffffff81c1077a: mov eax, 0xfffffffd; add rsp, 0x18; ret;
0xffffffff81a7696a: mov eax, 0xffffffff; add rsp, 0x18; ret;
0xffffffff81bd39c6: mov eax, 0xffffffff; add rsp, 0x40; pop rbx; pop r14; pop rbp; ret;
0xffffffff81a771d7: mov eax, 0xffffffff; add rsp, 0x78; pop rbx; pop r14; pop r15; ret;
0xffffffff81a779df: mov eax, 0xffffffff; add rsp, 0xb0; pop rbx; pop r14; pop r15; ret;
0xffffffff8156138a: mov eax, 0xffffffff; bsf eax, [rsp]; add eax, r8d; add rsp, 4; ret;
0xffffffff8197ea00: mov eax, 1; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff81774316: mov eax, 1; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8343b377: mov eax, 1; add rsp, 0x10; ret;
0xffffffff8103e986: mov eax, 1; add rsp, 0x18; pop rbx; ret;
0xffffffff8345e9e6: mov eax, 1; add rsp, 0x18; ret;
0xffffffff8104f219: mov eax, 1; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff817a46fc: mov eax, 1; add rsp, 0x50; pop rbx; pop r14; ret;
0xffffffff812c3cf5: mov eax, 1; shl rax, cl; add rsp, 8; ret;
0xffffffff812558d0: mov eax, 1; shl rax, cl; mov [rip+0x1d3cfd1], rax; xor eax, eax; add rsp, 8; ret;
0xffffffff827fdc55: mov eax, 3; add [rax], al; xchg esp, eax; fistp word ptr [rbx], st; inc edi; ret;
0xffffffff819410a2: mov eax, 9; sub eax, ecx; mov [rdi+0xa0], eax; xor eax, eax; add rsp, 4; ret;
0xffffffff816e46eb: mov eax, [0x100c1f7000006]; add [rdi], cl; xchg esp, eax; ret;
0xffffffff824fd476: mov eax, [0x1ff3d4fd0e065cde]; xchg [rax-0x14], esp; ret;
0xffffffff824fd477: mov eax, [0x1ff3d4fd0e065cde]; xchg [rax-0x14], esp; ret;
0xffffffff8243a84d: mov eax, [0x2202ec0b7d8778a7]; stosb [rdi]; stc; sbb esp, eax; sbb al, 0x9c; ret 0x34e8;
0xffffffff822fce1b: mov eax, [0x2525a734f79152c8]; push rsp; mov esp, [rax-0x20d41d83]; movsd [rdi], [rsi]; ret;
0xffffffff810c428d: mov eax, [0x415bc08944ffffff]; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff818ce22b: mov eax, [0x415bc56349003b17]; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff8127156a: mov eax, [0x415bd88901e38000]; pop rsp; pop r14; pop r15; ret;
0xffffffff81c2c6bb: mov eax, [0x415bd88948000569]; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff818035cb: mov eax, [0x415be089440047fa]; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff815232e6: mov eax, [0x441f0fc3ffffff]; add al, ch; mov esp, ebx; lea eax, [rax]; mov eax, 0xffffffa1; ret;
0xffffffff8176c971: mov eax, [0x48fffffe57e8825e]; add esp, 8; ret;
0xffffffff8232e0fb: mov eax, [0x4be5c16c935ffa99]; xor eax, edi; xchg esp, eax; ret 0x79dd;
0xffffffff8238243d: mov eax, [0x56ad44cfcb9175f6]; add esp, edx; ret;
0xffffffff8265a441: mov eax, [0x9f7fff949f9fff94]; xchg esp, eax; dec edi; popfq; xchg esp, eax; call far fword ptr [rdi-0x63];
0xffffffff82668141: mov eax, [0xa10fff5ca15fff5c]; pop rsp; call far fword ptr [rdi-0x60];
0xffffffff8355c1fa: mov eax, [0xa1c920ffffffff81]; cmp edi, 0x70ffffff; leave; mov eax, [0xa1ca60ffffffff81]; cmp edi, 0xe0ffffff; iretd;
0xffffffff824f7f17: mov eax, [0xb22b1aee8b71d43a]; leave; mov edi, [rax]; rol byte ptr [rbp+0x7cb02bb9], 1; adc al, 0x96; ret;
0xffffffff8247ab42: mov eax, [0xb3d3a8804cbb6e0d]; push 0x30c1d559; leave; ret;
0xffffffff824375f2: mov eax, [0xbcdf7b21c1ffc71a]; xchg edx, eax; pop rsp; ret;
0xffffffff8256c35f: mov eax, [0xbe8b3386f6ebee54]; push rdx; pop rsp; ret;
0xffffffff824f3b1d: mov eax, [0xd4bd9ccfc07d96e7]; add bh, [rax-0x78512008]; pop rsp; imul ecx, ebp, 0x9cff6cc9; push rax; ret;
0xffffffff823a7f0b: mov eax, [0xd7f122db1a17253d]; std; mov edi, 0xc3c5a7c2; leave; ret 0x2c99;
0xffffffff822a5152: mov eax, [0xf3d66dbc9a019ef5]; cmp ecx, [rsi]; xchg edx, eax; pop rsp; ret;
0xffffffff823d4970: mov eax, [0xf45fdb7838e66672]; mov ah, 0x31; pop rsp; iretd;
0xffffffff8342cf13: mov eax, [0xfc084d231ffb61c]; xchg esp, eax; ret 0xe2c1;
0xffffffff834f08e3: mov eax, [rax*4+0xf0]; add sp, 0x58; pop si; pop di; data16 ret;
0xffffffff81811f04: mov eax, [rax*8-0x7da03300]; add rsp, 4; ret;
0xffffffff8199477f: mov eax, [rax+0x48000000]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff816afd4b: mov eax, [rax+0x58]; or dword ptr [rax+0x5c], 8; add rsp, 4; ret;
0xffffffff8166c7ce: mov eax, [rbp-0x18]; mov [rbp-8], rax; mov rax, [rbp-8]; add rsp, 0x18; pop rbp; ret;
0xffffffff8166cdea: mov eax, [rbp-0x24]; add rsp, 0x30; pop rbp; ret;
0xffffffff8166cf1e: mov eax, [rbp-0x28]; mov [rbp-4], eax; mov eax, [rbp-4]; add rsp, 0x38; pop rbp; ret;
0xffffffff8166d032: mov eax, [rbp-0x38]; add rsp, 0x38; pop rbp; ret;
0xffffffff8166cc9e: mov eax, [rbp-0x38]; add rsp, 0x40; pop rbp; ret;
0xffffffff8182c4a9: mov eax, [rbp-0x7b]; in al, 0xf; xchg esp, eax; ret;
0xffffffff8166caf0: mov eax, [rbp-0xa4]; add rsp, 0xa8; pop rbp; ret;
0xffffffff8166cd32: mov eax, [rbp-4]; add rsp, 0x28; pop rbp; ret;
0xffffffff8166c62c: mov eax, [rbp-4]; add rsp, 0x30; pop rbp; ret;
0xffffffff8166cf24: mov eax, [rbp-4]; add rsp, 0x38; pop rbp; ret;
0xffffffff8166c7d6: mov eax, [rbp-8]; add rsp, 0x18; pop rbp; ret;
0xffffffff8166c702: mov eax, [rbp-8]; mov [rax+8], rcx; add rsp, 8; pop rbp; ret;
0xffffffff8166cc97: mov eax, [rbp-8]; mov [rax], rcx; mov rax, [rbp-0x38]; add rsp, 0x40; pop rbp; ret;
0xffffffff8228457e: mov eax, [rbx+0x65]; xchg esp, eax; or edi, edi; ret 0x62cb;
0xffffffff81240ef0: mov eax, [rcx+rax*8-0x7d818900]; add rsp, 4; ret;
0xffffffff816afd44: mov eax, [rdi+0x438]; mov rax, [rax+0x58]; or dword ptr [rax+0x5c], 8; add rsp, 4; ret;
0xffffffff81b1c1d7: mov eax, [rdi+0xc0]; mov ecx, [rdi+0xbc]; or dword ptr [rax+rcx+0x18], 4; xor eax, eax; add rsp, 0xc; ret;
0xffffffff824580cc: mov eax, [rdx]; mov esp, [rbp-0x3783a205]; cmp edi, esi; sbb eax, 0x924655e3; ret 0x7aa2;
0xffffffff81a261a3: mov eax, [rsi+0x10]; mov [rdi+0x30], rax; mov [rdi+0x28], rax; add rsp, 8; pop rbx; ret;
0xffffffff81e01901: mov eax, [rsp+0x50]; mov rbp, [rsp+0x20]; add rsp, 0xa8; ret;
0xffffffff81e0193e: mov eax, [rsp]; add rsp, 0x18; jmp rdi;
0xffffffff81558a38: mov eax, eax; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff819117d9: mov eax, eax; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8183b805: mov eax, eax; add rsp, 4; ret;
0xffffffff81240ee9: mov eax, eax; imul rcx, rsi, 0x70; mov rax, [rcx+rax*8-0x7d818900]; add rsp, 4; ret;
0xffffffff812f7073: mov eax, eax; mov rsp, rbp; pop rbp; ret;
0xffffffff81059e02: mov eax, ebp; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff810c96c5: mov eax, ebp; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81135fd1: mov eax, ebp; add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff8104936d: mov eax, ebp; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff813d87ec: mov eax, ebp; add rsp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff8112d8fb: mov eax, ebp; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff812cb366: mov eax, ebp; add rsp, 0x28; pop rbx; pop r14; pop rbp; ret;
0xffffffff81260acd: mov eax, ebp; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff810d2f62: mov eax, ebp; add rsp, 0x30; pop rbx; pop r14; pop rbp; ret;
0xffffffff8171506d: mov eax, ebp; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff817428b2: mov eax, ebp; add rsp, 0x38; pop rbx; pop r14; pop rbp; ret;
0xffffffff81261eb5: mov eax, ebp; add rsp, 0x38; pop rbx; pop rbp; ret;
0xffffffff8102e2a8: mov eax, ebp; add rsp, 0x48; pop rbx; pop r14; pop rbp; ret;
0xffffffff81807bac: mov eax, ebp; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff81209c9b: mov eax, ebp; add rsp, 0x50; pop rbx; pop r14; pop rbp; ret;
0xffffffff8104b9c8: mov eax, ebp; add rsp, 0x58; pop rbx; pop r14; pop rbp; ret;
0xffffffff81357b53: mov eax, ebp; add rsp, 0x58; pop rbx; pop rbp; ret;
0xffffffff8172cec5: mov eax, ebp; add rsp, 0x60; pop rbx; pop r14; pop rbp; ret;
0xffffffff819b893e: mov eax, ebp; add rsp, 0x60; pop rbx; pop rbp; ret;
0xffffffff8116ce05: mov eax, ebp; add rsp, 0x68; pop rbx; pop r14; pop rbp; ret;
0xffffffff81382d31: mov eax, ebp; add rsp, 0x68; pop rbx; pop rbp; ret;
0xffffffff81408830: mov eax, ebp; add rsp, 0x70; pop rbx; pop r14; pop rbp; ret;
0xffffffff8146f9f9: mov eax, ebp; add rsp, 0x78; pop rbx; pop r14; pop rbp; ret;
0xffffffff819055fa: mov eax, ebp; add rsp, 0x78; pop rbx; pop rbp; ret;
0xffffffff813f536e: mov eax, ebp; add rsp, 0x80; pop rbx; pop r14; pop rbp; ret;
0xffffffff813f536f: mov eax, ebp; add rsp, 0x80; pop rbx; pop r14; pop rbp; ret;
0xffffffff815b6073: mov eax, ebp; add rsp, 0x88; pop rbx; pop r14; pop rbp; ret;
0xffffffff81418016: mov eax, ebp; add rsp, 0x98; pop rbx; pop rbp; ret;
0xffffffff81556c89: mov eax, ebp; add rsp, 0xa0; pop rbx; pop r14; pop rbp; ret;
0xffffffff81421a6b: mov eax, ebp; add rsp, 0xb0; pop rbx; pop r14; pop rbp; ret;
0xffffffff819b98bc: mov eax, ebp; add rsp, 0xc0; pop rbx; pop r14; pop rbp; ret;
0xffffffff8144c562: mov eax, ebp; add rsp, 0xd0; pop rbx; pop r14; pop rbp; ret;
0xffffffff8110c125: mov eax, ebp; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff81003b9f: mov eax, ebp; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8115e34f: mov eax, ebx; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff810fbbf8: mov eax, ebx; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff812845c5: mov eax, ebx; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff810b6037: mov eax, ebx; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81022a5b: mov eax, ebx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8100ce86: mov eax, ebx; add rsp, 0x10; pop rbx; ret;
0xffffffff8347aeb8: mov eax, ebx; add rsp, 0x128; pop rbx; pop rbp; ret;
0xffffffff8134e229: mov eax, ebx; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8112b803: mov eax, ebx; add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff8117534b: mov eax, ebx; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff8114354e: mov eax, ebx; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff810c1aea: mov eax, ebx; add rsp, 0x18; pop rbx; ret;
0xffffffff812c0729: mov eax, ebx; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff8179dc41: mov eax, ebx; add rsp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff811e07ba: mov eax, ebx; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff81112a95: mov eax, ebx; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff815a5b13: mov eax, ebx; add rsp, 0x20; pop rbx; ret;
0xffffffff812e1cdc: mov eax, ebx; add rsp, 0x28; pop rbx; pop r14; pop r15; ret;
0xffffffff8181ace4: mov eax, ebx; add rsp, 0x28; pop rbx; pop r14; pop rbp; ret;
0xffffffff81417663: mov eax, ebx; add rsp, 0x28; pop rbx; pop r14; ret;
0xffffffff81216855: mov eax, ebx; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff810d2c7e: mov eax, ebx; add rsp, 0x30; pop rbx; pop r14; pop rbp; ret;
0xffffffff810d2d7e: mov eax, ebx; add rsp, 0x30; pop rbx; pop r14; ret;
0xffffffff812fa7c1: mov eax, ebx; add rsp, 0x30; pop rbx; ret;
0xffffffff810c7307: mov eax, ebx; add rsp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff817401f0: mov eax, ebx; add rsp, 0x38; pop rbx; pop r14; pop rbp; ret;
0xffffffff81641405: mov eax, ebx; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff817a5411: mov eax, ebx; add rsp, 0x38; pop rbx; ret;
0xffffffff812f4f1b: mov eax, ebx; add rsp, 0x40; pop rbx; pop r14; pop r15; ret;
0xffffffff81173eff: mov eax, ebx; add rsp, 0x40; pop rbx; pop r14; pop rbp; ret;
0xffffffff812601b1: mov eax, ebx; add rsp, 0x40; pop rbx; pop r14; ret;
0xffffffff812601b0: mov eax, ebx; add rsp, 0x40; pop rbx; pop r14; ret;
0xffffffff8161829b: mov eax, ebx; add rsp, 0x48; pop rbx; pop r14; ret;
0xffffffff810b36b7: mov eax, ebx; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff810cc594: mov eax, ebx; add rsp, 0x48; pop rbx; ret;
0xffffffff815f1d15: mov eax, ebx; add rsp, 0x50; pop rbx; pop r14; pop r15; ret;
0xffffffff818e6e0d: mov eax, ebx; add rsp, 0x50; pop rbx; pop r14; ret;
0xffffffff83441fa0: mov eax, ebx; add rsp, 0x58; pop rbx; ret;
0xffffffff8105a29d: mov eax, ebx; add rsp, 0x60; pop rbx; pop r14; pop rbp; ret;
0xffffffff834855f9: mov eax, ebx; add rsp, 0x60; pop rbx; pop rbp; ret;
0xffffffff81c2e361: mov eax, ebx; add rsp, 0x68; pop rbx; pop r14; ret;
0xffffffff81a7bd13: mov eax, ebx; add rsp, 0x68; pop rbx; ret;
0xffffffff8153706e: mov eax, ebx; add rsp, 0x70; pop rbx; pop r14; pop r15; ret;
0xffffffff8140dfd0: mov eax, ebx; add rsp, 0x70; pop rbx; pop r14; pop rbp; ret;
0xffffffff8142d93b: mov eax, ebx; add rsp, 0x70; pop rbx; pop rbp; ret;
0xffffffff81b35f01: mov eax, ebx; add rsp, 0x70; pop rbx; ret;
0xffffffff8144d56a: mov eax, ebx; add rsp, 0x78; pop rbx; pop r14; pop rbp; ret;
0xffffffff81c45066: mov eax, ebx; add rsp, 0x80; pop rbx; pop r14; pop r15; ret;
0xffffffff8140c16f: mov eax, ebx; add rsp, 0xa0; pop rbx; pop r14; pop r15; ret;
0xffffffff81797597: mov eax, ebx; add rsp, 0xa0; pop rbx; pop r14; ret;
0xffffffff8152181c: mov eax, ebx; add rsp, 0xa0; pop rbx; ret;
0xffffffff8142d3ce: mov eax, ebx; add rsp, 0xc8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8191ef83: mov eax, ebx; add rsp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff819bf380: mov eax, ebx; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8128bc30: mov eax, ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810302bd: mov eax, ebx; add rsp, 8; pop rbx; ret;
0xffffffff812d9587: mov eax, ebx; mov rdx, r14; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff813a92f6: mov eax, ecx; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff8170de27: mov eax, ecx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff812dbb98: mov eax, ecx; add rsp, 0x10; ret;
0xffffffff8118d89f: mov eax, ecx; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff83493a27: mov eax, ecx; add rsp, 0x18; pop rbx; ret;
0xffffffff8142c451: mov eax, ecx; add rsp, 0x28; pop rbx; ret;
0xffffffff81792e5b: mov eax, ecx; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff819fbe5b: mov eax, ecx; add rsp, 0x30; pop rbx; ret;
0xffffffff81bb079c: mov eax, ecx; add rsp, 0x38; pop rbx; ret;
0xffffffff81a89571: mov eax, ecx; add rsp, 0x40; ret;
0xffffffff815188bf: mov eax, ecx; add rsp, 0xa0; pop rbx; ret;
0xffffffff8176b5ae: mov eax, ecx; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff81c365d3: mov eax, ecx; imul edi, 0x415bd889; pop rsp; pop r14; pop r15; ret;
0xffffffff81811f01: mov eax, ecx; mov rax, [rax*8-0x7da03300]; add rsp, 4; ret;
0xffffffff81234570: mov eax, edi; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff810f837e: mov eax, edi; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff81b8b919: mov eax, edi; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff816c2c85: mov eax, edi; add rsp, 0x20; ret;
0xffffffff819e0a9f: mov eax, edi; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff81410710: mov eax, edi; add rsp, 0x58; pop rbx; pop r14; pop r15; ret;
0xffffffff81517408: mov eax, edi; add rsp, 0x78; pop rbx; pop r14; pop r15; ret;
0xffffffff814aa049: mov eax, edi; add rsp, 0xa0; pop rbx; pop r14; pop r15; ret;
0xffffffff819e0e7a: mov eax, edi; add rsp, 0xc8; pop rbx; pop r14; pop r15; ret;
0xffffffff812f6a94: mov eax, edi; mov rsp, rbp; pop rbp; ret;
0xffffffff815ebdde: mov eax, edx; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff8112d775: mov eax, edx; add rsp, 0x20; pop rbx; ret;
0xffffffff8104f373: mov eax, edx; add rsp, 0x30; ret;
0xffffffff824a7997: mov eax, es; fstp tbyte ptr [rsi-8], st; sbb bl, [rax+0x392a1045]; fwait; pop rsp; iretd;
0xffffffff8112d4dd: mov eax, esi; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff81210883: mov eax, esi; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff8118468d: mov eax, esi; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81028d28: mov eax, esi; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8105da5a: mov eax, esi; add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff8112ad4a: mov eax, esi; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff816b9cf4: mov eax, esi; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff81426f30: mov eax, esi; add rsp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff81382ac9: mov eax, esi; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff813080ef: mov eax, esi; add rsp, 0x28; pop rbx; pop r14; pop rbp; ret;
0xffffffff810c1e2a: mov eax, esi; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff811ae220: mov eax, esi; add rsp, 0x30; pop rbx; pop r14; ret;
0xffffffff810cfba3: mov eax, esi; add rsp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff810d35ed: mov eax, esi; add rsp, 0x38; pop rbx; pop r14; pop rbp; ret;
0xffffffff81176189: mov eax, esi; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff81b329ea: mov eax, esi; add rsp, 0x40; pop rbx; pop r14; pop r15; ret;
0xffffffff81418790: mov eax, esi; add rsp, 0x40; pop rbx; pop r14; pop rbp; ret;
0xffffffff812f30ad: mov eax, esi; add rsp, 0x40; pop rbx; pop r14; ret;
0xffffffff81417b4b: mov eax, esi; add rsp, 0x48; pop rbx; pop r14; pop rbp; ret;
0xffffffff83441ecc: mov eax, esi; add rsp, 0x58; pop rbx; pop r14; pop rbp; ret;
0xffffffff810c1c51: mov eax, esi; add rsp, 0x58; pop rbx; pop r14; ret;
0xffffffff81bbdde1: mov eax, esi; add rsp, 0x60; pop rbx; pop r14; pop r15; ret;
0xffffffff812190c4: mov eax, esi; add rsp, 0x68; pop rbx; pop r14; pop rbp; ret;
0xffffffff81b93ed1: mov eax, esi; add rsp, 0x70; pop rbx; pop r14; pop r15; ret;
0xffffffff81410b3c: mov eax, esi; add rsp, 0xc0; pop rbx; pop r14; pop rbp; ret;
0xffffffff81c11ced: mov eax, esi; add rsp, 0xe8; pop rbx; pop r14; pop rbp; ret;
0xffffffff81102108: mov eax, esi; add rsp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff81051bf8: mov eax, esi; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8105fbc3: mov eax, esp; mov rsp, rax; ret;
0xffffffff81c2f015: mov eax, r11d; add rsp, 0x68; pop rbx; pop r14; ret;
0xffffffff81420424: mov eax, r13d; add rsp, 0x28; pop rbx; pop r14; pop rbp; ret;
0xffffffff81210881: mov eax, r14d; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff8118468c: mov eax, r14d; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81050c2a: mov eax, r14d; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8105da59: mov eax, r14d; add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff819a1643: mov eax, r14d; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff81426f2f: mov eax, r14d; add rsp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff81382ac8: mov eax, r14d; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff813080ee: mov eax, r14d; add rsp, 0x28; pop rbx; pop r14; pop rbp; ret;
0xffffffff811ab296: mov eax, r14d; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff81c62582: mov eax, r14d; add rsp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff810d35ec: mov eax, r14d; add rsp, 0x38; pop rbx; pop r14; pop rbp; ret;
0xffffffff81176188: mov eax, r14d; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff8141878f: mov eax, r14d; add rsp, 0x40; pop rbx; pop r14; pop rbp; ret;
0xffffffff81417b4a: mov eax, r14d; add rsp, 0x48; pop rbx; pop r14; pop rbp; ret;
0xffffffff83441ecb: mov eax, r14d; add rsp, 0x58; pop rbx; pop r14; pop rbp; ret;
0xffffffff83441eca: mov eax, r14d; add rsp, 0x58; pop rbx; pop r14; pop rbp; ret;
0xffffffff81bbdde0: mov eax, r14d; add rsp, 0x60; pop rbx; pop r14; pop r15; ret;
0xffffffff812190c3: mov eax, r14d; add rsp, 0x68; pop rbx; pop r14; pop rbp; ret;
0xffffffff81b93ed0: mov eax, r14d; add rsp, 0x70; pop rbx; pop r14; pop r15; ret;
0xffffffff81410b3b: mov eax, r14d; add rsp, 0xc0; pop rbx; pop r14; pop rbp; ret;
0xffffffff819a4dc5: mov eax, r14d; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8170c5e1: mov eax, r15d; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff81a7cf41: mov eax, r15d; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff81b8b918: mov eax, r15d; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff81517407: mov eax, r15d; add rsp, 0x78; pop rbx; pop r14; pop r15; ret;
0xffffffff81558a37: mov eax, r8d; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff819117d8: mov eax, r8d; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8183b804: mov eax, r8d; add rsp, 4; ret;
0xffffffff823a21ee: mov ebp, 0x11f00517; sbb al, 0x1b; mov bl, 0x14; xchg esp, eax; ret;
0xffffffff822dd44d: mov ebp, 0x18cd4526; leave; adc dword ptr [rsi], 0x65; sbb edi, [rsp+rax*8-0x48015a9b]; pop rdi; ret;
0xffffffff82570ed9: mov ebp, 0x1b9dcf26; xor eax, 0x330cb48d; leave; fimul st, word ptr [rdx+rsi*8]; iretd;
0xffffffff82570ed8: mov ebp, 0x1b9dcf26; xor eax, 0x330cb48d; leave; fimul st, word ptr [rdx+rsi*8]; iretd;
0xffffffff822a7e12: mov ebp, 0x2608fbd2; add esp, 0x65; xor ebx, ecx; xchg edx, eax; div esp; iretd;
0xffffffff822ee710: mov ebp, 0x2f8f9f3d; cmpsd [rsi], [rdi]; mov bh, 0xe4; pop rsp; ret;
0xffffffff8182d9a8: mov ebp, 0x370; add ecx, [rdi]; xchg esp, eax; sar byte ptr [rdx+4], 0x29; ret 0x8d48;
0xffffffff813dece3: mov ebp, 0x415bc031; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff813bf884: mov ebp, 0x415bffdd; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff834709cf: mov ebp, 0x48fdd3e0; add esp, 8; pop rbx; ret;
0xffffffff83464dcf: mov ebp, 0x48fdd49c; add esp, 8; pop rbx; ret;
0xffffffff834621cf: mov ebp, 0x48fdd4c8; add esp, 8; pop rbx; ret;
0xffffffff834593cf: mov ebp, 0x48fdd556; add esp, 8; pop rbx; ret;
0xffffffff815734af: mov ebp, 0x48ffffac; add esp, 0x10; pop rbx; pop r14; ret;
0xffffffff825db0a5: mov ebp, 0x5f8297f7; xchg edx, eax; leave; fsin; add r11, [rdi+0x5a]; ret 0xfb04;
0xffffffff823b8da8: mov ebp, 0x7210f96b; outsb dx, [rsi]; mov rax, 0xbbff7c3cb7ef5bb1; mov esp, [rdx+0x1f695e30]; xor edx, [rdx-0x5c65ad67]; call rax;
0xffffffff823d737e: mov ebp, 0x82b332a3; xchg esp, eax; lea eax, [rdi-0x11]; adc byte ptr [rax], 0xe7; iretd;
0xffffffff823a9455: mov ebp, 0x83708415; pop rsp; iretd;
0xffffffff816b57b6: mov ebp, 0x841f0fff; add [rax], al; add [rax], al; add cl, ch; mov esp, [rsi-0x43]; jmp qword ptr [rsi+0x66];
0xffffffff815ba3cf: mov ebp, 0x85ffd1fe; shl byte ptr [rax+rcx+0x5b], 0x41; pop rsp; pop r14; pop r15; ret;
0xffffffff8223534c: mov ebp, 0x86fa8772; mov al, [0x9f348483133ff4cb]; pop rsp; iretd;
0xffffffff824945c5: mov ebp, 0x8839d69a; xchg esp, eax; call qword ptr [rsi+0x58];
0xffffffff82339ce3: mov ebp, 0x9003dcd1; leave; adc ch, [rdx]; iretd;
0xffffffff82339ce2: mov ebp, 0x9003dcd1; leave; adc ch, [rdx]; iretd;
0xffffffff82554f72: mov ebp, 0x90478319; data16 leave; ret;
0xffffffff824e6930: mov ebp, 0x9fff6184; adc esp, esi; ret 0xec62;
0xffffffff823de07c: mov ebp, 0xb0531743; pop rsp; pushfq; push 0xffffffffffffff9a; movsb [rdi], [rsi]; ret 0xbd2b;
0xffffffff82450351: mov ebp, 0xbb983732; leave; movsb [rdi], [rsi]; xor [rbx-0x18050ce], ebp; sbb eax, [rsi-0x122aad0c]; jmp qword ptr [rcx-0x25dcd45];
0xffffffff826680e1: mov ebp, 0xbcafff5c; pop rsp; call far fword ptr [rdi-0x44];
0xffffffff8264eef9: mov ebp, 0xbcbfffc9; leave; jmp far fword ptr [rdi-0x50003644];
0xffffffff826680dd: mov ebp, 0xbd5fff5c; pop rsp; jmp far fword ptr [rdi+0x5fff5cbc];
0xffffffff812c3cef: mov ebp, 0xc180240c; add [rax+1], edi; shl rax, cl; add rsp, 8; ret;
0xffffffff8112efbe: mov ebp, 0xd5e57a42; xchg esp, eax; mov edi, 0xe1f748d6; mov rax, rdx; shr rax, 0x17; ret;
0xffffffff822fe8b5: mov ebp, 0xde2f66a2; mov ah, 0x16; adc esp, edi; ret;
0xffffffff81041da4: mov ebp, 0xe0d3240c; not eax; test eax, edi; sete al; add rsp, 4; ret;
0xffffffff824177c6: mov ebp, 0xe93dc6de; mov [rcx+0x4d], ebp; xchg esp, eax; outsb dx, [rsi]; ret 0x6a69;
0xffffffff835aa63c: mov ebp, 0xeafdcf5c; pop rsp; iretd;
0xffffffff8231ae6a: mov ebp, 0xf223279d; mov esp, edi; pop rcx; adc [rbp+0x57537f4e], dh; iretd;
0xffffffff825505ab: mov ebp, 0xf48aca40; pop rdx; out dx, eax; xchg esp, eax; fcomi st, st(0); ret;
0xffffffff824fdae3: mov ebp, 0xfd0f9690; pop rsp; scasb [rdi]; iretd;
0xffffffff822f1cb7: mov ebp, [rcx+0x36]; leave; cmp ecx, [rbp-0x13]; sbb [r14], cl; mov esp, 0xf3a857ee; ret;
0xffffffff8225e973: mov ebp, [rdi-0x51efc653]; leave; sub edx, [rdx]; mov es, [rdx+0x3f]; ret 0xb79a;
0xffffffff82503bec: mov ebp, [rdx-0x7f3d2ff0]; leave; ret;
0xffffffff822e22c4: mov ebp, [rdx]; xchg esp, eax; cmp ebx, [rdi-0x32]; jmp qword ptr [rdi];
0xffffffff81e01906: mov ebp, [rsp+0x20]; add rsp, 0xa8; ret;
0xffffffff81c75de8: mov ebp, [rsp+0x28]; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff823680ac: mov ebp, ecx; leave; and [rdi-0x52], esi; ret;
0xffffffff8224a6f6: mov ebp, gs; pushfq; xchg esp, eax; ret 0x378b;
0xffffffff83455de9: mov ebp, ss; std; add rsp, 8; pop rbx; ret;
0xffffffff824630ac: mov ebx, 0x1832cf66; cmc; pop sp; enter 0xb802, 0xc; push rax; ret 0xec51;
0xffffffff81718f05: mov ebx, 0x1d8; add [rdi], cl; xchg esp, eax; ret 0xd138;
0xffffffff822de39f: mov ebx, 0x23ebdc96; sbb al, bl; int1; pop rsp; ret 0x7d0c;
0xffffffff822d25fb: mov ebx, 0x2701c387; pop rsp; ret;
0xffffffff82a80ef9: mov ebx, 0x325c0014; add [rax], eax; xchg esp, eax; iretd;
0xffffffff822688c3: mov ebx, 0x34556ec0; xchg ecx, eax; and dh, [rbp+0x33]; pushfq; pop rsp; iretd;
0xffffffff812efa86: mov ebx, 0x415bffea; pop rsp; pop r14; pop r15; ret;
0xffffffff82474da1: mov ebx, 0x44d94d87; mov ah, 0x9d; mov al, 0x2f; pop rsp; iretd;
0xffffffff812a691f: mov ebx, 0x48000001; add esp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff834a08d1: mov ebx, 0x48fdd0e1; add esp, 8; pop rbx; pop r14; ret;
0xffffffff8348ccd1: mov ebx, 0x48fdd21d; add esp, 8; pop rbx; ret;
0xffffffff83484fd1: mov ebx, 0x48fdd29a; add esp, 8; pop rbx; ret;
0xffffffff811ac381: mov ebx, 0x48fffff3; add esp, 0x20; ret;
0xffffffff822fb254: mov ebx, 0x6d010349; sar dword ptr [rcx-0x36f426c0], 0xfd; pop rsp; ret 0xae5b;
0xffffffff82510568: mov ebx, 0x73876705; xor edx, esi; pop rsp; sub [rbp+0x361c79eb], ch; jmp far fword ptr [r15+0x25a704bb];
0xffffffff822b59d1: mov ebx, 0x7aac6826; leave; cdq; iretd;
0xffffffff8242b048: mov ebx, 0x7b3ac8a8; adc [rbp-0xb845d7c], esi; leave; sub eax, 0xd555af95; scasb [rdi]; ret;
0xffffffff82317d58: mov ebx, 0x7de47862; pop rsp; int1; and ch, dl; call qword ptr [rbp-0x231696a];
0xffffffff823db9b3: mov ebx, 0x89ac75d8; xchg esp, eax; call far fword ptr [rsi-0x30];
0xffffffff81301bca: mov ebx, 0x90; add [rdx+rdx-0x18], dh; leave; ret;
0xffffffff8222b3d1: mov ebx, 0x951ccc24; getsec; pop rsp; ret 0xf322;
0xffffffff82350363: mov ebx, 0xa0152393; pop rsp; sub esi, [rbx-5]; ret;
0xffffffff82493dc8: mov ebx, 0xa631ff42; imul ebx, [rbx+rbp*4], 0x23; pop rsp; ret 0xc22e;
0xffffffff8265a39d: mov ebx, 0xbabfff94; xchg esp, eax; call far fword ptr [rdi];
0xffffffff826cf280: mov ebx, 0xbcfec6d; mov esp, [rbx+0x73]; ret;
0xffffffff8234bbc3: mov ebx, 0xbf26dfad; and [rdi-0x7859cb1d], al; stc; cmp esi, ebp; pop rsp; iretd;
0xffffffff82495a77: mov ebx, 0xc4f99403; in al, dx; xchg esp, eax; iretd;
0xffffffff8359cee8: mov ebx, 0xc8ffefc9; leave; out dx, eax; call rbp;
0xffffffff82554f6c: mov ebx, 0xd58b0932; in eax, dx; mov ebp, 0x90478319; data16 leave; ret;
0xffffffff822fdf46: mov ebx, 0xd84981df; xor esi, edx; pop rsp; add [r14-0x42], spl; xchg edx, eax; call qword ptr [rbp*4+0x2d5b732a];
0xffffffff825ccfac: mov ebx, 0xe6766a0a; scasb [rdi]; in eax, dx; leave; ret 0x3b81;
0xffffffff8255188e: mov ebx, 0xf6718ba5; in al, dx; scasd [rdi]; xchg [rcx-0x50], esp; cmp al, 0xf6; ret;
0xffffffff8235cf9a: mov ebx, 0xfb27c1ec; cmp ebp, 0xfffffff1; add esp, edx; movsd [rdi], [rsi]; sbb ebp, [rcx]; ret 0xb141;
0xffffffff8281050d: mov ebx, 2; add [rax], al; in al, dx; mov esp, [rbx]; jmp qword ptr [rdi-0x41];
0xffffffff81546bcd: mov ebx, [rax]; add al, [rax]; add [rdi], cl; xchg esp, eax; ret 0x5089;
0xffffffff824f5a94: mov ebx, [rbx-0x51db6a0]; leave; rcr eax, 0xa9; int 0xf7; imul edi, ebx, 0x237ea68e; ret 0x6d6f;
0xffffffff824e80fc: mov ebx, [rcx+0x1c]; pop rsp; sub edi, esi; iretd;
0xffffffff81c72c9b: mov ebx, [rsp]; mov r12, [rsp+8]; add rsp, 0x10; ret;
0xffffffff81546bb7: mov ebx, eax; add [rax], eax; add [rdi], cl; xchg esp, eax; ret 0x5089;
0xffffffff823f2f14: mov ebx, ebp; pop rsp; pop rdx; ret;
0xffffffff811e6d8c: mov ebx, edx; mov eax, ebx; add rsp, 0x18; pop rbx; ret;
0xffffffff8347617e: mov ebx, edx; std; add rsp, 8; pop rbx; ret;
0xffffffff81011e8b: mov ebx, es; nop; or [rax], eax; add [rax-0x77], cl; xchg esp, eax; ret;
0xffffffff81ad817b: mov ebx, gs; dec dword ptr [rcx-0x7a3fce3f]; leave; cmovns rax, rbx; pop rbx; ret;
0xffffffff811e6d8b: mov ebx, r10d; mov eax, ebx; add rsp, 0x18; pop rbx; ret;
0xffffffff83475de9: mov ebx, ss; std; add rsp, 8; pop rbx; ret;
0xffffffff818fca90: mov ecx, 0x415b827b; pop rsp; pop r14; pop r15; ret;
0xffffffff8250a8f9: mov ecx, 0x45f368f4; mov bl, 0x6b; mov [0xa0e9f21433215223], al; pop rsp; mov ebp, 0xb4a5eeff; iretd;
0xffffffff817030c9: mov ecx, 0x48000000; add esp, 0x10; pop rbx; ret;
0xffffffff83471fd3: mov ecx, 0x48fdd3ca; add esp, 8; pop rbx; ret;
0xffffffff8346cad3: mov ecx, 0x48fdd41f; add esp, 8; pop rbx; ret;
0xffffffff834598d3: mov ecx, 0x48fdd551; add esp, 8; pop rbx; ret;
0xffffffff824b78f4: mov ecx, 0x53a37392; pop rsp; cmc; iretd;
0xffffffff827076db: mov ecx, 0x63070a6d; test al, 0x7e; fimul st, dword ptr [rax]; xchg esp, eax; out 0x74, eax; iretd;
0xffffffff822db357: mov ecx, 0x75f9ecd9; sti; movsb [rdi], [rsi]; add [rbp+0x5609e91a], esp; pop rsp; iretd;
0xffffffff823178b7: mov ecx, 0xa31f733b; push r14; leave; sbb ebp, [rax+0x475afd]; ret;
0xffffffff816bbed2: mov ecx, 0xb18; dec dword ptr [rdi]; xchg esp, eax; ret 0x4c8d;
0xffffffff8250d64d: mov ecx, 0xb615feac; add [rcx+0x60], cl; and esi, edx; mov esp, ecx; xchg esi, eax; ret 0x5439;
0xffffffff8233539d: mov ecx, 0xb626eee5; imul ebp, [rcx-0x44], 0xfffffffc; pop rsp; test al, 0x59; fimul st, word ptr [rip+0x772d1dce]; ret;
0xffffffff8265a3a9: mov ecx, 0xb8dfff94; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff822cec96: mov ecx, 0xba554b71; pop rsp; mov dh, dl; ret 0x81fd;
0xffffffff823748c8: mov ecx, 0xbc138f32; scasd [rdi]; leave; cmc; sub [rbp-0x1f], eax; iretd;
0xffffffff824ba26d: mov ecx, 0xbd8acc42; xchg esp, eax; ret 0x7282;
0xffffffff8270411e: mov ecx, 0xc666ea99; mov edi, 0x75617408; leave; call qword ptr [rdx];
0xffffffff8242c9e6: mov ecx, 0xc73da9af; xchg esp, eax; ret;
0xffffffff822fb25a: mov ecx, 0xc90bd940; std; pop rsp; ret 0xae5b;
0xffffffff81200e4d: mov ecx, 0xd8; add [rdi], cl; xchg esp, eax; ret 0xe2c1;
0xffffffff82379a72: mov ecx, 0xe33c6f55; cmp bl, al; pop rsp; ret 0xe575;
0xffffffff81999f52: mov ecx, 0xe850816b; add eax, 0x48000000; add esp, 8; ret;
0xffffffff818f1cb1: mov ecx, 0xfffffff4; mov eax, ecx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff816bc487: mov ecx, 0xffffffff; bsr ecx, [rsp]; mov eax, 0x1f; sub eax, ecx; add rsp, 4; ret;
0xffffffff81add2e1: mov ecx, 1; mov eax, ecx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8166c6ff: mov ecx, [rax]; mov rax, [rbp-8]; mov [rax+8], rcx; add rsp, 8; pop rbp; ret;
0xffffffff823dca8e: mov ecx, [rbx+0x1a0fae16]; xchg esp, eax; mov gs, di; ret;
0xffffffff81031aca: mov ecx, [rcx*8-0x7d819990]; mov [rcx+0x10010], ax; add rsp, 4; pop rbx; ret;
0xffffffff824e266e: mov ecx, [rdi+0x5dfb51a8]; int3; pop rsp; push rbx; ret 0x3c3d;
0xffffffff81b1c1dd: mov ecx, [rdi+0xbc]; or dword ptr [rax+rcx+0x18], 4; xor eax, eax; add rsp, 0xc; ret;
0xffffffff81e018fc: mov ecx, [rsp+0x58]; mov rax, [rsp+0x50]; mov rbp, [rsp+0x20]; add rsp, 0xa8; ret;
0xffffffff810c034d: mov ecx, [rsp]; mov [rdx], ecx; xor eax, eax; add rsp, 4; ret;
0xffffffff810c0425: mov ecx, [rsp]; mov [rsi], ecx; xor eax, eax; add rsp, 4; ret;
0xffffffff823fae50: mov ecx, eax; leave; in al, 0x42; pop rsp; add al, 1; call qword ptr [rbx-0x3e];
0xffffffff823fae4f: mov ecx, eax; leave; in al, 0x42; pop rsp; add al, 1; call qword ptr [rbx-0x3e];
0xffffffff816c2c6a: mov ecx, eax; neg rcx; and rax, rcx; add rsp, 0x20; ret;
0xffffffff826cf4d9: mov ecx, eax; pop rdi; fdivr st, st(7); test [rbx], cl; mov esp, [rbx+0x73]; ret;
0xffffffff82278f4e: mov ecx, edx; mov al, [0xf39cabf651738c38]; leave; xchg edi, eax; iretd;
0xffffffff824d8062: mov ecx, ss; pop rsp; and bh, al; ret;
0xffffffff814a8c5f: mov edi, 0x124; add [rdi], cl; xchg esp, eax; ret;
0xffffffff81477049: mov edi, 0x1aa8; add cl, [rdi]; xchg esp, eax; ret 0x498b;
0xffffffff82670b8c: mov edi, 0x1bfdba5c; pop rsp; mov edx, 0xba5c06fd; std; ret 0xba5b;
0xffffffff81700eba: mov edi, 0x1d8; add [rdi], cl; xchg esp, eax; ret 0x1b0;
0xffffffff81bef691: mov edi, 0x21c; add [rdi], cl; xchg esp, eax; ret 0x349;
0xffffffff8266abe4: mov edi, 0x2fff4d5c; pop rsp; call far fword ptr [r15];
0xffffffff8265a3f4: mov edi, 0x2fff94a9; test eax, 0xa87fff94; xchg esp, eax; call far fword ptr [rdi-0x58];
0xffffffff8265a378: mov edi, 0x2fff94c1; rcl byte ptr [rdi+rdi*8-0x6b3ff1], 0x1f; mov edi, 0xbe9fff94; xchg esp, eax; call far fword ptr [rdi];
0xffffffff81bc0d2d: mov edi, 0x31ff7903; leave; test rax, rax; mov eax, 0xfffffff4; cmovne eax, ecx; ret;
0xffffffff8125c48d: mov edi, 0x31fffffe; leave; cmp rax, 0xfffffffffffff001; cmovb eax, ecx; ret;
0xffffffff8234bbc6: mov edi, 0x34e38720; cmpsb [rsi], [rdi]; xchg ecx, edi; cmp esi, ebp; pop rsp; iretd;
0xffffffff8234bbc7: mov edi, 0x34e38720; cmpsb [rsi], [rdi]; xchg ecx, edi; cmp esi, ebp; pop rsp; iretd;
0xffffffff823de643: mov edi, 0x3506f941; leave; iretd;
0xffffffff8230b1dc: mov edi, 0x376fc360; in eax, dx; xchg esp, eax; in al, 0xbe; pop rsp; ret 0x4679;
0xffffffff8266c668: mov edi, 0x3fff43c9; leave; call far fword ptr [r15+0x1fff43c5];
0xffffffff81287348: mov edi, 0x415b009f; pop rsp; pop r14; pop r15; ret;
0xffffffff8231ff12: mov edi, 0x4551a6a6; pop rsp; xchg [rcx+0x7f], esp; iretd;
0xffffffff81703a5f: mov edi, 0x48000000; add esp, 0x10; pop rbx; ret;
0xffffffff8346fecd: mov edi, 0x48fdd3eb; add esp, 8; pop rbx; ret;
0xffffffff8346bdcd: mov edi, 0x48fdd42c; add esp, 8; pop rbx; ret;
0xffffffff8345a0cd: mov edi, 0x48fdd549; add esp, 8; pop rbx; ret;
0xffffffff8344f4cd: mov edi, 0x48fdd5f5; add esp, 8; pop rbx; ret;
0xffffffff81409dbd: mov edi, 0x48ffffea; add esp, 8; ret;
0xffffffff818660cc: mov edi, 0x4c0; add [rdi], cl; xchg esp, eax; ret 0x8948;
0xffffffff82668174: mov edi, 0x4fff5c98; cwde; pop rsp; call far fword ptr [rdi];
0xffffffff8265a22c: mov edi, 0x4fff94f9; stc; xchg esp, eax; jmp far fword ptr [rdi-0x60006b08];
0xffffffff822b5bf9: mov edi, 0x515a22; adc [rdx-5], eax; push rdi; test bh, ch; data16 leave; ret;
0xffffffff8225f56c: mov edi, 0x5f055aca; adc esp, ecx; shl ebx, 1; scasb [rdi]; iretd;
0xffffffff82656a28: mov edi, 0x5fffa187; xchg [rcx-0x5e7a2001], esp; jmp far fword ptr [rdi-0x40005e7e];
0xffffffff8245fd7b: mov edi, 0x60bca12f; adc esp, ecx; adc dl, ah; enter 0xdd96, 0xf2; iretd;
0xffffffff82705926: mov edi, 0x63e0df06; xchg esp, eax; sbb edi, [rdi-0x311f20f8]; iretd;
0xffffffff8245e538: mov edi, 0x6430d6db; or dl, bl; push rbx; leave; cdq; ret;
0xffffffff823ecf8c: mov edi, 0x6468c15d; xchg [rip-0x76a7431d], esp; sbb al, 0xbb; iretd;
0xffffffff82663db8: mov edi, 0x6fff6e94; xchg esp, eax; outsb dx, [rsi]; call far fword ptr [rdi];
0xffffffff82704123: mov edi, 0x75617408; leave; call qword ptr [rdx];
0xffffffff82688184: mov edi, 0x75617409; leave; jmp far fword ptr [rdx+0xaf1deff];
0xffffffff82702c73: mov edi, 0x7561740a; leave; jmp qword ptr [rbx+3];
0xffffffff8265a350: mov edi, 0x7fff94cc; int3; xchg esp, eax; call far fword ptr [rdi-0x34];
0xffffffff8264efc0: mov edi, 0x7fffc970; outsd dx, [rsi]; leave; jmp far fword ptr [rdi];
0xffffffff8264a804: mov edi, 0x7fffdccc; leave; fdiv st(7), st; lahf; enter 0xffdc, 0xff; ret;
0xffffffff8264c3b8: mov edi, 0x8fffd489; mov esp, edx; jmp far fword ptr [rdi+0x7fffd487];
0xffffffff8236f966: mov edi, 0x947e7935; pop rbp; fdivr st, qword ptr [rax]; out 0xb9, al; leave; ret 0xd7dd;
0xffffffff826565f0: mov edi, 0x9fffa28b; mov esp, [rdx-0x5d74c001]; call far fword ptr [rdi];
0xffffffff823cd303: mov edi, 0xa083d4ca; pop rdi; add al, 0x7e; pop rsp; jmp qword ptr [r15+0x69];
0xffffffff8252f244: mov edi, 0xa6796c29; xchg esp, eax; lodsb [rsi]; ret 0x1b5d;
0xffffffff8265a478: mov edi, 0xafff9498; xchg edi, eax; xchg esp, eax; call far fword ptr [rdi];
0xffffffff8264ab28: mov edi, 0xafffdc12; adc esp, ebx; call far fword ptr [rdi-0x400023f0];
0xffffffff826425d8: mov edi, 0xaffffc01; add esp, edi; dec dword ptr [rdi-2]; sti; jmp far fword ptr [rdi];
0xffffffff82335f86: mov edi, 0xb1870d72; leave; mov cl, 0xd3; adc al, 0x28; or [rax], cl; ret;
0xffffffff825228fd: mov edi, 0xb7a66c01; sub esp, eax; ret;
0xffffffff82328a7f: mov edi, 0xbb8faa99; pop rbp; xchg edi, esp; iretd;
0xffffffff826680d9: mov edi, 0xbd9fff5c; pop rsp; call far fword ptr [rdi-0x43];
0xffffffff8254bcc2: mov edi, 0xbdf70ede; mov esp, edx; ret 0xa48c;
0xffffffff8265a385: mov edi, 0xbe9fff94; xchg esp, eax; call far fword ptr [rdi];
0xffffffff820020dd: mov edi, 0xbf30ff01; add edi, edi; pop rsp; outsd dx, [rsi]; add eax, 0x1bf28ff; jmp far fword ptr [rbx];
0xffffffff82650a66: mov edi, 0xbf5ebfff; dec edi; pop rsp; mov edi, 0xbf5aafff; call far fword ptr [rdi+0x5a];
0xffffffff8265a4b0: mov edi, 0xbfff948f; mov ss, [rdi+rdi*8-0x6b71c1]; dec dword ptr [rbp-0x7590006c]; xchg esp, eax; jmp far fword ptr [rdi+0x6fff9488];
0xffffffff8265a04c: mov edi, 0xbfff9566; pop rsp; xchg ebp, eax; call far fword ptr [rdi-0x10006aa5];
0xffffffff823a7f15: mov edi, 0xc3c5a7c2; leave; ret 0x2c99;
0xffffffff823f3da7: mov edi, 0xc91338df; sub esp, esp; iretd;
0xffffffff82650a68: mov edi, 0xcfffbf5e; pop rsp; mov edi, 0xbf5aafff; call far fword ptr [rdi+0x5a];
0xffffffff8144edc4: mov edi, 0xd4; add [rdi], cl; xchg esp, eax; ret 0x894c;
0xffffffff82648700: mov edi, 0xdfffe5ca; leave; in eax, 0xff; iretd;
0xffffffff8231e9b0: mov edi, 0xe4137e5c; xchg [rcx], esp; sti; cmp esi, edx; stosd [rdi]; ret 0xf7e7;
0xffffffff822fd005: mov edi, 0xe7d919b; xchg esp, eax; and dword ptr [rdi-0x67], 0xfcc5a337; pop rsp; iretd;
0xffffffff82439caa: mov edi, 0xf69f9ff9; adc esp, edx; popfq; ret 0xe42;
0xffffffff826562b8: mov edi, 0xfffa35c; pop rsp; mov [0xa35b8fffa35bcfff], eax; call far fword ptr [rdi+0x5b];
0xffffffff82655f64: mov edi, 0xfffa45c; pop rsp; movsb [rdi], [rsi]; jmp far fword ptr [rdi];
0xffffffff824d6e82: mov edi, [rbp+rdi*4-0x28]; leave; pop rax; ret;
0xffffffff8245bd78: mov edi, [rsi+0x5b]; enter 0x2e9c, 0x23; pop rsp; mov eax, 0x283183dc; mov bh, 0x90; ret 0x5534;
0xffffffff82480086: mov edi, [rsi-0x56]; leave; mov ch, 8; and [rsp+rax-0x56], dh; ret 0x4a5;
0xffffffff81c75ded: mov edi, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff81e01936: mov edi, eax; mov rdx, [rsp+8]; mov rax, [rsp]; add rsp, 0x18; jmp rdi;
0xffffffff82343b21: mov edi, ebp; mov esp, ebx; iretd;
0xffffffff82494d8b: mov edi, ebx; xchg esp, eax; fild st, word ptr [rdi+0x417389e1]; leave; iretd;
0xffffffff81a47578: mov edi, edi; add rsp, 0x18; xor eax, eax; ret;
0xffffffff81a459a6: mov edi, edi; add rsp, 0x28; xor eax, eax; pop rbx; ret;
0xffffffff822ca055: mov edx, 0x1368b317; mov [rsi-0x38f59e83], edx; sbb esp, ebp; ret 0x6313;
0xffffffff82410127: mov edx, 0x13a5534; leave; xlat [rbx]; ret 0xc487;
0xffffffff823c209c: mov edx, 0x3673a95c; or ebx, [rbx]; xchg esp, eax; mov gs, [rcx]; ret 0xdf46;
0xffffffff82237b58: mov edx, 0x41444c35; rcl byte ptr [rax-0xcc7c40a], 0xb2; pop rsp; ret;
0xffffffff81291c5c: mov edx, 0x415b0037; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff81017eef: mov edx, 0x415b006c; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81017eee: mov edx, 0x415b006c; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff8236c04a: mov edx, 0x462603b4; cmpsb [rsi], [rdi]; xchg esp, eax; xchg ebx, eax; ret;
0xffffffff83474ed2: mov edx, 0x48fdd39b; add esp, 8; pop rbx; ret;
0xffffffff83469ad2: mov edx, 0x48fdd44f; add esp, 8; pop rbx; ret;
0xffffffff834675d2: mov edx, 0x48fdd474; add esp, 8; pop rbx; ret;
0xffffffff834578d2: mov edx, 0x48fdd571; add esp, 8; pop rbx; ret;
0xffffffff834276d2: mov edx, 0x48fdd873; add esp, 8; pop rbx; ret;
0xffffffff823f73b0: mov edx, 0x4b44dd4b; xchg [rbp-0x65e2aecd], bl; in eax, dx; mov rsp, r8; ret;
0xffffffff820033e8: mov edx, 0x4ff0b84; pop rsp; add eax, 0xb8473ff; jmp far fword ptr [rsi-0x700f47c];
0xffffffff822fe8aa: mov edx, 0x5c746a0a; adc eax, 0x40ab8d; mov ebp, 0xde2f66a2; mov ah, 0x16; adc esp, edi; ret;
0xffffffff8254625b: mov edx, 0x5cc38837; pop rsp; ret 0xa99a;
0xffffffff8238d5d4: mov edx, 0x5d65456c; push rsi; xchg rdx, rax; sbb bl, ah; leave; ret 0x298a;
0xffffffff8238d5d3: mov edx, 0x5d65456c; push rsi; xchg rdx, rax; sbb bl, ah; leave; ret 0x298a;
0xffffffff82433ab2: mov edx, 0x5d83c24f; imul eax, edx, 0xffffff8b; mov cl, 0x60; mov esp, ss; ret;
0xffffffff8251a948: mov edx, 0x78f13ca0; scasd [rdi]; pop rsp; push rsi; bnd ret 0x9f7;
0xffffffff82554bd1: mov edx, 0x7ca8231f; xchg esp, eax; add al, 0xce; iretd;
0xffffffff81811e24: mov edx, 0x825fcce8; mov eax, 0xfffffff4; add eax, ecx; add al, [rdx+8]; add rsp, 4; ret;
0xffffffff822ab745: mov edx, 0x826df978; in eax, dx; pop rsp; ret;
0xffffffff834a6f1f: mov edx, 0x8a05f6fd; xchg esp, eax; scasb [rdi]; call qword ptr [rax];
0xffffffff8248aeb7: mov edx, 0xa3abd5a6; leave; iretd;
0xffffffff8227b8b3: mov edx, 0xa962eea7; sbb esp, esp; ret;
0xffffffff8232a51b: mov edx, 0xb098683d; leave; out dx, eax; ret 0xe221;
0xffffffff82359c28: mov edx, 0xb3e0f2dd; pop rdx; fstp qword ptr [rdx+0x30], st; pop rsp; ret 0x941c;
0xffffffff82670d5e: mov edx, 0xba0cb1fd; std; pop rsp; or edi, [rdx-0x45f4e303]; std; ret 0xba0a;
0xffffffff826518f2: mov edx, 0xbaca5fff; dec dword ptr [rdi]; leave; mov edx, 0xbac7afff; jmp far fword ptr [rdi-0x3a];
0xffffffff822a9455: mov edx, 0xc9fb86a6; sub al, 0x35; add esp, 0xffffffd1; ret;
0xffffffff8112de5b: mov edx, 0xcde8d7eb; xchg esp, eax; clc; jmp qword ptr [rsi+0x66];
0xffffffff82372c31: mov edx, 0xcfb372d8; nop; adc ch, [rbx+0x34]; mov esp, esi; neg dword ptr [rsp+rax+0x2a27bc6a]; ret 0x8126;
0xffffffff8243bd92: mov edx, 0xd06c4911; mov eax, 0x7d4d908f; leave; sbb eax, 0x6356fc6a; adc esi, ebx; call far fword ptr [rax+rbp*4+0x4048455b];
0xffffffff8242be2a: mov edx, 0xd9a3f8b1; pop rsp; in al, dx; ret 0x2753;
0xffffffff824be816: mov edx, 0xe68c2d92; fwait; out dx, al; leave; call qword ptr [rax+0x28];
0xffffffff8237e94e: mov edx, 0xec316b5; mov esp, [rbx+0x53]; ret 0x9a1a;
0xffffffff834a6f1a: mov edx, 0xffa9e9fd; mov edx, 0x8a05f6fd; xchg esp, eax; scasb [rdi]; call qword ptr [rax];
0xffffffff8168981e: mov edx, 0xffffffff; test ecx, ecx; cmovs eax, edx; add rsp, 4; ret;
0xffffffff812204f1: mov edx, [rcx]; mov esi, 0x3d8b6500; xchg esp, eax; cld; fidivr st, word ptr [rsi-0x18]; iretd;
0xffffffff81e018f7: mov edx, [rsp+0x60]; mov rcx, [rsp+0x58]; mov rax, [rsp+0x50]; mov rbp, [rsp+0x20]; add rsp, 0xa8; ret;
0xffffffff81e01939: mov edx, [rsp+8]; mov rax, [rsp]; add rsp, 0x18; jmp rdi;
0xffffffff82554f6f: mov edx, ebp; in eax, dx; mov ebp, 0x90478319; data16 leave; ret;
0xffffffff8247917a: mov edx, ebp; pop rsp; mov dl, 0xb6; ret;
0xffffffff83455f5f: mov edx, ebp; std; add rsp, 8; pop rbx; ret;
0xffffffff83455f5e: mov edx, ebp; std; add rsp, 8; pop rbx; ret;
0xffffffff83475ea7: mov edx, ebx; std; add rsp, 8; pop rbx; ret;
0xffffffff81713c78: mov edx, edi; in eax, dx; mov [rcx], eax; xor eax, eax; add rsp, 4; ret;
0xffffffff812d958a: mov edx, esi; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff83465f42: mov edx, esp; std; add rsp, 8; pop rbx; ret;
0xffffffff81721882: mov es, [rax]; add [rax], al; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81170fd2: mov es, [rax]; add [rax], al; add rsp, 0x18; pop rbx; ret;
0xffffffff823d537a: mov es, [rax]; xchg esp, eax; xchg edi, eax; ret;
0xffffffff824e80f9: mov es, [rbx+0x1c598b87]; pop rsp; sub edi, esi; iretd;
0xffffffff82526b63: mov esi, 0x127f7cb6; sbb esp, esp; ret;
0xffffffff818e3a77: mov esi, 0x148; add [rdi], cl; xchg esp, eax; ret;
0xffffffff8237ef78: mov esi, 0x1559e775; pop rsp; sti; sub al, 1; iretd;
0xffffffff8233adf3: mov esi, 0x15e03cfc; leave; mov al, 0x9d; pushfq; iretd;
0xffffffff822e0f8d: mov esi, 0x172b2317; cmp al, ch; leave; sub eax, [rcx]; mov al, 0x17; ret 0x7e90;
0xffffffff823b4b6e: mov esi, 0x190dc0df; shl esp, 0xa2; xchg esp, eax; lodsb [rsi]; sub [rbp-0x3de8d60d], ebp; iretd;
0xffffffff8222f31e: mov esi, 0x24eb2619; mov esp, [rax-0x2c1cfda7]; mov r9b, 0x4a; ret;
0xffffffff81bb919a: mov esi, 0x25f; add [rdi], cl; xchg esp, eax; ret 0x8fe9;
0xffffffff82312ac7: mov esi, 0x2bcf28f6; mov esp, cs; fmul st(2), st; cmp [rcx], ebp; pop rax; ret;
0xffffffff82312ac8: mov esi, 0x2bcf28f6; mov esp, cs; fmul st(2), st; cmp [rcx], ebp; pop rax; ret;
0xffffffff834a194e: mov esi, 0x31001e9f; leave; test rax, rax; mov eax, 0xfffffff4; cmovne eax, ecx; ret;
0xffffffff810fd272: mov esi, 0x36c; add cl, [rdi]; xchg esp, eax; ret 0x9529;
0xffffffff81811c98: mov esi, 0x388; add [rdi], cl; xchg esp, eax; ror byte ptr [rax-0x3f], 0xe0; add ecx, [rax+9]; ret;
0xffffffff812204f3: mov esi, 0x3d8b6500; xchg esp, eax; cld; fidivr st, word ptr [rsi-0x18]; iretd;
0xffffffff818a5f2a: mov esi, 0x40c; add [rdi], ecx; xchg esp, eax; ret 0xe2c1;
0xffffffff834a17ce: mov esi, 0x48fdd0d2; add esp, 8; pop rbx; ret;
0xffffffff834789ce: mov esi, 0x48fdd360; add esp, 8; pop rbx; ret;
0xffffffff834657ce: mov esi, 0x48fdd492; add esp, 8; pop rbx; ret;
0xffffffff813dcbbe: mov esi, 0x48ffddd2; add esp, 0x18; ret;
0xffffffff82408111: mov esi, 0x6934f818; xchg [rdx+0x78bc9cdf], edx; pop rsp; xor eax, 0x32b7034e; ret;
0xffffffff822ae214: mov esi, 0x73deedbd; leave; ret 0xaffc;
0xffffffff82688582: mov esi, 0x7561540a; leave; call rdi;
0xffffffff8268854a: mov esi, 0x7561540a; leave; jmp far fword ptr [rax-0x410a8801];
0xffffffff826885a9: mov esi, 0x7561540a; leave; jmp qword ptr [rdi+rcx*8-2];
0xffffffff826885ea: mov esi, 0x7561540b; leave; jmp far fword ptr [rbp-0x19];
0xffffffff82678800: mov esi, 0x7561540f; leave; jmp qword ptr [rbx+3];
0xffffffff812193c7: mov esi, 0x80; add [rbp+rbp+0x48], dh; add esp, 8; pop rbx; pop r14; ret;
0xffffffff82291601: mov esi, 0xaf501fb8; or ah, [rcx+0x4b826ba8]; leave; in al, dx; iretd;
0xffffffff823eb36c: mov esi, 0xbde33bd4; pop rsp; cmp eax, 0xd4fb9c62; ret 0xfed6;
0xffffffff8264eef1: mov esi, 0xbe3fffc9; leave; jmp far fword ptr [rdi-0x43];
0xffffffff8247ae50: mov esi, 0xc1177947; xchg esp, eax; mov al, [rbx-0x23]; xchg [rcx+rax*2+0x75], ecx; iretd;
0xffffffff8223c0c9: mov esi, 0xc4178e44; and [rsi+0x49], dh; leave; hlt; xor bh, [rcx+rbx]; ret;
0xffffffff822c481f: mov esi, 0xc66ad8e5; pop rsp; ret;
0xffffffff824feb76: mov esi, 0xd572bfc4; adc esp, ebp; hlt; cmp al, dh; adc esi, [rbx]; iretd;
0xffffffff823ef2a6: mov esi, 0xd62665c4; pop rsp; ret;
0xffffffff810b0376: mov esi, 0xf01ee53; xchg esp, eax; ret 0xca08;
0xffffffff82413db4: mov esi, 0xfbe41df7; out dx, al; leave; fisttp word ptr [rbp-0x1e2221c7], st; ret;
0xffffffff82551890: mov esi, [rcx-0xa]; in al, dx; scasd [rdi]; xchg [rcx-0x50], esp; cmp al, 0xf6; ret;
0xffffffff822bb677: mov esi, [rcx]; pop rsp; iretd;
0xffffffff82675368: mov esi, [rdi+0x37367d9]; push rsp; leave; or edx, gs:[rax+0x6d6ecc93]; ret;
0xffffffff81c75de3: mov esi, [rsp+0x20]; mov r13, [rsp+0x28]; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff810b057b: mov esi, [rsp+8]; mov cr0, rsi; mov rsp, [rsp]; pop rbp; ret;
0xffffffff8222b51b: mov esi, ecx; pop rsp; xchg ebp, eax; mov edi, ebx; ret;
0xffffffff8245571a: mov esi, es; pop rsp; ret 0xf9f2;
0xffffffff8236c048: mov esi, esp; mov edx, 0x462603b4; cmpsb [rsi], [rdi]; xchg esp, eax; xchg ebx, eax; ret;
0xffffffff81b2818a: mov esi, fs; dec dword ptr [rcx-0x7a3fce3f]; leave; cmovns rax, rbx; pop rbx; ret;
0xffffffff824be819: mov esi, fs; fwait; out dx, al; leave; call qword ptr [rax+0x28];
0xffffffff826f6b68: mov esp, 0x27647407; leave; cmp al, 0xe7; or dl, fs:[rdi+rax*4+0x23]; iretd;
0xffffffff816454c7: mov esp, 0x2f024; add [rcx], dh; imul al; xchg rsp, rax; ret 0x48ff;
0xffffffff8135db18: mov esp, 0x3101abe2; ror byte ptr [rax+0x3b], cl; sbb [r15], cl; xchg esp, eax; ret 0x5389;
0xffffffff816454ac: mov esp, 0x32824; add [rcx], dh; imul al; xchg esp, eax; ret 0x48ff;
0xffffffff81645476: mov esp, 0x39824; add [rcx], dh; imul al; popfq; xchg esp, eax; ret 0x48ff;
0xffffffff81baf5e3: mov esp, 0x415b000c; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff834595d0: mov esp, 0x48fdd554; add esp, 8; ret;
0xffffffff819d29a0: mov esp, 0x48ff7e60; add esp, 8; ret;
0xffffffff824375ec: mov esp, 0x4aa569c; insb [rdi], dx; mov eax, [0xbcdf7b21c1ffc71a]; xchg edx, eax; pop rsp; ret;
0xffffffff812dbb8e: mov esp, 0x4ebc931; or rcx, 1; mov rax, rcx; add rsp, 0x10; ret;
0xffffffff822547b7: mov esp, 0x55fbef98; sub ax, 0x2b15; int 0x2d; xchg esp, eax; cdq; ret;
0xffffffff82687ff4: mov esp, 0x6be47427; or [rcx+0x75], edx; leave; jmp qword ptr [rbx+0x74];
0xffffffff8227fb00: mov esp, 0x6ecc4543; out 0x86, al; adc eax, 0x2c9bfe79; in al, dx; leave; iretd;
0xffffffff811b1c71: mov esp, 0x8948db31; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff823bb9eb: mov esp, 0x911679e5; xchg ebp, eax; adc dword ptr [rdi-0x476bdc98], 0x64; pop rsp; and ecx, edi; ret;
0xffffffff8241e8f7: mov esp, 0x9731bc7e; mov esp, edx; cwde; iretd;
0xffffffff8243e30a: mov esp, 0x9ea1154d; push rcx; out dx, al; pop rsi; xchg [rbx-0x12], esp; ret 0xcc20;
0xffffffff8226e768: mov esp, 0xbb343286; xchg esp, eax; cli; and eax, 0xcbdd2e95; add [rdx+rax*2+0x2e], edi; ret 0x77ae;
0xffffffff835a8851: mov esp, 0xbc434afd; std; pop rsp; mov esp, 0xbc466efd; std; iretd;
0xffffffff8264eefd: mov esp, 0xbcafffc9; leave; jmp far fword ptr [rdi+0x4fffc9ba];
0xffffffff823693cf: mov esp, 0xc92c382f; cmc; xchg esi, esp; iretd;
0xffffffff816c2c7e: mov esp, 0xd348240c; out 0x48, eax; mov eax, edi; add rsp, 0x20; ret;
0xffffffff8113c13c: mov esp, 0xe8001f0f; cmp edx, [rbp-0x34]; add [rax-0x75], cl; xchg [rax+0x48000000], esp; sub eax, esi; ret;
0xffffffff8256badb: mov esp, 0xe81a9499; push 0x6ba553f9; xchg esp, eax; iretd;
0xffffffff810c2c91: mov esp, 0xfdb8500; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; pop rbp; ret;
0xffffffff81303f59: mov esp, [rax+0x1000000]; mov qword ptr [rax], 0xffffffff82583c18; xor eax, eax; pop rbx; ret;
0xffffffff813141d9: mov esp, [rax+0x2000000]; xor eax, eax; pop rbx; ret;
0xffffffff8176b5f1: mov esp, [rax+0x69]; add [rdi], cl; mov dh, 0x57; sub eax, 0xff6c92e9; jmp qword ptr [rsi-0x70];
0xffffffff81137b81: mov esp, [rax+0xbf01e5]; add [rax], eax; add [rax-0x39], cl; ret 0xfad0;
0xffffffff8191265a: mov esp, [rax+0xf00000c]; mov [rbp+0x75003678], bh; sbb ecx, [rax-0x7f]; ret;
0xffffffff822fce25: mov esp, [rax-0x20d41d83]; movsd [rdi], [rsi]; ret;
0xffffffff8222f323: mov esp, [rax-0x2c1cfda7]; mov r9b, 0x4a; ret;
0xffffffff82260751: mov esp, [rax-0x34891466]; in al, dx; push 0xffffffff8961cfae; iretd;
0xffffffff822f8cc2: mov esp, [rax-0x37f016e7]; ret;
0xffffffff822f8cc3: mov esp, [rax-0x37f016e7]; ret;
0xffffffff8200b464: mov esp, [rax-0x50]; jmp far fword ptr [rax-0x3b00fb26];
0xffffffff8159ec48: mov esp, [rax-0x72fffffe]; add al, 0x48; pop rbx; ret;
0xffffffff8355bb21: mov esp, [rax-0x7f]; push qword ptr [rax]; mov [rax-0x7f], fs; push qword ptr [rax]; lea esp, [rax-0x7f]; jmp qword ptr [rax];
0xffffffff826675f5: mov esp, [rax-1]; iretd;
0xffffffff826675f1: mov esp, [rax-1]; mov r12, [r8-1]; iretd;
0xffffffff826675ed: mov esp, [rax-1]; scasd [rdi]; mov esp, [rax-1]; mov r12, [r8-1]; iretd;
0xffffffff8243f22d: mov esp, [rax]; jmp qword ptr [rdi];
0xffffffff8232add9: mov esp, [rax]; mov [0x4bd9a39256b71f3b], al; mov ebx, ss; iretd;
0xffffffff8185e3fc: mov esp, [rax]; or [rax], eax; add [rax+rax*8-0x4917fa8b], al; imul ecx, [rdi+rdi*8+0x415bc031], 0x5e; ret;
0xffffffff810df5f1: mov esp, [rax]; rol byte ptr [rax], cl; mov rax, 0xffffffffffffffda; ret;
0xffffffff8149f5f1: mov esp, [rax]; xchg esi, eax; add [rax-0x7d], cl; jmp qword ptr [rax];
0xffffffff818670f1: mov esp, [rbp+0x76e90059]; or esp, esi; jmp qword ptr [rsi+0xf];
0xffffffff824580ce: mov esp, [rbp-0x3783a205]; cmp edi, esi; sbb eax, 0x924655e3; ret 0x7aa2;
0xffffffff82395fdc: mov esp, [rbp-0x5f]; stosb [rdi]; sub ah, [rbx+rdi-0x4d776f4c]; push rbx; ret 0xd9d5;
0xffffffff8239a32c: mov esp, [rbx+0x46]; outsb dx, [rsi]; iretd;
0xffffffff8237e953: mov esp, [rbx+0x53]; ret 0x9a1a;
0xffffffff82294dd8: mov esp, [rbx+0x6d914fcc]; ret;
0xffffffff826cf1a4: mov esp, [rbx+0x6d]; in eax, dx; cwde; mov cl, 0xe5; jmp far fword ptr [rax-0x23];
0xffffffff824aa1ec: mov esp, [rbx+0x70]; ret 0x683e;
0xffffffff826bdf35: mov esp, [rbx+0x73]; ret;
0xffffffff824dfc23: mov esp, [rbx+rdi*2]; cmpsq [rsi], [rdi]; int3; push 0xffffffff9c313ee6; ret;
0xffffffff8347c601: mov esp, [rbx+rdx*8]; std; add rsp, 8; ret;
0xffffffff814172f1: mov esp, [rbx-0x17acff62]; in eax, 0xec; std; dec dword ptr [rax-0x77]; ret;
0xffffffff826e49a9: mov esp, [rbx-0x39]; in al, dx; iretd;
0xffffffff813c8aa2: mov esp, [rbx-0x3f38b700]; ror byte ptr [rbx-0x40167ec4], 2; bnd jmp qword ptr [rsi+0x66];
0xffffffff813c8a82: mov esp, [rbx-0x3f38b700]; ror byte ptr [rbx-0x60167ec4], 2; bnd jmp qword ptr [rsi+0x66];
0xffffffff823a3cd3: mov esp, [rbx-0x42]; mov bh, 0x18; xor dword ptr [rbx], 0xfffffffe; add esi, [rdi+0x45]; data16 bnd ret;
0xffffffff826cf2bc: mov esp, [rbx-0x6b]; fnstenv [rax-0x1b]; jmp qword ptr [rdx+0x75];
0xffffffff8227bbac: mov esp, [rbx-0x78898237]; test eax, 0x58cd485f; ret 0x5e96;
0xffffffff82810515: mov esp, [rbx]; jmp qword ptr [rdi-0x41];
0xffffffff82431216: mov esp, [rbx]; ret;
0xffffffff82431215: mov esp, [rbx]; ret;
0xffffffff810df2f1: mov esp, [rbx]; rol byte ptr [rax], cl; mov rax, 0xffffffffffffffda; ret;
0xffffffff8159f2f1: mov esp, [rbx]; xchg [rax], al; cmp [rdi+0x28], rsi; seta al; ret;
0xffffffff8251f4ab: mov esp, [rcx+0x149064dc]; pop rsp; adc esi, [rsi+0x36cf4934]; lodsd [rsi]; ret 0xf7da;
0xffffffff82443ecf: mov esp, [rcx+0x5b]; ret;
0xffffffff81973561: mov esp, [rcx+0x79]; jmp qword ptr [rbp+0x48];
0xffffffff817eac71: mov esp, [rcx+rax*4]; cdqe; ret;
0xffffffff81b8e548: mov esp, [rcx+rax-0x1e3f0000]; add bh, [rbx]; mov ebx, [rcx+rax+0x5770000]; or eax, 0x304; pop rbx; ret;
0xffffffff824d1568: mov esp, [rcx+rdi+0x3f976e61]; cld; jmp qword ptr [rsp+rsi*4-0x43];
0xffffffff8253f679: mov esp, [rcx-0x2c]; ficomp st, word ptr [rax+rsi+8]; jmp qword ptr [rsi-0x549273cc];
0xffffffff817574f1: mov esp, [rcx-0x3fceff96]; ret;
0xffffffff824c3741: mov esp, [rcx-0x52]; ret;
0xffffffff8251ea61: mov esp, [rcx-0x56]; mov cl, 0xe8; ret;
0xffffffff82656a19: mov esp, [rcx-0x5e758001]; jmp far fword ptr [rdi-0x77];
0xffffffff82379e1b: mov esp, [rcx-0x5e]; pop rsp; and esp, [rax-0xc]; fdiv st, qword ptr [rdx-0x5e170a48]; or ch, [rbp-0x76368f85]; ret 0x61aa;
0xffffffff818286f2: mov esp, [rcx-0x6a177d86]; and eax, [rax+rax+1]; ret;
0xffffffff82336ddb: mov esp, [rcx-0x71bb9aff]; sbb [rax+0x1cc91183], bh; shl dword ptr [rbx-0x2ad49c63], 0x3d; iretd;
0xffffffff82275eb9: mov esp, [rcx-0x73]; mov [0x84622621910b12d6], eax; shl qword ptr [rip-0x76b44c2d], 0x19; int 0x42; scasb [rdi]; iretd;
0xffffffff817eaf71: mov esp, [rcx-0x7f]; add [rax-0x68], cl; ret;
0xffffffff82569f6d: mov esp, [rcx]; call far fword ptr [rbx];
0xffffffff825315b4: mov esp, [rcx]; iretd;
0xffffffff810df4f1: mov esp, [rcx]; rol byte ptr [rax], cl; mov rax, 0xffffffffffffffda; ret;
0xffffffff822804d3: mov esp, [rdi+0x53f4b5e1]; call far fword ptr [rdi-0x1a];
0xffffffff8248c551: mov esp, [rdi+0x59]; ret 0x68f3;
0xffffffff824824de: mov esp, [rdi+5]; and eax, [rbp-0xc]; mov ch, 0x41; ret 0x810a;
0xffffffff825480f4: mov esp, [rdi+rbp+0xf575933]; mov esi, 0xcdd355e2; call qword ptr [rcx+rcx*8+0x50];
0xffffffff811071f1: mov esp, [rdi+rcx*8-0x389cb800]; mov rax, [rax*8-0x7d819990]; mov qword ptr [rax+0x16190], 0; ret;
0xffffffff813b0ba1: mov esp, [rdi-0x30]; jmp qword ptr [rsi+0x66];
0xffffffff8225f9f5: mov esp, [rdi-0x3b]; cmpsb [rsi], [rdi]; add eax, 0x8c0ae0a4; iretd;
0xffffffff81470ba1: mov esp, [rdi-0x3c]; jmp qword ptr [rsi+0x66];
0xffffffff82257129: mov esp, [rdi-0x42710e69]; ret 0x82ce;
0xffffffff83443b04: mov esp, [rdi]; dec byte ptr [rax-0x77]; ret;
0xffffffff810deef1: mov esp, [rdi]; rol byte ptr [rax], cl; mov rax, 0xffffffffffffffda; ret;
0xffffffff823b8db9: mov esp, [rdx+0x1f695e30]; xor edx, [rdx-0x5c65ad67]; call rax;
0xffffffff826bf716: mov esp, [rdx+0x765e840]; ret 0xa2fa;
0xffffffff822cf66a: mov esp, [rdx+0x8d5a659]; iretd;
0xffffffff8235c3ee: mov esp, [rdx+rbx*2-0x3e]; or bl, r14b; scasd [rdi]; ret 0x9535;
0xffffffff8234a7ce: mov esp, [rdx+rdx*8+0x37]; xor dl, ch; iretd;
0xffffffff825432d9: mov esp, [rdx+rsi*2-0x53]; ret 0x8706;
0xffffffff81a173f1: mov esp, [rdx-0x48f0ffc2]; ret 0xc083;
0xffffffff8255eeaf: mov esp, [rdx-0x4de3cac4]; and esi, [rax]; cmp al, 0xbb; imul dword ptr gs:[rbx*1+0x2bf0d078]; movsb [rdi], [rsi]; iretd;
0xffffffff826565ed: mov esp, [rdx-0x5d744001]; call far fword ptr [rdi+0x3fffa28b];
0xffffffff826565f5: mov esp, [rdx-0x5d74c001]; call far fword ptr [rdi];
0xffffffff826565fd: mov esp, [rdx-0x5d752001]; call far fword ptr [rdi];
0xffffffff826c0f4e: mov esp, [rdx-0xf]; and bl, [rip-0x194fe02]; iretd;
0xffffffff810f1261: mov esp, [rdx-1]; jmp qword ptr [rsi+0x66];
0xffffffff817e00b1: mov esp, [rdx]; add [rax], al; mov rax, rbx; pop rbx; ret;
0xffffffff8241226c: mov esp, [rdx]; outsd dx, [rsi]; iretd;
0xffffffff824c01d2: mov esp, [rdx]; ret 0x5594;
0xffffffff823dcdf2: mov esp, [rdx]; ret 0xb3ee;
0xffffffff810df3f1: mov esp, [rdx]; rol byte ptr [rax], cl; mov rax, 0xffffffffffffffda; ret;
0xffffffff824478db: mov esp, [rip+0x4aa86203]; cld; mov edx, 0x271da1ee; ret;
0xffffffff835262f1: mov esp, [rip-0x7f]; call qword ptr [rax-0x74];
0xffffffff817047f5: mov esp, [rsi+0x1000006]; pop rbx; ret;
0xffffffff8120c7dc: mov esp, [rsi+0x58838300]; or al, [rax]; add bh, bh; pop rbx; ret;
0xffffffff81704aed: mov esp, [rsi+rax+0x5b400000]; pop r14; pop r15; ret;
0xffffffff823935e4: mov esp, [rsi+rax+0x5f]; test al, 0x99; sub [rcx+rax*2-0x5c1a8774], dh; or eax, 0xeccebe9d; ret;
0xffffffff81a171f1: mov esp, [rsi+rdi-0x7874b800]; add [rdx], al; add [rax], al; ret;
0xffffffff8118aff1: mov esp, [rsi-0x39]; add [rax-0x16], bh; ret;
0xffffffff816b57c1: mov esp, [rsi-0x43]; jmp qword ptr [rsi+0x66];
0xffffffff8228e534: mov esp, [rsi-0x47]; ret;
0xffffffff8355e009: mov esp, [rsi-0x7f]; jmp rax;
0xffffffff82665f05: mov esp, [rsi-1]; outsd dx, [rsi]; mov ah, [rsi-1]; pop qword ptr [rdi-0x7910009a]; jmp far dword ptr [rdi-0x3000997c];
0xffffffff829bb7bc: mov esp, [rsi]; add [rax], al; iretd;
0xffffffff825255a9: mov esp, [rsi]; lodsd [rsi]; or esp, [rdx-0x5e]; stosd [rdi]; ret;
0xffffffff8182eff1: mov esp, [rsi]; pop rbp; add cl, ch; mov bl, 0xfe; jmp qword ptr [rsi+0xf];
0xffffffff810deff1: mov esp, [rsi]; rol byte ptr [rax], cl; mov rax, 0xffffffffffffffda; ret;
0xffffffff81c75dde: mov esp, [rsp+0x18]; mov r14, [rsp+0x20]; mov r13, [rsp+0x28]; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff81c72c9f: mov esp, [rsp+8]; add rsp, 0x10; ret;
0xffffffff810b0583: mov esp, [rsp]; pop rbp; ret;
0xffffffff82312acd: mov esp, cs; fmul st(2), st; cmp [rcx], ebp; pop rax; ret;
0xffffffff8224070b: mov esp, ds; call rax;
0xffffffff81bca4e0: mov esp, ds; jmp qword ptr [rsi-0x7b];
0xffffffff82482e7c: mov esp, ds; ret;
0xffffffff819742a0: mov esp, eax; add [rax-0x77], ecx; ret 0xc148;
0xffffffff815b2520: mov esp, eax; add al, [rax]; add [rax-0x77], cl; ret 0xd348;
0xffffffff81c488c1: mov esp, eax; add dword ptr [rcx+rcx*4-0x10], 0x415c415b; pop rsi; pop r15; ret;
0xffffffff81552bd6: mov esp, eax; call far fword ptr [rbx+0x41];
0xffffffff811692a1: mov esp, eax; hlt; jmp qword ptr [rsi+0x66];
0xffffffff82649c69: mov esp, eax; jmp far fword ptr [rdi-0x76];
0xffffffff8264f939: mov esp, eax; jmp far fword ptr [rdi];
0xffffffff8169b46f: mov esp, eax; jmp qword ptr [rbp+0x48];
0xffffffff812ae7a4: mov esp, eax; jmp qword ptr [rsi+0xf];
0xffffffff817af9c3: mov esp, eax; lodsd [rsi]; jmp qword ptr [rsi+0xf];
0xffffffff81a34c73: mov esp, eax; pop rsp; add [rbx+0x41], bl; pop rsi; ret;
0xffffffff81e011f0: mov esp, eax; push r12; ret;
0xffffffff822576dc: mov esp, eax; pushfq; ret 0xc1f5;
0xffffffff823d3812: mov esp, eax; ret 0x8b71;
0xffffffff8105fbc6: mov esp, eax; ret;
0xffffffff822b0ca7: mov esp, eax; shl ebx, 0x4e; mov eax, [0x87248957b79fbcae]; iretd;
0xffffffff822a81cc: mov esp, eax; xchg [rsi+rcx*8], edi; insb [rdi], dx; call far fword ptr [rdx-0x37];
0xffffffff81b0b780: mov esp, ebp; add al, 0; add [rbp+0xf1274c9], al; scasd [rdi]; ret 0xc639;
0xffffffff822ded1b: mov esp, ebp; and [rbx+rdi*4+0x180b13d2], cl; fnsave [rax-0x49f9268e]; adc eax, 0x9a531c74; ret 0x39fd;
0xffffffff82701ba5: mov esp, ebp; call far fword ptr [rbp+rbp*2+0x745f756d];
0xffffffff82703789: mov esp, ebp; call rcx;
0xffffffff824e93c9: mov esp, ebp; cmovp esp, [rax-0x11]; mov [0x177a2218e6748b49], al; iretd;
0xffffffff824e93c8: mov esp, ebp; cmovp esp, [rax-0x11]; mov [0x177a2218e6748b49], al; iretd;
0xffffffff826ff042: mov esp, ebp; jmp far fword ptr [rdi-0x2af8194f];
0xffffffff8232771c: mov esp, ebp; mov ah, 0xfe; mov r14, 0xbe7952c3b6983806; mov [rbp+0x79], eax; imul eax, [r10], 0xf; iretd;
0xffffffff81036abe: mov esp, ebp; pop rbp; ret;
0xffffffff824141c2: mov esp, ebp; push rbx; iretd;
0xffffffff824e879f: mov esp, ebp; ret;
0xffffffff8123e1b1: mov esp, ebx; add [r8-0x77], r9b; ret;
0xffffffff813629d0: mov esp, ebx; call far fword ptr [rbx+0x41];
0xffffffff8264928d: mov esp, ebx; call far fword ptr [rdi-0x75];
0xffffffff822d565f: mov esp, ebx; iretd;
0xffffffff82649299: mov esp, ebx; jmp far fword ptr [rdi];
0xffffffff824dd288: mov esp, ebx; jmp qword ptr [rbx-0x39];
0xffffffff815232f1: mov esp, ebx; lea eax, [rax]; mov eax, 0xffffffa1; ret;
0xffffffff8248f1fc: mov esp, ebx; mov [0xcd976b87f7db2acf], al; outsd dx, [rsi]; lodsd [rsi]; ret;
0xffffffff8249533d: mov esp, ebx; movsxd edx, [rcx]; ret;
0xffffffff8359cf88: mov esp, ebx; out dx, eax; call qword ptr [rsi-0x57001024];
0xffffffff8244a03c: mov esp, ebx; out dx, eax; jmp qword ptr [rbp-0x47fcc131];
0xffffffff823bcb74: mov esp, ebx; push gs; sbb al, 0xde; iretd;
0xffffffff818c5ff9: mov esp, ecx; add eax, [rax]; add [rcx], bh; shl dword ptr [rsi+0x13], 1; pop rbx; ret;
0xffffffff82409de1: mov esp, ecx; fiadd st, word ptr [rax]; iretd;
0xffffffff824bc2af: mov esp, ecx; lea esp, [rcx+0x2f6f12d8]; ret 0x94aa;
0xffffffff824271be: mov esp, ecx; mov eax, [0x5169a521e355ade0]; xor bl, al; xchg ebp, eax; add [rcx], esi; jmp qword ptr [rdx];
0xffffffff826e3e1b: mov esp, ecx; or bl, dl; mov [0x74c46b8b08aaf2f4], eax; iretd;
0xffffffff822fb801: mov esp, ecx; push rdx; mov edx, 0x491c28ea; call far fword ptr [rdi];
0xffffffff824de578: mov esp, ecx; ret 0x2157;
0xffffffff8227ecc9: mov esp, ecx; ret;
0xffffffff8236d3e8: mov esp, ecx; ror byte ptr [rbp+rdx*8+0xa3c7214], 1; adc ebp, 0x63; ret;
0xffffffff826e3ced: mov esp, ecx; stosb [rdi]; jmp qword ptr [rbx+0x3b];
0xffffffff8250d657: mov esp, ecx; xchg esi, eax; ret 0x5439;
0xffffffff81641dae: mov esp, edi; add [rax], al; add [rax-0x7d], cl; ret 0x8401;
0xffffffff8243b095: mov esp, edi; cdq; cmc; xor al, 0x4f; ret 0xff3d;
0xffffffff823213b7: mov esp, edi; insd [rdi], dx; iretd;
0xffffffff82543613: mov esp, edi; iretd;
0xffffffff82461a9c: mov esp, edi; mov ebp, 0x9009543b; ret;
0xffffffff8231ae6f: mov esp, edi; pop rcx; adc [rbp+0x57537f4e], dh; iretd;
0xffffffff8227bf55: mov esp, edi; sub al, 0x6b; iretd;
0xffffffff8241e8fc: mov esp, edx; cwde; iretd;
0xffffffff818c7f6e: mov esp, edx; dec dword ptr [rdi]; mov dh, 0xc0; ret;
0xffffffff8264c3bd: mov esp, edx; jmp far fword ptr [rdi+0x7fffd487];
0xffffffff8128e79e: mov esp, edx; jmp qword ptr [rsi+0x66];
0xffffffff824fa206: mov esp, edx; lodsd [rsi]; ret;
0xffffffff811833f1: mov esp, edx; mov dword ptr [rax], 0xe0c0c748; xor bl, [rax]; or dword ptr [rax+0x39], 0x6744047; add qword ptr [rdi+0x20], 1; ret;
0xffffffff8254bcc7: mov esp, edx; ret 0xa48c;
0xffffffff8227d329: mov esp, edx; ret;
0xffffffff83466122: mov esp, edx; std; add rsp, 8; pop rbx; ret;
0xffffffff82483f70: mov esp, edx; xor ebp, esi; mov ebx, 0xb790ae33; and al, 0xaf; add [rdi+5], ebx; ret;
0xffffffff81036d01: mov esp, es; add [rbx-0x2044b9fb], cl; add [rbx-0x76fbdbb4], ecx; ret 0xe283;
0xffffffff8155293e: mov esp, es; call far fword ptr [rbx+0x41];
0xffffffff8264f92d: mov esp, es; call far fword ptr [rdi-0x75];
0xffffffff8169b195: mov esp, es; jmp qword ptr [rbp+0x48];
0xffffffff8200d829: mov esp, es; jmp rsp;
0xffffffff8224b556: mov esp, es; push rcx; faddp st(7), st; ret 0x8979;
0xffffffff8238eb31: mov esp, es; ret 0x3f43;
0xffffffff8243ad93: mov esp, es; xchg bp, ax; call far fword ptr [rax-0x47671ed6];
0xffffffff826483a1: mov esp, esi; dec dword ptr [rdi]; mov dh, ah; dec edi; and esi, 0xe681bfff; jmp far fword ptr [rdi-0x7000197f];
0xffffffff81b24652: mov esp, esi; jmp qword ptr [rsi+0x66];
0xffffffff82372c3a: mov esp, esi; neg dword ptr [rsp+rax+0x2a27bc6a]; ret 0x8126;
0xffffffff8106d1c9: mov esp, esi; pop r15; pop r14; pop r13; pop r12; ret;
0xffffffff8250152b: mov esp, esi; popfq; cmpsb [rsi], [rdi]; adc [rax-0x74], ecx; push 0x39; ret 0xdd5a;
0xffffffff8147bac5: mov esp, esi; push qword ptr [rcx]; rcr byte ptr [rbx+0x41], 0x5e; pop r15; ret;
0xffffffff823e0509: mov esp, esi; ret 0xa82;
0xffffffff82256889: mov esp, esi; ret;
0xffffffff82362f5c: mov esp, esi; scasd [rdi]; ret;
0xffffffff824a4b62: mov esp, esi; std; iretd;
0xffffffff8223b467: mov esp, esp; adc r14b, [rip+0x2683818a]; int3; sub ecx, ebp; imul esp, [rax], 0x28; ret 0x153d;
0xffffffff8128b5aa: mov esp, esp; jmp qword ptr [rbp+0x48];
0xffffffff8233e6ff: mov esp, esp; pop rbp; ret;
0xffffffff8248b4e2: mov esp, esp; push rax; call far fword ptr [rbx];
0xffffffff82506f28: mov esp, esp; ret 0x69a8;
0xffffffff82332c39: mov esp, esp; sub [rbx], dl; ret;
0xffffffff8240c3f1: mov esp, fs; adc al, 9; in eax, 0xa7; sbb edx, [rip+0x37717af3]; call qword ptr [rcx-0x17a4a787];
0xffffffff8240c3f2: mov esp, fs; adc al, 9; in eax, 0xa7; sbb edx, [rip+0x37717af3]; call qword ptr [rcx-0x17a4a787];
0xffffffff817cc670: mov esp, fs; add [r9-0x3c9cb73d], cl; pop rbx; pop r14; ret;
0xffffffff824a8ffb: mov esp, fs; iretd;
0xffffffff82648e19: mov esp, fs; jmp far fword ptr [rdi];
0xffffffff824e93c6: mov esp, gs; mov esp, ebp; cmovp esp, [rax-0x11]; mov [0x177a2218e6748b49], al; iretd;
0xffffffff82270fe6: mov esp, ss; mov dl, 0x2b; out 0x65, al; iretd;
0xffffffff8238bda6: mov esp, ss; mov esp, 0xabe95499; call far fword ptr [rdi+0x7e0ff70d];
0xffffffff81489ea0: mov esp, ss; ret 0x66ff;
0xffffffff8228f748: mov esp, ss; ret;
0xffffffff822bdc6f: mov esp, ss; stosd [rdi]; pop rsp; push rdx; mov dh, 0x4b; ret;
0xffffffff81125d1b: mov fs:[0x415b000000000001], al; pop rsp; pop r14; pop r15; ret;
0xffffffff8222ee80: mov gs, [rcx-0x1ac574b1]; pop rsp; xor byte ptr [rcx-0xa87b68b], 0xb8; iretd;
0xffffffff8252b187: mov gs, ax; sbb [rbx+0x1a], dl; xchg esp, eax; jmp qword ptr [rbx-0xf266927];
0xffffffff81ae7f1e: mov gs, dx; dec dword ptr [rcx-0x7a3fce3f]; leave; cmovns rax, rbx; pop rbx; ret;
0xffffffff8245afcf: mov gs:[0x60b2dded8cbf4c3], eax; pop qword ptr [rcx]; mov [0x1847e1be9049ed28], al; pop rsp; mov esp, 0xd6f6f6f5; iretd;
0xffffffff82493dc3: mov gs:[rdi], r13b; mov r11, 0x23ab1c6ba631ff42; pop rsp; ret 0xc22e;
0xffffffff8110a724: mov qword ptr [r14+0x10], 0; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff811e469b: mov qword ptr [rax+0x18], 0xb7; sub rax, rsi; add rax, 0x20; shr rax, 3; add rsp, 4; ret;
0xffffffff811e506b: mov qword ptr [rax+0x28], 0xb7; sub rax, rsi; add rax, 0x30; shr rax, 3; add rsp, 4; ret;
0xffffffff818f1bc0: mov qword ptr [rbx+0x30], 0; add rsp, 0x10; pop rbx; ret;
0xffffffff818f1bb8: mov qword ptr [rbx+0x38], 0; mov qword ptr [rbx+0x30], 0; add rsp, 0x10; pop rbx; ret;
0xffffffff818f1bb0: mov qword ptr [rbx+0x40], 0; mov qword ptr [rbx+0x38], 0; mov qword ptr [rbx+0x30], 0; add rsp, 0x10; pop rbx; ret;
0xffffffff81941090: mov qword ptr [rsi+0x48], 0xffffffff827c1fb7; mov eax, 0xffffffea; add rsp, 4; ret;
0xffffffff83453849: mov r10b, 0xd5; std; add rsp, 8; pop rbx; ret;
0xffffffff82493dc7: mov r11, 0x23ab1c6ba631ff42; pop rsp; ret 0xc22e;
0xffffffff8250a8fd: mov r11b, 0x6b; mov [0xa0e9f21433215223], al; pop rsp; mov ebp, 0xb4a5eeff; iretd;
0xffffffff81c75ddd: mov r12, [rsp+0x18]; mov r14, [rsp+0x20]; mov r13, [rsp+0x28]; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff81c72c9e: mov r12, [rsp+8]; add rsp, 0x10; ret;
0xffffffff82515e55: mov r12b, 0xec; leave; cmp ebp, edx; adc [rdx-0x6c], bh; iretd;
0xffffffff81c75de7: mov r13, [rsp+0x28]; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff823d737d: mov r13d, 0x82b332a3; xchg esp, eax; lea eax, [rdi-0x11]; adc byte ptr [rax], 0xe7; iretd;
0xffffffff8240810a: mov r14, 0xf818be6ed0909714; xor al, 0x69; xchg [rdx+0x78bc9cdf], edx; pop rsp; xor eax, 0x32b7034e; ret;
0xffffffff81c75de2: mov r14, [rsp+0x20]; mov r13, [rsp+0x28]; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff823446c7: mov r14b, [r9+0x4c]; cmpsb [rsi], [rdi]; leave; mov dl, 0xa3; iretd;
0xffffffff81c75dec: mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff81c5d2ab: mov r8, 0x415b087b894c0130; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff8173a112: mov r8, r13; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff8345a883: mov r8, r13; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8144c561: mov r8, r13; add rsp, 0xd0; pop rbx; pop r14; pop rbp; ret;
0xffffffff8251455d: mov r8b, 0xbc; pop rsp; iretd;
0xffffffff82312979: mov r8b, [r10+r10+0x1f]; push rcx; mov [0xd4766988cde0d199], al; leave; ret;
0xffffffff817d4124: mov r8d, ebx; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff81126ff2: mov r8d, ebx; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8140c16e: mov r8d, ebx; add rsp, 0xa0; pop rbx; pop r14; pop r15; ret;
0xffffffff8224a6eb: mov r9, 0x9b8252ad694c621e; pop rax; mov ebp, gs; pushfq; xchg esp, eax; ret 0x378b;
0xffffffff824e09bd: mov r9, 0xadb781c1f8d91cfd; adc [rsi], ch; pop rsp; xor dword ptr [rbx-0x6e54f028], 0x898ee960; pop rdx; ret 0xd80b;
0xffffffff824e09be: mov r9, 0xadb781c1f8d91cfd; adc [rsi], ch; pop rsp; xor dword ptr [rbx-0x6e54f028], 0x898ee960; pop rdx; ret 0xd80b;
0xffffffff817a7f13: mov r9b, 0x4d; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff82384cda: mov r9b, 0x6a; and r9b, dil; xchg rsp, rax; ret 0x50d5;
0xffffffff8115045d: mov r9b, 4; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff824b78f3: mov r9d, 0x53a37392; pop rsp; cmc; iretd;
0xffffffff82379a71: mov r9d, 0xe33c6f55; cmp bl, al; pop rsp; ret 0xe575;
0xffffffff823b8daf: mov rax, 0xbbff7c3cb7ef5bb1; mov esp, [rdx+0x1f695e30]; xor edx, [rdx-0x5c65ad67]; call rax;
0xffffffff810cd267: mov rax, 0xfffffffffffffdfe; add rsp, 0x10; ret;
0xffffffff81b623f3: mov rax, 0xfffffffffffffff4; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff81811f03: mov rax, [rax*8-0x7da03300]; add rsp, 4; ret;
0xffffffff816afd4a: mov rax, [rax+0x58]; or dword ptr [rax+0x5c], 8; add rsp, 4; ret;
0xffffffff8166c7cd: mov rax, [rbp-0x18]; mov [rbp-8], rax; mov rax, [rbp-8]; add rsp, 0x18; pop rbp; ret;
0xffffffff8166cf1d: mov rax, [rbp-0x28]; mov [rbp-4], eax; mov eax, [rbp-4]; add rsp, 0x38; pop rbp; ret;
0xffffffff8166d031: mov rax, [rbp-0x38]; add rsp, 0x38; pop rbp; ret;
0xffffffff8166cc9d: mov rax, [rbp-0x38]; add rsp, 0x40; pop rbp; ret;
0xffffffff8166c7d5: mov rax, [rbp-8]; add rsp, 0x18; pop rbp; ret;
0xffffffff8166c701: mov rax, [rbp-8]; mov [rax+8], rcx; add rsp, 8; pop rbp; ret;
0xffffffff8166cc96: mov rax, [rbp-8]; mov [rax], rcx; mov rax, [rbp-0x38]; add rsp, 0x40; pop rbp; ret;
0xffffffff81240eef: mov rax, [rcx+rax*8-0x7d818900]; add rsp, 4; ret;
0xffffffff816afd43: mov rax, [rdi+0x438]; mov rax, [rax+0x58]; or dword ptr [rax+0x5c], 8; add rsp, 4; ret;
0xffffffff81b1c1d6: mov rax, [rdi+0xc0]; mov ecx, [rdi+0xbc]; or dword ptr [rax+rcx+0x18], 4; xor eax, eax; add rsp, 0xc; ret;
0xffffffff81a261a2: mov rax, [rsi+0x10]; mov [rdi+0x30], rax; mov [rdi+0x28], rax; add rsp, 8; pop rbx; ret;
0xffffffff81e01900: mov rax, [rsp+0x50]; mov rbp, [rsp+0x20]; add rsp, 0xa8; ret;
0xffffffff81e0193d: mov rax, [rsp]; add rsp, 0x18; jmp rdi;
0xffffffff8114c8b7: mov rax, r13; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8112d4dc: mov rax, r14; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff817d0d59: mov rax, r14; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff8183a312: mov rax, r14; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff8152a015: mov rax, r14; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81028d27: mov rax, r14; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff811e7497: mov rax, r14; add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff8147fb74: mov rax, r14; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff816b9cf3: mov rax, r14; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff814719eb: mov rax, r14; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff810c1e29: mov rax, r14; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff811ae21f: mov rax, r14; add rsp, 0x30; pop rbx; pop r14; ret;
0xffffffff810cfba2: mov rax, r14; add rsp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff81b329e9: mov rax, r14; add rsp, 0x40; pop rbx; pop r14; pop r15; ret;
0xffffffff812f30ac: mov rax, r14; add rsp, 0x40; pop rbx; pop r14; ret;
0xffffffff810c1c50: mov rax, r14; add rsp, 0x58; pop rbx; pop r14; ret;
0xffffffff81c11cec: mov rax, r14; add rsp, 0xe8; pop rbx; pop r14; pop rbp; ret;
0xffffffff81102107: mov rax, r14; add rsp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff81051bf7: mov rax, r14; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8123456f: mov rax, r15; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff8169b870: mov rax, r15; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff819e0a9e: mov rax, r15; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff8141070f: mov rax, r15; add rsp, 0x58; pop rbx; pop r14; pop r15; ret;
0xffffffff814aa047: mov rax, r15; add rsp, 0xa0; pop rbx; pop r14; pop r15; ret;
0xffffffff819e0e79: mov rax, r15; add rsp, 0xc8; pop rbx; pop r14; pop r15; ret;
0xffffffff812f7072: mov rax, r8; mov rsp, rbp; pop rbp; ret;
0xffffffff816e88bd: mov rax, rbp; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff811f5721: mov rax, rbp; add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff810fbbf7: mov rax, rbx; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff812845c4: mov rax, rbx; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff8110e39c: mov rax, rbx; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81022a5a: mov rax, rbx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8100ce85: mov rax, rbx; add rsp, 0x10; pop rbx; ret;
0xffffffff8134e228: mov rax, rbx; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff812c5897: mov rax, rbx; add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff811f4976: mov rax, rbx; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff812c5437: mov rax, rbx; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8124a7dd: mov rax, rbx; add rsp, 0x18; pop rbx; ret;
0xffffffff812c0728: mov rax, rbx; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff811e07b9: mov rax, rbx; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff815a5b12: mov rax, rbx; add rsp, 0x20; pop rbx; ret;
0xffffffff816f5e57: mov rax, rbx; add rsp, 0x28; pop rbx; pop r14; ret;
0xffffffff810d2d7d: mov rax, rbx; add rsp, 0x30; pop rbx; pop r14; ret;
0xffffffff81211701: mov rax, rbx; add rsp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff81c71379: mov rax, rbx; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff81c712bc: mov rax, rbx; add rsp, 0x38; pop rbx; ret;
0xffffffff812f4f1a: mov rax, rbx; add rsp, 0x40; pop rbx; pop r14; pop r15; ret;
0xffffffff815bb129: mov rax, rbx; add rsp, 0x40; pop rbx; pop r14; ret;
0xffffffff8161829a: mov rax, rbx; add rsp, 0x48; pop rbx; pop r14; ret;
0xffffffff810b36b6: mov rax, rbx; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff815f1d14: mov rax, rbx; add rsp, 0x50; pop rbx; pop r14; pop r15; ret;
0xffffffff818e6e0c: mov rax, rbx; add rsp, 0x50; pop rbx; pop r14; ret;
0xffffffff8153706d: mov rax, rbx; add rsp, 0x70; pop rbx; pop r14; pop r15; ret;
0xffffffff81521a04: mov rax, rbx; add rsp, 0xa0; pop rbx; pop r14; pop r15; ret;
0xffffffff8152181b: mov rax, rbx; add rsp, 0xa0; pop rbx; ret;
0xffffffff8191ef82: mov rax, rbx; add rsp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff819bf37f: mov rax, rbx; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8128bc2f: mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812d9586: mov rax, rbx; mov rdx, r14; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff817ee8cc: mov rax, rcx; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff812dbb97: mov rax, rcx; add rsp, 0x10; ret;
0xffffffff8118d89e: mov rax, rcx; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff810f837d: mov rax, rdi; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff816c2c84: mov rax, rdi; add rsp, 0x20; ret;
0xffffffff812f6a93: mov rax, rdi; mov rsp, rbp; pop rbp; ret;
0xffffffff8112ad48: mov rax, rsi; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff8105fbc2: mov rax, rsp; mov rsp, rax; ret;
0xffffffff8232c1d2: mov rbp, 0x7c7a12281d0690f1; mov eax, 0x14640aa9; leave; and ecx, esp; call qword ptr [rcx];
0xffffffff81e01905: mov rbp, [rsp+0x20]; add rsp, 0xa8; ret;
0xffffffff81c72c9a: mov rbx, [rsp]; mov r12, [rsp+8]; add rsp, 0x10; ret;
0xffffffff8166c6fe: mov rcx, [rax]; mov rax, [rbp-8]; mov [rax+8], rcx; add rsp, 8; pop rbp; ret;
0xffffffff81031ac9: mov rcx, [rcx*8-0x7d819990]; mov [rcx+0x10010], ax; add rsp, 4; pop rbx; ret;
0xffffffff81e018fb: mov rcx, [rsp+0x58]; mov rax, [rsp+0x50]; mov rbp, [rsp+0x20]; add rsp, 0xa8; ret;
0xffffffff81142d8c: mov rcx, cr2; or cl, sil; movzx ecx, cl; add eax, ecx; add rsp, 0x48; ret;
0xffffffff816c2c69: mov rcx, rax; neg rcx; and rax, rcx; add rsp, 0x20; ret;
0xffffffff81e01935: mov rdi, rax; mov rdx, [rsp+8]; mov rax, [rsp]; add rsp, 0x18; jmp rdi;
0xffffffff81811e23: mov rdx, 0xffffffff825fcce8; mov eax, 0xfffffff4; add eax, ecx; add al, [rdx+8]; add rsp, 4; ret;
0xffffffff81e018f6: mov rdx, [rsp+0x60]; mov rcx, [rsp+0x58]; mov rax, [rsp+0x50]; mov rbp, [rsp+0x20]; add rsp, 0xa8; ret;
0xffffffff81e01938: mov rdx, [rsp+8]; mov rax, [rsp]; add rsp, 0x18; jmp rdi;
0xffffffff83465f41: mov rdx, r12; std; add rsp, 8; pop rbx; ret;
0xffffffff812d9589: mov rdx, r14; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff810b057a: mov rsi, [rsp+8]; mov cr0, rsi; mov rsp, [rsp]; pop rbp; ret;
0xffffffff810b0582: mov rsp, [rsp]; pop rbp; ret;
0xffffffff826b3f43: mov rsp, cr4; mov dl, 0x6f; call far fword ptr [rax];
0xffffffff8106d1c8: mov rsp, r14; pop r15; pop r14; pop r13; pop r12; ret;
0xffffffff823f73bc: mov rsp, r8; ret;
0xffffffff81e011ef: mov rsp, rax; push r12; ret;
0xffffffff8105fbc5: mov rsp, rax; ret;
0xffffffff81036abd: mov rsp, rbp; pop rbp; ret;
0xffffffff824d1ecb: mov sil, 0x37; pop rsp; ficom st, dword ptr [rax+0x730c97fe]; jmp qword ptr [rbx+0x58c4d3f6];
0xffffffff822b2ead: mov sil, 0xc8; pop rsp; ret;
0xffffffff82474da5: mov spl, 0x9d; mov al, 0x2f; pop rsp; iretd;
0xffffffff8265a4b5: mov ss, [rdi+rdi*8-0x6b71c1]; dec dword ptr [rbp-0x7590006c]; xchg esp, eax; jmp far fword ptr [rdi+0x6fff9488];
0xffffffff8235938a: mov ss, bx; fstp st(1), st; xor edx, edi; leave; ret;
0xffffffff81b1c0cd: mov word ptr [rbx+0x38], 1; xor eax, eax; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81bdefae: mov word ptr [rbx+0x38], 1; xor eax, eax; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff81b12589: mov word ptr [rdi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff81b12612: mov word ptr [rsi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff810333aa: mov word ptr [rsp], 0x7f; lgdt [rsp]; add rsp, 0x10; ret;
0xffffffff810b0575: movaps xmm5, [rsp+0x10]; mov rsi, [rsp+8]; mov cr0, rsi; mov rsp, [rsp]; pop rbp; ret;
0xffffffff834969e8: movsb [rdi], [rsi]; adc cl, 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff822db35d: movsb [rdi], [rsi]; add [rbp+0x5609e91a], esp; pop rsp; iretd;
0xffffffff82513732: movsb [rdi], [rsi]; and ecx, ebp; fwait; cmp al, 0x96; xchg sp, ax; ret 0x29;
0xffffffff82655ec6: movsb [rdi], [rsi]; dec dword ptr [rdi-0x30005b6b]; xchg esp, eax; movsb [rdi], [rsi]; jmp far fword ptr [rdi-0x6d];
0xffffffff82655f66: movsb [rdi], [rsi]; dec dword ptr [rdi]; pop rsp; movsb [rdi], [rsi]; jmp far fword ptr [rdi];
0xffffffff82655eca: movsb [rdi], [rsi]; dec edi; xchg esp, eax; movsb [rdi], [rsi]; jmp far fword ptr [rdi-0x6d];
0xffffffff82531c91: movsb [rdi], [rsi]; enter 0x7e8e, 0xa4; stosb [rdi]; xchg esp, eax; ret 0x8cec;
0xffffffff82325795: movsb [rdi], [rsi]; fmul st, dword ptr [rax]; push rdx; add esp, esp; scasd [rdi]; ret 0xae7;
0xffffffff824e8bab: movsb [rdi], [rsi]; leave; mov [rip-0x157eb449], edi; ret;
0xffffffff82543118: movsb [rdi], [rsi]; leave; out dx, eax; mov bh, 0x5f; ret;
0xffffffff83455de8: movsb [rdi], [rsi]; mov ebp, ss; std; add rsp, 8; pop rbx; ret;
0xffffffff83475de8: movsb [rdi], [rsi]; mov ebx, ss; std; add rsp, 8; pop rbx; ret;
0xffffffff824e8baa: movsb [rdi], [rsi]; movsb [rdi], [rsi]; leave; mov [rip-0x157eb449], edi; ret;
0xffffffff824bc2a8: movsb [rdi], [rsi]; movsxd ebx, [rip+0x38cb6a3f]; mov esp, ecx; lea esp, [rcx+0x2f6f12d8]; ret 0x94aa;
0xffffffff82309ca3: movsb [rdi], [rsi]; pop rsp; adc bl, [rip+0x3ba1d54c]; iretd;
0xffffffff810b6ee1: movsb [rdi], [rsi]; pop rsp; add dword ptr [rax], 0x48; mov eax, 0x835ca450; ret;
0xffffffff81aecebc: movsb [rdi], [rsi]; pop rsp; call qword ptr [rax+0x3147bbe8];
0xffffffff810b7093: movsb [rdi], [rsi]; pop rsp; cmp dword ptr [rsi+8], 0xffffffe8; xor [rbx-0x3fceff93], bh; ret;
0xffffffff8281586c: movsb [rdi], [rsi]; pop rsp; jmp qword ptr [rbp+rdx*8+2];
0xffffffff8231f6ea: movsb [rdi], [rsi]; pop rsp; mov ah, 0x22; ret 0x9a7c;
0xffffffff8249695f: movsb [rdi], [rsi]; pop rsp; push 0xffffffffffffff8f; fisttp dword ptr [r9-0xb5b7ad2], st; shl byte ptr [rbp-0x61], 1; ret;
0xffffffff8229bd6c: movsb [rdi], [rsi]; pop rsp; ret 0xc7a;
0xffffffff824bef67: movsb [rdi], [rsi]; pop rsp; std; iretd;
0xffffffff81042bb9: movsb [rdi], [rsi]; pop rsp; sub eax, 0xffffff8f; pop rbp; ret 0x8500;
0xffffffff822dd303: movsb [rdi], [rsi]; pop rsp; xor eax, 0x77fa3eaf; ret 0x145e;
0xffffffff824e74b1: movsb [rdi], [rsi]; pop rsp; xor eax, 0xf86225c3; and [rdi], ecx; call qword ptr [rbp-0x158d5eeb];
0xffffffff8254f488: movsb [rdi], [rsi]; sbb esp, [rip-0x57dc9624]; bswap ecx; xchg esp, eax; jmp far fword ptr [rdi-0x3361e5d4];
0xffffffff8224f0c6: movsb [rdi], [rsi]; sbb esp, ebp; fxch st, st(5); iretd;
0xffffffff82531c95: movsb [rdi], [rsi]; stosb [rdi]; xchg esp, eax; ret 0x8cec;
0xffffffff8241cd10: movsb [rdi], [rsi]; test ch, 3; leave; ret;
0xffffffff824945bd: movsb [rdi], [rsi]; xadd [rcx+0x14dffe20], eax; mov ebp, 0x8839d69a; xchg esp, eax; call qword ptr [rsi+0x58];
0xffffffff823f21de: movsb [rdi], [rsi]; xchg esp, eax; iretd;
0xffffffff825233aa: movsb [rdi], [rsi]; xchg esp, eax; mov bh, 0x8c; ret 0x5e0b;
0xffffffff823e83db: movsd [rdi], [rsi]; add esp, edi; movsb [rdi], [rsi]; iretd;
0xffffffff82478df8: movsd [rdi], [rsi]; fdivrp st(5), st; leave; ret 0x2ab5;
0xffffffff82703782: movsd [rdi], [rsi]; imul ebp, 0x9bf809d; mov esp, ebp; call rcx;
0xffffffff82516706: movsd [rdi], [rsi]; leave; call rcx;
0xffffffff8264ef35: movsd [rdi], [rsi]; leave; dec dword ptr [rdi+0x2fffc9a3]; mov [0x9ddfffc99f2fffc9], eax; leave; jmp far fword ptr [rdi+0x2fffc99d];
0xffffffff82392a7f: movsd [rdi], [rsi]; leave; hlt; test ch, al; outsb dx, [rsi]; iretd;
0xffffffff8246cba3: movsd [rdi], [rsi]; leave; iretd;
0xffffffff8232bc62: movsd [rdi], [rsi]; leave; ret;
0xffffffff834533e7: movsd [rdi], [rsi]; mov dh, 0xd5; std; add rsp, 8; pop rbx; ret;
0xffffffff822b8f6f: movsd [rdi], [rsi]; pop rsp; cmp ebx, esp; lea edi, [rsi+0x287b9c9c]; iretd;
0xffffffff8129ce2b: movsd [rdi], [rsi]; pop rsp; iretd;
0xffffffff8266812d: movsd [rdi], [rsi]; pop rsp; jmp far fword ptr [rdi-0x5c];
0xffffffff824d9383: movsd [rdi], [rsi]; xchg esp, eax; in al, dx; mov ebx, 0x336bfa24; mov bh, 0x42; ret;
0xffffffff8265a425: movsd [rdi], [rsi]; xchg esp, eax; jmp far fword ptr [rdi-0x5b];
0xffffffff8224cc67: movsd [rdi], [rsi]; xchg esp, eax; sub al, 0x51; mov bh, 0xac; pop rbp; ret 0x2ab5;
0xffffffff824a2190: movsd [rdi], [rsi]; xchg sp, ax; iretd;
0xffffffff8252b185: movsd [rdi], [rsi]; xor ecx, [rsi+0x1a5318e8]; xchg esp, eax; jmp qword ptr [rbx-0xf266927];
0xffffffff823aa584: movsx esp, byte ptr [rsi+rcx*8+0x25]; leave; push rcx; cdq; ret;
0xffffffff823aa583: movsx rsp, byte ptr [r14+rcx*8+0x25]; leave; push rcx; cdq; ret;
0xffffffff824e7f87: movsxd eax, [rbx-0x309ada38]; pop rdi; pop rsp; ret 0xbef2;
0xffffffff82300eb8: movsxd eax, [rdi+0x35]; leave; push rbp; out 0xc6, eax; clc; iretd;
0xffffffff8159b342: movsxd eax, [rsi+0xf068b00]; enter 0xa8b, 0xf; leave; sub rax, rcx; ret;
0xffffffff822f324f: movsxd eax, [rsi-0x6faa478b]; xchg esp, eax; ret 0x8abc;
0xffffffff8244ca9d: movsxd eax, [rsi]; pop rsp; ret 0x244d;
0xffffffff817c6ca0: movsxd eax, ebp; add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff817176cb: movsxd eax, ebp; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81796bc5: movsxd eax, ebp; add rsp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff819d0cda: movsxd eax, ebp; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff811a496d: movsxd eax, ebx; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff819de994: movsxd eax, ecx; mov rsp, rbp; pop rbp; ret;
0xffffffff810cceb1: movsxd eax, esi; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8268d42b: movsxd ebp, [rax-0x6b30f90c]; in eax, 0x61; pop rsp; iretd;
0xffffffff822dd1a6: movsxd ebp, eax; leave; cmp eax, 0x852bff76; ret 0xa800;
0xffffffff8252510c: movsxd ebp, ebp; sti; or al, 0xc; xchg ebp, eax; pop rsp; ret;
0xffffffff8104ab55: movsxd ebp, ecx; xchg esp, eax; ret 0x245;
0xffffffff824bc2a9: movsxd ebx, [rip+0x38cb6a3f]; mov esp, ecx; lea esp, [rcx+0x2f6f12d8]; ret 0x94aa;
0xffffffff826cf77e: movsxd ecx, [rdx]; mov esp, [rbx+0x73]; ret;
0xffffffff81031ac7: movsxd ecx, esi; mov rcx, [rcx*8-0x7d819990]; mov [rcx+0x10010], ax; add rsp, 4; pop rbx; ret;
0xffffffff82008cb2: movsxd edi, edi; pop rsp; add al, [rip-0x38f65201]; jmp far fword ptr [rdi+0x250ff63];
0xffffffff826cfd3a: movsxd edx, [rbp+0xc2c71c4]; mov esp, [rbx+0x73]; ret;
0xffffffff834786ba: movsxd edx, ebx; std; add rsp, 8; pop rbx; ret;
0xffffffff83498699: movsxd edx, ecx; std; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff834686c5: movsxd edx, esp; std; add rsp, 8; pop rbx; ret;
0xffffffff825d721e: movsxd esi, [rax-0x7e]; pop rsp; test eax, 0x65e95c1c; call far fword ptr [rbx+0x66];
0xffffffff82687fff: movsxd esi, [rbx+rbp*4-0x5d]; or dl, [rcx+0x75]; leave; jmp qword ptr [rbx+0x74];
0xffffffff826cfc32: movsxd esi, [rbx-0x3d]; enter 0xfc5f, 0x66; outsd dx, [rsi]; fstp dword ptr [rsi+0xe8c6c28], st; mov esp, [rbx+0x73]; ret;
0xffffffff826cf0d6: movsxd esi, [rbx-0x3d]; push 0x74a8276f; or [rbx+0x40c37363], ecx; push 0xa73e26f; mov esp, [rbx+0x73]; ret;
0xffffffff826cf0e0: movsxd esi, [rbx-0x3d]; push 0xa73e26f; mov esp, [rbx+0x73]; ret;
0xffffffff826cf0a0: movsxd esi, [rbx-0x3d]; push 0xb84276f; mov esp, [rbx+0x73]; ret;
0xffffffff824703fe: movsxd esi, [rdx]; push 0xffffffffc2881e09; leave; ret 0xd564;
0xffffffff826fa7e4: movsxd esp, [rcx-0x14]; push 0x6cb4d765; test byte ptr [rsi], 0x8e; shl word ptr [rdx-0x63], cl; pop rsp; iretd;
0xffffffff825d827a: movsxd esp, [rdx]; leave; cld; call qword ptr [rbx-0x7e];
0xffffffff825d721d: movsxd r14, [rax-0x7e]; pop rsp; test eax, 0x65e95c1c; call far fword ptr [rbx+0x66];
0xffffffff825d721c: movsxd r14, [rax-0x7e]; pop rsp; test eax, 0x65e95c1c; call far fword ptr [rbx+0x66];
0xffffffff817c6c9f: movsxd rax, ebp; add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff817176ca: movsxd rax, ebp; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81796bc4: movsxd rax, ebp; add rsp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff819d0cd9: movsxd rax, ebp; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff811a496c: movsxd rax, ebx; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff819de993: movsxd rax, ecx; mov rsp, rbp; pop rbp; ret;
0xffffffff810cceb0: movsxd rax, r14d; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81031ac6: movsxd rcx, esi; mov rcx, [rcx*8-0x7d819990]; mov [rcx+0x10010], ax; add rsp, 4; pop rbx; ret;
0xffffffff83478742: movsxd rdx, ebx; std; add rsp, 8; pop rbx; ret;
0xffffffff834f06b3: movzx ax, word ptr [esp+6]; mov [edx+0x20], eax; add sp, 8; pop di; data16 ret;
0xffffffff834f06b4: movzx ax, word ptr [rsp+6]; mov [edx+0x20], eax; add sp, 8; pop di; data16 ret;
0xffffffff834300fa: movzx eax, al; add rsp, 0x10; pop rbx; ret;
0xffffffff8197e348: movzx eax, al; add rsp, 0x10; ret;
0xffffffff81562a03: movzx eax, al; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff8197e3db: movzx eax, byte ptr [rax-0x7d834d40]; add rsp, 0x10; pop rbx; ret;
0xffffffff817d50b8: movzx eax, cl; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff81b1257b: movzx eax, word ptr [rdi+0xb2]; mov [rdi+0x88], ax; mov word ptr [rdi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff81b12604: movzx eax, word ptr [rsi+0xb2]; mov [rsi+0x88], ax; mov word ptr [rsi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff834f06b5: movzx eax, word ptr [rsp+6]; mov [edx+0x20], eax; add sp, 8; pop di; data16 ret;
0xffffffff81142d92: movzx ecx, cl; add eax, ecx; add rsp, 0x48; ret;
0xffffffff816c2e30: movzx edx, dl; shl rdx, 0x20; or rdx, rcx; or rax, rdx; add rsp, 4; ret;
0xffffffff8227f537: mul byte ptr [rbx-0x8f6f876]; nop; xchg esp, eax; ret 0xfc21;
0xffffffff826cf4d6: mul byte ptr [rsi+rax-0x75]; enter 0xd85f, 0xff; test [rbx], cl; mov esp, [rbx+0x73]; ret;
0xffffffff82505026: mul dword ptr [rbx]; pop rsp; iretd;
0xffffffff82513a36: mul dword ptr [rcx+rbp*2-0x14]; leave; stosd [rdi]; iretq;
0xffffffff834a0595: mul esp; sar ch, 1; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff834f0e2e: neg ax; add sp, 0x58; pop si; pop di; pop bx; data16 ret;
0xffffffff8129cd6e: neg byte ptr [rbx-0x17]; fwait; leave; cld; jmp qword ptr [rsi+0x66];
0xffffffff83468d96: neg byte ptr [rsp+rdx*8-3]; add rsp, 8; pop rbx; ret;
0xffffffff8121c6fe: neg dword ptr [rbx+0x41]; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff823a86a2: neg dword ptr [rbx]; leave; iretd;
0xffffffff8252e7f4: neg dword ptr [rcx+0x63]; sbb esp, eax; xchg edi, eax; sti; push rcx; ret 0x9776;
0xffffffff818cc615: neg eax; add rsp, 0x10; ret;
0xffffffff834f0e2f: neg eax; add sp, 0x58; pop si; pop di; pop bx; data16 ret;
0xffffffff816c2c6d: neg ecx; and rax, rcx; add rsp, 0x20; ret;
0xffffffff816c2c6c: neg rcx; and rax, rcx; add rsp, 0x20; ret;
0xffffffff82372c36: nop; adc ch, [rbx+0x34]; mov esp, esi; neg dword ptr [rsp+rax+0x2a27bc6a]; ret 0x8126;
0xffffffff818ff821: nop; add [rax], al; add [rbp+8], dh; add rsp, 0x98; ret;
0xffffffff812f9940: nop; add [rax], al; add [rbp+9], dh; add rsp, 0x98; pop rbx; ret;
0xffffffff814959ce: nop; add [rax], al; add [rcx-0x75], al; xchg [rax+0x39000000], esp; ret 0xe272;
0xffffffff8225828c: nop; add r14d, r14d; push rbp; scasd [rdi]; xchg esp, eax; ret 0xedae;
0xffffffff82281eb6: nop; cmp dl, [rbx-0xd]; leave; pop rsp; iretd;
0xffffffff82509b42: nop; cmpsd [rsi], [rdi]; push 0x31; xchg esp, eax; ret;
0xffffffff82554f76: nop; data16 leave; ret;
0xffffffff8239fb4d: nop; insb [rdi], dx; insb [rdi], dx; pop rsp; iretd;
0xffffffff8222dadd: nop; int 0xbd; leave; imul ebx, [rcx], 0xffffffcc; ret 0xc600;
0xffffffff82339ce7: nop; leave; adc ch, [rdx]; iretd;
0xffffffff8257118d: nop; leave; mov al, 0xb7; mov es, [rip+0x7fa970ff]; ret 0xdc73;
0xffffffff8257118e: nop; leave; mov al, 0xb7; mov es, [rip+0x7fa970ff]; ret 0xdc73;
0xffffffff8249b65b: nop; leave; or eax, 0x5c6067a; or byte ptr [rdx], 0x89; push rdx; iretd;
0xffffffff8254fb94: nop; leave; ret;
0xffffffff8254454e: nop; leave; xchg esi, eax; ret 0x5780;
0xffffffff816b71a4: nop; mov [rsp], cl; add rsp, 1; ret;
0xffffffff82343b20: nop; mov edi, ebp; mov esp, ebx; iretd;
0xffffffff816b71a3: nop; nop; mov [rsp], cl; add rsp, 1; ret;
0xffffffff816b71a2: nop; nop; nop; mov [rsp], cl; add rsp, 1; ret;
0xffffffff81011e8d: nop; or [rax], eax; add [rax-0x77], cl; xchg esp, eax; ret;
0xffffffff8241e3ac: nop; pop rsp; adc al, 0xe3; mov dh, 0xf8; cmp spl, [r13-0x63]; ret;
0xffffffff8197c3ba: nop; pop rsp; add [rbx+0x41], ebx; pop rsi; pop r15; ret;
0xffffffff824edf9e: nop; pop rsp; call qword ptr [rbp-0x2f];
0xffffffff822f1ff8: nop; pop rsp; iretd;
0xffffffff822dbe93: nop; pop rsp; mov [0x579d5ec8217bbc05], eax; ret;
0xffffffff82359797: nop; pop rsp; nop; ret;
0xffffffff823a430a: nop; pop rsp; xor [rax], dl; sbb esp, edx; adc dh, [rsi+0x199d436b]; sysexit;
0xffffffff825d6ffb: nop; rol dword ptr [rcx-0x13], 1; pop rsp; in eax, dx; ret 0x299d;
0xffffffff8239657c: nop; rol edi, cl; lea ebx, [rcx*2-0x471a75a6]; leave; mov ah, 0x4e; ret;
0xffffffff834759ed: nop; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82541533: nop; sbb edx, [rdi]; and ecx, [rax+4]; leave; ret 0xc39;
0xffffffff8241f0e2: nop; xchg [rsp+rcx*2+0x41ec8be0], esp; adc al, 0xa9; stosb [rdi]; iretd;
0xffffffff8237b535: nop; xchg edx, eax; adc al, 0x1c; xchg esp, eax; ret 0x3690;
0xffffffff83565c80: nop; xchg esp, eax; mov ebp, 0xffffff81; call qword ptr [rax-0x7e4268];
0xffffffff83564ff8: nop; xchg esp, eax; mov ebx, 0xffffff81; jmp rax;
0xffffffff83566880: nop; xchg esp, eax; mov edi, 0xffffff81; call rax;
0xffffffff83540a38: nop; xchg esp, eax; push 0xffffffffffffff81; jmp qword ptr [rax-0x6a];
0xffffffff82470ee6: nop; xchg esp, eax; pushfq; iretd;
0xffffffff822f3254: nop; xchg esp, eax; ret 0x8abc;
0xffffffff8227f53d: nop; xchg esp, eax; ret 0xfc21;
0xffffffff8246a880: nop; xchg esp, eax; ret;
0xffffffff8235763f: nop; xchg esp, eax; sbb al, 0xc6; mov ebp, 0x4b55a861; iretd;
0xffffffff8352da08: nop; xchg esp, eax; xor eax, 0xffffff81; jmp qword ptr [rax-0x6b];
0xffffffff8346f3fc: not bl; std; add rsp, 8; pop rbx; ret;
0xffffffff814b61e7: not byte ptr [rax-0x18]; add bh, [rbx]; sar bh, 1; add rsp, 8; ret;
0xffffffff826ee1de: not byte ptr [rbp+0x540a73e8]; xchg [rax+rbp*4], esp; jmp far fword ptr [rdi+0x73e895f6];
0xffffffff8225828f: not byte ptr [rbp-0x51]; xchg esp, eax; ret 0xedae;
0xffffffff822aa5ef: not byte ptr [rbx-0xb181659]; psubb mm6, [rdi]; pop rsp; ret;
0xffffffff82351c50: not dword ptr [rbx-0x1c238ab]; sbb eax, 0xf0d8a165; adc esp, ebp; mov edi, 0x5da29229; iretd;
0xffffffff8234fb9f: not dword ptr [rdx-0x21dc1b0]; pop rsp; mov bh, 0x8c; out dx, eax; ret 0x72a1;
0xffffffff81a6b942: not eax; mov [r14], ax; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff819cd399: not eax; mov [rdi], ax; add rsp, 0x18; ret;
0xffffffff819cd40f: not eax; mov [rsi+0x88], eax; add rsp, 0x18; ret;
0xffffffff81c732bd: not eax; shr eax, 0x10; add rsp, 4; ret;
0xffffffff819cd394: not eax; shr eax, 0x10; not eax; mov [rdi], ax; add rsp, 0x18; ret;
0xffffffff81041da9: not eax; test eax, edi; sete al; add rsp, 4; ret;
0xffffffff8346f33e: not ebx; std; add rsp, 8; pop rbx; ret;
0xffffffff819cd54d: not edx; mov [rdi], dx; add rsp, 0xc; ret;
0xffffffff819cd5ac: not edx; mov [rsi+0x88], edx; add rsp, 0xc; ret;
0xffffffff819cd548: not edx; shr edx, 0x10; not edx; mov [rdi], dx; add rsp, 0xc; ret;
0xffffffff824a4b5e: not esp; int 8; mov esp, esi; std; iretd;
0xffffffff8346f33d: not r11; std; add rsp, 8; pop rbx; ret;
0xffffffff81479b92: or [eax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff81c6009b: or [r11+0x41], bl; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff81781d2d: or [r11+0x41], r11b; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff8181dc88: or [r15+r9-0x49], r8b; adc dword ptr [rax+1], 0xb70f0000; and dword ptr [rax+0x66000000], 0xffff883; xchg esp, eax; ret;
0xffffffff8148afd0: or [r15], cl; leave; mov [rax+4], ecx; xor eax, eax; pop rbx; ret;
0xffffffff811b645d: or [r15], r9b; xchg esp, eax; shl byte ptr [rbx], 0x87; xor al, 1; add [rax], al; ret;
0xffffffff812e49db: or [r8-0x77], cl; sbb [r11+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff811ef0bd: or [r8-0x7b], cl; leave; cmove rax, rcx; ret;
0xffffffff81781b6f: or [r9], r14b; leave; mov eax, ecx; lea rdi, [rax*4-0x7da15540]; mov eax, [rdi]; ret;
0xffffffff8158b0e7: or [r9], r14b; leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x2bc]; ret;
0xffffffff8158b0c7: or [r9], r14b; leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x2c4]; ret;
0xffffffff81559a47: or [r9], r14b; leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x348]; ret;
0xffffffff81559a27: or [r9], r14b; leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x350]; ret;
0xffffffff8156c800: or [r9], r14b; leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x358]; ret;
0xffffffff8156cf90: or [r9], r14b; leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x360]; ret;
0xffffffff81596eb7: or [r9], r14b; leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x368]; ret;
0xffffffff81596e97: or [r9], r14b; leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x370]; ret;
0xffffffff8159b2a7: or [r9], r14b; leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x378]; ret;
0xffffffff8159b287: or [r9], r14b; leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x380]; ret;
0xffffffff818cc612: or [rax+0x48d8f7c8], ecx; add esp, 0x10; ret;
0xffffffff816b71a1: or [rax+0xc889090], dl; and al, 0x48; add esp, 1; ret;
0xffffffff810c62d0: or [rax+0xf000000], al; xchg esp, eax; ret;
0xffffffff81277903: or [rax+0xf], al; xchg esp, eax; ret 0xf201;
0xffffffff813243b4: or [rax+0xf], al; xchg esp, eax; ret;
0xffffffff8159d54c: or [rax+0xf], cl; leave; mov [rax+0x28], rcx; mov qword ptr [r8+0x1b0], 0xffffffff825c1860; mov eax, 0x38; ret;
0xffffffff82410125: or [rax-0x46], esp; xor al, 0x55; cmp al, [rcx]; leave; xlat [rbx]; ret 0xc487;
0xffffffff8103817c: or [rax-0x68], cl; add rsp, 0x10; pop rbx; ret;
0xffffffff810ec018: or [rax-0x68], cl; add rsp, 0x18; pop rbx; ret;
0xffffffff8113d106: or [rax-0x68], cl; add rsp, 0x28; pop rbx; ret;
0xffffffff818e1cb4: or [rax-0x68], cl; add rsp, 0x30; pop rbx; ret;
0xffffffff817896ed: or [rax-0x68], cl; add rsp, 0x50; pop rbx; ret;
0xffffffff81e0193c: or [rax-0x75], cl; add al, 0x24; add rsp, 0x18; jmp rdi;
0xffffffff8166c700: or [rax-0x75], cl; clc; mov [rax+8], rcx; add rsp, 8; pop rbp; ret;
0xffffffff816a6fda: or [rax-0x75], cl; or [rax-0x7c], al; dec dword ptr [rdi]; xchg esp, eax; ret 0xc7f7;
0xffffffff81623f3b: or [rax-0x75], cl; pop rsp; ret;
0xffffffff8110a88e: or [rax-0x77], cl; add [rbp+0x31], eax; leave; mov eax, r9d; ret;
0xffffffff812f6a92: or [rax-0x77], cl; clc; mov rsp, rbp; pop rbp; ret;
0xffffffff81479b93: or [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff81b25d73: or [rax-0x77], cl; fucomip st, st(0); xchg esp, eax; and ch, al; jmp qword ptr [rbp+0x48];
0xffffffff81215ff1: or [rax-0x77], cl; out 0xe8, eax; pop rsp; clc; jmp qword ptr [rbp+0x48];
0xffffffff812e49dc: or [rax-0x77], cl; sbb [r11+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff811ef0be: or [rax-0x7b], cl; leave; cmove rax, rcx; ret;
0xffffffff81a32d2c: or [rax-0x7b], cl; shl byte ptr [rbp-0x4e], 0x31; leave; mov rax, rcx; ret;
0xffffffff816a6fde: or [rax-0x7c], al; dec dword ptr [rdi]; xchg esp, eax; ret 0xc7f7;
0xffffffff81c4b71a: or [rax-0x7d], ecx; leave; adc cl, [rax-0x77]; ret 0x7eb;
0xffffffff820062b1: or [rax-1], eax; pop rsp; sub al, 5; jmp far fword ptr [rcx+0x3effc71e];
0xffffffff82a35c08: or [rax], al; add [rax], al; xchg esp, eax; out dx, eax; add [rax], al; ret;
0xffffffff810fb849: or [rax], al; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8182eac3: or [rax], al; add [rcx], dh; rol byte ptr [rcx+0x10802f9], cl; add [rdi], cl; xchg esp, eax; ret 0x2a8;
0xffffffff817988f6: or [rax], al; add [rdi], cl; xchg esp, eax; ret;
0xffffffff8231059c: or [rax], dh; xchg esp, eax; ret;
0xffffffff81b12579: or [rax], dl; movzx eax, word ptr [rdi+0xb2]; mov [rdi+0x88], ax; mov word ptr [rdi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff81011e6e: or [rax], eax; add [rax-0x77], cl; xchg esp, eax; ret;
0xffffffff812a4616: or [rax], eax; add [rax-0x7b], cl; leave; cmove rax, rcx; ret;
0xffffffff8122caa3: or [rax], eax; add [rax], al; add rsp, 8; ret;
0xffffffff812a24bb: or [rax], eax; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff818fa4ff: or [rax], eax; add al, ch; leave; iretd;
0xffffffff826cf6bf: or [rax], ecx; mov esp, [rbx+0x73]; ret;
0xffffffff81b12578: or [rax], r10b; movzx eax, word ptr [rdi+0xb2]; mov [rdi+0x88], ax; mov word ptr [rdi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff8141d14f: or [rbp+0x10], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff8181749f: or [rbp+0x10], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff8116928c: or [rbp+0x11], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff816ed5b1: or [rbp+0x11], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff819a7139: or [rbp+0x11], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff810c4075: or [rbp+0x11], dh; mov eax, ebx; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8197e3d8: or [rbp+0x11], dh; movzx eax, byte ptr [rax-0x7d834d40]; add rsp, 0x10; pop rbx; ret;
0xffffffff816ebe4a: or [rbp+0x12], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff817233de: or [rbp+0x12], dh; add rsp, 0x10; ret;
0xffffffff816e416b: or [rbp+0x13], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff83480aa8: or [rbp+0x13], dh; add rsp, 0x10; ret;
0xffffffff83482e81: or [rbp+0x13], dh; mov eax, ebx; add rsp, 0x10; pop rbx; ret;
0xffffffff811e123b: or [rbp+0x13], dh; xor eax, eax; add rsp, 0x10; pop rbx; ret;
0xffffffff810535d7: or [rbp+0x14], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8110e1e7: or [rbp+0x14], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff8153a7c2: or [rbp+0x14], dh; mov rax, rbx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff814f3096: or [rbp+0x15], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff81119c42: or [rbp+0x16], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8185474c: or [rbp+0x16], dh; mov eax, ebx; add rsp, 0x10; pop rbx; ret;
0xffffffff810af7bc: or [rbp+0x17], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff810cbd79: or [rbp+0x17], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff818e2793: or [rbp+0x17], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff811b8840: or [rbp+0x17], dh; add rsp, 0x10; ret;
0xffffffff818547dc: or [rbp+0x18], dh; add rsp, 0x10; ret;
0xffffffff815f3805: or [rbp+0x18], dh; mov eax, ebx; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8347d33c: or [rbp+0x18], dh; mov eax, ebx; add rsp, 0x10; pop rbx; ret;
0xffffffff834399e7: or [rbp+0x19], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff811165f1: or [rbp+0x19], dh; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8343eafc: or [rbp+0x19], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff8112f13b: or [rbp+0x19], dh; add rsp, 0x10; ret;
0xffffffff81972fda: or [rbp+0x19], dh; mov rax, rbx; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8192d16c: or [rbp+0x1a], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81951e31: or [rbp+0x1a], dh; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff819a0f3e: or [rbp+0x1a], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff8112ae11: or [rbp+0x1a], dh; add rsp, 0x10; ret;
0xffffffff817d46bc: or [rbp+0x1a], dh; mov rax, rbx; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff83432ee2: or [rbp+0x1b], dh; add rsp, 0x10; ret;
0xffffffff815f3af7: or [rbp+0x1b], dh; mov eax, ebx; add rsp, 0x10; pop rbx; ret;
0xffffffff81348ca6: or [rbp+0x1c], dh; add rsp, 0x10; ret;
0xffffffff8152a012: or [rbp+0x1c], dh; mov rax, r14; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81022a57: or [rbp+0x1c], dh; mov rax, rbx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8112f52b: or [rbp+0x1d], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff816f335c: or [rbp+0x1d], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff8171129e: or [rbp+0x1e], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff8196b0b4: or [rbp+0x1f], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff819e04ae: or [rbp+0x1f], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff813f0a90: or [rbp+0x1f], dh; add rsp, 0x10; ret;
0xffffffff811657e4: or [rbp+0x20], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff818bb7c5: or [rbp+0x20], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff8183550c: or [rbp+0x20], dh; mov rax, r14; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81857d45: or [rbp+0x20], dh; mov rax, rbx; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81980a7b: or [rbp+0x21], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff819ce33f: or [rbp+0x21], dh; add rsp, 0x10; ret;
0xffffffff816edd45: or [rbp+0x22], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff817ae473: or [rbp+0x22], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81157bd0: or [rbp+0x22], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff819ce2a2: or [rbp+0x23], dh; add rsp, 0x10; ret;
0xffffffff817a2d33: or [rbp+0x24], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff8197eb68: or [rbp+0x24], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff81835fea: or [rbp+0x24], dh; mov rax, rbx; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8105ebd9: or [rbp+0x25], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff81746006: or [rbp+0x25], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff817012c3: or [rbp+0x25], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff8347fdc5: or [rbp+0x26], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff83434fe1: or [rbp+0x26], dh; add rsp, 0x10; ret;
0xffffffff817006bc: or [rbp+0x27], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff811a866d: or [rbp+0x27], dh; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81835dee: or [rbp+0x27], dh; mov rax, r14; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81049e08: or [rbp+0x28], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff8182126e: or [rbp+0x29], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff815aadea: or [rbp+0x29], dh; mov rax, rbx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8345dd4a: or [rbp+0x2a], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff816f0735: or [rbp+0x2a], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff817033db: or [rbp+0x2b], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff818361c5: or [rbp+0x2b], dh; mov rax, r14; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff814af1fa: or [rbp+0x2c], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff819c356f: or [rbp+0x2d], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff818eb974: or [rbp+0x2d], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff81777faf: or [rbp+0x2d], dh; add rsp, 0x10; ret;
0xffffffff83493fb6: or [rbp+0x2d], dh; mov rax, r14; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8118ecc1: or [rbp+0x2e], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff8171de61: or [rbp+0x2e], dh; add rsp, 0x10; ret;
0xffffffff81c0581f: or [rbp+0x2f], dh; mov eax, ebx; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8147557d: or [rbp+0x30], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff817253e1: or [rbp+0x30], dh; mov eax, ebp; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81b558c8: or [rbp+0x30], dh; mov eax, ebx; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81025f85: or [rbp+0x31], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff834312bb: or [rbp+0x33], dh; mov eax, ebp; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81845da0: or [rbp+0x34], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff817029f6: or [rbp+0x34], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff81574e7d: or [rbp+0x35], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff818362c6: or [rbp+0x35], dh; mov rax, r14; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81702a8e: or [rbp+0x36], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff819114a6: or [rbp+0x37], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81702818: or [rbp+0x37], dh; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8152ca5d: or [rbp+0x37], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff8198e43c: or [rbp+0x37], dh; mov rax, rbx; add rsp, 0x10; pop rbx; ret;
0xffffffff8158a77a: or [rbp+0x38], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff81702c6a: or [rbp+0x38], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff818355d4: or [rbp+0x38], dh; mov rax, r14; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff816f73ca: or [rbp+0x39], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff8348a08f: or [rbp+0x39], dh; mov eax, ebx; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8344c41f: or [rbp+0x3a], dh; xor eax, eax; add rsp, 0x10; pop rbx; ret;
0xffffffff81815e0f: or [rbp+0x3b], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff817507fc: or [rbp+0x3b], dh; xor eax, eax; add rsp, 0x10; pop rbx; ret;
0xffffffff8158a3da: or [rbp+0x3e], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8347f738: or [rbp+0x3e], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff834a59e8: or [rbp+0x3f], dh; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff817031c5: or [rbp+0x3f], dh; add rsp, 0x10; ret;
0xffffffff81817c31: or [rbp+0x41], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff818ab2b2: or [rbp+0x41], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff83444461: or [rbp+0x41], dh; add rsp, 0x10; ret;
0xffffffff818972cc: or [rbp+0x42], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff8185bc62: or [rbp+0x43], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff816ed874: or [rbp+0x43], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81126ff0: or [rbp+0x43], dh; mov eax, ebx; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff811c854d: or [rbp+0x44], dh; add rsp, 0x10; ret;
0xffffffff82460cfe: or [rbp+0x456d8142], eax; xor r9d, 0x2f; xchg esp, eax; ret;
0xffffffff811b99e5: or [rbp+0x45], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff811ad11a: or [rbp+0x47], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff8111a9e2: or [rbp+0x48], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff818383bb: or [rbp+0x49], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff8185941d: or [rbp+0x49], dh; add rsp, 0x10; ret;
0xffffffff8184afba: or [rbp+0x4a], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff819a1010: or [rbp+0x4a], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff8199ef83: or [rbp+0x4b], dh; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff817048ed: or [rbp+0x4b], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff8199f0fc: or [rbp+0x4d], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff81703c32: or [rbp+0x4d], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff81835cf3: or [rbp+0x4d], dh; mov rax, r14; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8197cb26: or [rbp+0x4e], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff817013a1: or [rbp+0x4e], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8345a881: or [rbp+0x4f], dh; mov eax, ebp; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81911331: or [rbp+0x50], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81a49220: or [rbp+0x51], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff81764ad3: or [rbp+0x51], dh; mov eax, ebp; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff818aab4c: or [rbp+0x52], dh; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8197ce77: or [rbp+0x52], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff81ae7be7: or [rbp+0x52], dh; mov rax, rbx; add rsp, 0x10; pop rbx; ret;
0xffffffff81703cc5: or [rbp+0x53], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff815ab8fb: or [rbp+0x54], dh; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff816f778d: or [rbp+0x55], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff8170210e: or [rbp+0x55], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff818cb1dd: or [rbp+0x56], dh; mov eax, ebx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8348c6ad: or [rbp+0x57], dh; mov eax, ebx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff818a401c: or [rbp+0x59], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff8171c311: or [rbp+0x59], dh; mov eax, ebp; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8170346d: or [rbp+0x5a], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff8117a26a: or [rbp+0x5b], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff818ef8c4: or [rbp+0x5b], dh; add rsp, 0x10; ret;
0xffffffff834a541e: or [rbp+0x5c], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff818da05f: or [rbp+0x5c], dh; mov eax, r14d; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff815c48ca: or [rbp+0x5d], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff817028fc: or [rbp+0x5f], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff8197d9e0: or [rbp+0x60], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff8348b46f: or [rbp+0x61], dh; add rsp, 0x10; ret;
0xffffffff81722b46: or [rbp+0x62], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff819dc6f0: or [rbp+0x66], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8197cdae: or [rbp+0x67], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff810ee086: or [rbp+0x67], dh; add rsp, 0x10; ret;
0xffffffff8158a67c: or [rbp+0x6b], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff8347f5bd: or [rbp+0x6f], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff818495df: or [rbp+0x6f], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff8189ffa0: or [rbp+0x73], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff8185c29b: or [rbp+0x76], dh; mov eax, 1; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff819117d5: or [rbp+0x76], dh; mov eax, r8d; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81703b66: or [rbp+0x77], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff81704268: or [rbp+0x78], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff816ee473: or [rbp+0x79], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff818aa886: or [rbp+0x7a], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff81703005: or [rbp+0x7a], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff81689e1c: or [rbp+0x7b], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff8112c7af: or [rbp+0x7c], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8173ce50: or [rbp+0x7d], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff819f4d31: or [rbp+0x7e], dh; add rsp, 0x10; ret;
0xffffffff8102669d: or [rbp+0x7f], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff81032cf9: or [rbp+0xa], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff81118357: or [rbp+0xa], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff817cbfa4: or [rbp+0xa], dh; cdqe; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8343b374: or [rbp+0xa], dh; mov eax, 1; add rsp, 0x10; ret;
0xffffffff810b6034: or [rbp+0xa], dh; mov eax, ebx; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8127611e: or [rbp+0xa], dh; mov rax, rbx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8170de86: or [rbp+0xa], dh; shr eax, 1; and eax, 1; add rsp, 0x10; ret;
0xffffffff8116a1ad: or [rbp+0xa], dh; xor eax, eax; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81348fe9: or [rbp+0xa], dh; xor eax, eax; add rsp, 0x10; pop rbx; ret;
0xffffffff8105b8d9: or [rbp+0xb], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff834300f5: or [rbp+0xb], dh; and al, cl; movzx eax, al; add rsp, 0x10; pop rbx; ret;
0xffffffff816e7f0f: or [rbp+0xb], dh; and eax, 0x10; shr eax, 4; add rsp, 0x10; ret;
0xffffffff81184689: or [rbp+0xb], dh; mov eax, r14d; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff816a2ae4: or [rbp+0xb], dh; mov rax, r14; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8110e399: or [rbp+0xb], dh; mov rax, rbx; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8122fdc1: or [rbp+0xb], dh; mov rax, rbx; add rsp, 0x10; pop rbx; ret;
0xffffffff810ccead: or [rbp+0xb], dh; movsxd rax, r14d; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff816fe581: or [rbp+0xc], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff812f35aa: or [rbp+0xc], dh; add rsp, 0x10; ret;
0xffffffff81693585: or [rbp+0xc], dh; cdqe; add rsp, 0x10; pop rbx; ret;
0xffffffff810cd264: or [rbp+0xc], dh; mov rax, 0xfffffffffffffdfe; add rsp, 0x10; ret;
0xffffffff81348f1a: or [rbp+0xc], dh; xor eax, eax; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81963d15: or [rbp+0xd], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff8167fef8: or [rbp+0xd], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8168319b: or [rbp+0xd], dh; add rsp, 0x10; ret;
0xffffffff81774313: or [rbp+0xd], dh; mov eax, 1; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81a81687: or [rbp+0xe], dh; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff816eb6fe: or [rbp+0xe], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff834446c0: or [rbp+0xe], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff8101a260: or [rbp+0xe], dh; add rsp, 0x10; ret;
0xffffffff811f0ef4: or [rbp+0xe], dh; mov eax, ebx; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8123aed4: or [rbp+0xf], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff816eb57c: or [rbp+0xf], dh; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff812b6deb: or [rbp+0xf], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff8174c63d: or [rbp+0xf], dh; and eax, 0xf; mov al, [rax-0x7d86bf50]; add rsp, 0x10; pop rbx; ret;
0xffffffff8101a165: or [rbp+5], dh; add rsp, 0x10; ret;
0xffffffff810068fd: or [rbp+6], dh; add rsp, 0x10; pop rbx; ret;
0xffffffff8101af80: or [rbp+7], dh; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8114ec0f: or [rbp+7], dh; add rsp, 0x10; ret;
0xffffffff8114b231: or [rbp+7], dh; cdqe; add rsp, 0x10; ret;
0xffffffff8170d9d2: or [rbp+7], dh; mov eax, ecx; add rsp, 0x10; ret;
0xffffffff81348cbb: or [rbp+7], dh; xor eax, eax; add rsp, 0x10; ret;
0xffffffff8101b0c4: or [rbp+8], dh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8103817a: or [rbp+8], dh; cdqe; add rsp, 0x10; pop rbx; ret;
0xffffffff8101ea7e: or [rbp+8], dh; mov eax, ebx; add rsp, 0x10; pop rbx; ret;
0xffffffff8197e345: or [rbp+8], dh; movzx eax, al; add rsp, 0x10; ret;
0xffffffff81348c18: or [rbp+8], dh; xor eax, eax; add rsp, 0x10; pop rbx; ret;
0xffffffff8103d4ea: or [rbp+9], dh; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff8102b666: or [rbp+9], dh; add rsp, 0x10; ret;
0xffffffff81740631: or [rbp+9], dh; inc eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff818cc610: or [rbp+9], dh; mov al, cl; neg eax; add rsp, 0x10; ret;
0xffffffff810c96c2: or [rbp+9], dh; mov eax, ebp; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81117c09: or [rbp+9], dh; mov eax, ebx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8170de24: or [rbp+9], dh; mov eax, ecx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8100ce82: or [rbp+9], dh; mov rax, rbx; add rsp, 0x10; pop rbx; ret;
0xffffffff81348b79: or [rbp+9], dh; xor eax, eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff82558fa6: or [rbp+rbp*4+0x2ff32a6b], ebx; leave; and eax, 0xc25fb7fd; jmp qword ptr [r8+0x394261a];
0xffffffff826e96f7: or [rbp+rdx*8+0x66], esi; xchg esp, eax; cmc; sti; iretd;
0xffffffff82509833: or [rbp-0x3d1e5033], ch; fmul st, qword ptr [rdx+0x6143678c]; leave; cmp cl, [rdi-0x4c]; iretd;
0xffffffff82554f6e: or [rbx+0x19bdedd5], ecx; add dword ptr [rdi-0x70], 0x66; leave; ret;
0xffffffff826cf0de: or [rbx+0x40c37363], ecx; push 0xa73e26f; mov esp, [rbx+0x73]; ret;
0xffffffff810ddd8a: or [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff81190ac7: or [rbx+0x41], bl; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff8100b14d: or [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff810022d6: or [rbx+0x41], ebx; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81542e52: or [rbx+0x41], r11b; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff811857ed: or [rbx+0x41], r11b; pop rsp; pop r14; pop r15; ret;
0xffffffff819cd40b: or [rbx-0x2f08ff30], al; mov [rsi+0x88], eax; add rsp, 0x18; ret;
0xffffffff8235a66c: or [rbx-0x60], esp; frndint; xchg esp, eax; iretd;
0xffffffff81b2552f: or [rbx], dl; and al, 4; adc eax, [rsp]; adc eax, 0; add rsp, 0xc; ret;
0xffffffff82350361: or [rbx], edx; mov ebx, 0xa0152393; pop rsp; sub esi, [rbx-5]; ret;
0xffffffff81625f72: or [rcx+0x400fe], al; add [rdi], cl; xchg esp, eax; rol byte ptr [rcx-0x73], 0x4d; jmp qword ptr [rsi-0x7d];
0xffffffff826b89b7: or [rcx+0x75], dh; leave; call far fword ptr [rsi-0x2af28b26];
0xffffffff82704124: or [rcx+0x75], dh; leave; call qword ptr [rdx];
0xffffffff8268817c: or [rcx+0x75], dh; leave; jmp far fword ptr [rdx+0x7409bfff];
0xffffffff8268819a: or [rcx+0x75], dh; leave; jmp qword ptr [rdx-4];
0xffffffff826884f2: or [rcx+0x75], edx; leave; call rsi;
0xffffffff826886b7: or [rcx+0x75], edx; leave; jmp far fword ptr [rax+0xc6512ff];
0xffffffff82688114: or [rcx+0x75], edx; leave; jmp far fword ptr [rax+0xd790cff];
0xffffffff826b89d6: or [rcx+0x75], edx; leave; jmp far fword ptr [rdx+0xb6263ff];
0xffffffff82687ff9: or [rcx+0x75], edx; leave; jmp qword ptr [rbx+0x74];
0xffffffff82688185: or [rcx+0x75], esi; leave; jmp far fword ptr [rdx+0xaf1deff];
0xffffffff823cb7ac: or [rcx+0xa], ebx; mov eax, 0x364f3837; pop rsp; xor [rbx+0x46], edi; imul edi, esp, 0xa86b9f71; iretd;
0xffffffff81c18da5: or [rcx+rcx*4-0x10], cl; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff812f7071: or [rcx+rcx*4-0x40], cl; mov rsp, rbp; pop rbp; ret;
0xffffffff826f34f5: or [rcx+rsi*2], ebx; leave; xor byte ptr [rdi-0x1b], 0xe1; outsb dx, [rsi]; or edx, [rsp+rdi*8+0x65]; jmp qword ptr [rsi-0x45];
0xffffffff8158c0c0: or [rcx-0x77], cl; xchg esp, eax; iretd;
0xffffffff82006bb1: or [rcx-1], ecx; pop rsp; and eax, [rip-0x38e5ff01]; call qword ptr [rdi+0x50ff490c];
0xffffffff8182eacb: or [rcx], al; add [rdi], cl; xchg esp, eax; ret 0x2a8;
0xffffffff816041b2: or [rcx], dh; leave; cmp eax, [rdi+0xb8]; mov eax, 0xffffffea; cmovle eax, ecx; ret;
0xffffffff81781b70: or [rcx], dh; leave; mov eax, ecx; lea rdi, [rax*4-0x7da15540]; mov eax, [rdi]; ret;
0xffffffff812d93fb: or [rcx], dh; leave; mov eax, ecx; pop rbx; pop r14; ret;
0xffffffff8199cd04: or [rcx], dh; leave; mov rax, rcx; ret;
0xffffffff8104c656: or [rcx], dh; leave; movzx eax, cl; pop rbx; pop rbp; ret;
0xffffffff8158b0e8: or [rcx], dh; leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x2bc]; ret;
0xffffffff8158b0c8: or [rcx], dh; leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x2c4]; ret;
0xffffffff81559a48: or [rcx], dh; leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x348]; ret;
0xffffffff81559a28: or [rcx], dh; leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x350]; ret;
0xffffffff8156c801: or [rcx], dh; leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x358]; ret;
0xffffffff8156cf91: or [rcx], dh; leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x360]; ret;
0xffffffff81596eb8: or [rcx], dh; leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x368]; ret;
0xffffffff81596e98: or [rcx], dh; leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x370]; ret;
0xffffffff8159b2a8: or [rcx], dh; leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x378]; ret;
0xffffffff8159b288: or [rcx], dh; leave; test esi, esi; setne cl; mov eax, [rax+rcx*4+0x380]; ret;
0xffffffff811e60e2: or [rcx], dh; rol byte ptr [rax+0xf00137b], cl; xchg esp, eax; ret 0x894c;
0xffffffff81351d33: or [rcx], dh; rol byte ptr [rbx+0xf062878], cl; xchg esp, eax; ret 0x8b48;
0xffffffff81ab2c1f: or [rcx], dh; rol byte ptr [rcx-0xa], cl; and al, 2; add cl, [rdi]; xchg esp, eax; ret 0xc148;
0xffffffff817e514e: or [rcx], dh; ror byte ptr [rcx+rdi-0xf], 0xf; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; pop r15; ret;
0xffffffff810ca16f: or [rcx], eax; add [rax], al; add rsp, 0x88; ret;
0xffffffff8232837d: or [rcx], ecx; xchg esp, eax; add eax, 0x9856eb60; mov [0xfa2fbf89026148af], al; ret 0x1a8;
0xffffffff816041b1: or [rcx], r14b; leave; cmp eax, [rdi+0xb8]; mov eax, 0xffffffea; cmovle eax, ecx; ret;
0xffffffff826ee1d8: or [rdi+rax*4+0x24], edx; int 0xaf; not byte ptr [rbp+0x540a73e8]; xchg [rax+rbp*4], esp; jmp far fword ptr [rdi+0x73e895f6];
0xffffffff8181dc89: or [rdi+rcx-0x49], al; adc dword ptr [rax+1], 0xb70f0000; and dword ptr [rax+0x66000000], 0xffff883; xchg esp, eax; ret;
0xffffffff82312978: or [rdi-0x76], cl; adc r11b, [rdi]; push rcx; mov [0xd4766988cde0d199], al; leave; ret;
0xffffffff810b057e: or [rdi], cl; and al, dh; mov rsp, [rsp]; pop rbp; ret;
0xffffffff8148afd1: or [rdi], cl; leave; mov [rax+4], ecx; xor eax, eax; pop rbx; ret;
0xffffffff8197e347: or [rdi], cl; mov dh, 0xc0; add rsp, 0x10; ret;
0xffffffff8172c328: or [rdi], cl; test [rax+0x48000001], eax; add esp, 0x10; pop rbx; pop r14; ret;
0xffffffff81752a41: or [rdi], cl; test [rax+rax-0x17770000], esi; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8345ec64: or [rdi], cl; test [rax+rax-0x27770000], esp; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81702b13: or [rdi], cl; test [rbp+0x48000000], eax; add esp, 0x10; pop rbx; ret;
0xffffffff818979f5: or [rdi], cl; test [rbp+0x48000000], ecx; add esp, 0x10; pop rbx; ret;
0xffffffff8170529a: or [rdi], cl; test [rbp+0x48000001], ebp; add esp, 0x10; pop rbx; pop r14; ret;
0xffffffff812a2798: or [rdi], cl; test [rbx], al; add [rax], eax; add al, ch; pop rsp; ret;
0xffffffff817030c6: or [rdi], cl; test [rcx+0x48000000], edi; add esp, 0x10; pop rbx; ret;
0xffffffff818eb468: or [rdi], cl; test [rcx+0x48000000], edx; add esp, 0x10; pop rbx; pop r14; ret;
0xffffffff81025ffd: or [rdi], cl; test [rcx+1], esp; add [rax], al; add rsp, 0x10; pop rbx; ret;
0xffffffff81703a5c: or [rdi], cl; test [rdi+0x48000000], edi; add esp, 0x10; pop rbx; ret;
0xffffffff834468c0: or [rdi], cl; test [rdx+0x48000000], esi; add esp, 0x10; pop rbx; pop r14; ret;
0xffffffff818eeeb2: or [rdi], cl; test [rdx+0x48000000], esi; add esp, 0x10; pop rbx; ret;
0xffffffff817a25bc: or [rdi], cl; test [rip+0x48000001], ebp; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8172187f: or [rdi], cl; test [rsi+0x48000000], ecx; add esp, 0x10; pop rbx; pop r14; ret;
0xffffffff818a8979: or [rdi], cl; test [rsi+0x48000000], esi; add esp, 0x10; pop rbx; ret;
0xffffffff818aa2c1: or [rdi], cl; test [rsi+1], edi; add [rax], al; add rsp, 0x10; pop rbx; ret;
0xffffffff8181c8de: or [rdi], cl; xchg esp, eax; ret 0x2040;
0xffffffff81a9b1ac: or [rdi], cl; xchg esp, eax; ret 0x448b;
0xffffffff81699fbc: or [rdi], cl; xchg esp, eax; ret 0x474;
0xffffffff81a7dd13: or [rdi], cl; xchg esp, eax; ret 0x5039;
0xffffffff811d6043: or [rdi], cl; xchg esp, eax; ret 0x728d;
0xffffffff81903d17: or [rdi], cl; xchg esp, eax; ret 0x8b4c;
0xffffffff81aa053e: or [rdi], cl; xchg esp, eax; ret 0xb60f;
0xffffffff81a987b5: or [rdi], cl; xchg esp, eax; ret 0xc148;
0xffffffff81736e46: or [rdi], cl; xchg esp, eax; ret 0xc280;
0xffffffff81a7e132: or [rdi], cl; xchg esp, eax; ret 0xc789;
0xffffffff81561985: or [rdi], cl; xchg esp, eax; ret 0xd284;
0xffffffff8185dbe9: or [rdi], cl; xchg esp, eax; ret 0xeab8;
0xffffffff811d607a: or [rdi], cl; xchg esp, eax; ret 0xf201;
0xffffffff81a788e4: or [rdi], cl; xchg esp, eax; ret 0xf280;
0xffffffff81903cb9: or [rdi], cl; xchg esp, eax; ret 0xf41;
0xffffffff816b8746: or [rdi], cl; xchg esp, eax; ret 0xf48;
0xffffffff816b7322: or [rdi], cl; xchg esp, eax; ret 0xf49;
0xffffffff81a80927: or [rdi], cl; xchg esp, eax; ret;
0xffffffff812ab705: or [rdi], cl; xchg esp, eax; ret;
0xffffffff81a7e1cf: or [rdi], cl; xchg esp, eax; rol dword ptr [rax+0xf000178], 0x95; shl byte ptr [rax], 0xc8; ret;
0xffffffff817bde4b: or [rdi], cl; xchg esp, eax; rol dword ptr [rbx-0x14ddd5c3], 1; setne al; and al, cl; ret;
0xffffffff815ab90f: or [rdi], cl; xchg esp, eax; rol ecx, 0xe1; or al, [rcx-0xc0037]; jmp qword ptr [rcx];
0xffffffff816b74b8: or [rdi], cl; xchg esp, eax; ror dword ptr [rax+0xf], 0x45; ret;
0xffffffff816badb0: or [rdi], cl; xchg esp, eax; ror dword ptr [rcx+0xf], 0x45; ret;
0xffffffff812ab723: or [rdi], cl; xchg esp, eax; ror dword ptr [rdi], 0x95; ret 0xfa01;
0xffffffff811b645e: or [rdi], cl; xchg esp, eax; shl byte ptr [rbx], 0x87; xor al, 1; add [rax], al; ret;
0xffffffff826cf6a0: or [rdi], ecx; mov esp, [rbx+0x73]; ret;
0xffffffff82247f08: or [rdx+0x1a], ch; imul ebp; leave; sar dword ptr [rdi-0x1f], 1; ret;
0xffffffff825593e2: or [rdx+0x7e], ch; leave; iretd;
0xffffffff822d73a3: or [rdx-0x1d], ebp; stosd [rdi]; in al, 0x1b; xchg ebp, eax; pop rsp; ret 0xfc8e;
0xffffffff819695a9: or [rdx-0x2f3eeee3], cl; add [rdx-0x2f3ef5f3], ecx; add [rcx], esi; ror byte ptr [rcx+0xfc808d8], cl; xchg esp, eax; ret 0x8b44;
0xffffffff82568206: or [rdx-0x68a9a3a5], ch; leave; pop rbx; popfq; jmp qword ptr [rdi-0x72fca4eb];
0xffffffff82568205: or [rdx-0x68a9a3a5], ch; leave; pop rbx; popfq; jmp qword ptr [rdi-0x72fca4eb];
0xffffffff82006d6d: or [rdx-1], ecx; mov al, [0x4cffc71914ff0521]; or cl, [rdx-1]; xchg esp, eax; and [rip-0x38e6f201], eax; call qword ptr [rsp+rcx];
0xffffffff82421f2a: or [rdx], edx; fdivp st(3), st; rcl esi, 1; leave; iretd;
0xffffffff8250b062: or [rsi+0x73], bl; xor bh, dh; insb [rdi], dx; xchg [rsp+rbp-0x28], esp; jmp qword ptr [rcx-0xdb14e02];
0xffffffff82328ec8: or [rsi+rdx], bl; cli; sub ch, ch; sbb dl, [rbp-0xa]; pop rsp; ret 0xdeb6;
0xffffffff82681be6: or [rsi-0x11], dh; xchg esp, eax; ror dword ptr [rdx], 0x74; iretd;
0xffffffff822a7e15: or [rsi], ah; add esp, 0x65; xor ebx, ecx; xchg edx, eax; div esp; iretd;
0xffffffff816a6c30: or [rsi], al; add [rdi], cl; xchg esp, eax; ret;
0xffffffff82482907: or [rsi], al; push rdx; pop rsp; xor dh, [rcx+rcx*4-0x4924582b]; ret;
0xffffffff82470401: or [rsi], ebx; mov dl, al; leave; ret 0xd564;
0xffffffff826cf682: or [rsi], ecx; mov esp, [rbx+0x73]; ret;
0xffffffff8240c677: or [rsp+0x606c9571], dl; sub eax, [rax+0x2e]; leave; pop r9; ret 0x3c8e;
0xffffffff822404e6: or [rsp+rbx+0x6e242162], dh; pop rsp; ret;
0xffffffff822404e5: or [rsp+rbx+0x6e242162], sil; pop rsp; ret;
0xffffffff82291606: or ah, [rcx+0x4b826ba8]; leave; in al, dx; iretd;
0xffffffff8228d808: or ah, [rsi+rbp*2]; imul byte ptr [rax+0x615e06fb]; leave; add bh, bh; out 0xce, eax; ret;
0xffffffff8346e24a: or ah, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff8100fb64: or al, 0; add [rdi], cl; xchg esp, eax; ret 0xc148;
0xffffffff81264f9e: or al, 0; add al, ch; or al, [rax]; add [rax], al; add rsp, 0x10; ret;
0xffffffff8348d580: or al, 0x15; sar ch, cl; add rsp, 8; pop rbx; ret;
0xffffffff82ad3b5b: or al, 0x19; xchg esp, eax; add [rax], eax; ret;
0xffffffff8101d909: or al, 0x24; add bl, [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff812c3cf0: or al, 0x24; add cl, 1; mov eax, 1; shl rax, cl; add rsp, 8; ret;
0xffffffff81992dc2: or al, 0x24; add eax, [rsp]; adc eax, 0; add rsp, 4; ret;
0xffffffff816b71a6: or al, 0x24; add rsp, 1; ret;
0xffffffff825ce457: or al, 0x24; and al, 0x6c; pop rsp; pop rsp; in al, 0xb8; ret 0x5dc2;
0xffffffff810c034e: or al, 0x24; mov [rdx], ecx; xor eax, eax; add rsp, 4; ret;
0xffffffff810c0426: or al, 0x24; mov [rsi], ecx; xor eax, eax; add rsp, 4; ret;
0xffffffff816bc48e: or al, 0x24; mov eax, 0x1f; sub eax, ecx; add rsp, 4; ret;
0xffffffff816c2c7f: or al, 0x24; shl rdi, cl; mov rax, rdi; add rsp, 0x20; ret;
0xffffffff81e00edd: or al, 0x25; enter 0x15c, 0; leave; ret;
0xffffffff8223e261: or al, 0x29; xor eax, 0xbbafcc66; xchg esp, eax; mov ebx, 0xe661c075; sub r9b, [rax+rbx*4+0x4a]; ret 0x8d38;
0xffffffff8244bc55: or al, 0x2c; cmc; outsd dx, [rsi]; xchg ebx, esp; jmp far fword ptr [rbp-0x6613a3f];
0xffffffff819f2690: or al, 0x31; leave; cmp eax, 0x20; mov eax, 0xffffffea; cmove eax, ecx; ret;
0xffffffff81b81a0e: or al, 0x31; leave; cmp esi, edx; mov eax, 0xffffffea; cmovbe eax, ecx; ret;
0xffffffff816f76a1: or al, 0x31; shl dh, cl; xchg ecx, esi; add eax, 0xf400000; xchg esp, eax; ret 0x8948;
0xffffffff82570ee1: or al, 0x33; leave; fimul st, word ptr [rdx+rsi*8]; iretd;
0xffffffff81894e62: or al, 0x41; add [rdi], ecx; xchg esp, eax; ret 0xf631;
0xffffffff816fe583: or al, 0x48; add esp, 0x10; pop rbx; pop r14; ret;
0xffffffff812f35ac: or al, 0x48; add esp, 0x10; ret;
0xffffffff813ec465: or al, 0x48; add esp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff813cebbc: or al, 0x48; add esp, 0x18; pop rbx; pop r14; ret;
0xffffffff8106b7c1: or al, 0x48; add esp, 0x20; ret;
0xffffffff81a144d2: or al, 0x48; add esp, 0x2b0; pop rbx; pop r14; pop rbp; ret;
0xffffffff81a6d0a8: or al, 0x48; add esp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff81a6d19d: or al, 0x48; add esp, 0x38; ret;
0xffffffff8194d7b4: or al, 0x48; add esp, 0x50; pop rbx; pop r14; pop r15; ret;
0xffffffff81658fc9: or al, 0x48; add esp, 0x88; pop rbx; pop r14; pop rbp; ret;
0xffffffff8342a5eb: or al, 0x48; add esp, 0x90; pop rbx; pop r14; pop rbp; ret;
0xffffffff8114f93d: or al, 0x48; add esp, 0xa0; pop rbx; pop r14; pop rbp; ret;
0xffffffff811b3c9a: or al, 0x48; add esp, 0xb8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8133ce88: or al, 0x48; add esp, 0xd0; pop rbx; pop r14; pop rbp; ret;
0xffffffff8112e3e6: or al, 0x48; add esp, 0xd8; pop rbx; pop r14; pop rbp; ret;
0xffffffff81b9dda9: or al, 0x48; add esp, 0xe8; pop rbx; pop r14; pop rbp; ret;
0xffffffff81693587: or al, 0x48; cwde; add rsp, 0x10; pop rbx; ret;
0xffffffff810cd266: or al, 0x48; mov eax, 0xfffffdfe; add rsp, 0x10; ret;
0xffffffff8152181a: or al, 0x48; mov eax, ebx; add rsp, 0xa0; pop rbx; ret;
0xffffffff815c2a4e: or al, 0x48; mov esp, ebp; pop rbp; ret;
0xffffffff8349c6ad: or al, 0x50; inc byte ptr [rbp+0x481275c0]; add esp, 8; pop rbx; ret;
0xffffffff822f48ab: or al, 0x5d; out 0x86, eax; int3; sub esp, ebx; ret 0x6f50;
0xffffffff82551dbd: or al, 0x5e; adc ebp, esp; xchg esp, eax; ret 0xf738;
0xffffffff82420214: or al, 0x68; xor [rcx+0x1c], bl; sub dh, [rdx-0x1e]; mov byte ptr [rsi-0xa1604aa], 0xe2; pop rsp; iretd;
0xffffffff82688112: or al, 0x79; or [rcx+0x75], edx; leave; jmp far fword ptr [rax+0xd790cff];
0xffffffff81499208: or al, 0x84; shl byte ptr [rbp+0xf], 0x48; add esp, 8; pop rbx; pop r14; ret;
0xffffffff826e3eea: or al, 0x8b; imul esi, eax, 0x61; pop rsp; mov bx, 0xd967; fld st, tbyte ptr [rsp+rbp*2+8]; ret 0x10d9;
0xffffffff82525111: or al, 0x95; pop rsp; ret;
0xffffffff812b23c3: or al, 0xa8; add al, 0xf; xchg esp, eax; ret 0xca08;
0xffffffff82ad434f: or al, 0xaa; xchg esp, eax; add [rax], eax; ret 0x1b56;
0xffffffff828fb77b: or al, 0xab; insb [rdi], dx; add [rax], al; pop rsp; sysret;
0xffffffff8256c13e: or al, 0xb5; push rsp; leave; mov ebx, 0x81600f5; mov dh, 0xd4; ret;
0xffffffff824f79e5: or al, 0xb8; xchg esp, eax; rcr byte ptr [rdi], 0xe1; and esi, [rdx]; sbb ch, [rsi*4-0x1f2d887f]; ret;
0xffffffff82670d61: or al, 0xba; std; pop rsp; or edi, [rdx-0x45f4e303]; std; ret 0xba0a;
0xffffffff82236681: or al, 0xc1; pop rcx; test [rdx], edi; leave; pop rax; iretd;
0xffffffff8252510f: or al, 0xc; xchg ebp, eax; pop rsp; ret;
0xffffffff824aa91c: or al, 0xca; leave; iretd;
0xffffffff826caf3c: or al, 0xca; stc; imul ebp, edi, 0x30353238; xchg esp, eax; out 0x74, eax; iretd;
0xffffffff8346ddfe: or al, 0xd4; std; add rsp, 8; pop rbx; ret;
0xffffffff82875997: or al, 0xe0; sldt [rax]; pop rsp; ret 1;
0xffffffff82875a0f: or al, 0xe0; sldt [rax]; pop rsp; ret;
0xffffffff823eff95: or al, 0xe8; leave; mov [0xf4ccaebd863dbe74], eax; or ah, [rax]; iretd;
0xffffffff82226f0c: or al, 0xf5; pop rcx; leave; ret 0x6a20;
0xffffffff8243b8f9: or al, 0xf9; fldcw [rsi+0x7d]; leave; fidiv st, dword ptr [rbx+0x4b]; mov al, 0xf5; ret;
0xffffffff81901c50: or al, 0xf; xchg esp, eax; ret 0xbe;
0xffffffff8122869e: or al, 0xf; xchg esp, eax; ret;
0xffffffff8104c628: or al, 0xf; xchg esp, eax; ror dword ptr [rax+1], 0xd9; mov rax, rcx; pop rbx; ret;
0xffffffff818a5f2b: or al, 4; add [rax], al; add [rdi], ecx; xchg esp, eax; ret 0xe2c1;
0xffffffff825ce056: or al, 6; and al, 0x6c; and al, 0x5c; in al, 0xb8; pop rsp; ret 0x9f5d;
0xffffffff81264fa2: or al, [rax]; add [rax], al; add rsp, 0x10; ret;
0xffffffff8102fcff: or al, [rax]; add [rdi], cl; xchg esp, eax; ret 0x4b9;
0xffffffff82a80ef5: or al, [rax]; add ah, dl; mov ebx, 0x325c0014; add [rax], eax; xchg esp, eax; iretd;
0xffffffff824bf48f: or al, [rcx-0x11c5ced1]; leave; pop rsp; add eax, 0xf8261b62; cld; ret;
0xffffffff81a7de6f: or al, [rdi+rcx]; xchg esp, eax; ret 0xca30;
0xffffffff822c14ac: or al, [rsi+0x7f]; leave; ret;
0xffffffff8242e9df: or al, [rsp+rbp*8]; xchg [rdx-0x4e], esp; push 0x37bc25a7; sbb ah, [rdi+rax*2+0x4d]; call rsp;
0xffffffff822ca05f: or al, bh; sbb esp, ebp; ret 0x6313;
0xffffffff81c2e3f1: or al, ch; leave; in eax, dx; cli; jmp far fword ptr [rax+0x44417420];
0xffffffff81846001: or al, ch; leave; iretd;
0xffffffff817b6fee: or al, ch; pop rsp; cdq; add [rax-0x7d], cl; ret;
0xffffffff81a17ca5: or al, ch; push rbp; xchg esp, eax; pop rsi; add [rax-0x77], cl; ret;
0xffffffff8151761d: or al, ch; sbb eax, 0x4800000a; add esp, 8; pop rbx; pop r14; ret;
0xffffffff8254e3ff: or bh, [0xffffffffbd233eaa]; push rdx; adc dh, [rsp+rbp]; pop rsp; and [rcx+0x2e8f8ded], eax; ret;
0xffffffff823cb7ae: or bh, [rax+0x364f3837]; pop rsp; xor [rbx+0x46], edi; imul edi, esp, 0xa86b9f71; iretd;
0xffffffff8343b376: or bh, [rax+1]; add rsp, 0x10; ret;
0xffffffff8345e9e5: or bh, [rax+1]; add rsp, 0x18; ret;
0xffffffff81a76969: or bh, [rax-1]; add rsp, 0x18; ret;
0xffffffff81c10779: or bh, [rax-3]; add rsp, 0x18; ret;
0xffffffff822b5bf8: or bh, [rdi+0x515a22]; adc [rdx-5], eax; push rdi; test bh, ch; data16 leave; ret;
0xffffffff82554bd0: or bh, [rdx+0x7ca8231f]; xchg esp, eax; add al, 0xce; iretd;
0xffffffff82554bcf: or bh, [rdx+0x7ca8231f]; xchg esp, eax; add al, 0xce; iretd;
0xffffffff814fbd1f: or bh, al; and al, 4; pop rsp; add [rax], al; add [rax-0x77], cl; iretd;
0xffffffff82003356: or bh, bh; sub eax, 0xe4ffffd5; pop rsp; add eax, 0xacad1ff; jmp far fword ptr [rax];
0xffffffff820030da: or bh, bh; xchg esp, eax; enter 0xff0a, 0x10; pop rdi; add eax, 0xac7adff; call qword ptr [rdx+0x4ff0ac8];
0xffffffff823cdbb0: or bh, dl; leave; ret;
0xffffffff825d6801: or bl, [rax+0xf]; leave; fld st, dword ptr [rsp+rax*8]; stosd [edi]; nop; ret 0xcc78;
0xffffffff81007245: or bl, [rbx+0x41]; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff8200a5a1: or bl, [rdi+rdi*8-0xfb1694]; xchg esp, eax; inc esi; call rcx;
0xffffffff81bca2ab: or bl, bh; dec dword ptr [rcx-0x7a3fce3f]; leave; setne al; ret;
0xffffffff81b4c308: or bl, bpl; add dh, [rcx]; leave; mov [rdx], rcx; pop rbx; ret;
0xffffffff81b4c309: or bl, ch; add dh, [rcx]; leave; mov [rdx], rcx; pop rbx; ret;
0xffffffff823d1145: or bl, dl; leave; add dword ptr [rcx-0x7ccd2a0c], 0xffffffaf; mov edx, 0x6bdde666; xor al, 0xb9; jmp far fword ptr [rax+0x15c1c604];
0xffffffff81297bec: or byte ptr [rax+0x2b], 0x15; pop rsp; ret;
0xffffffff8182eac2: or byte ptr [rax], 0; add [rcx], dh; rol byte ptr [rcx+0x10802f9], cl; add [rdi], cl; xchg esp, eax; ret 0x2a8;
0xffffffff823693cc: or ch, [rdi+0x382fbc74]; sub al, 0xc9; cmc; xchg esi, esp; iretd;
0xffffffff8239fb48: or ch, [rdi]; xchg r8d, eax; insb [rdi], dx; insb [rdi], dx; pop rsp; iretd;
0xffffffff825ccfad: or ch, [rdx+0x76]; out 0xae, al; in eax, dx; leave; ret 0x3b81;
0xffffffff82516b89: or ch, [rsi]; leave; iretd;
0xffffffff822e3522: or ch, [rsi]; xchg esp, eax; cdq; ret 0xe9c6;
0xffffffff823bef9a: or ch, ah; push rsi; leave; outsb dx, [rsi]; ret;
0xffffffff8224900c: or ch, bh; leave; iretd;
0xffffffff81389fb0: or cl, [rax+0x39]; xchg [rax+0xf000000], ebp; xchg esp, eax; shl byte ptr [rcx+rax], 0xf; mov dh, 0xc0; ret;
0xffffffff8157278f: or cl, [rax+0xf]; leave; sub rax, rcx; ret;
0xffffffff817cbfa6: or cl, [rax-0x68]; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff818d05ec: or cl, [rax-0x75]; xchg eax, esp; add [rax], al; add [rbx+0x39449004], cl; shl byte ptr [rbx+rcx+0x48], 0x83; ret 0x4901;
0xffffffff81301bc7: or cl, [rax-0x7d]; mov ebx, 0x90; add [rdx+rdx-0x18], dh; leave; ret;
0xffffffff826cf0e8: or cl, [rbx-0x213c8c9d]; scasb [rdi]; push 0xb73e26f; mov esp, [rbx+0x73]; ret;
0xffffffff81559b0b: or cl, [rdi]; leave; sub eax, ecx; mov eax, eax; ret;
0xffffffff81559bda: or cl, [rdi]; leave; sub rax, rcx; ret;
0xffffffff81c68856: or cl, [rdi]; xchg esp, eax; ret 0x2041;
0xffffffff8191c1cd: or cl, [rdi]; xchg esp, eax; ret 0x3c80;
0xffffffff8191c465: or cl, [rdi]; xchg esp, eax; ret 0xc031;
0xffffffff81920773: or cl, [rdi]; xchg esp, eax; ret 0xc748;
0xffffffff81c6892c: or cl, [rdi]; xchg esp, eax; ret;
0xffffffff816e48e0: or cl, [rdi]; xchg esp, eax; ror byte ptr [rax], 0xc8; ret;
0xffffffff8198a0f9: or cl, [rdi]; xchg esp, eax; shr ecx, 0xd6; add [rax], al; add [rax-0x46], cl; iretd;
0xffffffff82006d79: or cl, [rdx-1]; xchg esp, eax; and [rip-0x38e6f201], eax; call qword ptr [rsp+rcx];
0xffffffff825ce055: or cl, [rsi+rax]; and al, 0x6c; and al, 0x5c; in al, 0xb8; pop rsp; ret 0x9f5d;
0xffffffff825ce456: or cl, [rsp]; and al, 0x6c; pop rsp; pop rsp; in al, 0xb8; ret 0x5dc2;
0xffffffff81142d90: or cl, dh; movzx ecx, cl; add eax, ecx; add rsp, 0x48; ret;
0xffffffff81142d8f: or cl, sil; movzx ecx, cl; add eax, ecx; add rsp, 0x48; ret;
0xffffffff81a76bd2: or dh, [rax]; fsub st, dword ptr [rcx+rax]; add rsp, 0x40; pop rbx; ret;
0xffffffff810c0415: or dh, [rbx+0x10]; add rsp, 4; ret;
0xffffffff82702c74: or dh, [rcx+0x75]; leave; jmp qword ptr [rbx+3];
0xffffffff826883c2: or dh, [rcx+0x75]; leave; jmp qword ptr [rbx-0x3f];
0xffffffff826e386a: or dh, [rcx+0x75]; leave; jmp qword ptr [rsi+0x64];
0xffffffff826884e7: or dh, [rcx+0x75]; leave; push rdx; mov [0xc9756154096be474], al; call rsi;
0xffffffff822899c8: or dh, [rcx]; push rbx; xchg esp, eax; mov al, [0x5fb6977491959f48]; sub [rsi+0x404f53], cl; iretd;
0xffffffff8172f858: or dh, [rcx]; rol byte ptr [rcx+0x5b13f9], cl; add [rdi], cl; xchg esp, eax; ret 0xca83;
0xffffffff824c01cf: or dh, [rdx+0x58]; mov esp, [rdx]; ret 0x5594;
0xffffffff825019c8: or dh, bl; xchg [rax-0x60], esp; ret;
0xffffffff8169b824: or dh, cl; pop rsp; add [rax-0x77], cl; ret;
0xffffffff8234d1e3: or dh, cl; xchg esp, eax; mov al, [0xf374567608d1455]; mov bpl, 0x81; xchg esi, eax; ret;
0xffffffff8234d1e4: or dh, cl; xchg esp, eax; mov al, [0xf374567608d1455]; mov bpl, 0x81; xchg esi, eax; ret;
0xffffffff82442536: or dh, cl; xchg esp, eax; movsxd eax, [rbx-0x5a]; imul ebp, edi, 0xffffff8f; scasb [rdi]; ret 0x684c;
0xffffffff8268815e: or dl, [rcx+0x75]; leave; call far fword ptr [rax];
0xffffffff82688648: or dl, [rcx+0x75]; leave; call qword ptr [rdx];
0xffffffff826886a6: or dl, [rcx+0x75]; leave; call rcx;
0xffffffff82688583: or dl, [rcx+0x75]; leave; call rdi;
0xffffffff82688653: or dl, [rcx+0x75]; leave; jmp far fword ptr [rax+0x6bdabeff];
0xffffffff8268854b: or dl, [rcx+0x75]; leave; jmp far fword ptr [rax-0x410a8801];
0xffffffff82688003: or dl, [rcx+0x75]; leave; jmp qword ptr [rbx+0x74];
0xffffffff826885aa: or dl, [rcx+0x75]; leave; jmp qword ptr [rdi+rcx*8-2];
0xffffffff826882c9: or dl, [rcx+0x75]; leave; jmp qword ptr [rsi-0x1a0a1848];
0xffffffff8346e066: or dl, ah; std; add rsp, 8; pop rbx; ret;
0xffffffff8346dfde: or dl, ah; std; add rsp, 8; pop rbx; ret;
0xffffffff8245e53d: or dl, bl; push rbx; leave; cdq; ret;
0xffffffff8245e53c: or dl, bl; push rbx; leave; cdq; ret;
0xffffffff8347e01b: or dl, bl; std; add rsp, 8; pop rbx; ret;
0xffffffff82494d89: or dl, ch; mov edi, ebx; xchg esp, eax; fild st, word ptr [rdi+0x417389e1]; leave; iretd;
0xffffffff8344dfa5: or dl, dh; std; add rsp, 8; pop rbx; ret;
0xffffffff81aea122: or dl, dl; pop rsp; jmp qword ptr [rsi+0x2e];
0xffffffff826882c8: or dl, fs:[rcx+0x75]; leave; jmp qword ptr [rsi-0x1a0a1848];
0xffffffff826886a5: or dl, gs:[rcx+0x75]; leave; call rcx;
0xffffffff816afd4e: or dword ptr [rax+0x5c], 8; add rsp, 4; ret;
0xffffffff81b1c1e3: or dword ptr [rax+rcx+0x18], 4; xor eax, eax; add rsp, 0xc; ret;
0xffffffff8101f0fa: or dword ptr [rcx-0x77], 0x9886; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8345a009: or dword ptr [rdx-0x2b], 0xfffffffd; add rsp, 8; pop rbx; ret;
0xffffffff82478bb1: or dword ptr [rdx-0x62], 0xfffffffc; xchg esp, eax; cmp [rdx-0x3b2ac921], ebp; and cl, [rbp+rbp*2-0x66736c65]; mov dl, 0xbc; ret;
0xffffffff816edf88: or dword ptr [rsi-0x57000000], 0; add al, 0; add [rdi], cl; xchg esp, eax; ret 0xd184;
0xffffffff82aaf9d7: or eax, 0; leave; rol byte ptr [rdx], 0; ret;
0xffffffff829026a7: or eax, 0; mov ch, 0xee; add al, 0; pop rsp; add [rax], al; ret;
0xffffffff8225d15f: or eax, 0x1a8d19a4; stosb [rdi]; push rbp; xchg esp, eax; iretd;
0xffffffff81263951: or eax, 0x1c88348; mov [rip+0x23b61b3], rax; add rsp, 4; ret;
0xffffffff810f0812: or eax, 0x1d672a1; imul eax, 0xf4240; mov [rip+0x1d672a1], eax; add rsp, 4; ret;
0xffffffff822463e3: or eax, 0x2cc03f2f; add esp, edx; pop rbp; pop rsi; ret 0x808c;
0xffffffff824f221f: or eax, 0x3015c0ab; ror dl, 1; xchg esp, eax; scasd [rdi]; sti; iretd;
0xffffffff811b63cf: or eax, 0x3100ab26; leave; test rax, rax; setne cl; mov eax, ecx; ret;
0xffffffff82706901: or eax, 0x33626d73; hlt; std; leave; jmp qword ptr [rbx+3];
0xffffffff81912650: or eax, 0x38e80000; cmp eax, 0xfff0ff7c; mov esp, [rax+0xf00000c]; mov [rbp+0x75003678], bh; sbb ecx, [rax-0x7f]; ret;
0xffffffff8250f855: or eax, 0x463c4b72; add esp, ebx; ret 0x9e3a;
0xffffffff810bff8f: or eax, 0x48000000; add esp, 8; ret;
0xffffffff81558a36: or eax, 0x48c08944; add esp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff8249b2f7: or eax, 0x48c29a5d; and eax, 0x73984614; pop rsp; iretd;
0xffffffff811a496b: or eax, 0x48c36348; add esp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff817ee8cb: or eax, 0x48c88948; add esp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff811e4d8b: or eax, 0x48d88948; add esp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff8134e227: or eax, 0x48d88948; add esp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff812c0727: or eax, 0x48d88948; add esp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff8161889b: or eax, 0x48d88948; add esp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff812f4f19: or eax, 0x48d88948; add esp, 0x40; pop rbx; pop r14; pop r15; ret;
0xffffffff815f1d13: or eax, 0x48d88948; add esp, 0x50; pop rbx; pop r14; pop r15; ret;
0xffffffff8153706c: or eax, 0x48d88948; add esp, 0x70; pop rbx; pop r14; pop r15; ret;
0xffffffff81050c29: or eax, 0x48f08944; add esp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff811ab295: or eax, 0x48f08944; add esp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff81bbdddf: or eax, 0x48f08944; add esp, 0x60; pop rbx; pop r14; pop r15; ret;
0xffffffff81b93ecf: or eax, 0x48f08944; add esp, 0x70; pop rbx; pop r14; pop r15; ret;
0xffffffff8112d4db: or eax, 0x48f0894c; add esp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff81028d26: or eax, 0x48f0894c; add esp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff810c1e28: or eax, 0x48f0894c; add esp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff810cfba1: or eax, 0x48f0894c; add esp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff8170c5e0: or eax, 0x48f88944; add esp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff81a7cf40: or eax, 0x48f88944; add esp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff81b8b917: or eax, 0x48f88944; add esp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff81517406: or eax, 0x48f88944; add esp, 0x78; pop rbx; pop r14; pop r15; ret;
0xffffffff810f837c: or eax, 0x48f88948; add esp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff812abe0f: or eax, 0x48f8894c; add esp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff8169b86f: or eax, 0x48f8894c; add esp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff819e0a9d: or eax, 0x48f8894c; add esp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff8141070e: or eax, 0x48f8894c; add esp, 0x58; pop rbx; pop r14; pop r15; ret;
0xffffffff8347527f: or eax, 0x48fdd398; add esp, 8; pop rbx; ret;
0xffffffff8346887f: or eax, 0x48fdd462; add esp, 8; pop rbx; ret;
0xffffffff8342ed7f: or eax, 0x48fdd7fd; add esp, 8; pop rbx; ret;
0xffffffff822f14d7: or eax, 0x491f5da; lodsb [rsi]; pop rsp; mov [0x5dc18f50a7e99f14], eax; imul edx; call rsp;
0xffffffff829a12db: or eax, 0x4b; pop rsp; mov dword ptr [rax+rax], 0xbfb9; scasd [rdi]; ret 8;
0xffffffff8255896d: or eax, 0x5b4d27e5; pop rsp; ret;
0xffffffff824df30c: or eax, 0x6678d65b; xchg esp, eax; int3; ficomp st, word ptr [rdi+0x10]; iretd;
0xffffffff826beeab: or eax, 0x67716685; xchg esp, eax; cmc; sti; iretd;
0xffffffff826beeaa: or eax, 0x67716685; xchg esp, eax; cmc; sti; iretd;
0xffffffff82470ee0: or eax, 0x6d041220; nop; xchg esp, eax; pushfq; iretd;
0xffffffff825474cb: or eax, 0x75bba393; pop rsp; ret 0x69cb;
0xffffffff8129613a: or eax, 0x76058b48; leave; iretd;
0xffffffff8164ec62: or eax, 0x76e80000; leave; ret;
0xffffffff812a623c: or eax, 0x78e4854d; sbb [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81a44649: or eax, 0x89480000; xchg [rax+0x4800000d], esp; mov [rdi+0xda8], eax; xor eax, eax; ret;
0xffffffff8268d469: or eax, 0x94cf06d5; in eax, 0x61; pop rsp; iretd;
0xffffffff82245eaa: or eax, 0x965f6a4c; mov cl, 0xf; sub esi, ebp; xchg [rdi], esp; iretd;
0xffffffff822f8684: or eax, 0x96774c70; xchg esp, eax; cmp dword ptr [rip+0x5422469b], 4; ret;
0xffffffff823d08f6: or eax, 0x9ba4d36; adc esp, eax; pop rdi; iretd;
0xffffffff8256b10f: or eax, 0xa0121b01; pop rsp; sub al, 0xa9; ret;
0xffffffff824f5987: or eax, 0xa2b2d8c6; mov [0x8d6000d95523710e], al; xchg esp, eax; enter 0x4480, 0xae; leave; ret 0x5cac;
0xffffffff823b4b71: or eax, 0xa2e4c119; xchg esp, eax; lodsb [rsi]; sub [rbp-0x3de8d60d], ebp; iretd;
0xffffffff82305d7a: or eax, 0xaefad225; xchg esp, eax; cli; ret 0x9cff;
0xffffffff811634df: or eax, 0xb70f024b; leave; not ecx; and eax, ecx; ret;
0xffffffff82478cba: or eax, 0xb84c4d75; xor al, 0x5c; out 0xe3, eax; leave; add eax, 0x7863a018; ret;
0xffffffff81af3bcf: or eax, 0xb9; add [rbp-0x14158a40], al; add dh, [rcx]; leave; mov rax, rcx; ret;
0xffffffff811f7a44: or eax, 0xb9; add [rbp-0x141b8a40], al; add dh, [rcx]; leave; mov rax, rcx; ret;
0xffffffff8224fe7f: or eax, 0xbe9826be; leave; out 0x25, eax; sbb [rdx+0x75bd7fce], dl; test eax, 0x6fded954; iretd;
0xffffffff825228f9: or eax, 0xbfd6e1f9; add [rsi-0x49], ebp; sub esp, eax; ret;
0xffffffff82668345: or eax, 0xc6fff5c; pop rsp; call far fword ptr [rdi-0x3000a3f5];
0xffffffff82a68b9f: or eax, 0xc91; pop rsp; ret;
0xffffffff82230945: or eax, 0xcca88c81; cmp dh, [rdi]; pop rsp; sub cl, cl; ret;
0xffffffff81663d1b: or eax, 0xcde80000; pop rsp; ret 0x48ff;
0xffffffff82546548: or eax, 0xdfd68f5f; xchg esp, eax; punpckhwd mm6, [rbx]; iretd;
0xffffffff8135d1cf: or eax, 0xeb000001; mov [rbx+0x41], ds; pop rsp; pop r14; pop r15; ret;
0xffffffff8241835f: or eax, 0xf1140669; int3; xchg esp, eax; pop rsi; sahf; ret;
0xffffffff82564445: or eax, 0xf4282a28; xlat [rbx]; sub dh, [rdi-0x65]; sbb esp, edi; add bh, 0x36; iretd;
0xffffffff824a21ec: or eax, 0xfb268073; fcom st, dword ptr [rax]; pop rsp; out dx, al; iretd;
0xffffffff8351c002: or eax, 0xffffff81; push rax; xchg esp, eax; or eax, 0xffffff81; call qword ptr [rax];
0xffffffff81263953: or eax, 1; mov [rip+0x23b61b3], rax; add rsp, 4; ret;
0xffffffff8118627e: or eax, [rax-0xa]; mov byte ptr [rcx], 0xf; xchg esp, eax; add eax, 0x2490252; mov eax, 1; ret;
0xffffffff81952ba1: or eax, [rax]; add [rax], al; add rsp, 8; ret;
0xffffffff81965bc4: or eax, [rax]; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81487157: or eax, [rax]; add [rcx], dh; leave; cmp eax, 0x19270000; cmove eax, ecx; ret;
0xffffffff816bfa1b: or eax, [rbp+0x310574c9]; leave; mov eax, ecx; ret;
0xffffffff816e7f11: or eax, [rbx-0x173eef20]; add al, 0x48; add esp, 0x10; ret;
0xffffffff817125dd: or eax, [rbx]; xchg esp, ebx; add eax, [rax]; add bl, al; mov eax, [rcx+0x10]; ret;
0xffffffff82373b87: or eax, [rcx+0x1a]; xchg [rsi+0x3d], eax; xchg esp, eax; xchg esi, eax; ret 0x94bd;
0xffffffff8118468b: or eax, [rcx+rcx*4-0x10]; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff819a1642: or eax, [rcx+rcx*4-0x10]; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff81382ac7: or eax, [rcx+rcx*4-0x10]; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff819caa76: or eax, [rcx+rcx*4-0x10]; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff823490a4: or eax, [rdi+3]; adc eax, 0xd0fb7c76; leave; ret;
0xffffffff8245afd7: or eax, [rsi]; pop qword ptr [rcx]; mov [0x1847e1be9049ed28], al; pop rsp; mov esp, 0xd6f6f6f5; iretd;
0xffffffff816c2e3b: or eax, edx; add rsp, 4; ret;
0xffffffff8228faa8: or eax, edx; pop rsp; xor [rax+0x5d], ebx; push rax; call far fword ptr [rsi-0x625ea60a];
0xffffffff82486c97: or eax, esp; pop rsp; mov eax, [0x4044b0cf4079114d]; sub bl, [rbx+rsi+7]; add [rbx], ah; call qword ptr [rsi-0x4f0950af];
0xffffffff822f7605: or ebp, [rbp-0x80]; leave; iretd;
0xffffffff822dea3c: or ebp, [rdx-0x4c3b2558]; or esi, [rax-0x76]; stosd [rdi]; adc dl, [rsi]; leave; ret;
0xffffffff818670ef: or ebp, eax; mov esp, [rbp+0x76e90059]; or esp, esi; jmp qword ptr [rsi+0xf];
0xffffffff81489e9e: or ebp, eax; mov esp, ss; ret 0x66ff;
0xffffffff8165167b: or ebp, eax; scasd [rdi]; pop rsp; cmpsb [rsi], [rdi]; jmp qword ptr [rsi+0x66];
0xffffffff822dea3a: or ebp, fs:[rdx-0x4c3b2558]; or esi, [rax-0x76]; stosd [rdi]; adc dl, [rsi]; leave; ret;
0xffffffff81af82b8: or ebx, 8; mov eax, ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810154e6: or ebx, [rbx+0x41]; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff816c9cac: or ebx, [rbx+0x41]; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff810dd5f5: or ebx, [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff82557ec1: or ebx, [rbx-0x38]; push rsp; stosb [rdi]; or ebx, [rcx]; xchg esp, eax; iretd;
0xffffffff823c20a1: or ebx, [rbx]; xchg esp, eax; mov gs, [rcx]; ret 0xdf46;
0xffffffff823c20a0: or ebx, [rbx]; xchg esp, eax; mov gs, [rcx]; ret 0xdf46;
0xffffffff82557ec6: or ebx, [rcx]; xchg esp, eax; iretd;
0xffffffff824936f2: or ebx, [rdi+0x68]; xchg edx, esp; sbb [r10-0x6324f08e], rsi; mov eax, 0x12e0b00f; ret;
0xffffffff82270934: or ebx, esi; scasb [rdi]; xchg esp, eax; ret 0x9bcf;
0xffffffff812dbb94: or ecx, 1; mov rax, rcx; add rsp, 0x10; ret;
0xffffffff8174b754: or ecx, [rax-0x75]; or [rax-0x7b], cl; leave; cmove rax, rcx; ret;
0xffffffff816a2ae6: or ecx, [rcx+rcx*4-0x10]; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8147fb73: or ecx, [rcx+rcx*4-0x10]; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff814719ea: or ecx, [rcx+rcx*4-0x10]; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff812f30ab: or ecx, [rcx+rcx*4-0x10]; add rsp, 0x40; pop rbx; pop r14; ret;
0xffffffff810c1c4f: or ecx, [rcx+rcx*4-0x10]; add rsp, 0x58; pop rbx; pop r14; ret;
0xffffffff81562a02: or ecx, [rdi]; mov dh, 0xc0; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff81489e9c: or ecx, [rdi]; or ebp, eax; mov esp, ss; ret 0x66ff;
0xffffffff81651679: or ecx, [rdi]; or ebp, eax; scasd [rdi]; pop rsp; cmpsb [rsi], [rdi]; jmp qword ptr [rsi+0x66];
0xffffffff823caa2a: or ecx, eax; xchg esp, eax; xchg ebp, eax; ror dword ptr [rax-0x47e2aead], 0xef; call qword ptr [rbx-0x76];
0xffffffff824205cf: or ecx, ebp; pop rsp; iretd;
0xffffffff822fb25d: or ecx, ecx; std; pop rsp; ret 0xae5b;
0xffffffff8249ef83: or edi, [rax+0x48]; adc [rax-0x59], ah; mov ch, 0xc6; leave; ret;
0xffffffff8103e985: or edi, [rax+1]; add rsp, 0x18; pop rbx; ret;
0xffffffff8243c0d2: or edi, [rdi]; cmp eax, 0xba86c375; leave; cwde; xor al, 0x8d; ret 0x8416;
0xffffffff83457081: or edi, [rdx-0x2b]; std; add rsp, 8; pop rbx; ret;
0xffffffff82291600: or edi, [rsi-0x50afe048]; or ah, [rcx+0x4b826ba8]; leave; in al, dx; iretd;
0xffffffff8346ed81: or edi, ebp; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82692f05: or edi, edi; cli; add esp, ebp; iretd;
0xffffffff820033e6: or edi, edi; mov edx, 0x4ff0b84; pop rsp; add eax, 0xb8473ff; jmp far fword ptr [rsi-0x700f47c];
0xffffffff8227f53b: or edi, esi; nop; xchg esp, eax; ret 0xfc21;
0xffffffff8230e6d2: or edi, esp; pop rax; pop rbx; leave; xor eax, 0xc5a6c17f; jmp qword ptr [rax-0x4b7f4d0b];
0xffffffff81a4275d: or edx, 0x20; mov [rdi+0x80], r10w; xor eax, eax; add rsp, 0x18; pop rbx; ret;
0xffffffff8222a214: or edx, [rbx-0x7e]; pop rsp; sub al, 0x4b; adc [rbx], ch; ret 0xaa36;
0xffffffff82688144: or edx, [rcx+0x75]; leave; call far fword ptr [rax];
0xffffffff8268865e: or edx, [rcx+0x75]; leave; call qword ptr [rdx];
0xffffffff826885eb: or edx, [rcx+0x75]; leave; jmp far fword ptr [rbp-0x19];
0xffffffff82688261: or edx, [rcx+0x75]; leave; jmp far fword ptr [rbp-0xb];
0xffffffff8268826d: or edx, [rcx+0x75]; leave; jmp qword ptr [rdi+rcx*8-2];
0xffffffff816c2e38: or edx, ecx; or rax, rdx; add rsp, 4; ret;
0xffffffff8346df20: or edx, esp; std; add rsp, 8; pop rbx; ret;
0xffffffff82688143: or edx, fs:[rcx+0x75]; leave; call far fword ptr [rax];
0xffffffff82416aaf: or esi, 0xb7a794c5; imul edi, ebp, 0x3b; pop rsp; cmpsd [rsi], [rdi]; scasb [rdi]; iretd;
0xffffffff822dea42: or esi, [rax-0x76]; stosd [rdi]; adc dl, [rsi]; leave; ret;
0xffffffff823f7959: or esi, [rbx]; leave; syscall;
0xffffffff826b7cb8: or esi, [rcx+0x75]; leave; call qword ptr [rbp-0xb109199];
0xffffffff823d380b: or esi, [rcx]; sar byte ptr [rsi], 0x60; mov ch, 6; mov esp, eax; ret 0x8b71;
0xffffffff824f4e7d: or esi, [rdx]; pop rsp; ret;
0xffffffff83467481: or esi, [rsi-0x2c]; std; add rsp, 8; pop rbx; ret;
0xffffffff81767c21: or esi, edi; xchg esp, eax; jmp qword ptr [rsi+0x66];
0xffffffff82317d54: or esi, esp; and dword ptr [rip-0x1b879d45], 0x7d; pop rsp; int1; and ch, dl; call qword ptr [rbp-0x231696a];
0xffffffff8241011e: or esp, 0xffffff85; fcomp st, dword ptr [rsi+0x6009c378]; mov edx, 0x13a5534; leave; xlat [rbx]; ret 0xc487;
0xffffffff834300f7: or esp, [rax]; enter 0xb60f, 0xc0; add rsp, 0x10; pop rbx; ret;
0xffffffff8232e0fa: or esp, [rcx-0x6ca00567]; insb [rdi], dx; shl ebp, 0x4b; xor eax, edi; xchg esp, eax; ret 0x79dd;
0xffffffff816ebbe2: or esp, [rsi-0x7d]; clc; add ecx, [rdi]; xchg esp, eax; ret;
0xffffffff825086e8: or esp, edx; leave; cmp [rsi-0x2a], dh; sub ebp, [rax+0x7de88159]; iretd;
0xffffffff8346e18d: or esp, edx; std; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff822c906c: or esp, esi; pop rsp; imul edx, [rsi-0x7d], 0xffffffd1; ret;
0xffffffff82688199: or gs:[rcx+0x75], dh; leave; jmp qword ptr [rdx-4];
0xffffffff826886b6: or gs:[rcx+0x75], edx; leave; jmp far fword ptr [rax+0xc6512ff];
0xffffffff816b7321: or gs:[rdi], cl; xchg esp, eax; ret 0xf49;
0xffffffff81a4275c: or r10d, 0x20; mov [rdi+0x80], r10w; xor eax, eax; add rsp, 0x18; pop rbx; ret;
0xffffffff8346e249: or r12b, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff822c906a: or r12d, r14d; pop rsp; imul edx, [rsi-0x7d], 0xffffffd1; ret;
0xffffffff822c906b: or r12d, r14d; pop rsp; imul edx, [rsi-0x7d], 0xffffffd1; ret;
0xffffffff8172f857: or r14b, [rcx]; rol byte ptr [rcx+0x5b13f9], cl; add [rdi], cl; xchg esp, eax; ret 0xca83;
0xffffffff82442535: or r14b, r9b; xchg esp, eax; movsxd eax, [rbx-0x5a]; imul ebp, edi, 0xffffff8f; scasb [rdi]; ret 0x684c;
0xffffffff81a7de6e: or r8b, [r15+rcx]; xchg esp, eax; ret 0xca30;
0xffffffff82006d78: or r9b, [rdx-1]; xchg esp, eax; and [rip-0x38e6f201], eax; call qword ptr [rsp+rcx];
0xffffffff81263952: or rax, 1; mov [rip+0x23b61b3], rax; add rsp, 4; ret;
0xffffffff816c2e3a: or rax, rdx; add rsp, 4; ret;
0xffffffff812dbb93: or rcx, 1; mov rax, rcx; add rsp, 0x10; ret;
0xffffffff816c2e37: or rdx, rcx; or rax, rdx; add rsp, 4; ret;
0xffffffff824f4e7c: or rsi, [rdx]; pop rsp; ret;
0xffffffff8222b3cb: orps xmm0, [rbp-0x3d]; xor [rbx+0x1ccc24bb], dh; xchg ebp, eax; getsec; pop rsp; ret 0xf322;
0xffffffff8344c5cd: out 0, eax; add [rax], al; add rsp, 0x10; ret;
0xffffffff822ffac4: out 0x10, eax; outsb dx, [rsi]; pop rsp; iretd;
0xffffffff810ac5c6: out 0x15, al; add esp, eax; ret 0x71;
0xffffffff81425c46: out 0x16, al; leave; jmp qword ptr [rsi+0xf];
0xffffffff8235edb5: out 0x1d, al; leave; pop rbp; xor dword ptr [rax-0x77], 0xffffffb5; stosb [rdi]; iretd;
0xffffffff823dd79c: out 0x1f, al; pop rsp; sbb eax, 0xc3906163; mov [0xf73ab94283aa7577], al; ret;
0xffffffff8227783d: out 0x21, al; adc dl, al; leave; cmp [rax-0x33], ah; ret 0x7d56;
0xffffffff8227783c: out 0x21, al; adc dl, al; leave; cmp [rax-0x33], ah; ret 0x7d56;
0xffffffff81774546: out 0x2d, al; xchg esp, eax; jmp qword ptr [rsi+0xf];
0xffffffff82543611: out 0x31, al; mov esp, edi; iretd;
0xffffffff8247ace1: out 0x31, eax; add ebx, ebp; cmp eax, 0xda5b80d5; xchg esp, eax; mov bl, 0x1b; ret;
0xffffffff819f92cd: out 0x31, eax; rol bl, 0x31; leave; cmp [rax+0x38], esi; cmovne rax, rcx; ret;
0xffffffff816c2c83: out 0x48, eax; mov eax, edi; add rsp, 0x20; ret;
0xffffffff82439ca8: out 0x4f, eax; mov edi, 0xf69f9ff9; adc esp, edx; popfq; ret 0xe42;
0xffffffff816a5aa5: out 0x4f, eax; pop rsp; add bl, ch; add eax, 0x246c894c; adc [rbp+0x69], cl; call rbx;
0xffffffff8230da3b: out 0x52, eax; lahf; xchg esp, eax; movsd [rdi], [rsi]; cld; ret 0x11bd;
0xffffffff82688646: out 0x6b, eax; or dl, [rcx+0x75]; leave; call qword ptr [rdx];
0xffffffff82688744: out 0x6b, eax; pcmpeqb mm4, [rcx+0x75]; leave; call qword ptr [rdx];
0xffffffff8268d467: out 0x6d, al; or eax, 0x94cf06d5; in eax, 0x61; pop rsp; iretd;
0xffffffff8268d466: out 0x6d, al; or eax, 0x94cf06d5; in eax, 0x61; pop rsp; iretd;
0xffffffff8267d8c4: out 0x74, eax; add esi, edi; xchg esp, eax; rol dword ptr [rdx], 0xf7; sub al, 8; call far fword ptr [rdi-0x66];
0xffffffff8245129a: out 0x80, al; dec bl; xchg [rbp+0x40777e1e], esp; or [rcx], ch; fcom st, dword ptr [rbp-0x6e]; ret 0xd70;
0xffffffff822ab743: out 0x84, al; mov edx, 0x826df978; in eax, dx; pop rsp; ret;
0xffffffff8227fb05: out 0x86, al; adc eax, 0x2c9bfe79; in al, dx; leave; iretd;
0xffffffff822f48ad: out 0x86, eax; int3; sub esp, ebx; ret 0x6f50;
0xffffffff83475ea6: out 0x8b, al; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff822c9fbc: out 0x8c, al; leave; ret;
0xffffffff824679b6: out 0x94, eax; pop rsp; mov ebp, 0x9843c639; cdqe; ret 0x6397;
0xffffffff823f9475: out 0x94, eax; test dh, 0x24; and edx, [rdi-0x5e9b7053]; leave; ret 0x95a6;
0xffffffff824be81a: out 0x9b, al; out dx, al; leave; call qword ptr [rax+0x28];
0xffffffff823be7fb: out 0xa3, al; xchg esp, eax; popfq; fldcw [rdi]; insb [rdi], dx; jmp far fword ptr [rsi+0x3e];
0xffffffff823f56a0: out 0xa8, eax; mov ch, 0x1a; leave; ret;
0xffffffff825ccfb0: out 0xae, al; in eax, dx; leave; ret 0x3b81;
0xffffffff834934a6: out 0xb5, al; sar ebp, 1; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff8236f96e: out 0xb9, al; leave; ret 0xd7dd;
0xffffffff826787ff: out 0xbe, eax; andps xmm4, [rcx+0x75]; leave; jmp qword ptr [rbx+3];
0xffffffff8299e0c8: out 0xbf, eax; add [rax], al; pop rsp; mov edx, 0xd; add [rsp+rdx*8], cl; iretd;
0xffffffff834a046b: out 0xd0, al; std; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff834a0377: out 0xd0, eax; std; add rsp, 8; pop rbx; ret;
0xffffffff8228a598: out 0xd2, al; mov [rdx+0x52], ebp; mov dh, [rbx-9]; xchg esp, eax; sub [rdi+0x316fdf05], al; ret 0xcb0b;
0xffffffff83470436: out 0xd3, al; std; add rsp, 8; pop rbx; ret;
0xffffffff834702ef: out 0xd3, eax; std; add rsp, 8; pop rbx; ret;
0xffffffff824b7cc9: out 0xd4, eax; xchg esp, eax; ret;
0xffffffff824998e1: out 0xde, eax; add esp, ebx; push rbx; adc edi, [rbx]; sub [rdi-0x2d], ebx; ret;
0xffffffff82478cc2: out 0xe3, eax; leave; add eax, 0x7863a018; ret;
0xffffffff824466ec: out 0xe6, al; xchg esp, eax; pop rcx; or [rcx-0x20], ebx; sbb [rdi-0x421356a7], ecx; iretd;
0xffffffff8268ebc1: out 0xe7, al; xchg esp, eax; lahf; or al, 0x54; iretd;
0xffffffff81c1dc07: out 0xe8, eax; adc esp, eax; push rdi; jmp qword ptr [rbp+0x48];
0xffffffff811bf2ad: out 0xe8, eax; insd [rdi], dx; leave; std; jmp qword ptr [rbp+0x48];
0xffffffff81215ff4: out 0xe8, eax; pop rsp; clc; jmp qword ptr [rbp+0x48];
0xffffffff81c1d6be: out 0xe8, eax; pop rsp; in eax, 0x57; jmp qword ptr [rbp+0x48];
0xffffffff8134399e: out 0xe8, eax; pop rsp; sbb cl, bh; dec dword ptr [rax-0x77]; ret;
0xffffffff8154a886: out 0xe8, eax; xchg esp, eax; adc eax, ebp; jmp qword ptr [rbp+0x48];
0xffffffff81316866: out 0xe8, eax; xchg esp, eax; test al, 0xce; add bl, ch; mov eax, 0xda0abde8; jmp qword ptr [rsi+0x66];
0xffffffff810b3122: out 0xeb, eax; add dh, [rcx]; leave; mov rax, rcx; ret;
0xffffffff811f6a7f: out 0xeb, eax; or ebx, [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff8114ffce: out 0xf, al; xchg esp, eax; ret 0x8941;
0xffffffff82367201: out 0xf3, eax; pop rsp; and al, 0x62; in eax, 0x52; ret 0x1255;
0xffffffff822aa5f3: out 0xf4, eax; psubb mm6, [rdi]; pop rsp; ret;
0xffffffff822691db: out 0xf9, eax; leave; ret;
0xffffffff8248cfcf: out 0xfb, al; pop rsp; sub al, 0x30; mov [0x1c5081dacd34c6de], al; fwait; iretd;
0xffffffff82648515: out 0xff, al; cmovge esp, esi; call far fword ptr [rdi+0x4c];
0xffffffff822cfa35: out 0xff, al; leave; or [rsi], ecx; ret 0xa168;
0xffffffff82648099: out 0xff, eax; cmovp esp, edi; jmp far fword ptr [rdi+0x5fffe748];
0xffffffff8264816a: out 0xff, eax; scasd [rdi]; sbb esp, edi; call far fword ptr [rdi];
0xffffffff822a6e74: out 1, al; sub eax, 0x63860295; xchg esp, eax; xor bl, [rsi+0x5b]; fist dword ptr [rax-0x3febe00f], st; ret;
0xffffffff82332b2d: out 2, al; xor eax, 0x1db50a05; pop rsp; adc eax, [rbx-0x31]; adc eax, 0x50ad6907; iretd;
0xffffffff8342e7a5: out 2, eax; fdivr st, st(5); add rsp, 8; ret;
0xffffffff826bf714: out 5, al; mov esp, [rdx+0x765e840]; ret 0xa2fa;
0xffffffff826e3ceb: out 8, al; mov esp, ecx; stosb [rdi]; jmp qword ptr [rbx+0x3b];
0xffffffff810b0324: out dx, al; add [rdi], ecx; xchg esp, eax; ret 0xc208;
0xffffffff810b0360: out dx, al; add [rdi], ecx; xchg esp, eax; ret 0xca08;
0xffffffff829026ad: out dx, al; add al, 0; pop rsp; add [rax], al; ret;
0xffffffff8236c1c4: out dx, al; add ebx, [rsi]; cld; push rbx; leave; iretq;
0xffffffff81040f0e: out dx, al; add esp, edi; add [rcx-0x1c3eb740], cl; and [rax+9], cl; ret;
0xffffffff8156137e: out dx, al; add rsp, 4; ret;
0xffffffff826882b8: out dx, al; andps xmm4, [rcx+0x75]; leave; jmp far fword ptr [rcx+rbp*2+0x27];
0xffffffff8227feaa: out dx, al; cli; leave; pop rsp; ret;
0xffffffff823ee23c: out dx, al; cmp ah, [rip-0x309d2d11]; xor [rbx], ch; xchg sp, ax; iretd;
0xffffffff8239d327: out dx, al; fldenv [rbp+0x616ddb7f]; xchg edi, eax; xchg esp, eax; ret;
0xffffffff8231ff10: out dx, al; fwait; mov edi, 0x4551a6a6; pop rsp; xchg [rcx+0x7f], esp; iretd;
0xffffffff824be81c: out dx, al; leave; call qword ptr [rax+0x28];
0xffffffff82413db9: out dx, al; leave; fisttp word ptr [rbp-0x1e2221c7], st; ret;
0xffffffff8264edc9: out dx, al; leave; jmp far fword ptr [rdi-0x40003613];
0xffffffff81a1edce: out dx, al; leave; jmp qword ptr [rdi+rax];
0xffffffff81418487: out dx, al; leave; jmp qword ptr [rsi+0xf];
0xffffffff824bf494: out dx, al; leave; pop rsp; add eax, 0xf8261b62; cld; ret;
0xffffffff82499b3f: out dx, al; leave; xchg edx, eax; ret 0xf464;
0xffffffff824c3740: out dx, al; mov esp, [rcx-0x52]; ret;
0xffffffff8243e310: out dx, al; pop rsi; xchg [rbx-0x12], esp; ret 0xcc20;
0xffffffff81a322c4: out dx, al; pop rsp; add [rbx+0x41], bl; pop rsi; ret;
0xffffffff8234bbd0: out dx, al; pop rsp; iretd;
0xffffffff824f187b: out dx, al; pop rsp; mov esi, 0x95cd3e03; push rbp; lodsb [rsi]; ret 0xa35e;
0xffffffff8246b2bc: out dx, al; pop rsp; nop; cmp bl, ah; ret;
0xffffffff81b8163e: out dx, al; pop rsp; push rbx; jmp qword ptr [rsi+0x66];
0xffffffff8346199e: out dx, al; rcl ah, 1; std; add rsp, 8; pop rbx; ret;
0xffffffff825593dc: out dx, al; sub eax, 0xb761c6ed; or [rdx+0x7e], ch; leave; iretd;
0xffffffff8344be9e: out dx, al; sub edx, esi; std; add rsp, 8; pop rbx; ret;
0xffffffff8234c9b5: out dx, al; xchg [rsi+rbp*4+0x745b8d66], esp; iretd;
0xffffffff82397db3: out dx, al; xchg esp, eax; jmp far fword ptr [rdx-0xbca9cef];
0xffffffff823a986a: out dx, al; xchg esp, eax; mov al, [0x187649510607c45e]; sahf; iretd;
0xffffffff82649dc0: out dx, eax; add esp, eax; call far fword ptr [rdi-0x20001ffd];
0xffffffff8264ab90: out dx, eax; add esp, ebx; call far fword ptr [rdi+0x1fffdc01];
0xffffffff822b5c04: out dx, eax; data16 leave; ret;
0xffffffff82645b2a: out dx, eax; dec dword ptr [rdi]; xchg esp, eax; out dx, eax; jmp far fword ptr [rdi+0x6fffef93];
0xffffffff8359ceea: out dx, eax; dec eax; leave; out dx, eax; call rbp;
0xffffffff823893d7: out dx, eax; fwait; push rsi; adc esp, esp; iretd;
0xffffffff8359ced6: out dx, eax; inc dword ptr [rdi-0x6b001037]; leave; out dx, eax; jmp qword ptr [rcx-0x51001037];
0xffffffff819688cd: out dx, eax; int 0xd0; add [rcx-0x75], eax; sbb al, 0xf; xchg esp, eax; ret 0x8b41;
0xffffffff8264edc5: out dx, eax; leave; call far fword ptr [rdi-0x50003612];
0xffffffff822a7037: out dx, eax; leave; cld; outsd dx, [rsi]; ret;
0xffffffff8224900d: out dx, eax; leave; iretd;
0xffffffff8264f038: out dx, eax; leave; jmp far fword ptr [rdi+0x4b];
0xffffffff8347a93d: out dx, eax; leave; ret;
0xffffffff82657618: out dx, eax; leave; sahf; jmp far fword ptr [rdi-0x38];
0xffffffff817b470d: out dx, eax; leave; test [rax], al; xor eax, eax; ret;
0xffffffff8265a39c: out dx, eax; mov ebx, 0xbabfff94; xchg esp, eax; call far fword ptr [rdi];
0xffffffff826680d8: out dx, eax; mov edi, 0xbd9fff5c; pop rsp; call far fword ptr [rdi-0x43];
0xffffffff823f73ae: out dx, eax; mov edx, 0x4b44dd4b; xchg [rbp-0x65e2aecd], bl; in eax, dx; mov rsp, r8; ret;
0xffffffff8265a424: out dx, eax; movsd [rdi], [rsi]; xchg esp, eax; jmp far fword ptr [rdi-0x5b];
0xffffffff8237b534: out dx, eax; nop; xchg edx, eax; adc al, 0x1c; xchg esp, eax; ret 0x3690;
0xffffffff8264efcc: out dx, eax; outsb dx, [rsi]; leave; jmp far fword ptr [rdi+0x3fffc96d];
0xffffffff8194625d: out dx, eax; pop rbx; xchg esp, eax; jmp qword ptr [rsi+0x66];
0xffffffff8266824c: out dx, eax; pop rsi; pop rsp; jmp far fword ptr [rdi+0x5e];
0xffffffff82668045: out dx, eax; pop rsp; call far fword ptr [rdi+0xfff5cee];
0xffffffff82648994: out dx, eax; pop rsp; in eax, 0xff; iretd;
0xffffffff823676ab: out dx, eax; pop rsp; iretd;
0xffffffff823676ac: out dx, eax; pop rsp; iretd;
0xffffffff81ae83c0: out dx, eax; pop rsp; jmp qword ptr [rsi+0x66];
0xffffffff8266a3b0: out dx, eax; pop rsp; push rax; jmp far fword ptr [rdi+0x7fff505c];
0xffffffff826577d8: out dx, eax; pop rsp; sahf; call far fword ptr [rdi+0x3fff9e5c];
0xffffffff8264f860: out dx, eax; rol esp, 0xff; xadd esp, eax; call far fword ptr [rdi];
0xffffffff8349fb2b: out dx, eax; sar ch, 1; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff8265a664: out dx, eax; sbb [rdi+rdi*8-0x6be6b1], edx; fistp word ptr [rax], st; xchg esp, eax; jmp far fword ptr [rdi+0x16];
0xffffffff823b9b83: out dx, eax; sbb al, 0xaf; div dword ptr [rcx]; leave; ret;
0xffffffff823bcfcd: out dx, eax; sbb esp, eax; popfq; iretd;
0xffffffff82642584: out dx, eax; sbb esp, edi; call far fword ptr [rdi];
0xffffffff8264c5ec: out dx, eax; sbb esp, edx; call far fword ptr [rdi+0x17];
0xffffffff82668110: out dx, eax; scasb [rdi]; pop rsp; jmp far fword ptr [rdi-0x52];
0xffffffff823ee23f: out dx, eax; shl byte ptr [rdx-0x31], cl; xor [rbx], ch; xchg sp, ax; iretd;
0xffffffff8266811c: out dx, eax; stosd [rdi]; pop rsp; jmp far fword ptr [rdi-0x55];
0xffffffff818a5f3a: out dx, eax; xchg [rcx], esp; ret 0x40be;
0xffffffff814b26a2: out dx, eax; xchg esp, eax; add dh, dh; add eax, 0x21d9058; add dh, [rbp+1]; ret;
0xffffffff8266b910: out dx, eax; xchg esp, eax; call far fword ptr [rdi+0x7fff4894];
0xffffffff8266dd4c: out dx, eax; xchg esp, eax; cmp eax, 0x3d94cfff; jmp far fword ptr [rdi+0x7fff3d94];
0xffffffff8266b660: out dx, eax; xchg esp, eax; dec qword ptr [r15-0x6e]; jmp far fword ptr [r15+0x3fff498e];
0xffffffff825505b3: out dx, eax; xchg esp, eax; fcomi st, st(0); ret;
0xffffffff825505b2: out dx, eax; xchg esp, eax; fcomi st, st(0); ret;
0xffffffff8177f7cd: out dx, eax; xchg esp, eax; inc dword ptr [rax+rax*8-0x38b7eb8b]; ret;
0xffffffff8265343c: out dx, eax; xchg esp, eax; mov dl, 0xff; fist word ptr [rdx+rsi*4-0x4d6b3001], st; jmp far fword ptr [rdi];
0xffffffff826520d8: out dx, eax; xchg esp, eax; mov eax, 0xb893bfff; call far fword ptr [rdi+0x1fffb893];
0xffffffff826db42c: out dx, eax; xchg esp, eax; out 0x74, eax; iretd;
0xffffffff826a019b: out dx, eax; xchg esp, eax; out 0x74, eax; or esi, [rdx-0x19]; jmp far fword ptr [rcx-0x22970497];
0xffffffff8269f13b: out dx, eax; xchg esp, eax; out 0xff, eax; sub eax, 0x91676f9; call rbx;
0xffffffff82246d95: out dx, eax; xchg esp, eax; ret 0x9395;
0xffffffff82681be8: out dx, eax; xchg esp, eax; ror dword ptr [rdx], 0x74; iretd;
0xffffffff8226bd8e: out dx, eax; xchg esp, eax; sysret;
0xffffffff822eada4: out dx, eax; xchg esp, eax; xchg edi, eax; scasd [rdi]; cmp bl, [rdx+0xce317e6]; ret;
0xffffffff8177b807: outsb dx, [rsi]; adc [rdi], cl; xchg esp, eax; ret 0xd75;
0xffffffff8126a081: outsb dx, [rsi]; add rsp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff83460e1e: outsb dx, [rsi]; fcom st, st(4); std; add rsp, 8; pop rbx; ret;
0xffffffff8228d80a: outsb dx, [rsi]; imul byte ptr [rax+0x615e06fb]; leave; add bh, bh; out 0xce, eax; ret;
0xffffffff8264efcd: outsb dx, [rsi]; leave; jmp far fword ptr [rdi+0x3fffc96d];
0xffffffff8224e702: outsb dx, [rsi]; leave; shl qword ptr [rip+0x6f85397f], 0x5f; iretd;
0xffffffff82408110: outsb dx, [rsi]; mov esi, 0x6934f818; xchg [rdx+0x78bc9cdf], edx; pop rsp; xor eax, 0x32b7034e; ret;
0xffffffff81552c3e: outsb dx, [rsi]; mov esp, eax; call far fword ptr [rbx+0x41];
0xffffffff823b8dae: outsb dx, [rsi]; mov rax, 0xbbff7c3cb7ef5bb1; mov esp, [rdx+0x1f695e30]; xor edx, [rdx-0x5c65ad67]; call rax;
0xffffffff8252b184: outsb dx, [rsi]; movsd [rdi], [rsi]; xor ecx, [rsi+0x1a5318e8]; xchg esp, eax; jmp qword ptr [rbx-0xf266927];
0xffffffff826cf77d: outsb dx, [rsi]; movsxd ecx, [rdx]; mov esp, [rbx+0x73]; ret;
0xffffffff8227fb04: outsb dx, [rsi]; out 0x86, al; adc eax, 0x2c9bfe79; in al, dx; leave; iretd;
0xffffffff826db42b: outsb dx, [rsi]; out dx, eax; xchg esp, eax; out 0x74, eax; iretd;
0xffffffff826a019a: outsb dx, [rsi]; out dx, eax; xchg esp, eax; out 0x74, eax; or esi, [rdx-0x19]; jmp far fword ptr [rcx-0x22970497];
0xffffffff8269f13a: outsb dx, [rsi]; out dx, eax; xchg esp, eax; out 0xff, eax; sub eax, 0x91676f9; call rbx;
0xffffffff825432d7: outsb dx, [rsi]; outsd dx, [rsi]; mov esp, [rdx+rsi*2-0x53]; ret 0x8706;
0xffffffff8155263e: outsb dx, [rsi]; pop rsp; call far fword ptr [rbx+0x41];
0xffffffff822be734: outsb dx, [rsi]; pop rsp; call far fword ptr [rcx];
0xffffffff822ffac6: outsb dx, [rsi]; pop rsp; iretd;
0xffffffff8248e618: outsb dx, [rsi]; pop rsp; leave; add [rax], esp; int 0xb0; ret;
0xffffffff822404ec: outsb dx, [rsi]; pop rsp; ret;
0xffffffff83497c47: outsb dx, [rsi]; sar ebp, 1; add rsp, 8; pop rbx; ret;
0xffffffff83477c1c: outsb dx, [rsi]; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff824a1c69: outsb dx, [rsi]; shl dword ptr [rbp-0x732882c3], cl; leave; call rax;
0xffffffff82399bc6: outsb dx, [rsi]; xchg esp, eax; mov ebp, 0xbf82a990; sahf; outsd dx, [rsi]; ret 0x1789;
0xffffffff81577a56: outsd dx, [rsi]; add [rcx-0x7a3fce3f], cl; leave; sete al; ret;
0xffffffff8347f5bf: outsd dx, [rsi]; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff818495e1: outsd dx, [rsi]; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff8265a634: outsd dx, [rsi]; and eax, 0x24cfff94; xchg esp, eax; jmp far fword ptr [rdi+0x3fff9424];
0xffffffff82379a74: outsd dx, [rsi]; cmp al, 0xe3; cmp bl, al; pop rsp; ret 0xe575;
0xffffffff824b9c7b: outsd dx, [rsi]; cmpsb [rsi], [rdi]; and [rbx-0x7b74d60c], ebp; xchg esp, eax; add al, 0x2c; ret;
0xffffffff8236f963: outsd dx, [rsi]; cwde; mov [0x38dc5d947e7935bf], eax; out 0xb9, al; leave; ret 0xd7dd;
0xffffffff8342aa1d: outsd dx, [rsi]; fdivr st, st(5); add rsp, 8; ret;
0xffffffff826cfc39: outsd dx, [rsi]; fstp dword ptr [rsi+0xe8c6c28], st; mov esp, [rbx+0x73]; ret;
0xffffffff826cf020: outsd dx, [rsi]; imul ecx, edi, 0xa; mov esp, [rbx+0x73]; ret;
0xffffffff8268d463: outsd dx, [rsi]; imul edi, [rbp-0x1a], 0x6d; or eax, 0x94cf06d5; in eax, 0x61; pop rsp; iretd;
0xffffffff8265a2a4: outsd dx, [rsi]; in al, 0x94; dec dword ptr [rdi-0x1c]; xchg esp, eax; call far fword ptr [rdi];
0xffffffff82668218: outsd dx, [rsi]; insd [rdi], dx; pop rsp; jmp far fword ptr [rdi+0x5fff5c6c];
0xffffffff82657224: outsd dx, [rsi]; int 0x9f; dec dword ptr [rdi-0x30006035]; leave; lahf; call far fword ptr [rdi+0x5fff9fc8];
0xffffffff8266a6f0: outsd dx, [rsi]; leave; call far fword ptr [rdi-0x1000b138];
0xffffffff82659134: outsd dx, [rsi]; leave; cwde; dec dword ptr [rdi-0x37]; cwde; jmp far fword ptr [rdi];
0xffffffff8264efc5: outsd dx, [rsi]; leave; jmp far fword ptr [rdi];
0xffffffff82666504: outsd dx, [rsi]; leave; jmp far fword ptr fs:[rdi];
0xffffffff814226bd: outsd dx, [rsi]; leave; jmp qword ptr [rsi+0x66];
0xffffffff823d9f8a: outsd dx, [rsi]; leave; movsxd eax, [rbx-0x445fc542]; push rdx; insd [rdi], dx; ret;
0xffffffff8248e916: outsd dx, [rsi]; leave; or [rcx+0x6a], dh; iretd;
0xffffffff824fdcaf: outsd dx, [rsi]; leave; ret 0x69e2;
0xffffffff82447835: outsd dx, [rsi]; mov eax, 0xd595c658; mov [rsi+0x19], ss; xchg esp, eax; xchg edi, eax; ret;
0xffffffff8264eef8: outsd dx, [rsi]; mov ebp, 0xbcbfffc9; leave; jmp far fword ptr [rdi-0x50003644];
0xffffffff82569f6c: outsd dx, [rsi]; mov esp, [rcx]; call far fword ptr [rbx];
0xffffffff825432d8: outsd dx, [rsi]; mov esp, [rdx+rsi*2-0x53]; ret 0x8706;
0xffffffff8155293d: outsd dx, [rsi]; mov esp, es; call far fword ptr [rbx+0x41];
0xffffffff824e7f86: outsd dx, [rsi]; movsxd eax, [rbx-0x309ada38]; pop rdi; pop rsp; ret 0xbef2;
0xffffffff824e7f85: outsd dx, [rsi]; movsxd eax, [rbx-0x309ada38]; pop rdi; pop rsp; ret 0xbef2;
0xffffffff8268815d: outsd dx, [rsi]; or dl, [rcx+0x75]; leave; call far fword ptr [rax];
0xffffffff8264f010: outsd dx, [rsi]; pop rbp; leave; call far fword ptr [rdi];
0xffffffff82705924: outsd dx, [rsi]; pop rdi; mov edi, 0x63e0df06; xchg esp, eax; sbb edi, [rdi-0x311f20f8]; iretd;
0xffffffff8265a548: outsd dx, [rsi]; push rsi; xchg esp, eax; jmp far fword ptr [rdi-0x60006baf];
0xffffffff83497ac5: outsd dx, [rsi]; sar ebp, 1; add rsp, 8; pop rbx; ret;
0xffffffff83477ad8: outsd dx, [rsi]; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82644478: outsd dx, [rsi]; sbb esp, esi; jmp far fword ptr [rdi-0x30000be8];
0xffffffff82668114: outsd dx, [rsi]; scasb [rdi]; pop rsp; call far fword ptr [rdi-0x54];
0xffffffff810767bd: outsd dx, [rsi]; scasd [rdi]; mov al, [0x14ef1121c4000000]; sbb esp, eax; ret 0xdd71;
0xffffffff8232ec24: outsd dx, [rsi]; test [rbp+0x7e], bh; leave; out dx, al; iretd;
0xffffffff8224a4aa: outsd dx, [rsi]; xchg ebp, eax; xchg esp, eax; scasd [rdi]; fiadd st, dword ptr [rdx+rbp*4+0x13]; iretd;
0xffffffff8244bc58: outsd dx, [rsi]; xchg ebx, esp; jmp far fword ptr [rbp-0x6613a3f];
0xffffffff8265a501: outsd dx, [rsi]; xchg esp, eax; dec edi; insb [rdi], dx; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff82663dbc: outsd dx, [rsi]; xchg esp, eax; outsb dx, [rsi]; call far fword ptr [rdi];
0xffffffff8266891c: outsd dx, [rsi]; xchg esp, eax; pop rdx; call far fword ptr [rdi-0x6e];
0xffffffff8265e570: outsd dx, [rsi]; xchg esp, eax; test edi, edi; sete [rbp-0x7a6c1001]; jmp far fword ptr [rdi-0x70007a6e];
0xffffffff823a5740: outsd dx, [rsi]; xchg esp, eax; xchg edi, eax; mov esp, 0x730d1d4b; cmp al, 0x6a; ret 0xbdc8;
0xffffffff82646ba8: outsd dx, [rsi]; xchg esp, ebp; call far fword ptr [rdi-0x79];
0xffffffff8265a514: outsd dx, [rsi]; xchg sp, ax; call far fword ptr [rdi+0x65];
0xffffffff826cfc38: outsw dx, [rsi]; fstp dword ptr [rsi+0xe8c6c28], st; mov esp, [rbx+0x73]; ret;
0xffffffff8268815c: outsw dx, [rsi]; or dl, [rcx+0x75]; leave; call far fword ptr [rax];
0xffffffff82705923: outsw dx, [rsi]; pop rdi; mov edi, 0x63e0df06; xchg esp, eax; sbb edi, [rdi-0x311f20f8]; iretd;
0xffffffff823a573f: outsw dx, [rsi]; xchg esp, eax; xchg edi, eax; mov esp, 0x730d1d4b; cmp al, 0x6a; ret 0xbdc8;
0xffffffff8265a2d8: paddusw mm2, [rdi+rdi*8-0x6b23a1]; fstp st(3), st; xchg esp, eax; jmp far fword ptr [rdi+0x1fff94db];
0xffffffff82688746: pcmpeqb mm4, [rcx+0x75]; leave; call qword ptr [rdx];
0xffffffff816e48d5: pcmpgtd mm0, [rbx-0x6bf0fb08]; shl dword ptr [rsi-0x7d], 0xf8; or cl, [rdi]; xchg esp, eax; ror byte ptr [rax], 0xc8; ret;
0xffffffff82668148: pop fs; pop rsp; call far fword ptr [rdi-0x60];
0xffffffff8195dae3: pop qword ptr [rax]; add [rax], al; add rsp, 0x20; ret;
0xffffffff81b18f9c: pop qword ptr [rax]; add [rax], al; add rsp, 0x38; ret;
0xffffffff8245afd9: pop qword ptr [rcx]; mov [0x1847e1be9049ed28], al; pop rsp; mov esp, 0xd6f6f6f5; iretd;
0xffffffff8266835c: pop qword ptr [rip+0x36fff5c]; pop rsp; jmp far fword ptr [rdi];
0xffffffff822a0645: pop qword ptr [rsi-0x240e9623]; pop rsp; xchg esi, eax; iretd;
0xffffffff826681ac: pop qword ptr [rsi-0x79b000a4]; pop rsp; jmp far fword ptr [rdi-0xa37b];
0xffffffff82558970: pop r11; pop rsp; ret;
0xffffffff81061bba: pop r12; mov rsp, rbp; pop rbp; ret;
0xffffffff8231ff16: pop r12; xchg [rcx+0x7f], esp; iretd;
0xffffffff823ba797: pop r15; pop rsp; push rsp; mov dl, 0x55; ret;
0xffffffff8265a538: pop r15; xchg esp, eax; dec dword ptr [rdi]; pop rbp; xchg esp, eax; call far fword ptr [rdi+0x5fff945b];
0xffffffff8108dd74: pop r9; std; add esp, eax; ret;
0xffffffff822e4375: pop rax; adc edi, [rcx]; leave; iretd;
0xffffffff81543806: pop rax; add [rcx+0xf], al; xchg esp, eax; ret 0x8b41;
0xffffffff8169cfb9: pop rax; add [rdi], cl; xchg esp, eax; ret 0xca30;
0xffffffff81246d79: pop rax; add [rdi], cl; xchg esp, eax; ret;
0xffffffff8173045c: pop rax; add al, 0; add [rax-0x77], cl; xchg [rax+4], esp; add [rax], al; ret;
0xffffffff812a5fd2: pop rax; add eax, 0x63480000; leave; add gs:[rax+0x3b0], rcx; ret;
0xffffffff81109a43: pop rax; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff816575e3: pop rax; add rsp, 0x38; pop rbx; pop r14; pop rbp; ret;
0xffffffff8229131f: pop rax; cmc; pop rsp; popfq; adc cl, [rax-0x4f]; ret 0xc0f8;
0xffffffff82668f0a: pop rax; dec dword ptr [rdi]; xchg esp, eax; pop rax; jmp far fword ptr [rdi-0x6d];
0xffffffff8226acb1: pop rax; fwait; xchg esp, eax; std; xor ebp, [rcx+0xe750678]; call far fword ptr [rdi];
0xffffffff823d4b9f: pop rax; leave; ret 0x26a6;
0xffffffff824cc95e: pop rax; leave; sbb eax, 0x493f422f; mov [rcx], bh; ret;
0xffffffff8224a6f5: pop rax; mov ebp, gs; pushfq; xchg esp, eax; ret 0x378b;
0xffffffff824c01d1: pop rax; mov esp, [rdx]; ret 0x5594;
0xffffffff81e018ff: pop rax; mov rax, [rsp+0x50]; mov rbp, [rsp+0x20]; add rsp, 0xa8; ret;
0xffffffff82513a35: pop rax; mul dword ptr [rcx+rbp*2-0x14]; leave; stosd [rdi]; iretq;
0xffffffff8222dadc: pop rax; nop; int 0xbd; leave; imul ebx, [rcx], 0xffffffcc; ret 0xc600;
0xffffffff8183b208: pop rax; or [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff816afd4c: pop rax; or dword ptr [rax+0x5c], 8; add rsp, 4; ret;
0xffffffff8230e6d4: pop rax; pop rbx; leave; xor eax, 0xc5a6c17f; jmp qword ptr [rax-0x4b7f4d0b];
0xffffffff81e0015d: pop rax; pop rdi; pop rsp; swapgs; sysretq;
0xffffffff81af7a3e: pop rax; pop rsp; jmp qword ptr [rsi+0x66];
0xffffffff8248a355: pop rax; push 0xffffffffc42ef01c; xchg rsp, rax; cdq; fxch st, st(7); iretd;
0xffffffff822dd301: pop rax; stosd [rdi]; movsb [rdi], [rsi]; pop rsp; xor eax, 0x77fa3eaf; ret 0x145e;
0xffffffff823ca93b: pop rax; xchg ebp, eax; pop rsp; xor [rbx+0x24d526cc], edx; push rcx; jmp qword ptr [rcx-0x51];
0xffffffff823f94f3: pop rax; xchg esp, eax; adc bh, bl; fnsave [rsi+rcx*2-0x6c890d00]; scasd [rdi]; ret;
0xffffffff8265a545: pop rax; xchg esp, eax; jmp far fword ptr [rdi+0x56];
0xffffffff8231047a: pop rax; xchg esp, eax; mov edx, 0xb4a0140; ret 0x16f8;
0xffffffff82498eb6: pop rax; xchg r14d, eax; add [rcx-0x61], esi; cmp [rbp+0x72], ebx; leave; iretd;
0xffffffff8194a560: pop rax; xor [rcx], dh; rol byte ptr [rbx+0xf00f47b], cl; xchg esp, eax; ret 0x894c;
0xffffffff8344d82f: pop rbp; adc dl, dh; std; add rsp, 8; ret;
0xffffffff822be98a: pop rbp; adc esp, edi; in al, 0xcf; and dh, dh; ret;
0xffffffff8196c843: pop rbp; add [rcx+rcx*4+0x3d], ecx; xchg esp, eax; mov ss, ax; add [rax-0x39], ecx; ret;
0xffffffff815c48cc: pop rbp; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8142b62d: pop rbp; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff824bbc96: pop rbp; and al, 0xf2; leave; out dx, al; ret;
0xffffffff822f1ff0: pop rbp; cmp dword ptr [rbp+0x3f], 0xb; adc r15d, [rbx]; nop; pop rsp; iretd;
0xffffffff82667f46: pop rbp; dec dword ptr [rdi]; pop rsp; pop rbp; jmp far fword ptr [rdi+0x59];
0xffffffff8236f96b: pop rbp; fdivr st, qword ptr [rax]; out 0xb9, al; leave; ret 0xd7dd;
0xffffffff82433ab6: pop rbp; imul eax, edx, 0xffffff8b; mov cl, 0x60; mov esp, ss; ret;
0xffffffff824e2673: pop rbp; int3; pop rsp; push rbx; ret 0x3c3d;
0xffffffff8264f015: pop rbp; leave; call far fword ptr [rdi-0x600036a4];
0xffffffff8264f011: pop rbp; leave; call far fword ptr [rdi];
0xffffffff8264eecc: pop rbp; leave; call far fword ptr [rdi];
0xffffffff8264f00d: pop rbp; leave; jmp far fword ptr [rdi+0x5d];
0xffffffff824aa72d: pop rbp; leave; mov eax, 0xcbb1bb1a; or [rdx], al; xchg ecx, eax; iretd;
0xffffffff824fdae1: pop rbp; lodsb [rsi]; mov ebp, 0xfd0f9690; pop rsp; scasb [rdi]; iretd;
0xffffffff8236e878: pop rbp; lodsb [rsi]; xchg esp, eax; mov cl, 0x4b; ret 0x4ea7;
0xffffffff826562b1: pop rbp; mov [0xa35cbfffa35cffff], eax; dec dword ptr [rdi]; pop rsp; mov [0xa35b8fffa35bcfff], eax; call far fword ptr [rdi+0x5b];
0xffffffff822edb06: pop rbp; mov eax, 0xf03754ea; xchg esp, eax; iretd;
0xffffffff8120a0cd: pop rbp; mov eax, ebp; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff824dfc22: pop rbp; mov esp, [rbx+rdi*2]; cmpsq [rsi], [rdi]; int3; push 0xffffffff9c313ee6; ret;
0xffffffff82482e7b: pop rbp; mov esp, ds; ret;
0xffffffff8222ee7f: pop rbp; mov gs, [rcx-0x1ac574b1]; pop rsp; xor byte ptr [rcx-0xa87b68b], 0xb8; iretd;
0xffffffff82505025: pop rbp; mul dword ptr [rbx]; pop rsp; iretd;
0xffffffff823dd79b: pop rbp; out 0x1f, al; pop rsp; sbb eax, 0xc3906163; mov [0xf73ab94283aa7577], al; ret;
0xffffffff822f48ac: pop rbp; out 0x86, eax; int3; sub esp, ebx; ret 0x6f50;
0xffffffff824fd291: pop rbp; pop rbp; xchg esp, eax; cmp edi, [rbx-0x3f]; mov dh, 0x52; ret 0xbd4e;
0xffffffff814217cf: pop rbp; pop rbx; leave; jmp qword ptr [rsi+0x66];
0xffffffff82563602: pop rbp; pop rsp; jmp rsp;
0xffffffff82374f43: pop rbp; pop rsp; sub eax, 0x895337c6; mov ecx, esp; sar dword ptr [rbp+0x41], 0xfc; iretd;
0xffffffff826656bd: pop rbp; push 0x685cffff; dec edi; pop rsp; push 0x685cbfff; call far fword ptr [rdi-0x700097a4];
0xffffffff8238d5d8: pop rbp; push rsi; xchg rdx, rax; sbb bl, ah; leave; ret 0x298a;
0xffffffff8238d5d6: pop rbp; push rsi; xchg rdx, rax; sbb bl, ah; leave; ret 0x298a;
0xffffffff8346321f: pop rbp; rcr ch, 1; std; add rsp, 8; mov [rip-0xc7b89e], rax; ret;
0xffffffff83498d0e: pop rbp; sar ebp, 1; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff8228d251: pop rbp; sbb ah, [rsi+rbx*4+0x23]; leave; shl byte ptr [rdx-0x1d], 0xe0; iretd;
0xffffffff82527488: pop rbp; sbb r12b, [rip+0x161fed76]; xchg esp, eax; iretd;
0xffffffff8346f12f: pop rbp; stc; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff823b97dd: pop rbp; sti; leave; mov ch, 0x87; int1; ret 0xa6be;
0xffffffff82494d85: pop rbp; sub bl, [rax-0x7615f7eb]; fist word ptr [rdi+rbx*8+0x7389e187], st; leave; iretd;
0xffffffff82328a84: pop rbp; xchg edi, esp; iretd;
0xffffffff8265a53d: pop rbp; xchg esp, eax; call far fword ptr [rdi+0x5fff945b];
0xffffffff822ca49f: pop rbp; xchg esp, eax; clc; sar bl, 1; call qword ptr [rbx];
0xffffffff82515746: pop rbp; xchg esp, eax; cmp cl, [rdi+0x2d]; iretd;
0xffffffff824fd292: pop rbp; xchg esp, eax; cmp edi, [rbx-0x3f]; mov dh, 0x52; ret 0xbd4e;
0xffffffff8247e360: pop rbp; xchg esp, eax; test byte ptr [rsi], 0x84; xchg ebx, eax; iretd;
0xffffffff835219a9: pop rbx; adc eax, 0xffffff81; push rax; pop rsp; adc eax, 0xffffff81; call qword ptr [rax+0x5e];
0xffffffff8117a26c: pop rbx; add rsp, 0x10; pop rbx; ret;
0xffffffff818ef8c6: pop rbx; add rsp, 0x10; ret;
0xffffffff810d6cb7: pop rbx; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff82255758: pop rbx; cwde; leave; fld st, dword ptr [rbp+0x72]; iretd;
0xffffffff8245bd7a: pop rbx; enter 0x2e9c, 0x23; pop rsp; mov eax, 0x283183dc; mov bh, 0x90; ret 0x5534;
0xffffffff819d4d21: pop rbx; leave; add [rbx-0x7d], dl; jmp qword ptr [rdi];
0xffffffff814217d0: pop rbx; leave; jmp qword ptr [rsi+0x66];
0xffffffff8230e6d5: pop rbx; leave; xor eax, 0xc5a6c17f; jmp qword ptr [rax-0x4b7f4d0b];
0xffffffff823769c0: pop rbx; lodsb [rsi]; leave; ret 0xac79;
0xffffffff823c71e4: pop rbx; lodsb [rsi]; xchg esp, eax; popfq; ret;
0xffffffff83453331: pop rbx; mov bh, 0xd5; std; add rsp, 8; pop rbx; ret;
0xffffffff82503beb: pop rbx; mov ebp, [rdx-0x7f3d2ff0]; leave; ret;
0xffffffff8200d828: pop rbx; mov esp, es; jmp rsp;
0xffffffff81b24651: pop rbx; mov esp, esi; jmp qword ptr [rsi+0x66];
0xffffffff824ff168: pop rbx; pop rsp; bts [rdx+0x6b], edi; xchg ebx, eax; ret;
0xffffffff824abbb2: pop rbx; pop rsp; fiadd st, word ptr [rbx]; ret 0xb741;
0xffffffff82230366: pop rbx; pop rsp; push r11; shr dword ptr [rsi-0x39d0fc6c], 0x77; sub edi, [rbx+0xab1fcee]; jmp rsp;
0xffffffff82558971: pop rbx; pop rsp; ret;
0xffffffff8243f226: pop rbx; push 0x5f; int 0xd9; insd [rdi], dx; mov esp, [rax]; jmp qword ptr [rdi];
0xffffffff8116bf21: pop rbx; push rdi; leave; add cl, ch; call qword ptr [rcx];
0xffffffff8113fa21: pop rbx; sbb al, 0xcc; add [rax-0x75], cl; xchg [rax+0x48000000], esp; sub eax, esi; ret;
0xffffffff824be814: pop rbx; sbb edi, [rdx-0x1973d26e]; fwait; out dx, al; leave; call qword ptr [rax+0x28];
0xffffffff823f3a0a: pop rbx; sub esp, esp; jmp qword ptr [rdi+0x26f0b8fe];
0xffffffff82522b27: pop rbx; xchg edx, eax; scasb es:[rdi]; leave; call far fword ptr [rsi];
0xffffffff82003e2d: pop rbx; xchg esi, eax; push qword ptr [rax-0x4f00faae]; pop rsp; xchg esi, eax; jmp far fword ptr [rsi-0x5b0069a4];
0xffffffff8265a541: pop rbx; xchg esp, eax; call far fword ptr [rdi+0x58];
0xffffffff8194625e: pop rbx; xchg esp, eax; jmp qword ptr [rsi+0x66];
0xffffffff826cad05: pop rbx; xchg esp, eax; out 0x74, eax; iretd;
0xffffffff8226d634: pop rbx; xchg esp, eax; ret 0x86fc;
0xffffffff8255a438: pop rbx; xchg esp, eax; ret;
0xffffffff811771d3: pop rcx; add esp, esi; jmp qword ptr [rsi+0xf];
0xffffffff818a401e: pop rcx; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff819a13b6: pop rcx; add rsp, 0x48; pop rbx; pop r14; ret;
0xffffffff825521f6: pop rcx; int 0xca; test [rdx+0x48], al; xchg esi, esp; ret;
0xffffffff8242019e: pop rcx; leave; mov dl, dh; ret 0x239a;
0xffffffff825263be: pop rcx; leave; mov r14b, 0x25; movsb [rdi], [rsi]; or al, 0xeb; iretd;
0xffffffff8231ad7d: pop rcx; leave; ret 0x4c0a;
0xffffffff82226f0e: pop rcx; leave; ret 0x6a20;
0xffffffff82421da5: pop rcx; leave; ret;
0xffffffff8233b668: pop rcx; leave; sub eax, 0x637d62bd; iretd;
0xffffffff8230c3a1: pop rcx; mov ch, 0xca; pop rsp; xor [rbx+rbx], dl; ret;
0xffffffff8171c313: pop rcx; mov eax, ebp; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff824141c1: pop rcx; mov esp, ebp; push rbx; iretd;
0xffffffff810b6ee0: pop rcx; movsb [rdi], [rsi]; pop rsp; add dword ptr [rax], 0x48; mov eax, 0x835ca450; ret;
0xffffffff823cb7ad: pop rcx; or bh, [rax+0x364f3837]; pop rsp; xor [rbx+0x46], edi; imul edi, esp, 0xa86b9f71; iretd;
0xffffffff82554bce: pop rcx; or bh, [rdx+0x7ca8231f]; xchg esp, eax; add al, 0xce; iretd;
0xffffffff8225445f: pop rcx; pop rsp; mov eax, [0x9917cd06a82c5d73]; ret;
0xffffffff823fb27b: pop rcx; pop rsp; push 0xffffffffe194b6f2; xchg esi, eax; imul esi, esp, 0x5c; ret 0x3e0f;
0xffffffff8246a18b: pop rcx; pop sp; shr dword ptr [rdx+8], cl; cmp al, 0x8c; cld; iretd;
0xffffffff8108dd75: pop rcx; std; add esp, eax; ret;
0xffffffff82236683: pop rcx; test [rdx], edi; leave; pop rax; iretd;
0xffffffff823c6858: pop rcx; xchg esp, eax; imul edi, [rcx+0x16230111], 0x5e4305a; iretd;
0xffffffff817bc699: pop rcx; xchg esp, eax; jmp qword ptr [rbp+0x48];
0xffffffff8225f570: pop rdi; adc esp, ecx; shl ebx, 1; scasb [rdi]; iretd;
0xffffffff824ec02f: pop rdi; adc esp, esi; iretd;
0xffffffff823cd308: pop rdi; add al, 0x7e; pop rsp; jmp qword ptr [r15+0x69];
0xffffffff817028fe: pop rdi; add rsp, 0x10; pop rbx; ret;
0xffffffff8104c5a3: pop rdi; add rsp, 0x18; popfq; ret;
0xffffffff81e0142e: pop rdi; add rsp, 0x30; std; mov qword ptr [rsp+0x28], 0; iretq;
0xffffffff826cfc36: pop rdi; cld; outsw dx, [rsi]; fstp dword ptr [rsi+0xe8c6c28], st; mov esp, [rbx+0x73]; ret;
0xffffffff8268815a: pop rdi; cld; outsw dx, [rsi]; or dl, [rcx+0x75]; leave; call far fword ptr [rax];
0xffffffff823ef3e4: pop rdi; cld; pop rsp; ret;
0xffffffff82455713: pop rdi; cmp [rcx-0x35e68c5b], al; mov esi, es; pop rsp; ret 0xf9f2;
0xffffffff826678aa: pop rdi; dec edi; xchg esp, eax; pop rdi; jmp far fword ptr [rdi+0x4fff5f94];
0xffffffff826cf4db: pop rdi; fdivr st, st(7); test [rbx], cl; mov esp, [rbx+0x73]; ret;
0xffffffff82546259: pop rdi; fwait; mov edx, 0x5cc38837; pop rsp; ret 0xa99a;
0xffffffff823d4977: pop rdi; hlt; mov ah, 0x31; pop rsp; iretd;
0xffffffff826cf77a: pop rdi; in al, 0x79; outsb dx, [rsi]; movsxd ecx, [rdx]; mov esp, [rbx+0x73]; ret;
0xffffffff826df98c: pop rdi; insd es:[rdi], dx; xchg esp, eax; sbb esp, [rbx-0x1a]; out 0x15, eax; call far fword ptr [rdi+0x64];
0xffffffff82665e50: pop rdi; int 0x66; dec edi; leave; call far dword ptr [rdi];
0xffffffff8243f228: pop rdi; int 0xd9; insd [rdi], dx; mov esp, [rax]; jmp qword ptr [rdi];
0xffffffff8265a358: pop rdi; int3; xchg esp, eax; call far fword ptr [rdi];
0xffffffff814213cc: pop rdi; leave; call qword ptr [rax-0x61fd5418];
0xffffffff82410cc2: pop rdi; leave; iretd;
0xffffffff826538e0: pop rdi; leave; mov al, 0xff; out dx, eax; ret;
0xffffffff8264b7d4: pop rdi; leave; xlat [rbx]; jmp far fword ptr [rdi-0x10002838];
0xffffffff8266814c: pop rdi; mov al, [0x9fbfff5ca04fff5c]; pop rsp; jmp far fword ptr [rdi-0x7000a361];
0xffffffff826680e0: pop rdi; mov ebp, 0xbcafff5c; pop rsp; call far fword ptr [rdi-0x44];
0xffffffff82705925: pop rdi; mov edi, 0x63e0df06; xchg esp, eax; sbb edi, [rdi-0x311f20f8]; iretd;
0xffffffff823935e3: pop rdi; mov esp, [rsi+rax+0x5f]; test al, 0x99; sub [rcx+rax*2-0x5c1a8774], dh; or eax, 0xeccebe9d; ret;
0xffffffff82516705: pop rdi; movsd [rdi], [rsi]; leave; call rcx;
0xffffffff81af7a3d: pop rdi; pop rax; pop rsp; jmp qword ptr [rsi+0x66];
0xffffffff8265a544: pop rdi; pop rax; xchg esp, eax; jmp far fword ptr [rdi+0x56];
0xffffffff826cad04: pop rdi; pop rbx; xchg esp, eax; out 0x74, eax; iretd;
0xffffffff82516704: pop rdi; pop rdi; movsd [rdi], [rsi]; leave; call rcx;
0xffffffff816a4c8c: pop rdi; pop rsp; add [rax-0x68], cl; ret;
0xffffffff8197f538: pop rdi; pop rsp; add [rbx-0x3fceed1f], eax; cmp ecx, 2; sete al; ret;
0xffffffff82668241: pop rdi; pop rsp; jmp far fword ptr [rdi];
0xffffffff82572180: pop rdi; pop rsp; jmp qword ptr [rsi-0x281434b8];
0xffffffff823ba798: pop rdi; pop rsp; push rsp; mov dl, 0x55; ret;
0xffffffff824e7f8d: pop rdi; pop rsp; ret 0xbef2;
0xffffffff81e0015e: pop rdi; pop rsp; swapgs; sysretq;
0xffffffff82668264: pop rdi; push rcx; pop rsp; jmp far fword ptr [rdi-0x6000a3b0];
0xffffffff8251455b: pop rdi; rol byte ptr [rbx-0x50], 0xbc; pop rsp; iretd;
0xffffffff8347862d: pop rdi; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8100d312: pop rdi; sbb [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff82642a2d: pop rdi; sti; dec edi; pop rsp; sti; call far fword ptr [rdi+0x5c];
0xffffffff82648a80: pop rdi; sub al, 0xe5; dec dword ptr [rdi+0xfffe52b]; sub esp, ebp; call far fword ptr [rdi+0xfffe52a];
0xffffffff82656a2c: pop rdi; xchg [rcx-0x5e7a2001], esp; jmp far fword ptr [rdi-0x40005e7e];
0xffffffff83443ddd: pop rdi; xchg [rdi], esp; dec byte ptr [rax-0x77]; ret;
0xffffffff823b6642: pop rdi; xchg ebp, eax; leave; adc esp, [rsi]; dec dh; iretd;
0xffffffff825db0a9: pop rdi; xchg edx, eax; leave; fsin; add r11, [rdi+0x5a]; ret 0xfb04;
0xffffffff82245ead: pop rdi; xchg esi, eax; mov cl, 0xf; sub esi, ebp; xchg [rdi], esp; iretd;
0xffffffff8266d8f8: pop rdi; xchg esp, eax; call far fword ptr [rdi];
0xffffffff8265a539: pop rdi; xchg esp, eax; dec dword ptr [rdi]; pop rbp; xchg esp, eax; call far fword ptr [rdi+0x5fff945b];
0xffffffff823baa70: pop rdi; xchg esp, eax; iretd;
0xffffffff8265a518: pop rdi; xchg esp, eax; jmp far fword ptr [rdi+0x5fff9464];
0xffffffff8265a520: pop rdi; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff8264fe38: pop rdi; xchg esp, eax; ret;
0xffffffff82646bac: pop rdi; xchg esp, ebp; call far fword ptr [rdi];
0xffffffff8265a30c: pop rdi; xlat [rbx]; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff828f3f2c: pop rdx; add [eax], al; pop rsp; ret;
0xffffffff82558e15: pop rdx; add esp, ebx; pop rcx; iretd;
0xffffffff8170346f: pop rdx; add rsp, 0x10; pop rbx; ret;
0xffffffff8105fe3c: pop rdx; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff83567e69: pop rdx; cmp edi, 0xe0ffffff; xchg esp, eax; ret 0xff81;
0xffffffff8252bbc5: pop rdx; cwde; push 0x351b9510; pop rsp; adc [rsi+0x7aeb0829], eax; ret;
0xffffffff826687fa: pop rdx; dec dword ptr [rdi-0x2000a536]; leave; pop rdx; jmp far fword ptr [rdi+0x4fff5ac9];
0xffffffff8266880a: pop rdx; dec dword ptr [rdi]; leave; pop rdx; call far fword ptr [rdi-0x7000a538];
0xffffffff82359c2d: pop rdx; fstp qword ptr [rdx+0x30], st; pop rsp; ret 0x941c;
0xffffffff823c5227: pop rdx; imul byte ptr [rsi+0x1a]; adc r14d, [rcx-0x44c1301d]; leave; ret;
0xffffffff810ac712: pop rdx; in eax, 0x15; add esp, eax; ret 0x71;
0xffffffff824a218e: pop rdx; int1; movsd [rdi], [rsi]; xchg sp, ax; iretd;
0xffffffff8227e6fc: pop rdx; leave; jmp far fword ptr [rax+0x23];
0xffffffff8227e6fb: pop rdx; leave; jmp far fword ptr [rax+0x23];
0xffffffff8243622f: pop rdx; leave; mov ecx, 0x81de3e8e; lea ebx, [rbx-0x2f]; enter 0x2596, 0x18; iretd;
0xffffffff8110dd06: pop rdx; mov rsp, rbp; pop rbp; ret;
0xffffffff824703fd: pop rdx; movsxd esi, [rdx]; push 0xffffffffc2881e09; leave; ret 0xd564;
0xffffffff816b74b7: pop rdx; or [rdi], cl; xchg esp, eax; ror dword ptr [rax+0xf], 0x45; ret;
0xffffffff825505b1: pop rdx; out dx, eax; xchg esp, eax; fcomi st, st(0); ret;
0xffffffff8104c5a1: pop rdx; pop rsi; pop rdi; add rsp, 0x18; popfq; ret;
0xffffffff814fe472: pop rdx; pop rsp; cld; jmp qword ptr [rbp+0x48];
0xffffffff8228371b: pop rdx; pop rsp; out dx, al; jmp far fword ptr [rdi+0x48];
0xffffffff824f1125: pop rdx; pop rsp; out dx, al; ret 0xe160;
0xffffffff8234ac6c: pop rdx; pop rsp; rcr byte ptr [rbx-0x58], 1; pushfq; ret 0xcdac;
0xffffffff8226698b: pop rdx; pop rsp; xor ebx, [edi-0x2a22ac3a]; call far fword ptr [rbx];
0xffffffff824cb531: pop rdx; push rax; pop rsp; add al, 0xa0; ret 0x4644;
0xffffffff83498ff1: pop rdx; sar ebp, 1; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff825da83e: pop rdx; sbb ah, [rsi-0x3c]; fld st, dword ptr [rbp-0x22b1383]; push rax; xchg esp, eax; ret;
0xffffffff822a87f8: pop rdx; sbb esp, edi; push rax; pop rsp; jmp qword ptr [rax-0x2bbfd25c];
0xffffffff82540e21: pop rdx; sub ch, [rdx]; xchg esp, eax; add dh, ah; or ebx, [rsi]; ret;
0xffffffff8251f38a: pop rdx; xchg esp, eax; iretd;
0xffffffff823f742f: pop rdx; xchg esp, eax; or [rbx-0x17], esi; ret 0x8bf3;
0xffffffff82359c2f: pop rdx; xor [rdx+rax*8+0x1c], bl; xchg esp, eax; mov [0x3e5236c98fcd6711], eax; ret 0x402f;
0xffffffff82551dbf: pop rsi; adc ebp, esp; xchg esp, eax; ret 0xf738;
0xffffffff816a24bb: pop rsi; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8346e72e: pop rsi; add edx, esp; std; add rsp, 8; pop rbx; ret;
0xffffffff81a62eef: pop rsi; add rsp, 0x30; ret;
0xffffffff82667c6a: pop rsi; dec dword ptr [rdi-0x5000a1a2]; pop rsp; pop rsi; call far fword ptr [rdi+0x56];
0xffffffff82648991: pop rsi; in eax, 0xff; out dx, eax; pop rsp; in eax, 0xff; iretd;
0xffffffff82319279: pop rsi; leave; and esi, edi; mov eax, 0x339d3921; ret;
0xffffffff8264f009: pop rsi; leave; jmp far fword ptr [rdi+0x6fffc95d];
0xffffffff823b7a90: pop rsi; leave; ret;
0xffffffff823dedc4: pop rsi; leave; sbb dh, [rbp+0x4eede1b5]; or al, 0xda; jmp qword ptr [rbp-0x2f];
0xffffffff8242292e: pop rsi; leave; scasb [rdi]; ret;
0xffffffff823d807b: pop rsi; leave; vmulps ymm1, ymm4, [rdi+0x45ec35f8]; ret 0xce4e;
0xffffffff816bab4f: pop rsi; or [rdi], cl; xchg esp, eax; ret 0xf49;
0xffffffff816badaf: pop rsi; or [rdi], cl; xchg esp, eax; ror dword ptr [rcx+0xf], 0x45; ret;
0xffffffff825593db: pop rsi; out dx, al; sub eax, 0xb761c6ed; or [rdx+0x7e], ch; leave; iretd;
0xffffffff822e4374: pop rsi; pop rax; adc edi, [rcx]; leave; iretd;
0xffffffff8104c5a2: pop rsi; pop rdi; add rsp, 0x18; popfq; ret;
0xffffffff81e0142d: pop rsi; pop rdi; add rsp, 0x30; std; mov qword ptr [rsp+0x28], 0; iretq;
0xffffffff816a4d2c: pop rsi; pop rsp; add [rax-0x68], cl; ret;
0xffffffff8266824d: pop rsi; pop rsp; jmp far fword ptr [rdi+0x5e];
0xffffffff8348802e: pop rsi; push 0xffffffffffffffd2; std; add rsp, 8; pop rbx; ret;
0xffffffff83488c3a: pop rsi; sar ch, cl; add rsp, 8; pop rbx; ret;
0xffffffff8239d50c: pop rsi; sub [r8+0x60], al; add ebp, [rbp+0x30]; pop rsp; ret 0x8f8;
0xffffffff8239d50d: pop rsi; sub [r8+0x60], al; add ebp, [rbp+0x30]; pop rsp; ret 0x8f8;
0xffffffff8243e311: pop rsi; xchg [rbx-0x12], esp; ret 0xcc20;
0xffffffff825565ed: pop rsi; xchg esi, eax; xchg esp, eax; iretd;
0xffffffff82264dd8: pop rsi; xchg esp, eax; push rdx; mov edi, [rbx]; insb [rdi], dx; ret 0x3278;
0xffffffff822a7cce: pop rsi; xchg esp, eax; scasd [rdi]; pop rbx; fsubr st, qword ptr [rax]; jmp qword ptr [rdi+0x13af9ce4];
0xffffffff813548af: pop rsi; xor [rax-0x7b], cl; fisttp dword ptr [rdi], st; xchg esp, eax; ret 0xca30;
0xffffffff822a3180: pop rsp; adc [rax-0x58098d9a], cl; add [rdi+rsi*4], dh; pop rsi; ret;
0xffffffff81644b7f: pop rsp; adc [rax], eax; add [rdi], cl; xchg esp, eax; shl bh, 0xd8; ret;
0xffffffff8240ea45: pop rsp; adc [rsi+0x4c], ecx; ret 0xdfc3;
0xffffffff8252bbcc: pop rsp; adc [rsi+0x7aeb0829], eax; ret;
0xffffffff823e2fac: pop rsp; adc al, 0x21; test eax, 0xbb2b865d; and eax, 0x76a6da26; push rsp; call far fword ptr [rbx+0x7e];
0xffffffff8224410c: pop rsp; adc al, 0x29; fmulp st(5), st; ret 0x5922;
0xffffffff8241bbfb: pop rsp; adc al, 0x32; iretd;
0xffffffff823e6abc: pop rsp; adc al, 0x70; pushfq; fsubr st, dword ptr [rax]; test edi, 0xfde4b5c2; bnd call qword ptr [rsi];
0xffffffff82004554: pop rsp; adc al, 0xc7; call qword ptr [rdx-0x36];
0xffffffff8241e3ad: pop rsp; adc al, 0xe3; mov dh, 0xf8; cmp spl, [r13-0x63]; ret;
0xffffffff82007ab4: pop rsp; adc al, 5; push qword ptr [rax]; adc al, bh; jmp qword ptr [rdi-0x5c];
0xffffffff823e1381: pop rsp; adc al, [rdx-0x3f]; cli; push rdx; ret;
0xffffffff82309ca4: pop rsp; adc bl, [rip+0x3ba1d54c]; iretd;
0xffffffff8200d5f4: pop rsp; adc bl, al; call far fword ptr [rax];
0xffffffff824decf5: pop rsp; adc bl, dl; sub [rsi-0x11757047], bl; mov cl, 0xfb; jmp qword ptr [rbx-0xca8d79];
0xffffffff835a76d8: pop rsp; adc ch, cl; jmp qword ptr [rdi+0x12];
0xffffffff82a456bd: pop rsp; adc eax, 0x200; add eax, 8; add [rax], al; add [rax], al; iretd;
0xffffffff8227542f: pop rsp; adc eax, 0x31ea1b52; iretd;
0xffffffff822fe8ae: pop rsp; adc eax, 0x40ab8d; mov ebp, 0xde2f66a2; mov ah, 0x16; adc esp, edi; ret;
0xffffffff835219b1: pop rsp; adc eax, 0xffffff81; call qword ptr [rax+0x5e];
0xffffffff82332b34: pop rsp; adc eax, [rbx-0x31]; adc eax, 0x50ad6907; iretd;
0xffffffff823ebdaa: pop rsp; adc eax, [rsi]; imul edx, [rdi], 0x7facb986; int 7; iretd;
0xffffffff823ebdab: pop rsp; adc eax, [rsi]; imul edx, [rdi], 0x7facb986; int 7; iretd;
0xffffffff822dfab7: pop rsp; adc edx, [rdx+0x49]; iretq;
0xffffffff8251f4b1: pop rsp; adc esi, [rsi+0x36cf4934]; lodsd [rsi]; ret 0xf7da;
0xffffffff822fdf4d: pop rsp; add [r14-0x42], spl; xchg edx, eax; call qword ptr [rbp*4+0x2d5b732a];
0xffffffff81a1ba52: pop rsp; add [rax+1], bh; ret;
0xffffffff8121ea8a: pop rsp; add [rax+1], ecx; iretd;
0xffffffff8197b6dd: pop rsp; add [rax-0x39], ecx; ret 0x5428;
0xffffffff8197f55a: pop rsp; add [rax-0x39], ecx; ret 0x5578;
0xffffffff81976066: pop rsp; add [rax-0x39], ecx; ret;
0xffffffff816a2a85: pop rsp; add [rax-0x68], cl; pop rbx; ret;
0xffffffff816a2bb9: pop rsp; add [rax-0x68], cl; ret;
0xffffffff81a1ba42: pop rsp; add [rax-0x75], cl; xchg [rax+2], edx; add [rax], al; ret;
0xffffffff8169b826: pop rsp; add [rax-0x77], cl; ret;
0xffffffff8169b741: pop rsp; add [rax-0x7b], cl; shl byte ptr [rbp+rsi*4+0x48], 0x89; ret;
0xffffffff8169a838: pop rsp; add [rax-0x7b], cl; shl byte ptr [rdx+rax*8+0x48], 0x89; ret;
0xffffffff8169b94a: pop rsp; add [rax-0x7b], cl; shl byte ptr [rsi+rcx*2+0x48], 0x89; ret;
0xffffffff8183c862: pop rsp; add [rax-0x7f], cl; jmp rax;
0xffffffff816afb0d: pop rsp; add [rax-1], bh; pop rbx; ret;
0xffffffff814fbd24: pop rsp; add [rax], al; add [rax-0x77], cl; iretd;
0xffffffff817d2860: pop rsp; add [rax], al; add [rax-0x7b], cl; shl byte ptr [rcx+rax*4+0x48], 0x89; ret;
0xffffffff817d0e14: pop rsp; add [rax], al; add [rax], al; ret;
0xffffffff815d7220: pop rsp; add [rax], al; add [rbp-0x7cdb8a40], al; ret;
0xffffffff8173b5de: pop rsp; add [rax], al; add [rcx-0x7d], al; call qword ptr [rbx];
0xffffffff828ddded: pop rsp; add [rax], al; add byte ptr [rcx], 0; add [rsi+rsi], dh; add [rax], al; ret 0x5c;
0xffffffff828dfc31: pop rsp; add [rax], al; call qword ptr [rbp];
0xffffffff828e1419: pop rsp; add [rax], al; ret 0x85;
0xffffffff829026b0: pop rsp; add [rax], al; ret;
0xffffffff829026b1: pop rsp; add [rax], al; ret;
0xffffffff811df5a4: pop rsp; add [rax], eax; add [rax-0x77], cl; iretd;
0xffffffff81354693: pop rsp; add [rax], eax; add [rax-0x77], cl; ret;
0xffffffff81559079: pop rsp; add [rax], eax; add [rbp-0x77], cl; iretd;
0xffffffff81b2db97: pop rsp; add [rax], eax; add [rcx+0x8088], cl; add [rcx], dh; rcr byte ptr [rbx-0x3d], 0xb8; ret;
0xffffffff817f7ab8: pop rsp; add [rax], eax; add dword ptr [rax+0xa58], 0xffffffff; mov qword ptr [rdi+0x38], 0; mov qword ptr [rdi], 0; ret;
0xffffffff817da52b: pop rsp; add [rax], eax; add dword ptr [rax+0xa58], 0xffffffff; ret;
0xffffffff81925e17: pop rsp; add [rax], eax; add dword ptr [rax+0xa58], 1; add dword ptr [rax+0xa58], 0xffffffff; ret;
0xffffffff819944c5: pop rsp; add [rax], eax; add dword ptr [rcx+0xa58], 0xffffffff; mov qword ptr [rdx+0x20], 0; pop rbx; ret;
0xffffffff82a7b53d: pop rsp; add [rax], eax; cmp eax, 0xa430000; add [rax], al; ret 0x178a;
0xffffffff81e00ee0: pop rsp; add [rax], eax; leave; ret;
0xffffffff81146fe6: pop rsp; add [rax], eax; mov [rcx+0x890], rax; xor eax, eax; ret;
0xffffffff8114a2d4: pop rsp; add [rax], eax; mov [rcx+0x898], rax; xor eax, eax; ret;
0xffffffff8110c439: pop rsp; add [rax], eax; mov [rdi+0x10], rax; mov ecx, 1; mov eax, ecx; ret;
0xffffffff812bcb0b: pop rsp; add [rax], eax; mov [rdi+0x2e0], rax; mov [rdi+0x378], rax; mov [rdi+0x410], rax; ret;
0xffffffff8110992b: pop rsp; add [rax], eax; mov [rdi+8], rax; mov ecx, 1; mov eax, ecx; ret;
0xffffffff81c812d9: pop rsp; add [rax], eax; mov [rdi+8], rax; ret;
0xffffffff81c81309: pop rsp; add [rax], eax; mov [rdi+8], rax; xor eax, eax; ret;
0xffffffff81174427: pop rsp; add [rax], eax; mov [rip+0x24a0287], rax; ret;
0xffffffff8102b97b: pop rsp; add [rax], eax; mov dword ptr [rdi], 0xffffffff; ret;
0xffffffff81036527: pop rsp; add [rax], eax; mov eax, ebp; pop rbx; pop rbp; ret;
0xffffffff83450349: pop rsp; add [rax], eax; mov qword ptr [rax+0x860], 0xffffffffffffffff; ret;
0xffffffff812f7ffb: pop rsp; add [rax], eax; mov rax, [rax+0x6c8]; mov eax, [rax+0x24]; ret;
0xffffffff8178396b: pop rsp; add [rax], eax; mov rax, [rax+0x6e0]; mov eax, [rax+0x410]; mov [rdi+0x410], eax; ret;
0xffffffff810cce2b: pop rsp; add [rax], eax; mov rax, [rax+0x6f0]; ret;
0xffffffff810e438b: pop rsp; add [rax], eax; mov rcx, [rax+0x678]; mov eax, 0x190; add rax, [rcx+0x98]; ret;
0xffffffff81c557fb: pop rsp; add [rax], eax; mov rcx, [rax+0x6d8]; mov eax, 0xf8; add rax, [rcx+0x28]; ret;
0xffffffff81821a20: pop rsp; add [rax], eax; mov rcx, [rbx+0x35f8]; mov [rcx+0x88], rax; pop rbx; ret;
0xffffffff810d1173: pop rsp; add [rax], eax; mov rcx, [rcx+0x6c8]; xchg [rcx+0x24], eax; cdqe; ret;
0xffffffff812e1be2: pop rsp; add [rax], eax; mov rcx, [rcx+0x6d8]; cmp rax, [rcx+0x18]; sete al; ret;
0xffffffff8118b570: pop rsp; add [rax], eax; mov rcx, [rcx+0x9c8]; mov [rcx+0x20], rax; ret;
0xffffffff8118b7b0: pop rsp; add [rax], eax; mov rcx, [rcx+0x9c8]; mov [rcx+0x40], rax; ret;
0xffffffff8118b820: pop rsp; add [rax], eax; mov rcx, [rcx+0x9c8]; mov [rcx+0x50], rax; ret;
0xffffffff81187b8b: pop rsp; add [rax], eax; movsxd rax, [rax+0x748]; ret;
0xffffffff81e009d8: pop rsp; add [rax], eax; push rdi; push qword ptr [rdi-8]; ret;
0xffffffff81123d80: pop rsp; add [rax], eax; ret;
0xffffffff8102b0f6: pop rsp; add [rax], eax; xor eax, eax; test qword ptr [rcx], 0x8000; sete al; ret;
0xffffffff8119de52: pop rsp; add [rbp+0xe], esi; mov qword ptr [rdi+0x98], 0; xor eax, eax; ret;
0xffffffff8177b0bf: pop rsp; add [rbp+2], dh; pop rbx; ret;
0xffffffff825473e8: pop rsp; add [rbp-0x624107fb], ah; imul dword ptr [rdx]; mov [rip-0x17db9d95], gs; ret 0x9d82;
0xffffffff81a31265: pop rsp; add [rbx+0x41], bl; pop rsi; ret;
0xffffffff8197c3bb: pop rsp; add [rbx+0x41], ebx; pop rsi; pop r15; ret;
0xffffffff818884e4: pop rsp; add [rbx+rax*4], edx; ret;
0xffffffff816bf7ac: pop rsp; add [rbx+rbx*8+0x5bc0940f], al; pop r14; ret;
0xffffffff824df7e8: pop rsp; add [rbx+rdx*2], dh; ret;
0xffffffff8197f539: pop rsp; add [rbx-0x3fceed1f], eax; cmp ecx, 2; sete al; ret;
0xffffffff81a1ba62: pop rsp; add [rbx-0x7d], dl; add [rdx+rax+0x5b], dh; ret;
0xffffffff818394c3: pop rsp; add [rbx-0x8769], cl; call rcx;
0xffffffff81a3808c: pop rsp; add [rcx+rcx*4-0x10], al; pop rbx; pop r14; pop rbp; ret;
0xffffffff816ae226: pop rsp; add [rcx-0x77], al; ret;
0xffffffff816ae217: pop rsp; add [rcx-0x77], cl; ret 0x8948;
0xffffffff81c34436: pop rsp; add [rcx-0x7d], eax; sar esi, 0x89; ret;
0xffffffff816935e6: pop rsp; add [rcx], dh; rcr byte ptr [rbx+0x41], 0x5e; ret;
0xffffffff8103eb46: pop rsp; add [rcx], eax; add [rcx], dh; rcr byte ptr [rbx+0x41], 0x5e; pop rbp; ret;
0xffffffff82230aaa: pop rsp; add [rsi+0x4e910198], ebp; call far fword ptr [rcx-0x21265bc];
0xffffffff8244d244: pop rsp; add [rsp+rbp], dl; sub al, bl; push rdx; sbb [rdi], ebx; ret;
0xffffffff822fffb1: pop rsp; add ah, dh; test eax, 0xf8cc3cb0; xor al, 0x55; iretd;
0xffffffff822fffb0: pop rsp; add ah, dh; test eax, 0xf8cc3cb0; xor al, 0x55; iretd;
0xffffffff813d443b: pop rsp; add al, 0; add [rax-0x7f], cl; ret;
0xffffffff810bb097: pop rsp; add al, 0; add [rax], dl; add [rax], al; add [rax-0x7f], cl; ret;
0xffffffff81681b37: pop rsp; add al, 0; add [rbx-0xfde0040], al; mov [rdi+0x464], eax; mov byte ptr [rdi+0x48e], 0; ret;
0xffffffff82348746: pop rsp; add al, 0x7b; sbb dl, [rbx]; sbb esi, 0x2a; cmp [rbp-0x43], esp; iretd;
0xffffffff824cb533: pop rsp; add al, 0xa0; ret 0x4644;
0xffffffff812f6ed0: pop rsp; add al, 0xdc; jmp qword ptr [rsi+0x66];
0xffffffff823fae54: pop rsp; add al, 1; call qword ptr [rbx-0x3e];
0xffffffff8140d8f0: pop rsp; add al, [rax]; add [rax-0x75], cl; or [rax-0x77], cl; ret 0xc1f6;
0xffffffff810490d7: pop rsp; add al, [rax]; add [rax], al; add [rax-0x16], bh; ret;
0xffffffff82008cb4: pop rsp; add al, [rip-0x38f65201]; jmp far fword ptr [rdi+0x250ff63];
0xffffffff810e4cb3: pop rsp; add al, ch; test ah, 0xff; dec dword ptr [rax-0x7b]; shl byte ptr [rcx+rdx*2+0x48], 0x89; ret;
0xffffffff81a40548: pop rsp; add bl, al; xor eax, eax; ret;
0xffffffff816a5aa7: pop rsp; add bl, ch; add eax, 0x246c894c; adc [rbp+0x69], cl; call rbx;
0xffffffff816afaea: pop rsp; add bl, ch; and [rcx-0x7d], ecx; ret;
0xffffffff81a3a734: pop rsp; add bl, ch; iretd;
0xffffffff823f52ed: pop rsp; add byte ptr [rax-0x67], 0xac; adc esi, [rsi]; out dx, eax; push 0x2f; ret 0xc525;
0xffffffff82269db9: pop rsp; add cl, [rcx+0x356d09b2]; fadd st, dword ptr [rdx-0x3a319d62]; test al, 0x1c; ret 0x3152;
0xffffffff8139305a: pop rsp; add cl, [rdi]; test [rdx], cl; or al, 0; add [rcx-0x77], cl; iretd;
0xffffffff814d22c7: pop rsp; add dh, [rbp+3]; xor eax, eax; ret;
0xffffffff81337d9b: pop rsp; add dh, [rbp+4]; pop rbx; pop r14; ret;
0xffffffff81835c53: pop rsp; add dh, al; add r8b, [rax]; mov word ptr [rsi], 0xa30; mov eax, 2; ret;
0xffffffff810b6ee2: pop rsp; add dword ptr [rax], 0x48; mov eax, 0x835ca450; ret;
0xffffffff8343a202: pop rsp; add dword ptr [rax], 0x75; and esp, [rsi-0x7d]; cmp al, 0xcd; ret 0x5c1a;
0xffffffff822fe53c: pop rsp; add dword ptr [rcx-0x3193830b], 0x6a; sbb eax, 0x68582330; jmp far fword ptr [rsi];
0xffffffff824cdbd8: pop rsp; add eax, 0x14412f73; sub al, 0xb2; add esi, [rdx+0x4c358149]; iretd;
0xffffffff824c9b2c: pop rsp; add eax, 0x2d90bd12; mov esp, 0x5712dda7; iretd;
0xffffffff82002c84: pop rsp; add eax, 0x3f96cff; jmp far fword ptr [rdx-7];
0xffffffff82290c50: pop rsp; add eax, 0x4713e8a7; cmpsb [rsi], [rdi]; and [rsi+0x5491fb64], ah; ret 0x2d92;
0xffffffff8256a6d2: pop rsp; add eax, 0x6356929d; test eax, 0xc5920277; sbb al, 0x2f; iretd;
0xffffffff82433f85: pop rsp; add eax, 0x72cab26e; or eax, 0x2d416901; ret 0x7988;
0xffffffff820032b5: pop rsp; add eax, 0xaca9aff; jmp far fword ptr [rdi-0x2b];
0xffffffff82003369: pop rsp; add eax, 0xacaceff; jmp qword ptr [rbx];
0xffffffff820032c1: pop rsp; add eax, 0xacad0ff; call rdx;
0xffffffff8200335d: pop rsp; add eax, 0xacad1ff; jmp far fword ptr [rax];
0xffffffff82003375: pop rsp; add eax, 0xacad3ff; call far fword ptr [rdi];
0xffffffff82003381: pop rsp; add eax, 0xacad8ff; call far fword ptr [rbx];
0xffffffff8200338d: pop rsp; add eax, 0xacaf5ff; call qword ptr [rsi];
0xffffffff82003399: pop rsp; add eax, 0xacb1bff; call far fword ptr [rbx];
0xffffffff820033ed: pop rsp; add eax, 0xb8473ff; jmp far fword ptr [rsi-0x700f47c];
0xffffffff820033d5: pop rsp; add eax, 0xb8478ff; inc esi; test [rbx], cl; call qword ptr [rax];
0xffffffff82324f89: pop rsp; add eax, 0xc4bd09bd; pop rbp; out 0x3c, al; ret;
0xffffffff820050b4: pop rsp; add eax, 0xc7271eff; call far fword ptr [rsi-0x47];
0xffffffff82004db4: pop rsp; add eax, 0xc728aaff; inc dword ptr [rbx-0x53]; adc eax, 0x54150ff; jmp qword ptr [rax+rbp-0x4a6b0039];
0xffffffff824bf496: pop rsp; add eax, 0xf8261b62; cld; ret;
0xffffffff83519c09: pop rsp; add eax, 0xffffff81; call rax;
0xffffffff81865d8a: pop rsp; add eax, [rax]; add [rax-0x39], cl; ret 0xddb6;
0xffffffff827fc521: pop rsp; add eax, [rax]; add [rax], al; add [rax], al; sub [rsi+2], dl; jmp far fword ptr [rbp+3];
0xffffffff817ff954: pop rsp; add eax, [rax]; add [rbp-0x7b], al; ror byte ptr [rdi], 0x84; ret;
0xffffffff810d1317: pop rsp; add eax, [rax]; add [rcx-0x7d], al; jmp qword ptr [rbx];
0xffffffff8104549f: pop rsp; add ebx, 0xf; or edi, [rax-1]; ret;
0xffffffff82002939: pop rsp; add edi, edi; xor al, 0x67; add eax, 0x35ca6ff; call far fword ptr [rdi];
0xffffffff82004094: pop rsp; add rax, 0xffffffff9ef4faff; jmp far fword ptr [rbp+0x50ffffcd];
0xffffffff834a5420: pop rsp; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff82277ed6: pop rsp; and [rax-0x736ef268], bh; ret;
0xffffffff82357247: pop rsp; and [rax], bl; pop rbx; mov [0xcff278471fe560b7], eax; ret 0x1ae1;
0xffffffff8254e40b: pop rsp; and [rcx+0x2e8f8ded], eax; ret;
0xffffffff82378ff2: pop rsp; and [rcx-0x2b], ebx; add al, 0x4a; ret;
0xffffffff8226f13b: pop rsp; and [rsi+rdi*8], ebp; iretd;
0xffffffff82810a54: pop rsp; and ah, [rbx]; jmp rdx;
0xffffffff82367203: pop rsp; and al, 0x62; in eax, 0x52; ret 0x1255;
0xffffffff8224a62e: pop rsp; and al, 0x6d; in eax, dx; xchg [rdi-0x2718d3e7], ah; ret;
0xffffffff8171e750: pop rsp; and al, 0x9c; jmp qword ptr [rsi+0x66];
0xffffffff835ab398: pop rsp; and al, 0xd7; std; ret 0xd724;
0xffffffff8268d43e: pop rsp; and al, [rdx+rcx-0x6b30f92b]; in eax, 0x61; pop rsp; and bl, [rbx+0x6d50d65]; iretd;
0xffffffff813b4990: pop rsp; and al, ah; push rsi; ret;
0xffffffff82005f4c: pop rsp; and bh, al; jmp qword ptr [rdx-0x4300cbe6];
0xffffffff824d8064: pop rsp; and bh, al; ret;
0xffffffff8268d448: pop rsp; and bl, [rbx+0x6d50d65]; iretd;
0xffffffff82498e13: pop rsp; and bl, [rbx]; mov dl, 0x1c; ret 0x786b;
0xffffffff82350a0f: pop rsp; and ch, [rax-0x68]; iretd;
0xffffffff8236e441: pop rsp; and dh, cl; cmp [rbx], bl; ret 0x40da;
0xffffffff81044b2d: pop rsp; and dword ptr [rip+0xfff], 0x48; sub eax, ecx; mov [rax-0x801000], esi; mov eax, [rax-0x800ff0]; ret;
0xffffffff8228bc96: pop rsp; and dword ptr [rsi-0x1a], 0x8b3c6f77; push rbp; test [rdx+r8*4+0x3e], r15d; ret 0xa5d0;
0xffffffff8225d649: pop rsp; and eax, 0x90d51a08; ret;
0xffffffff8232162b: pop rsp; and eax, 0x98afa16d; out dx, eax; mov eax, [0x781d03576d82cf21]; pop rdi; ret 0x8f87;
0xffffffff82006bb4: pop rsp; and eax, [rip-0x38e5ff01]; call qword ptr [rdi+0x50ff490c];
0xffffffff82005904: pop rsp; and eax, edi; call far fword ptr [rbx-0x29];
0xffffffff823bb9f8: pop rsp; and ecx, edi; ret;
0xffffffff823bb9f7: pop rsp; and ecx, edi; ret;
0xffffffff824f3ab4: pop rsp; and esp, [rax+0x47]; sub al, 0xfa; or ebx, ebp; ret 0xc8d5;
0xffffffff82379e1e: pop rsp; and esp, [rax-0xc]; fdiv st, qword ptr [rdx-0x5e170a48]; or ch, [rbp-0x76368f85]; ret 0x61aa;
0xffffffff824ff169: pop rsp; bts [rdx+0x6b], edi; xchg ebx, eax; ret;
0xffffffff8266a595: pop rsp; call far fword ptr [r15+0x1fff4f5b];
0xffffffff8266abe9: pop rsp; call far fword ptr [r15];
0xffffffff82006e75: pop rsp; call far fword ptr [rax-0x5800fae0];
0xffffffff815525ce: pop rsp; call far fword ptr [rbx+0x41];
0xffffffff822be735: pop rsp; call far fword ptr [rcx];
0xffffffff82668092: pop rsp; call far fword ptr [rdi+0x1fff5cd8];
0xffffffff826682de: pop rsp; call far fword ptr [rdi+0x2d];
0xffffffff826682c6: pop rsp; call far fword ptr [rdi+0x39];
0xffffffff826682ba: pop rsp; call far fword ptr [rdi+0x3a];
0xffffffff826682a1: pop rsp; call far fword ptr [rdi+0x3c];
0xffffffff826682a2: pop rsp; call far fword ptr [rdi+0x3c];
0xffffffff82668291: pop rsp; call far fword ptr [rdi+0x41];
0xffffffff82668289: pop rsp; call far fword ptr [rdi+0x42];
0xffffffff826681ce: pop rsp; call far fword ptr [rdi+0x4fff5c82];
0xffffffff82668262: pop rsp; call far fword ptr [rdi+0x51];
0xffffffff8266c489: pop rsp; call far fword ptr [rdi+0x5fff445b];
0xffffffff8266813e: pop rsp; call far fword ptr [rdi+0x5fff5ca1];
0xffffffff826680da: pop rsp; call far fword ptr [rdi+0x5fff5cbd];
0xffffffff826680c6: pop rsp; call far fword ptr [rdi+0x5fff5cc1];
0xffffffff82668056: pop rsp; call far fword ptr [rdi+0x5fff5ceb];
0xffffffff8266821e: pop rsp; call far fword ptr [rdi+0x6c];
0xffffffff8266831a: pop rsp; call far fword ptr [rdi+0x6fff5c1b];
0xffffffff82644c61: pop rsp; call far fword ptr [rdi+0x6ffff25b];
0xffffffff826681de: pop rsp; call far fword ptr [rdi+0x7f];
0xffffffff82668046: pop rsp; call far fword ptr [rdi+0xfff5cee];
0xffffffff82668356: pop rsp; call far fword ptr [rdi+6];
0xffffffff8266805a: pop rsp; call far fword ptr [rdi-0x17];
0xffffffff8266826a: pop rsp; call far fword ptr [rdi-0x3000a3b0];
0xffffffff8266834a: pop rsp; call far fword ptr [rdi-0x3000a3f5];
0xffffffff826680ca: pop rsp; call far fword ptr [rdi-0x3f];
0xffffffff826680de: pop rsp; call far fword ptr [rdi-0x43];
0xffffffff826680e6: pop rsp; call far fword ptr [rdi-0x44];
0xffffffff82668116: pop rsp; call far fword ptr [rdi-0x54];
0xffffffff82668142: pop rsp; call far fword ptr [rdi-0x5f];
0xffffffff8266814a: pop rsp; call far fword ptr [rdi-0x60];
0xffffffff8266827e: pop rsp; call far fword ptr [rdi-0xa3bd];
0xffffffff82668235: pop rsp; call far fword ptr [rdi];
0xffffffff8266803a: pop rsp; call far fword ptr [rdi];
0xffffffff8200d871: pop rsp; call far fword ptr [rsi+rsi*4-0x153800fc];
0xffffffff81af170d: pop rsp; call qword ptr [rax+0x30ff6be8];
0xffffffff81aecebd: pop rsp; call qword ptr [rax+0x3147bbe8];
0xffffffff81aeb5cd: pop rsp; call qword ptr [rax+0x48535641];
0xffffffff8200d87d: pop rsp; call qword ptr [rax-0x3b00fb4a];
0xffffffff81af130f: pop rsp; call qword ptr [rax-0x6f6f6f70];
0xffffffff818fcba8: pop rsp; call qword ptr [rax];
0xffffffff824edf9f: pop rsp; call qword ptr [rbp-0x2f];
0xffffffff822514ff: pop rsp; call qword ptr [rcx-0x67f22c67];
0xffffffff8228c55f: pop rsp; call qword ptr [rdi];
0xffffffff824fce10: pop rsp; call qword ptr [rdx];
0xffffffff825d60d7: pop rsp; call qword ptr [rsi+rcx*2+0x25];
0xffffffff8170fa40: pop rsp; call qword ptr [rsi];
0xffffffff817b6ff0: pop rsp; cdq; add [rax-0x7d], cl; ret;
0xffffffff8269238d: pop rsp; cdq; call qword ptr [rdi];
0xffffffff8229d7cf: pop rsp; cdq; iretd;
0xffffffff82467e05: pop rsp; clc; iretd;
0xffffffff81215ff6: pop rsp; clc; jmp qword ptr [rbp+0x48];
0xffffffff81215ff7: pop rsp; clc; jmp qword ptr [rbp+0x48];
0xffffffff8228a409: pop rsp; cld; cmp [rdi+0x3e0eba49], ebx; and ebx, [rdi-0x5e8430e2]; ret 0x679c;
0xffffffff82258a63: pop rsp; cld; insb [rdi], dx; iretd;
0xffffffff822e91db: pop rsp; cld; jmp far fword ptr [rdi];
0xffffffff814fe473: pop rsp; cld; jmp qword ptr [rbp+0x48];
0xffffffff820075b8: pop rsp; cld; pop rdi; call qword ptr [rcx+rbx+5];
0xffffffff812e6a80: pop rsp; cli; dec dword ptr [rax-0x7b]; shl byte ptr [rbx+rbx+0x48], 0x89; ret;
0xffffffff812e4534: pop rsp; cli; push qword ptr [rcx]; rcr byte ptr [rbx+0x41], 0x5e; ret;
0xffffffff823a37c0: pop rsp; cli; ret;
0xffffffff824b78f9: pop rsp; cmc; iretd;
0xffffffff81334541: pop rsp; cmc; jmp qword ptr [rsi+0x66];
0xffffffff823966d9: pop rsp; cmc; ret;
0xffffffff824306c1: pop rsp; cmovno esi, ebx; iretd;
0xffffffff8225fce1: pop rsp; cmovnp ebx, [rbx-0x5f6e45ba]; stosb [rdi]; in eax, dx; iretd;
0xffffffff811d2670: pop rsp; cmp [rax-0xa], ah; ret 0x7503;
0xffffffff8240ee2e: pop rsp; cmp [rbx+0x22], ah; cmp eax, 0xf9fd7098; xor al, 0x30; out dx, eax; iretd;
0xffffffff8235d8a7: pop rsp; cmp [rbx-0x64], ecx; mov al, 0x56; popfq; iretd;
0xffffffff820056b4: pop rsp; cmp [rip-0x38db9601], al; call qword ptr [rcx+0x50ff2128];
0xffffffff82500a7a: pop rsp; cmp [rsi-0x66b2c68b], bl; xor al, 0x4a; ret 0xe635;
0xffffffff823bd334: pop rsp; cmp ah, [rax+0x14279a7d]; adc esp, [rbx+0x7d7615ea]; iretd;
0xffffffff825452a8: pop rsp; cmp al, 0x3d; sub al, 0xfa; ret;
0xffffffff8254d6a5: pop rsp; cmp al, 0x49; ret;
0xffffffff82394b0e: pop rsp; cmp al, 0x72; hlt; cmp al, bh; sub [rdx+0x3197c4fa], ebx; ret;
0xffffffff816101e0: pop rsp; cmp al, 0xcd; call far fword ptr [rbx+0x41];
0xffffffff8230fc43: pop rsp; cmp al, 0xd7; pop rcx; ret;
0xffffffff8174b8d9: pop rsp; cmp bh, [rcx-0x7e]; ret;
0xffffffff822ea660: pop rsp; cmp bh, dl; ret;
0xffffffff8248e0a8: pop rsp; cmp bl, [rcx+0x77911ada]; ret;
0xffffffff8353f469: pop rsp; cmp di, 0xffff; inc dword ptr [rax]; pop rsi; cmp di, 0xffff; jmp qword ptr [rax+0x5f];
0xffffffff815c0f65: pop rsp; cmp dword ptr [rsi+0x200], 0xafc32fe9; jmp qword ptr [rsi+0x66];
0xffffffff810b7094: pop rsp; cmp dword ptr [rsi+8], 0xffffffe8; xor [rbx-0x3fceff93], bh; ret;
0xffffffff8266de75: pop rsp; cmp eax, 0x3d57dfff; jmp far fword ptr [rdi-0x4000c2a9];
0xffffffff823eb371: pop rsp; cmp eax, 0xd4fb9c62; ret 0xfed6;
0xffffffff822f5446: pop rsp; cmp eax, 0xe132d2f0; mov ch, 0x5a; test eax, 0x4b60227; mov eax, esi; ret 0xfcf4;
0xffffffff8352f4d9: pop rsp; cmp eax, 0xffffff81; jmp qword ptr [rax-0x7ec2a3];
0xffffffff822b8f71: pop rsp; cmp ebx, esp; lea edi, [rsi+0x287b9c9c]; iretd;
0xffffffff83539ffa: pop rsp; cmp edi, 0xd0ffffff; ret;
0xffffffff823224df: pop rsp; cmp edx, [rdx]; add dl, [rbx+0x6d5bed64]; lodsb [rsi]; iretd;
0xffffffff82447e70: pop rsp; cmp edx, ecx; scasb [rdi]; or eax, 0xd21a8d3a; and bh, [rsi+0x2d]; ret;
0xffffffff834404f7: pop rsp; cmp esi, 0x44; mov eax, esi; pop rbx; pop r14; ret;
0xffffffff813582f0: pop rsp; cmp esi, ebx; jmp qword ptr [rsi+0x66];
0xffffffff82363f64: pop rsp; cmp esp, [rdi-0x72538c62]; ret 0x3067;
0xffffffff824a1dd1: pop rsp; cmp esp, [rsi-0xd]; cmp bl, dl; mov esp, 0x8320bc12; ret 0xc1dc;
0xffffffff82438a9e: pop rsp; cmp rdi, r13; ret 0xb0e3;
0xffffffff8265584d: pop rsp; cmpsb [rsi], [rdi]; jmp far fword ptr [rdi];
0xffffffff8165167e: pop rsp; cmpsb [rsi], [rdi]; jmp qword ptr [rsi+0x66];
0xffffffff817697e0: pop rsp; cmpsb [rsi], [rdi]; mov bh, 0xff; xor eax, eax; ret;
0xffffffff822a6e7d: pop rsp; cmpsb [rsi], [rdi]; pop rbx; fist dword ptr [rax-0x3febe00f], st; ret;
0xffffffff822e0b9e: pop rsp; cmpsb [rsi], [rdi]; ret;
0xffffffff82320b64: pop rsp; cmpsb [rsi], [rdi]; xor eax, 0x40bb33a5; iretq;
0xffffffff825d55ef: pop rsp; cmpsd [rsi], [rdi]; call rdi;
0xffffffff823fb75a: pop rsp; cmpsd [rsi], [rdi]; cwde; pop rsp; mov ebp, 0x405a239; ret;
0xffffffff82416ab8: pop rsp; cmpsd [rsi], [rdi]; scasb [rdi]; iretd;
0xffffffff822dbae9: pop rsp; cmpsd [rsi], [rdi]; xlat [rbx]; xchg ebx, eax; mov [rcx-0x25], bl; ret 0x81e3;
0xffffffff82411bde: pop rsp; data16 ret;
0xffffffff82411bdf: pop rsp; data16 ret;
0xffffffff8266c1b5: pop rsp; dec dword ptr [r15+0xfff455a]; pop rdx; jmp far fword ptr [r15+0x6fff4558];
0xffffffff81b62376: pop rsp; dec dword ptr [rcx+0x5e415be8]; pop rbp; ret;
0xffffffff826680ba: pop rsp; dec dword ptr [rdi+0x1fff5cc4]; ret 0xff5c;
0xffffffff8266830a: pop rsp; dec dword ptr [rdi+0x3fff5c1d]; sbb eax, 0x1cefff5c; pop rsp; jmp far fword ptr [rdi];
0xffffffff82668102: pop rsp; dec dword ptr [rdi+0x3fff5cb0]; mov al, 0x5c; jmp far fword ptr [rdi];
0xffffffff8266825e: pop rsp; dec dword ptr [rdi+0x52]; pop rsp; call far fword ptr [rdi+0x51];
0xffffffff82668212: pop rsp; dec dword ptr [rdi+0x6fff5c6d]; insd [rdi], dx; pop rsp; jmp far fword ptr [rdi+0x5fff5c6c];
0xffffffff826680fa: pop rsp; dec dword ptr [rdi-0x2000a34f]; mov al, 0x5c; dec dword ptr [rdi+0x3fff5cb0]; mov al, 0x5c; jmp far fword ptr [rdi];
0xffffffff82668176: pop rsp; dec dword ptr [rdi-0x68]; pop rsp; call far fword ptr [rdi];
0xffffffff826681ae: pop rsp; dec dword ptr [rdi-0x7a]; pop rsp; jmp far fword ptr [rdi-0xa37b];
0xffffffff82668272: pop rsp; dec dword ptr [rdi]; pop r12; jmp far fword ptr [rdi];
0xffffffff81e00eda: pop rsp; dec dword ptr gs:[0x15cc8]; leave; ret;
0xffffffff82668042: pop rsp; dec edi; out dx, eax; pop rsp; call far fword ptr [rdi+0xfff5cee];
0xffffffff8266826e: pop rsp; dec edi; pop r12; dec dword ptr [rdi]; pop r12; jmp far fword ptr [rdi];
0xffffffff8266823e: pop rsp; dec edi; pop rdi; pop rsp; jmp far fword ptr [rdi];
0xffffffff8267ba65: pop rsp; div byte ptr [rax+0x64cf9867]; lahf; xor [rip+0xf373430], esi; call far fword ptr [rdx+0x68675fef];
0xffffffff82679f45: pop rsp; div byte ptr [rax+0x64cf9867]; mov bl, 0x34; cmp [rdx], esi; xor [rcx], cl; jmp qword ptr [rbp+rbx*2-0x27];
0xffffffff8267a23d: pop rsp; div byte ptr [rax+0x64cf9867]; mov bl, 0x37; xor [rax], bh; xor [rcx], cl; jmp qword ptr [rbp+rbx*2-0x27];
0xffffffff82498b2f: pop rsp; div dword ptr [rcx]; fistp dword ptr [rdx], st; sbb [rsi+0x3a], esp; xchg [rbp+0x4fa1d55], bh; ret 0x52fe;
0xffffffff82319bef: pop rsp; enter 0x8628, 3; outsb dx, [rsi]; cld; ret 0x192a;
0xffffffff826c14da: pop rsp; enter 0xa50b, 0x63; ret;
0xffffffff824630b3: pop rsp; enter 0xb802, 0xc; push rax; ret 0xec51;
0xffffffff82510d66: pop rsp; fadd st, st(1); sub [rdi+5], eax; jmp qword ptr [rsi-0x7b];
0xffffffff82452913: pop rsp; fbld st, tbyte ptr [rax+0x2cf2e8de]; iretd;
0xffffffff82548f6b: pop rsp; fbld st, tbyte ptr [rax+0x4dc85deb]; ret;
0xffffffff822b6a9d: pop rsp; fbstp tbyte ptr [rbp+0x78072f96], st; ret;
0xffffffff8252ea41: pop rsp; fcmovb st, st(1); insd [rdi], dx; jmp far fword ptr [rcx-0x6603a6a3];
0xffffffff8245e427: pop rsp; fcmovu st, st(2); ret;
0xffffffff8347aa08: pop rsp; fdiv st(5), st; mov [rip-0x4e5aa2], rax; xor eax, eax; ret;
0xffffffff827e59a3: pop rsp; fdiv st(7), st; call far fword ptr [rbx];
0xffffffff8131b99a: pop rsp; fdivp st(7), st; mov dword ptr [rdx+0x18], 0xffffffea; ret;
0xffffffff8136e1f0: pop rsp; fdivr st(1), st; jmp qword ptr [rbp+0x48];
0xffffffff8230e1d5: pop rsp; fdivr st, qword ptr [rdx]; xor al, 0x34; std; stosd [rdi]; ret;
0xffffffff815018c0: pop rsp; fdivr st, st(5); jmp qword ptr [rbp+0x48];
0xffffffff8141591b: pop rsp; fdivr st, st(7); pop rbx; pop r14; ret;
0xffffffff8269ebf5: pop rsp; fdivrp; sysret;
0xffffffff823c84c1: pop rsp; ffree st(5); push rbp; test al, 0x51; mov dl, 0x17; jmp far fword ptr [rsi];
0xffffffff823c84c0: pop rsp; ffree st(5); push rbp; test al, 0x51; mov dl, 0x17; jmp far fword ptr [rsi];
0xffffffff824e0fbc: pop rsp; ffreep st(0); sub esp, [rcx-0x30997b51]; mov [0x8d5d374798022342], al; ret;
0xffffffff824abbb3: pop rsp; fiadd st, word ptr [rbx]; ret 0xb741;
0xffffffff8200b0b4: pop rsp; fiadd st, word ptr [rdi+rdi*8]; ret;
0xffffffff824d1ece: pop rsp; ficom st, dword ptr [rax+0x730c97fe]; jmp qword ptr [rbx+0x58c4d3f6];
0xffffffff8104f38a: pop rsp; fild st, dword ptr [rcx]; mov rdi, 0xffffffff82e05000; call qword ptr [0xffffffff82e33a08];
0xffffffff8250635f: pop rsp; fimul st, word ptr [rsi-0x3b5e765a]; xor [r11], r8b; fcom st, st(4); ret 0x3957;
0xffffffff82543b84: pop rsp; fisttp word ptr [rip+0x7172ba8], st; and esp, 0x66b85d8d; out 0x27, al; ret 0x9766;
0xffffffff82543b86: pop rsp; fisttp word ptr [rip+0x7172ba8], st; and esp, 0x66b85d8d; out 0x27, al; ret 0x9766;
0xffffffff8256f076: pop rsp; fmul st, st(0); adc dh, [rdx]; mov dh, 0xf1; fwait; ret;
0xffffffff826437b4: pop rsp; fprem; push qword ptr [rdx]; fprem; jmp far fword ptr [rdi];
0xffffffff82465fcb: pop rsp; frstor [rax]; iretd;
0xffffffff81661f50: pop rsp; fsin; jmp qword ptr [rsi+0x66];
0xffffffff8225b83c: pop rsp; fst dword ptr [rbx-0x18d8c36e], st; movsd [rdi], [rsi]; fist word ptr [rbx+0x46c72f08], st; mov r13b, 0x3a; iretd;
0xffffffff822cfb6d: pop rsp; fst dword ptr [rbx-3], st; sbb [rdx+r9*8-0x74], rax; add [rsp+0x2a0151da], bh; ret 0xfe6f;
0xffffffff82686d31: pop rsp; fstp tbyte ptr [rdx-0xdd89090], st; xlat [rbx]; hlt; out 0xdd, al; iretd;
0xffffffff8237c9a2: pop rsp; fsub st(3), st; sbb al, 0x7d; iretd;
0xffffffff811c96d0: pop rsp; fsub st(6), st; jmp qword ptr [rsi+0x66];
0xffffffff8242fd03: pop rsp; fsub st, st(7); int3; pushfq; sub edx, ebx; ret;
0xffffffff82254780: pop rsp; fsubr st, qword ptr [rip+0xda9eba6]; ret 0x4d6a;
0xffffffff82240b62: pop rsp; fwait; call qword ptr [rbx-0x19dd51d7];
0xffffffff823bcd6e: pop rsp; fwait; cdq; ret;
0xffffffff823cb707: pop rsp; fwait; iretd;
0xffffffff822e1441: pop rsp; fwait; ret 0xdfe2;
0xffffffff8348d7d0: pop rsp; fwait; ret 0xe8fd;
0xffffffff82299ed7: pop rsp; fwait; ret;
0xffffffff822aee8e: pop rsp; fwait; xchg esi, eax; test byte ptr [rbp+0x40], 0x6e; and eax, 0xdfe31edb; ret;
0xffffffff823d6b32: pop rsp; hlt; hlt; mov dl, 0xce; iretd;
0xffffffff823752f2: pop rsp; hlt; pop rax; std; iretd;
0xffffffff8247b54a: pop rsp; idiv dword ptr [rcx-7]; ret;
0xffffffff81c11d70: pop rsp; imul eax, [rax], 0; ret;
0xffffffff826a752a: pop rsp; imul ebp, 0x657a9572; syscall;
0xffffffff8235268c: pop rsp; imul ecx, ebp, 0x79; adc eax, 0xa7ad2beb; shufps xmm3, [rbp+0x61], 0x1f; ret;
0xffffffff824f3b2d: pop rsp; imul ecx, ebp, 0x9cff6cc9; push rax; ret;
0xffffffff824f3b2c: pop rsp; imul ecx, ebp, 0x9cff6cc9; push rax; ret;
0xffffffff822c906e: pop rsp; imul edx, [rsi-0x7d], 0xffffffd1; ret;
0xffffffff822ceef9: pop rsp; imul esi, [r9-0x2e], 0x90abd5c8; xchg ecx, eax; ret 0x4b53;
0xffffffff822ceef8: pop rsp; imul esi, [r9-0x2e], 0x90abd5c8; xchg ecx, eax; ret 0x4b53;
0xffffffff81758ed0: pop rsp; in al, 0x95; jmp qword ptr [rsi+0x66];
0xffffffff825cd85e: pop rsp; in al, 0x9f; ret 0x5dc2;
0xffffffff82485a4f: pop rsp; in al, 0xa0; mov al, [0x55500b4879d7889d]; iretd;
0xffffffff825ce05c: pop rsp; in al, 0xb8; pop rsp; ret 0x9f5d;
0xffffffff825ce45d: pop rsp; in al, 0xb8; ret 0x5dc2;
0xffffffff82374462: pop rsp; in al, 0xec; mov al, 0xf8; out 0x21, al; mov [rbp+rbp*8-0x31ded5c9], esi; ret 0x9c43;
0xffffffff811165e0: pop rsp; in al, 0xff; jmp qword ptr [rbp+0x48];
0xffffffff8359c771: pop rsp; in al, dx; jmp far fword ptr [rbx];
0xffffffff8242be2f: pop rsp; in al, dx; ret 0x2753;
0xffffffff81c1d6c0: pop rsp; in eax, 0x57; jmp qword ptr [rbp+0x48];
0xffffffff8240e99f: pop rsp; in eax, 0xe; xlat [rbx]; mov [rbx-3], edi; ret;
0xffffffff82648995: pop rsp; in eax, 0xff; iretd;
0xffffffff817144d9: pop rsp; in eax, dx; add al, [rax]; add rsp, 8; ret;
0xffffffff82646709: pop rsp; in eax, dx; call far fword ptr [rdi+0x1fffed5c];
0xffffffff8264670d: pop rsp; in eax, dx; call far fword ptr [rdi];
0xffffffff811e16b3: pop rsp; in eax, dx; call qword ptr [rax-0x6f6f6f70];
0xffffffff825cf2be: pop rsp; in eax, dx; iretd;
0xffffffff82646711: pop rsp; in eax, dx; jmp far fword ptr [rdi+0x6fffed5b];
0xffffffff825d6fff: pop rsp; in eax, dx; ret 0x299d;
0xffffffff82391e76: pop rsp; in eax, dx; ret 0x87b1;
0xffffffff813385d0: pop rsp; in eax, dx; xlat [rbx]; jmp qword ptr [rsi+0x66];
0xffffffff82811144: pop rsp; insb [rdi], dx; ret;
0xffffffff82517e21: pop rsp; insb [rdi], dx; stc; imul ebx, [rcx], 0xffffffc9; ret 0xfa8b;
0xffffffff826f6c51: pop rsp; insb es:[rdi], dx; jmp rax;
0xffffffff82002384: pop rsp; insd [rdi], dx; add eax, 0x289f7ff; push rbp; mov [rdx], eax; call qword ptr [rax+0x6d];
0xffffffff819e16cc: pop rsp; insd [rdi], dx; call qword ptr [rax+0x41ffabe8];
0xffffffff82455bf4: pop rsp; insd [rdi], dx; iretd;
0xffffffff82284153: pop rsp; insd [rdi], dx; xchg ebx, eax; add r10b, [rax-0x3f]; iretd;
0xffffffff824d5326: pop rsp; int 0x45; iretd;
0xffffffff815843a0: pop rsp; int 0xa7; add [rdi], cl; scasd [rdi]; ret;
0xffffffff813fa5d0: pop rsp; int 0xcb; jmp qword ptr [rsi+0x66];
0xffffffff82317d5d: pop rsp; int1; and ch, dl; call qword ptr [rbp-0x231696a];
0xffffffff824b5a55: pop rsp; int1; cmp cl, [rdi-0x3efa1ec4]; ret;
0xffffffff82346547: pop rsp; int1; imul eax, 0xffffffe0; mov ecx, 0x40e68513; ret;
0xffffffff82804334: pop rsp; int1; jmp far fword ptr [r15+0x3f3];
0xffffffff811a23d0: pop rsp; int1; jmp qword ptr [rsi+0x66];
0xffffffff8223790e: pop rsp; int1; mov eax, [0xe6c7ecf8697c0726]; pop rbx; ret;
0xffffffff824238ea: pop rsp; int3; ret 0x46c0;
0xffffffff83447f67: pop rsp; int3; std; xor eax, eax; ret;
0xffffffff82514560: pop rsp; iretd;
0xffffffff8239fb52: pop rsp; iretd;
0xffffffff823a945a: pop rsp; iretd;
0xffffffff819c36cd: pop rsp; iretd;
0xffffffff8239fb51: pop rsp; iretd;
0xffffffff811766b9: pop rsp; iretd;
0xffffffff81177728: pop rsp; iretq;
0xffffffff8266abe5: pop rsp; jmp far fword ptr [r15];
0xffffffff8255f248: pop rsp; jmp far fword ptr [rbp+0x1e];
0xffffffff8266832a: pop rsp; jmp far fword ptr [rdi+0x16];
0xffffffff8266831e: pop rsp; jmp far fword ptr [rdi+0x1b];
0xffffffff82668076: pop rsp; jmp far fword ptr [rdi+0x2fff5cdd];
0xffffffff82668126: pop rsp; jmp far fword ptr [rdi+0x3fff5ca9];
0xffffffff8266824e: pop rsp; jmp far fword ptr [rdi+0x5e];
0xffffffff82668352: pop rsp; jmp far fword ptr [rdi+0x5fff5c06];
0xffffffff8266821a: pop rsp; jmp far fword ptr [rdi+0x5fff5c6c];
0xffffffff826680e2: pop rsp; jmp far fword ptr [rdi+0x5fff5cbc];
0xffffffff82668216: pop rsp; jmp far fword ptr [rdi+0x6d];
0xffffffff82668202: pop rsp; jmp far fword ptr [rdi+0x75];
0xffffffff826682ea: pop rsp; jmp far fword ptr [rdi+0x7fff5c27];
0xffffffff82668346: pop rsp; jmp far fword ptr [rdi+0xc];
0xffffffff8266835e: pop rsp; jmp far fword ptr [rdi+3];
0xffffffff82668366: pop rsp; jmp far fword ptr [rdi-0x1000a3ff];
0xffffffff82668072: pop rsp; jmp far fword ptr [rdi-0x22];
0xffffffff826680ce: pop rsp; jmp far fword ptr [rdi-0x40];
0xffffffff82668112: pop rsp; jmp far fword ptr [rdi-0x52];
0xffffffff8266811e: pop rsp; jmp far fword ptr [rdi-0x55];
0xffffffff8266812e: pop rsp; jmp far fword ptr [rdi-0x5c];
0xffffffff82668266: pop rsp; jmp far fword ptr [rdi-0x6000a3b0];
0xffffffff82668156: pop rsp; jmp far fword ptr [rdi-0x7000a361];
0xffffffff8266818e: pop rsp; jmp far fword ptr [rdi-0x72];
0xffffffff82668192: pop rsp; jmp far fword ptr [rdi-0x75];
0xffffffff826681b2: pop rsp; jmp far fword ptr [rdi-0xa37b];
0xffffffff8266807a: pop rsp; jmp far fword ptr [rdi];
0xffffffff8248081d: pop rsp; jmp far fword ptr [rsi];
0xffffffff8227aff3: pop rsp; jmp far fword ptr gs:[rdi+7];
0xffffffff81bc16fe: pop rsp; jmp qword ptr [r14+0x66];
0xffffffff823cd30c: pop rsp; jmp qword ptr [r15+0x69];
0xffffffff822a87fc: pop rsp; jmp qword ptr [rax-0x2bbfd25c];
0xffffffff8281586d: pop rsp; jmp qword ptr [rbp+rdx*8+2];
0xffffffff8226015a: pop rsp; jmp qword ptr [rdx];
0xffffffff81aea124: pop rsp; jmp qword ptr [rsi+0x2e];
0xffffffff81ae7721: pop rsp; jmp qword ptr [rsi+0x66];
0xffffffff813561e2: pop rsp; jmp qword ptr [rsi+0x66];
0xffffffff8146e357: pop rsp; jmp qword ptr [rsi+0xf];
0xffffffff81af0b97: pop rsp; jmp qword ptr [rsi+0xf];
0xffffffff82572181: pop rsp; jmp qword ptr [rsi-0x281434b8];
0xffffffff81ae7e4c: pop rsp; jmp qword ptr [rsi-0x70];
0xffffffff8243aef0: pop rsp; jmp qword ptr [rsi];
0xffffffff824c7dac: pop rsp; jmp rax;
0xffffffff82563604: pop rsp; jmp rsp;
0xffffffff823c453f: pop rsp; lahf; add al, 0x80; popfq; or [rcx+rdx*2], ah; ret 0x872e;
0xffffffff826573ad: pop rsp; lahf; jmp far fword ptr [rdi-0x60a4];
0xffffffff8225a069: pop rsp; lahf; mov al, [0xd78c1bec52f07660]; outsb dx, [rsi]; call qword ptr [rdi];
0xffffffff822dd01f: pop rsp; lahf; outsd dx, [rsi]; fcomi st, st(0); ret;
0xffffffff82345c4c: pop rsp; lea ax, [rdi+0x1c]; fdivr st(6), st; iretd;
0xffffffff8248e619: pop rsp; leave; add [rax], esp; int 0xb0; ret;
0xffffffff8264f019: pop rsp; leave; call far fword ptr [rdi+0x7fffc95b];
0xffffffff8160e55e: pop rsp; lodsb [rsi]; jmp qword ptr [rsi+0x66];
0xffffffff825dac80: pop rsp; lodsb [rsi]; or eax, esi; adc edi, ebx; movsxd edx, edi; ret 0xdb02;
0xffffffff8225f6d8: pop rsp; lodsb [rsi]; sbb [rsp+rbp*8+0x79e4c02e], ah; in eax, dx; iretd;
0xffffffff822abb41: pop rsp; lodsd [rsi]; iretd;
0xffffffff8222cf8b: pop rsp; lodsd [rsi]; pop rbx; mov esi, 0x1346e2a6; int 0x64; iretd;
0xffffffff825d1787: pop rsp; lodsd [rsi]; stc; sbb dh, [rdx+0x74]; ret;
0xffffffff822eff9c: pop rsp; mov [0x14c8f5308a0f1988], eax; ret 0x4b8a;
0xffffffff8268efbc: pop rsp; mov [0x15c61f011540916], eax; scasb [rdi]; sbb eax, 0xda540665; mov [0xfe6b01740aee61f0], eax; iretd;
0xffffffff825d4e65: pop rsp; mov [0x1f0cc11ce02c833c], al; out dx, eax; call far fword ptr [rbp-0x31];
0xffffffff825d4e64: pop rsp; mov [0x1f0cc11ce02c833c], al; out dx, eax; call far fword ptr [rbp-0x31];
0xffffffff8250b111: pop rsp; mov [0x4b9ba04d681da855], al; test [rdi+0x21], ch; cdq; hlt; ret;
0xffffffff822dbe94: pop rsp; mov [0x579d5ec8217bbc05], eax; ret;
0xffffffff822f14dd: pop rsp; mov [0x5dc18f50a7e99f14], eax; imul edx; call rsp;
0xffffffff822f14de: pop rsp; mov [0x5dc18f50a7e99f14], eax; imul edx; call rsp;
0xffffffff825431ce: pop rsp; mov [0x7ef1fd363c0a16c4], al; test eax, 0xc9ee022; sub dl, [rsi-0x4d]; iretd;
0xffffffff823ebfe8: pop rsp; mov [0x913aa19dd1e0047f], eax; iretd;
0xffffffff82656719: pop rsp; mov [0xa258bfffa2597fff], al; jmp far fword ptr [rdi+0x58];
0xffffffff826562bd: pop rsp; mov [0xa35b8fffa35bcfff], eax; call far fword ptr [rdi+0x5b];
0xffffffff826562b9: pop rsp; mov [0xa35bcfffa35c0fff], eax; dec dword ptr [rdi+0x5fffa35b]; pop rbx; mov [0xa356cfffa359dfff], eax; call far fword ptr [rdi+0x7fffa356];
0xffffffff8239bc9d: pop rsp; mov [0xa42c3b364ece80ed], al; ret 0x2660;
0xffffffff8239d5c9: pop rsp; mov [0xcd885e055f338773], eax; iretd;
0xffffffff82299c09: pop rsp; mov [0xdc98b38f6d87281], al; ret 0xf470;
0xffffffff814d86c9: pop rsp; mov [rbx+0x38], eax; pop rbx; pop r14; pop r15; ret;
0xffffffff81502d79: pop rsp; mov [rbx+0x64], eax; mov qword ptr [rbx+0x50], 0; pop rbx; pop r14; ret;
0xffffffff8255a208: pop rsp; mov [rcx-9], eax; ret 0xc8f0;
0xffffffff8231f6eb: pop rsp; mov ah, 0x22; ret 0x9a7c;
0xffffffff81354570: pop rsp; mov ah, 0x92; add [rcx+0x5e415be8], cl; pop r15; pop rbp; ret;
0xffffffff81103448: pop rsp; mov al, 0x4c; add cl, [rcx+0x63]; iretd;
0xffffffff8359c734: pop rsp; mov al, 0xe9; call qword ptr [rbx+0x15ffe9e7];
0xffffffff82546eb8: pop rsp; mov al, [0x22f6096f783c063]; in eax, dx; fcmove st, st(5); ret 0x926e;
0xffffffff81849a6c: pop rsp; mov al, [0x87703f983488272]; mov rax, [rcx*8-0x7d9f7b68]; ret;
0xffffffff82483a5b: pop rsp; mov bh, 0x20; xor eax, 0x3b25f6c8; mov eax, [0xf469a9b471e6d3cd]; ret;
0xffffffff8234fba5: pop rsp; mov bh, 0x8c; out dx, eax; ret 0x72a1;
0xffffffff815ebbd0: pop rsp; mov bh, 0xac; jmp qword ptr [rsi+0x66];
0xffffffff815bbbd0: pop rsp; mov bh, 0xaf; jmp qword ptr [rsi+0x66];
0xffffffff8200d7b4: pop rsp; mov bh, 4; dec dword ptr [rip-0x66003915]; push rbp; ret;
0xffffffff81146e88: pop rsp; mov bl, 0x4c; add cl, [rax-0x77]; add eax, 0x22b42cd; ret;
0xffffffff822837a2: pop rsp; mov bl, 0x68; xchg edi, eax; pop rbx; movsd [rdi], [rsi]; iretd;
0xffffffff8242f2c6: pop rsp; mov bl, 0x8f; out dx, eax; mov bl, 0x15; iretd;
0xffffffff823532bc: pop rsp; mov bl, 0xa0; popfq; mov edx, 0x94f2f2f0; cld; ret 0x6e3d;
0xffffffff8299d4a0: pop rsp; mov bl, 0xd; add [rax], al; add [rax], al; or al, 0x47; iretd;
0xffffffff82365796: pop rsp; mov bl, [rsi-0x190cfefc]; in al, 0xb6; or [rbp-0x5dc05c1f], dl; ret 0xc59a;
0xffffffff826e3eef: pop rsp; mov bx, 0xd967; fld st, tbyte ptr [rsp+rbp*2+8]; ret 0x10d9;
0xffffffff815c4d50: pop rsp; mov ch, 0xfe; jmp qword ptr [rsi+0x66];
0xffffffff8200db14: pop rsp; mov ch, 4; call far fword ptr [rcx-6];
0xffffffff8248adc7: pop rsp; mov cl, 0x39; sub eax, 0x89ea2950; cdqe; ret;
0xffffffff8228ee81: pop rsp; mov cl, 0x60; cmp eax, 0x23001f0d; ret 0x212b;
0xffffffff8241a04c: pop rsp; mov cl, 0x8f; xchg edx, eax; ret;
0xffffffff823fbf3b: pop rsp; mov dh, 0x5f; mov dl, 3; pop rbx; ret;
0xffffffff8241672a: pop rsp; mov dh, 0x61; jmp far fword ptr [rbx+rdx*4+0x65];
0xffffffff8177e3a0: pop rsp; mov dh, 0x98; jmp qword ptr [rbp+0x48];
0xffffffff822cec9b: pop rsp; mov dh, dl; ret 0x81fd;
0xffffffff8247917c: pop rsp; mov dl, 0xb6; ret;
0xffffffff8227c3aa: pop rsp; mov dl, 0xcd; ret 0x6c3;
0xffffffff824c005e: pop rsp; mov dl, 0xfa; insd [rdi], dx; clc; adc edx, [rdi]; ret 0xe561;
0xffffffff826534a1: pop rsp; mov dl, 0xff; fist word ptr [rdi-0x4e], st; call far fword ptr [rdi-0x30004da9];
0xffffffff8242881a: pop rsp; mov dl, 2; add al, 0x38; stc; mov al, [0x3f8bd8b2c628901f]; iretd;
0xffffffff8234b70d: pop rsp; mov dl, [rdi]; call qword ptr [rsi-0x1d06f328];
0xffffffff8249899d: pop rsp; mov dl, bl; ret 0xe8c5;
0xffffffff824ccf0e: pop rsp; mov ds, si; fxtract; ret;
0xffffffff829a12e0: pop rsp; mov dword ptr [rax+rax], 0xbfb9; scasd [rdi]; ret 8;
0xffffffff8299f01c: pop rsp; mov dword ptr [rax+rax], 0xbfb9; xchg esi, eax; sub [rax], eax; add [rcx-0x54fffff1], dl; ret;
0xffffffff8245bd7f: pop rsp; mov eax, 0x283183dc; mov bh, 0x90; ret 0x5534;
0xffffffff82571035: pop rsp; mov eax, 0x68d5df66; mov eax, gs:[0xba6cd9d8a6740731]; iretd;
0xffffffff834a6ad3: pop rsp; mov eax, 0xcd05f6fd; cwde; scasb [rdi]; call qword ptr [rax];
0xffffffff82486c99: pop rsp; mov eax, [0x4044b0cf4079114d]; sub bl, [rbx+rsi+7]; add [rbx], ah; call qword ptr [rsi-0x4f0950af];
0xffffffff8234ed62: pop rsp; mov eax, [0x5b4b3871ea66c8e7]; ret;
0xffffffff82254460: pop rsp; mov eax, [0x9917cd06a82c5d73]; ret;
0xffffffff8223c4a9: pop rsp; mov eax, [0xa9b88d1134115514]; fisttp word ptr [rbx+0x56783246], st; iretd;
0xffffffff81a405a9: pop rsp; mov eax, edx; lea rax, [rdi+rax*8]; add rax, 0xad0; ret;
0xffffffff818da061: pop rsp; mov eax, r14d; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff823fb75d: pop rsp; mov ebp, 0x405a239; ret;
0xffffffff818ddc90: pop rsp; mov ebp, 0x8548ff9a; ror byte ptr [rdi], 0x84; imul eax, [rcx], 0; add [rax-0x77], cl; ret;
0xffffffff824679b8: pop rsp; mov ebp, 0x9843c639; cdqe; ret 0x6397;
0xffffffff8250a909: pop rsp; mov ebp, 0xb4a5eeff; iretd;
0xffffffff83565ba1: pop rsp; mov ebp, 0xffffff81; jmp qword ptr [rsi-0x7cb612];
0xffffffff83565b99: pop rsp; mov ebp, 0xffffff81; push qword ptr [rax+0x5c]; mov ebp, 0xffffff81; jmp qword ptr [rsi-0x7cb612];
0xffffffff8251a9eb: pop rsp; mov ebp, [rbx+0x3cd5dc83]; call far fword ptr [rax+rdx*2-0x46a7c6f];
0xffffffff82566b5e: pop rsp; mov ebx, [rcx+2]; push rbx; ret;
0xffffffff824b1826: pop rsp; mov ecx, 0x1a2bcec9; insb [rdi], dx; call qword ptr [rdx+0x76];
0xffffffff823869a5: pop rsp; mov ecx, 0x85213d4e; ret 0xc2fb;
0xffffffff822cd205: pop rsp; mov ecx, 0x8b0a3dfe; iretd;
0xffffffff822ad7a4: pop rsp; mov ecx, 0x9624e9; mov r11d, 0xac8314bf; ret;
0xffffffff824fc1d6: pop rsp; mov ecx, 0xf711f91b; sysexitq;
0xffffffff822b546d: pop rsp; mov ecx, [rsi+0x33]; sbb [rdi], edi; popfq; cmp [rax-0x1b], ecx; ret;
0xffffffff82001ff0: pop rsp; mov edi, 0x704cff01; add eax, 0x1bf58ff; call far fword ptr [rax-0x41];
0xffffffff8225745d: pop rsp; mov edi, 0xbc6c721f; ret;
0xffffffff82650a6d: pop rsp; mov edi, 0xbf5aafff; call far fword ptr [rdi+0x5a];
0xffffffff82361fdf: pop rsp; mov edi, 0xd52d7022; push rcx; ret 0x58a8;
0xffffffff82670b91: pop rsp; mov edx, 0xba5c06fd; std; ret 0xba5b;
0xffffffff8223f7eb: pop rsp; mov edx, 0xbb0aee41; ret;
0xffffffff8236a529: pop rsp; mov edx, 0xd157df3a; shl esi, 1; iretd;
0xffffffff8299e0cc: pop rsp; mov edx, 0xd; add [rsp+rdx*8], cl; iretd;
0xffffffff824f187c: pop rsp; mov esi, 0x95cd3e03; push rbp; lodsb [rsi]; ret 0xa35e;
0xffffffff824dd6e5: pop rsp; mov esi, es; ret 0xeafe;
0xffffffff82697eee: pop rsp; mov esp, 0x139f6cb8; call rbx;
0xffffffff824c6cdd: pop rsp; mov esp, 0x1bad27e5; lahf; std; ret;
0xffffffff82267894: pop rsp; mov esp, 0x441856a7; outsd dx, [rsi]; int3; shl dword ptr [ebx+0x52], 1; iretd;
0xffffffff8256e212: pop rsp; mov esp, 0x83a354d3; mov [rax+0x37], ebp; ret;
0xffffffff823d17f5: pop rsp; mov esp, 0xaa11c815; and [rax+0x72eea527], ecx; test al, 0xa7; sub rdi, r9; ret 0xaebd;
0xffffffff835a8858: pop rsp; mov esp, 0xbc466efd; std; iretd;
0xffffffff8245afe4: pop rsp; mov esp, 0xd6f6f6f5; iretd;
0xffffffff822f7bc0: pop rsp; mov esp, 0xfeee64d8; xor cl, [rdx-0x5f17aa59]; ret 0x5fa4;
0xffffffff823e8fee: pop rsp; mov gs, [rsi+0x36]; sbb eax, 0xf69c24a; ret 0x1e56;
0xffffffff811f4e7f: pop rsp; mov rax, 0xffffffff8257be80; ret;
0xffffffff81061bbb: pop rsp; mov rsp, rbp; pop rbp; ret;
0xffffffff822c18a9: pop rsp; movsb [rdi], [rsi]; and edi, gs:[rip+0x775dac80]; ret;
0xffffffff8249e1ea: pop rsp; movsb [rdi], [rsi]; cmp dh, [rsi+rbp*4]; iretd;
0xffffffff82655f65: pop rsp; movsb [rdi], [rsi]; dec dword ptr [rdi]; pop rsp; movsb [rdi], [rsi]; jmp far fword ptr [rdi];
0xffffffff82655f69: pop rsp; movsb [rdi], [rsi]; jmp far fword ptr [rdi];
0xffffffff822a745d: pop rsp; movsb [rdi], [rsi]; ret;
0xffffffff823e83da: pop rsp; movsd [rdi], [rsi]; add esp, edi; movsb [rdi], [rsi]; iretd;
0xffffffff8235edee: pop rsp; movsd [rdi], [rsi]; lahf; mov ch, 0xd1; push rdx; int 0x80;
0xffffffff822b1605: pop rsp; movsd [rdi], [rsi]; ret 0xadb8;
0xffffffff822ce030: pop rsp; movsd [rdi], [rsi]; ret;
0xffffffff824e3fcd: pop rsp; movsd [rdi], [rsi]; test ebp, esp; ret;
0xffffffff82482c23: pop rsp; movsxd eax, [rcx]; sub al, 0xd4; iretd;
0xffffffff82694db3: pop rsp; movsxd eax, [rsi]; iretd;
0xffffffff8251ef68: pop rsp; movsxd edi, [rdi+0x498e5db5]; ret 0x6c3d;
0xffffffff823ce005: pop rsp; movsxd edi, edx; push rbx; ret 0x697c;
0xffffffff82008d4c: pop rsp; movsxd r15, edi; rol byte ptr [rcx], 5; call far fword ptr [rbp+9];
0xffffffff81ad928d: pop rsp; movzx eax, al; pop rbx; ret;
0xffffffff8228b309: pop rsp; mul byte ptr [rip-0x1f183d8f]; jmp rcx;
0xffffffff823756f4: pop rsp; neg byte ptr [rbx]; cmp dl, bl; push rbp; ret 0xc001;
0xffffffff8239b124: pop rsp; neg dword ptr [rbp-0x4e]; push rax; ret;
0xffffffff8246b2bd: pop rsp; nop; cmp bl, ah; ret;
0xffffffff8265b218: pop rsp; nop; jmp far fword ptr [rdi];
0xffffffff82359798: pop rsp; nop; ret;
0xffffffff82263d50: pop rsp; nop; sti; popfq; ret 0x348e;
0xffffffff822498d6: pop rsp; nop; test dword ptr [rbx-0x2d10a976], 0xd4b66f4e; or ebx, ebp; ret;
0xffffffff823e89c0: pop rsp; or [rbx-0x11], edi; out 0x22, al; out dx, al; ret 0x936c;
0xffffffff82489dff: pop rsp; or [rbx], dh; mov ch, 0x68; or al, 0x87; ret;
0xffffffff81a78e9e: pop rsp; or [rcx], al; mov eax, 0xffffffff; pop rbx; pop r14; ret;
0xffffffff820086b4: pop rsp; or [rip-0x38f35601], al; call qword ptr [rsi+0x50ff62b1];
0xffffffff823a0c83: pop rsp; or [rip-0x7db6533b], esp; xor eax, 0xa415ac8f; call rbp;
0xffffffff824ca2c5: pop rsp; or ah, ah; iretd;
0xffffffff81c80cf0: pop rsp; or al, 0; add [rax-0x77], cl; ret;
0xffffffff82ab54d4: pop rsp; or al, 0; add [rax], al; add [rax], al; add [rbx], ch; ret 0;
0xffffffff823dcab3: pop rsp; or al, 0x48; iretd;
0xffffffff8255b78e: pop rsp; or al, 0x7c; ret;
0xffffffff82008f64: pop rsp; or bh, al; jmp qword ptr [rsi-0x5b009a31];
0xffffffff814a0f00: pop rsp; or byte ptr [rcx+rbp*8], 0x61; add al, [rax]; add [rcx], dh; rol byte ptr [rcx-0x7d], cl; ret 0x4501;
0xffffffff8344a7a1: pop rsp; or dword ptr [rax-0x39], 5; ret 0x1828;
0xffffffff8241a67b: pop rsp; or dword ptr [rcx+0x57ac8be6], 0xffffffff; sub [rbx+0x45], bl; mov ebp, 0x8415c2a3; iretd;
0xffffffff81050794: pop rsp; or dword ptr [rcx+rcx*4-9], 0xffffffe8; xor ch, [rax]; ret;
0xffffffff812b457b: pop rsp; or eax, 0x200000; mov [rsi+0x5c], eax; xor eax, eax; ret;
0xffffffff825129d6: pop rsp; or eax, 0x40527b9e; ret;
0xffffffff816d9b49: pop rsp; or eax, 0x6083f600; shl dword ptr [rbx-0x7e], 1; add cl, [rbp-0x49f01fbd]; ror byte ptr [rdi], 0x44; ret;
0xffffffff82293ad2: pop rsp; or eax, 0x6a7d1f41; inc byte ptr [rax-0x17]; iretd;
0xffffffff82245ea9: pop rsp; or eax, 0x965f6a4c; mov cl, 0xf; sub esi, ebp; xchg [rdi], esp; iretd;
0xffffffff81106582: pop rsp; or eax, [rax]; add [rbp+0x31], al; rol byte ptr [rbp-0x7b], cl; rol byte ptr [rcx+0xf], 0x95; ret 0x8948;
0xffffffff820083b4: pop rsp; or eax, [rip-0x38f1f601]; jmp far fword ptr [rbp+rdx*2+0x62];
0xffffffff824203d9: pop rsp; or ebp, [rdx+5]; in al, 0x17; shl dword ptr [rdi+rdx-0x30], 1; ret 0x1bc9;
0xffffffff82670d64: pop rsp; or edi, [rdx-0x45f4e303]; std; ret 0xba0a;
0xffffffff8238921b: pop rsp; or esi, 0xdc1baea3; jmp qword ptr [rax-0x65369f95];
0xffffffff82466045: pop rsp; or esp, [rdx-0x48]; add dword ptr [rcx-1], 0x4c; ret;
0xffffffff824c74ac: pop rsp; or sp, [rdx]; and ch, al; pushfq; xor bh, [rsp+rax+0x745f6b39]; ret;
0xffffffff824b5e99: pop rsp; out 0x49, al; int 0xea; sar dword ptr [rip-0x4708d5a2], cl; ret;
0xffffffff826b0ff5: pop rsp; out 0x66, al; jmp far fword ptr [rdi+0x2f1174f6];
0xffffffff82478cc1: pop rsp; out 0xe3, eax; leave; add eax, 0x7863a018; ret;
0xffffffff816ca517: pop rsp; out dx, al; adc dh, dh; ret;
0xffffffff82002c2c: pop rsp; out dx, al; add edi, edi; add eax, 0x3ee96ff; call qword ptr [rsi+rbp*8+0x64a4ff03];
0xffffffff824a21f3: pop rsp; out dx, al; iretd;
0xffffffff8228371c: pop rsp; out dx, al; jmp far fword ptr [rdi+0x48];
0xffffffff824f1126: pop rsp; out dx, al; ret 0xe160;
0xffffffff822729be: pop rsp; out dx, al; sbb [rbx], ebx; ret 0x87a4;
0xffffffff83463339: pop rsp; out dx, al; std; ret;
0xffffffff8346337e: pop rsp; out dx, al; std; xor eax, eax; ret;
0xffffffff826941c9: pop rsp; out dx, al; sysret;
0xffffffff822817ac: pop rsp; out dx, al; xor esp, [rcx]; shr bh, cl; ret 0xca22;
0xffffffff82351123: pop rsp; out dx, eax; pop rbx; ret;
0xffffffff822bca0d: pop rsp; out dx, eax; push r13; pop rsi; ret;
0xffffffff823c0175: pop rsp; outsb dx, [rsi]; mov edi, 0xa6028b4f; xchg r8, rax; jmp far fword ptr [0xfffffffff2cdddaf];
0xffffffff8252c4bb: pop rsp; outsb dx, [rsi]; or al, 0x7e; iretd;
0xffffffff824f8dab: pop rsp; outsb dx, [rsi]; pop rsi; sti; ret;
0xffffffff819a3c30: pop rsp; outsb dx, [rsi]; sub al, 0; ret;
0xffffffff820020e4: pop rsp; outsd dx, [rsi]; add eax, 0x1bf28ff; jmp far fword ptr [rbx];
0xffffffff81a3f0d7: pop rsp; outsd dx, [rsi]; dec dword ptr [rax-0x77]; ret;
0xffffffff819c1662: pop rsp; outsd dx, [rsi]; jmp qword ptr [rsi+0x66];
0xffffffff8232da4c: pop rsp; outsd dx, [rsi]; mov [rdi+0x688b3ecb], edi; ret 0x614c;
0xffffffff82524cd9: pop rsp; outsd dx, [rsi]; sub [rsi-0x26], esi; ret;
0xffffffff81b2a550: pop rsp; pop bx; jmp qword ptr [rsi+0x66];
0xffffffff81000731: pop rsp; pop r13; pop r14; pop r15; pop rbp; ret;
0xffffffff81004011: pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff819e27a3: pop rsp; pop r13; pop r14; pop r15; xor eax, eax; ret;
0xffffffff817d29c1: pop rsp; pop r13; pop r15; pop rbp; ret;
0xffffffff81000aa0: pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff810004cc: pop rsp; pop r14; pop r15; ret;
0xffffffff81185af9: pop rsp; pop r14; pop r15; xor eax, eax; ret;
0xffffffff81061c4e: pop rsp; pop r15; ret;
0xffffffff8238c4ee: pop rsp; pop r9; or dword ptr [rbp+0x602c28c7], 0x5ad2a2d2; ret;
0xffffffff82003794: pop rsp; pop rax; add eax, 0x157556ff; call far fword ptr [rcx+0x50ff1575];
0xffffffff82257ea3: pop rsp; pop rax; iretd;
0xffffffff82272ad3: pop rsp; pop rax; sti; add [rdi+0x13e64112], bl; xor [rbx-0x1f], ah; ret;
0xffffffff820032e4: pop rsp; pop rbp; add eax, 0xacaf2ff; call qword ptr [rdi-0x2b];
0xffffffff82667f49: pop rsp; pop rbp; jmp far fword ptr [rdi+0x59];
0xffffffff825cdc5f: pop rsp; pop rbp; lahf; ret 0x6ec2;
0xffffffff8104b15d: pop rsp; pop rbp; pop rbx; ret;
0xffffffff8349a1b7: pop rsp; pop rbx; dec byte ptr [rcx-0x76f91415]; ret;
0xffffffff8349a1b6: pop rsp; pop rbx; dec byte ptr [rcx-0x76f91415]; ret;
0xffffffff810e7ffd: pop rsp; pop rbx; pop r14; pop r15; pop rbp; ret;
0xffffffff822340d3: pop rsp; pop rbx; push rbp; ret 0x548b;
0xffffffff816e3b0f: pop rsp; pop rbx; ret;
0xffffffff823c8a06: pop rsp; pop rbx; xor bh, dh; sub eax, 0xf44cc0ab; xor esi, [rax-0x46]; iretd;
0xffffffff811e10f8: pop rsp; pop rcx; in al, 0x7e; cdqe; ret;
0xffffffff8240bc96: pop rsp; pop rcx; sub eax, 0xd30c60c8; rol byte ptr [rax], 0xf2; mov ah, 0x6a; call qword ptr [rsi];
0xffffffff82667971: pop rsp; pop rdi; call far fword ptr [rdi+0x7fff5f5c];
0xffffffff81c20a90: pop rsp; pop rdi; pop rcx; push rsi; ret;
0xffffffff81745f63: pop rsp; pop rdi; pop rdi; pop rdi; ret;
0xffffffff823b0be0: pop rsp; pop rdi; test [rdx], ebx; std; ret 0xb4f6;
0xffffffff824fef60: pop rsp; pop rdx; cmp byte ptr [rcx+0x21], 0x70; ret 0x3ce;
0xffffffff822c40c5: pop rsp; pop rdx; div dword ptr [rdi]; ret 0x6f0d;
0xffffffff82373c2e: pop rsp; pop rdx; int3; mov ebp, 0x825c6bfa; ret 0xf049;
0xffffffff82386cb0: pop rsp; pop rdx; ret;
0xffffffff82667c71: pop rsp; pop rsi; call far fword ptr [rdi+0x56];
0xffffffff826680bc: pop rsp; pop rsp; call far fword ptr [rdi];
0xffffffff81af170c: pop rsp; pop rsp; call qword ptr [rax+0x30ff6be8];
0xffffffff825cd85d: pop rsp; pop rsp; in al, 0x9f; ret 0x5dc2;
0xffffffff825ce45b: pop rsp; pop rsp; in al, 0xb8; ret 0x5dc2;
0xffffffff823e89bf: pop rsp; pop rsp; or [rbx-0x11], edi; out 0x22, al; out dx, al; ret 0x936c;
0xffffffff825cdc5e: pop rsp; pop rsp; pop rbp; lahf; ret 0x6ec2;
0xffffffff82546260: pop rsp; pop rsp; ret 0xa99a;
0xffffffff82230915: pop rsp; pop rsp; ret;
0xffffffff834f0c98: pop rsp; pop si; pop di; pop bx; pop bp; data16 ret;
0xffffffff82291321: pop rsp; popfq; adc cl, [rax-0x4f]; ret 0xc0f8;
0xffffffff8142b9d2: pop rsp; popfq; add [rax-0x2729], bh; ret;
0xffffffff82464aaf: pop rsp; popfq; data16 ret;
0xffffffff826f9d71: pop rsp; popfq; sub al, 6; imul dword ptr [rdi+0x6f]; call far fword ptr [rbp+0x6ff70b2c];
0xffffffff8175b992: pop rsp; push 0; mov rax, [rdi+0x18]; and eax, 0x1f00; ret;
0xffffffff824c0d3b: pop rsp; push 0x4e4ee34d; cmpsd [rsi], [rdi]; mov ebx, 0xcfc58067; push rsp; ret 0xa3da;
0xffffffff8236022a: pop rsp; push 0x5f13dafa; ret;
0xffffffff826656d1: pop rsp; push 0x685bdfff; call far fword ptr [rdi+0x5b];
0xffffffff826656c9: pop rsp; push 0x685c9fff; dec dword ptr [rdi-0x200097a4]; pop rbx; push 0x685b5fff; jmp far fword ptr [rdi];
0xffffffff826656c5: pop rsp; push 0x685cbfff; call far fword ptr [rdi-0x700097a4];
0xffffffff81165ce0: pop rsp; push 0xffffffff89480055; ret;
0xffffffff8234f342: pop rsp; push 0xffffffff934f7585; iretd;
0xffffffff823fb27c: pop rsp; push 0xffffffffe194b6f2; xchg esi, eax; imul esi, esp, 0x5c; ret 0x3e0f;
0xffffffff822a306f: pop rsp; push 0xffffffffffffff80; iretd;
0xffffffff83540839: pop rsp; push 0xffffffffffffff81; inc dword ptr [rax]; pop rbp; push 0xffffffffffffff81; jmp qword ptr [rax];
0xffffffff82496960: pop rsp; push 0xffffffffffffff8f; fisttp dword ptr [r9-0xb5b7ad2], st; shl byte ptr [rbp-0x61], 1; ret;
0xffffffff8234dfb7: pop rsp; push 0xffffffffffffffbe; xor [rbx], dh; adc eax, 0x3b03d434; jmp qword ptr [rbx-0x2f46d8a3];
0xffffffff83468030: pop rsp; push 0xffffffffffffffd4; std; add rsp, 8; pop rbx; ret;
0xffffffff82664d65: pop rsp; push 0xffffffffffffffff; out dx, eax; pop rbx; push 0xffffffffffffffff; call far fword ptr [rdx+0x6a];
0xffffffff82230367: pop rsp; push r11; shr dword ptr [rsi-0x39d0fc6c], 0x77; sub edi, [rbx+0xab1fcee]; jmp rsp;
0xffffffff81c478c0: pop rsp; push r13; jmp qword ptr [rbp+0x48];
0xffffffff824f1ef3: pop rsp; push rax; add eax, 0x4a8aa643; call qword ptr [rbx];
0xffffffff8222c59d: pop rsp; push rax; in eax, 0xd; call qword ptr [rdi];
0xffffffff8266a3b1: pop rsp; push rax; jmp far fword ptr [rdi+0x7fff505c];
0xffffffff8224eb63: pop rsp; push rax; mov dl, 0x32; mov ebp, 0xe1f18f; mov ebx, 0x1695fdc2; ret;
0xffffffff824b55c3: pop rsp; push rax; sub eax, 0x5a3cf1fe; or edx, [rsi+0x3f2a84c0]; outsd dx, [rsi]; ret 0xc4aa;
0xffffffff82540f89: pop rsp; push rbp; leave; mov eax, 0xb96591aa; lodsd [rsi]; iretd;
0xffffffff825d8ca4: pop rsp; push rbp; ret 0x461;
0xffffffff824d3005: pop rsp; push rbp; ret;
0xffffffff82669acd: pop rsp; push rbx; jmp far fword ptr [rdi-0x7000aca6];
0xffffffff81b8163f: pop rsp; push rbx; jmp qword ptr [rsi+0x66];
0xffffffff8233144f: pop rsp; push rbx; mov bh, 0x29; sar dword ptr [rcx], 1; pop rcx; iretq;
0xffffffff82283025: pop rsp; push rbx; mov bl, 0x8d; iretd;
0xffffffff82248dd2: pop rsp; push rbx; mov edi, 0x710afdf4; sub byte ptr [rbp-0x4f], 0x72; ret;
0xffffffff824e2675: pop rsp; push rbx; ret 0x3c3d;
0xffffffff82003d64: pop rsp; push rcx; add eax, 0x750999ff; call qword ptr [rdi+0xff7509];
0xffffffff824be148: pop rsp; push rcx; cmp eax, 0x7b2c584f; ret 0xbf08;
0xffffffff823082dd: pop rsp; push rcx; pushfq; iretd;
0xffffffff81050313: pop rsp; push rdi; add cl, [rax+0x39]; ret;
0xffffffff824d1e9a: pop rsp; push rdi; and [rdi+0xea05a5b], ecx; ret 0x5a94;
0xffffffff81c25940: pop rsp; push rdi; call far fword ptr [rbx+0x41];
0xffffffff81b416a2: pop rsp; push rdi; jmp qword ptr [rsi+0x66];
0xffffffff824a3ff4: pop rsp; push rdi; mov bh, ch; iretd;
0xffffffff824b45f3: pop rsp; push rdi; ret;
0xffffffff82003d94: pop rsp; push rdx; add eax, 0x7d04d4ff; call rsp;
0xffffffff822bdc72: pop rsp; push rdx; mov dh, 0x4b; ret;
0xffffffff81719d2e: pop rsp; push rsi; add [rax-0x75], cl; cmp dword ptr [rax+5], 0; add [rax-0x7f], cl; ret;
0xffffffff8251a94e: pop rsp; push rsi; bnd ret 0x9f7;
0xffffffff823f09ed: pop rsp; push rsi; iretd;
0xffffffff824e534b: pop rsp; push rsi; sub al, 0xb5; xchg ebp, eax; iretd;
0xffffffff82003c14: pop rsp; push rsp; add eax, 0x6df114ff; call qword ptr [rdx];
0xffffffff823ba799: pop rsp; push rsp; mov dl, 0x55; ret;
0xffffffff8256a059: pop rsp; push rsp; out 0xb8, al; ret 0x8d5b;
0xffffffff816f16f1: pop rsp; pushfq; jmp qword ptr [rsi+0x66];
0xffffffff823de081: pop rsp; pushfq; push 0xffffffffffffff9a; movsb [rdi], [rsi]; ret 0xbd2b;
0xffffffff8236bd9f: pop rsp; pushfq; xchg ebp, eax; scasb [rdi]; imul edx, 0x166a6e3; iretd;
0xffffffff813b9790: pop rsp; rcr bh, cl; push rsi; ret;
0xffffffff8234ac6d: pop rsp; rcr byte ptr [rbx-0x58], 1; pushfq; ret 0xcdac;
0xffffffff816a5c29: pop rsp; ret 0;
0xffffffff8230f2c9: pop rsp; ret 0x10a0;
0xffffffff82237ae9: pop rsp; ret 0x156b;
0xffffffff8225f91b: pop rsp; ret 0x1619;
0xffffffff822414c0: pop rsp; ret 0x1886;
0xffffffff8244ca9f: pop rsp; ret 0x244d;
0xffffffff823dea87: pop rsp; ret 0x2fe7;
0xffffffff82446883: pop rsp; ret 0x374;
0xffffffff822a444e: pop rsp; ret 0x3d34;
0xffffffff823fb285: pop rsp; ret 0x3e0f;
0xffffffff824dc509: pop rsp; ret 0x3ec9;
0xffffffff8241be15: pop rsp; ret 0x4500;
0xffffffff8230b1e5: pop rsp; ret 0x4679;
0xffffffff8105e470: pop rsp; ret 0x4800;
0xffffffff81a53788: pop rsp; ret 0x4801;
0xffffffff81663d20: pop rsp; ret 0x48ff;
0xffffffff811eb354: pop rsp; ret 0x4c10;
0xffffffff82395f89: pop rsp; ret 0x4db0;
0xffffffff824aa3ce: pop rsp; ret 0x4e66;
0xffffffff8249a4f9: pop rsp; ret 0x562d;
0xffffffff8200d3b5: pop rsp; ret 0x58ff;
0xffffffff82230718: pop rsp; ret 0x5a29;
0xffffffff8251b075: pop rsp; ret 0x611b;
0xffffffff835a8eb9: pop rsp; ret 0x64fd;
0xffffffff825474d0: pop rsp; ret 0x69cb;
0xffffffff823265e9: pop rsp; ret 0x7332;
0xffffffff82420870: pop rsp; ret 0x77c3;
0xffffffff8247284e: pop rsp; ret 0x79e5;
0xffffffff824ce988: pop rsp; ret 0x7c1a;
0xffffffff822de3a7: pop rsp; ret 0x7d0c;
0xffffffff82349944: pop rsp; ret 0x8013;
0xffffffff8246254c: pop rsp; ret 0x84a8;
0xffffffff823a5226: pop rsp; ret 0x86a2;
0xffffffff822b03e8: pop rsp; ret 0x8e52;
0xffffffff8239d515: pop rsp; ret 0x8f8;
0xffffffff8235e877: pop rsp; ret 0x930f;
0xffffffff82359c31: pop rsp; ret 0x941c;
0xffffffff824a4286: pop rsp; ret 0x97b5;
0xffffffff823f2310: pop rsp; ret 0x9950;
0xffffffff825521c3: pop rsp; ret 0x9f16;
0xffffffff825ce05f: pop rsp; ret 0x9f5d;
0xffffffff823650cb: pop rsp; ret 0xa1ff;
0xffffffff8254e0b8: pop rsp; ret 0xa2bc;
0xffffffff824ff81f: pop rsp; ret 0xa553;
0xffffffff82546261: pop rsp; ret 0xa99a;
0xffffffff822fb260: pop rsp; ret 0xae5b;
0xffffffff8249a832: pop rsp; ret 0xb686;
0xffffffff82546905: pop rsp; ret 0xb88b;
0xffffffff822cad3a: pop rsp; ret 0xbd23;
0xffffffff8136f341: pop rsp; ret 0xbe01;
0xffffffff824e7f8e: pop rsp; ret 0xbef2;
0xffffffff82493dd1: pop rsp; ret 0xc22e;
0xffffffff823b6a3c: pop rsp; ret 0xc3e2;
0xffffffff8239558d: pop rsp; ret 0xc547;
0xffffffff81abfa18: pop rsp; ret 0xc710;
0xffffffff8229bd6d: pop rsp; ret 0xc7a;
0xffffffff823c0ff0: pop rsp; ret 0xc844;
0xffffffff824f7bc4: pop rsp; ret 0xca40;
0xffffffff822c6e4d: pop rsp; ret 0xcc00;
0xffffffff82290e30: pop rsp; ret 0xd03a;
0xffffffff8239e9d1: pop rsp; ret 0xd1f8;
0xffffffff82328ed1: pop rsp; ret 0xdeb6;
0xffffffff822741bb: pop rsp; ret 0xdeef;
0xffffffff82532014: pop rsp; ret 0xe40c;
0xffffffff822b8a17: pop rsp; ret 0xe458;
0xffffffff82379a79: pop rsp; ret 0xe575;
0xffffffff83491706: pop rsp; ret 0xe8fd;
0xffffffff83491707: pop rsp; ret 0xe8fd;
0xffffffff8233412c: pop rsp; ret 0xede7;
0xffffffff825009cd: pop rsp; ret 0xef3;
0xffffffff82506061: pop rsp; ret 0xf0e7;
0xffffffff8222b3d8: pop rsp; ret 0xf322;
0xffffffff824a5b79: pop rsp; ret 0xf325;
0xffffffff822a9ded: pop rsp; ret 0xf58e;
0xffffffff824fd26e: pop rsp; ret 0xf5dd;
0xffffffff8245571c: pop rsp; ret 0xf9f2;
0xffffffff81b7f1b1: pop rsp; ret 0xf;
0xffffffff822d73aa: pop rsp; ret 0xfc8e;
0xffffffff8233c6eb: pop rsp; ret 0xfcb4;
0xffffffff822dfcab: pop rsp; ret 0xfd2a;
0xffffffff8195d020: pop rsp; ret 0xffd1;
0xffffffff813467f0: pop rsp; ret 0xffd6;
0xffffffff8287599c: pop rsp; ret 1;
0xffffffff82804e30: pop rsp; ret 2;
0xffffffff8101b0d0: pop rsp; ret 9;
0xffffffff81064cfc: pop rsp; ret;
0xffffffff824f1b8f: pop rsp; rol byte ptr [rsi], 1; mov [0x24c4a60f4ff77e5], eax; ret;
0xffffffff813b9fd0: pop rsp; ror edi, cl; jmp qword ptr [rsi+0x66];
0xffffffff8200a6b5: pop rsp; sahf; call far fword ptr [rax-0x18];
0xffffffff826577d9: pop rsp; sahf; call far fword ptr [rdi+0x3fff9e5c];
0xffffffff8200a6a9: pop rsp; sahf; jmp qword ptr [rax+rbp*8+4];
0xffffffff824a8989: pop rsp; sahf; or dh, [rbp+0x18]; popfq; push rbx; ret 0xa3a9;
0xffffffff8359c9f0: pop rsp; sahf; out dx, eax; jmp far fword ptr [rcx-0x62];
0xffffffff824dfb11: pop rsp; sahf; sbb ebp, eax; call qword ptr [rsi];
0xffffffff813f3210: pop rsp; sar bh, 1; dec dword ptr [rax-0x77]; ret;
0xffffffff8264d719: pop rsp; sar bh, 1; iretd;
0xffffffff813de8c0: pop rsp; sar bh, cl; xor eax, eax; pop rbx; pop r14; ret;
0xffffffff825230ab: pop rsp; sar dword ptr [rcx-0x4f], cl; xchg ebp, eax; ret 0x92fc;
0xffffffff82429b5d: pop rsp; sar dword ptr gs:[rsi+rbx*8-0x4c], 0x4e; sbb [r8-0x500766d], edi; adc eax, 0xb94fe1d4; ret;
0xffffffff82a9dacd: pop rsp; sbb [rax], al; ret 0x1b;
0xffffffff822c9595: pop rsp; sbb [rdx+0x1fc3fa21], edi; mov ecx, 0xc8d7745c; outsd dx, [rsi]; iretd;
0xffffffff8247cc4b: pop rsp; sbb [rsi+rcx], ah; lodsd [rsi]; ret 0xbf45;
0xffffffff82800cf0: pop rsp; sbb al, [rdx]; add [rax], al; add [rax], al; add [rax], ch; ret;
0xffffffff820074b4: pop rsp; sbb al, [rip-0x38ea9a01]; push qword ptr [rbx+0x48]; pop rdi; call qword ptr [rax+0x1a];
0xffffffff8225c7ac: pop rsp; sbb bh, 0x9d; and ecx, 0xffffffd9; xchg esp, eax; cmpsb [rsi], [rdi]; ret;
0xffffffff813439a0: pop rsp; sbb cl, bh; dec dword ptr [rax-0x77]; ret;
0xffffffff824f82c8: pop rsp; sbb dword ptr [rcx+0x30db8774], 0x12bb7615; ret 0x32da;
0xffffffff8347b5d7: pop rsp; sbb eax, 0x5bd889fe; pop rbp; ret;
0xffffffff82356360: pop rsp; sbb eax, 0x922c19dc; mov ch, 0xd9; adc [rdx+0x18b15e70], ecx; adc [rsi-0x4892056e], bl; ret 0xc5a3;
0xffffffff826d36aa: pop rsp; sbb eax, 0xa970f3fe; or dl, [rbp+rbx*2-6]; movsxd esi, [rbx-0x3d]; sbb eax, 0xb646d97; call far fword ptr [rdi+0x5d];
0xffffffff8242d521: pop rsp; sbb eax, 0xac1f98; add [rsi], ch; iretd;
0xffffffff823dd79f: pop rsp; sbb eax, 0xc3906163; mov [0xf73ab94283aa7577], al; ret;
0xffffffff835238f9: pop rsp; sbb eax, 0xffffff81; jmp qword ptr [rax];
0xffffffff8241b422: pop rsp; sbb ebp, [rbp+0x5312b4ac]; iretd;
0xffffffff815416a0: pop rsp; sbb edi, edi; jmp qword ptr [rbp+0x48];
0xffffffff8233d1c7: pop rsp; sbb sil, spl; ret 0xf055;
0xffffffff81199d13: pop rsp; scasb [rdi]; add [rcx+0x5e415bd8], cl; ret;
0xffffffff824fdae8: pop rsp; scasb [rdi]; iretd;
0xffffffff8118d52a: pop rsp; scasd [rdi]; add [rbx+0x48901405], cl; add al, [rbx+0x58901c0]; or edx, [rax-0x3fcefdb8]; ret;
0xffffffff81189dc9: pop rsp; scasd [rdi]; add cl, ch; ret 0;
0xffffffff815c16ac: pop rsp; scasd [rdi]; call qword ptr [rax-0x7c003418];
0xffffffff811b61a0: pop rsp; scasd [rdi]; in al, 0; xor eax, [rbx+0x134]; pop rbx; ret;
0xffffffff824f6145: pop rsp; scasd [rdi]; iretd;
0xffffffff82551f3a: pop rsp; scasd [rdi]; push rbx; lahf; scasb [rdi]; ret 0x3f5c;
0xffffffff822ca074: pop rsp; scasd [rdi]; ret;
0xffffffff822b65cf: pop rsp; scasd [rdi]; xchg edi, eax; lahf; adc [rdx+0x39], bl; iretd;
0xffffffff824029d9: pop rsp; shl byte ptr [rbx-0x18], 1; cdq; or byte ptr [rbx], 0x41; xchg ebp, eax; ret 0x935b;
0xffffffff823fef91: pop rsp; shl byte ptr [rcx-0x6d], cl; call far fword ptr [r15];
0xffffffff8251e71b: pop rsp; shl ch, cl; iretd;
0xffffffff82446636: pop rsp; shl dword ptr [rdi+0x19], 0xf3; ret;
0xffffffff822dd5a9: pop rsp; shl dword ptr [rdx+0x4056edef], cl; out 0x59, al; ret 0x8def;
0xffffffff810efeeb: pop rsp; shr byte ptr [rax], 1; pop rbx; ret;
0xffffffff8245676f: pop rsp; shr byte ptr [rsi+rcx*4], 0x3d; call r12;
0xffffffff822b5af2: pop rsp; shr dword ptr [rbp-0x2b35cd70], 0x71; popfq; sbb ebp, [rbx-0x2a]; movsxd esp, [rdi+0x6dc7ae59]; call far fword ptr [rcx-0x7a];
0xffffffff8246a18d: pop rsp; shr dword ptr [rdx+8], cl; cmp al, 0x8c; cld; iretd;
0xffffffff81930fa0: pop rsp; shr eax, 3; and eax, 1; ret;
0xffffffff8233a82b: pop rsp; shr rcx, 0x30; sbb [rbx-0x5d], edx; ret;
0xffffffff813b79d0: pop rsp; stc; iretd;
0xffffffff824881bc: pop rsp; stc; ret;
0xffffffff826ebd02: pop rsp; std; cmp eax, 0x668e0cf9; hlt; jmp qword ptr [rdx+0x72];
0xffffffff82694c86: pop rsp; std; cmp eax, 0xc74d4b4; call far fword ptr [rdi-0x35];
0xffffffff81720222: pop rsp; std; dec dword ptr [rax-0x7b]; shl byte ptr [rsp+rax*2+0x48], 0x89; ret;
0xffffffff824bef68: pop rsp; std; iretd;
0xffffffff82641ff9: pop rsp; std; jmp far fword ptr [rdi+0x5ffffd5b];
0xffffffff82251192: pop rsp; std; ret;
0xffffffff822b874a: pop rsp; sti; add ebp, ebp; iretd;
0xffffffff82642a31: pop rsp; sti; call far fword ptr [rdi+0x5c];
0xffffffff824a7cb1: pop rsp; sti; ret 0xd119;
0xffffffff8237ef7e: pop rsp; sti; sub al, 1; iretd;
0xffffffff82654cc5: pop rsp; stosb [rdi]; dec edi; pop rcx; stosb [rdi]; jmp far fword ptr [rdi+0x56];
0xffffffff826e5910: pop rsp; stosb [rdi]; jmp far fword ptr [rsi+0x61];
0xffffffff8244a90c: pop rsp; stosb [rdi]; ret;
0xffffffff823cc928: pop rsp; stosd [rdi]; adc eax, 0x8fba4172; ret;
0xffffffff822c79d9: pop rsp; stosd [rdi]; fisttp word ptr [rbp+0xc], st; adc [rax+0x26], ecx; push rdi; ret;
0xffffffff8160a620: pop rsp; stosd [rdi]; jmp qword ptr [rbp+0x48];
0xffffffff82426cba: pop rsp; stosd [rdi]; mov cl, 0x5d; ret 0x2cc1;
0xffffffff82418112: pop rsp; stosd [rdi]; ret;
0xffffffff8251056f: pop rsp; sub [rbp+0x361c79eb], ch; jmp far fword ptr [r15+0x25a704bb];
0xffffffff820065b4: pop rsp; sub [rip-0x38e2c601], eax; jmp far fword ptr [rax+0x15];
0xffffffff8248cfd2: pop rsp; sub al, 0x30; mov [0x1c5081dacd34c6de], al; fwait; iretd;
0xffffffff82801ea4: pop rsp; sub al, 0x35; call far fword ptr [rdi+0x3d7];
0xffffffff8222a217: pop rsp; sub al, 0x4b; adc [rbx], ch; ret 0xaa36;
0xffffffff8232cb24: pop rsp; sub al, 0x8f; ret;
0xffffffff8256b115: pop rsp; sub al, 0xa9; ret;
0xffffffff8223e3ff: pop rsp; sub al, 0xe3; fst qword ptr [rdx-0x310cb882], st; ret 0x7f58;
0xffffffff820062b4: pop rsp; sub al, 5; jmp far fword ptr [rcx+0x3effc71e];
0xffffffff81b2fd4e: pop rsp; sub cl, [rbx+rsi]; pop rcx; or al, 9; ret;
0xffffffff8223094c: pop rsp; sub cl, cl; ret;
0xffffffff8131e8a0: pop rsp; sub dh, cl; add [rbx+0x41], bl; pop rsi; ret;
0xffffffff82488a0e: pop rsp; sub dword ptr [rax+0x12], 0x34; insd [rdi], dx; ret 0xfe5a;
0xffffffff823abe86: pop rsp; sub eax, 0x48bdd953; iretd;
0xffffffff82261eea: pop rsp; sub eax, 0x4e7eb1f3; xchg ecx, eax; xchg [rdx+r14*4+0x19], r10b; mov al, [0x7662b11aeba14119]; ret;
0xffffffff8344557e: pop rsp; sub eax, 0x5b; add [rbx], esp; inc byte ptr [rbp-0x76b88b40]; ret;
0xffffffff82374f44: pop rsp; sub eax, 0x895337c6; mov ecx, esp; sar dword ptr [rbp+0x41], 0xfc; iretd;
0xffffffff823decb5: pop rsp; sub eax, 0xf6bbd517; iretd;
0xffffffff8110d41a: pop rsp; sub eax, 0xf; ret;
0xffffffff81042bba: pop rsp; sub eax, 0xffffff8f; pop rbp; ret 0x8500;
0xffffffff8110d475: pop rsp; sub eax, 0xffffffb4; ret 0xffff;
0xffffffff823b09a5: pop rsp; sub ebp, edx; ret;
0xffffffff810610b4: pop rsp; sub ebx, 0xffffffc9; pop rbx; pop rbp; ret;
0xffffffff8231f7b5: pop rsp; sub ebx, [rdi]; movsxd esp, [rdx-0x7de9a372]; cmp eax, 0x401299bb; ret 0x12d5;
0xffffffff8110783c: pop rsp; sub ecx, 0x4d; add al, 0xfe; jmp qword ptr [rsi+0x66];
0xffffffff824e80ff: pop rsp; sub edi, esi; iretd;
0xffffffff82350368: pop rsp; sub esi, [rbx-5]; ret;
0xffffffff81e0015f: pop rsp; swapgs; sysretq;
0xffffffff82005ee4: pop rsp; sysenter; jmp far fword ptr [rax];
0xffffffff828fb780: pop rsp; sysret;
0xffffffff8268d4c9: pop rsp; test [rax*4+0x6f46670], cl; iretd;
0xffffffff82285bdc: pop rsp; test [rcx-0x8c7d1f1], ch; out 0x27, al; iretd;
0xffffffff82690eee: pop rsp; test [rcx], cl; call rbx;
0xffffffff824a0097: pop rsp; test [rcx], dh; iretd;
0xffffffff82690ea4: pop rsp; test [rdi-0x51], bl; mov bx, 0x867; call rbx;
0xffffffff8240b298: pop rsp; test [rdx-0x49859cf0], edx; data16 ret;
0xffffffff823353a6: pop rsp; test al, 0x59; fimul st, word ptr [rip+0x772d1dce]; ret;
0xffffffff824eb43a: pop rsp; test al, 0x93; adc eax, 0x2e09bfea; call r13;
0xffffffff8240a427: pop rsp; test al, 0x98; pop rax; cmp al, 0x79; cmc; ret;
0xffffffff8228b53c: pop rsp; test al, 0xa8; xchg ebx, eax; iretd;
0xffffffff822b32fb: pop rsp; test al, 0xc; push rcx; mov bh, 0x24; ret 0xc169;
0xffffffff8269f22e: pop rsp; test byte ptr [rax], 0x11; call rbx;
0xffffffff820098b4: pop rsp; test byte ptr [rdi+rdi*8], 0x2d; add al, 0xc7; call qword ptr [rdx+0x50ff8394];
0xffffffff823be3e3: pop rsp; test ch, al; ret;
0xffffffff8270a81e: pop rsp; test dl, bh; push 0x9e60075; ret 0x68fa;
0xffffffff823c209d: pop rsp; test eax, 0x1b0b3673; xchg esp, eax; mov gs, [rcx]; ret 0xdf46;
0xffffffff8244af8a: pop rsp; test eax, 0x4de413a6; pop rsp; ret;
0xffffffff825241a2: pop rsp; test eax, 0x555ba7e7; outsd dx, [rsi]; mov ss, [rdx]; ret 0xbde8;
0xffffffff825d7221: pop rsp; test eax, 0x65e95c1c; call far fword ptr [rbx+0x66];
0xffffffff8265e6e9: pop rsp; test edi, edi; call far fword ptr [rbx-0x7b];
0xffffffff8173a736: pop rsp; vmwrite rax, [rdx+0x149bde8]; add [rax+0x3004], bh; ret;
0xffffffff822caec1: pop rsp; xchg [r10], sil; iretd;
0xffffffff8231ff17: pop rsp; xchg [rcx+0x7f], esp; iretd;
0xffffffff823d3590: pop rsp; xchg [rdi+0x1e78f964], esi; add al, 0x5d; ret;
0xffffffff8265a051: pop rsp; xchg ebp, eax; call far fword ptr [rdi-0x10006aa5];
0xffffffff82410fd6: pop rsp; xchg ebp, eax; iretd;
0xffffffff8176164e: pop rsp; xchg ebp, eax; jmp qword ptr [rsi+0x66];
0xffffffff8222b51d: pop rsp; xchg ebp, eax; mov edi, ebx; ret;
0xffffffff8264340c: pop rsp; xchg ebp, eax; stc; call far fword ptr [rdx-0x6b];
0xffffffff822e50b0: pop rsp; xchg ebx, eax; int3; stosd [rdi]; and [rax+0x6e014cc9], ah; iretd;
0xffffffff8230af13: pop rsp; xchg ebx, eax; xchg ecx, eax; clc; adc edx, [rcx+0x1514014d]; ret;
0xffffffff824aa871: pop rsp; xchg ebx, eax; xlat [rbx]; ret;
0xffffffff824abf46: pop rsp; xchg ebx, edi; push rsi; lahf; iretd;
0xffffffff8265af39: pop rsp; xchg ecx, eax; call far fword ptr [rdi-0x6ea4];
0xffffffff82336865: pop rsp; xchg ecx, eax; fxch st, st(5); xor gs:[rdi-0x2c], bh; iretd;
0xffffffff825534ea: pop rsp; xchg ecx, eax; pandn mm2, [rdi]; adc [rdi+0x14], edx; ret;
0xffffffff8293d0cc: pop rsp; xchg edi, eax; add [rax], al; add byte ptr [rdi], 0; add [rdi], ah; iretd;
0xffffffff8168b4f0: pop rsp; xchg edi, eax; add [rbp-0x8ac8040], al; ret;
0xffffffff811edbd0: pop rsp; xchg edi, eax; in al, dx; call qword ptr [rax-0x6f6f6f70];
0xffffffff81359d38: pop rsp; xchg edx, eax; add [rax-0x39], cl; ret;
0xffffffff81359d37: pop rsp; xchg edx, eax; add [rax-0x39], cl; ret;
0xffffffff8265aae9: pop rsp; xchg edx, eax; dec dword ptr [rdi+0x7fff9257]; push rdi; xchg edx, eax; jmp far fword ptr [rdi+0x57];
0xffffffff8244fd9f: pop rsp; xchg edx, eax; sub ch, [rsi+0x26]; int1; iretd;
0xffffffff82659cbd: pop rsp; xchg esi, eax; dec dword ptr [rdi+0x4fff965c]; pop rsp; xchg esi, eax; jmp far fword ptr [rdi];
0xffffffff82659cc1: pop rsp; xchg esi, eax; dec dword ptr [rdi+0x5c]; xchg esi, eax; jmp far fword ptr [rdi];
0xffffffff82659cc9: pop rsp; xchg esi, eax; dec dword ptr [rdi+0x5fff965b]; pop rbx; xchg esi, eax; jmp far fword ptr [rdi+0x5a];
0xffffffff822a064b: pop rsp; xchg esi, eax; iretd;
0xffffffff82659cc5: pop rsp; xchg esi, eax; jmp far fword ptr [rdi];
0xffffffff82003e35: pop rsp; xchg esi, eax; jmp far fword ptr [rsi-0x5b0069a4];
0xffffffff82003e39: pop rsp; xchg esi, eax; jmp qword ptr [rdx+rdx*2+0x5da5ff05];
0xffffffff8243fd66: pop rsp; xchg esi, eax; pop rcx; sbb eax, 0xd47443fe; iretd;
0xffffffff82529dee: pop rsp; xchg esp, eax; push rax; mov dl, 0xd3; mov ah, 0x83; ret 0xbee6;
0xffffffff82518ab3: pop rsp; xchg r12d, eax; movsxd edx, [rcx-0x66]; fld st, qword ptr [rdi-0x2aadfe0a]; push 0xffffffffd02c4fb5; ret 0xaeb9;
0xffffffff823b7f4e: pop rsp; xlat [rbx]; add [rcx], ah; ret;
0xffffffff8254491d: pop rsp; xlat [rbx]; iretd;
0xffffffff824d9294: pop rsp; xlat [rbx]; mov ah, 0x80; ret;
0xffffffff8248820c: pop rsp; xlat [rbx]; rcr dword ptr [rbx+0x2ba2ca0e], cl; xlat [rbx]; iretd;
0xffffffff824aa9b2: pop rsp; xlat [rbx]; sbb al, 0x61; cmp dl, bl; sbb dh, [rsi]; ret;
0xffffffff8253e8e8: pop rsp; xlat [rbx]; test al, 0x45; ret;
0xffffffff8228faaa: pop rsp; xor [rax+0x5d], ebx; push rax; call far fword ptr [rsi-0x625ea60a];
0xffffffff822ad90c: pop rsp; xor [rax-0x3b86c7c7], bh; iretd;
0xffffffff822c68f1: pop rsp; xor [rax], ah; iretd;
0xffffffff8253f67d: pop rsp; xor [rax], cl; jmp qword ptr [rsi-0x549273cc];
0xffffffff823a430b: pop rsp; xor [rax], dl; sbb esp, edx; adc dh, [rsi+0x199d436b]; sysexit;
0xffffffff8245fe4b: pop rsp; xor [rbp+0x43], eax; sub ebp, [rcx-0xe]; iretq;
0xffffffff823ca93d: pop rsp; xor [rbx+0x24d526cc], edx; push rcx; jmp qword ptr [rcx-0x51];
0xffffffff823cb7b2: pop rsp; xor [rbx+0x46], edi; imul edi, esp, 0xa86b9f71; iretd;
0xffffffff823cb7b4: pop rsp; xor [rbx+0x46], edi; imul edi, esp, 0xa86b9f71; iretd;
0xffffffff81816984: pop rsp; xor [rbx+rax*4], eax; sti; push qword ptr [rbp+rcx*8+0x39]; ret;
0xffffffff8230c3a4: pop rsp; xor [rbx+rbx], dl; ret;
0xffffffff82545f13: pop rsp; xor [rbx], dl; mov edi, 0xb82ca77c; pop rdi; iretd;
0xffffffff82437acc: pop rsp; xor al, 0x12; insb [rdi], dx; ret;
0xffffffff823c0173: pop rsp; xor al, 0x5c; outsb dx, [rsi]; mov edi, 0xa6028b4f; xchg r8, rax; jmp far fword ptr [0xfffffffff2cdddaf];
0xffffffff8250a983: pop rsp; xor al, [rcx-0x3f613c12]; ret 0xadbb;
0xffffffff813b42d0: pop rsp; xor al, dl; jmp qword ptr [rsi+0x66];
0xffffffff824f1bf3: pop rsp; xor bl, cl; outsd dx, [rsi]; cmpsb [rsi], [rdi]; add byte ptr [rdx-0x56], 0x23; iretd;
0xffffffff8222ee86: pop rsp; xor byte ptr [rcx-0xa87b68b], 0xb8; iretd;
0xffffffff8248290a: pop rsp; xor dh, [rcx+rcx*4-0x4924582b]; ret;
0xffffffff82384cd3: pop rsp; xor dl, [r8+0x1a]; mov [rdx+0x436ab14d], cl; and cl, bh; xchg rsp, rax; ret 0x50d5;
0xffffffff823b8580: pop rsp; xor dl, [rdx-0x4d]; in eax, dx; call far fword ptr [rsp+rbx*8];
0xffffffff823172ef: pop rsp; xor dl, dh; cmc; call far fword ptr [rdi];
0xffffffff82252fcf: pop rsp; xor dword ptr [rbp+0x68db1c87], 0xffffffe8; cmp al, 0x23; ret;
0xffffffff824e09c9: pop rsp; xor dword ptr [rbx-0x6e54f028], 0x898ee960; pop rdx; ret 0xd80b;
0xffffffff824e09ca: pop rsp; xor dword ptr [rbx-0x6e54f028], 0x898ee960; pop rdx; ret 0xd80b;
0xffffffff81045f77: pop rsp; xor dword ptr [rcx], 0xffffffc0; bt [rip+0x257db4d], rcx; setae al; ret;
0xffffffff8233263c: pop rsp; xor dword ptr [rdi], 0xb435f3f2; sbb dword ptr [rax], 0xffffffc7; cli; ret 0x32a3;
0xffffffff8240811c: pop rsp; xor eax, 0x32b7034e; ret;
0xffffffff823db891: pop rsp; xor eax, 0x66f805a0; sbb [rax+0x1d437ee2], eax; leave; sbb eax, ebx; ret 0x7064;
0xffffffff822dd304: pop rsp; xor eax, 0x77fa3eaf; ret 0x145e;
0xffffffff811e3a69: pop rsp; xor eax, 0x8327eb30; ret;
0xffffffff823e3278: pop rsp; xor eax, 0xa0406659; rcl dword ptr [rax], 1; call qword ptr [rbx+0x5b8144e0];
0xffffffff82538342: pop rsp; xor eax, 0xf54ff6f8; ret;
0xffffffff824e74b2: pop rsp; xor eax, 0xf86225c3; and [rdi], ecx; call qword ptr [rbp-0x158d5eeb];
0xffffffff8352d781: pop rsp; xor eax, 0xffffff81; jmp qword ptr [rax];
0xffffffff82486ca4: pop rsp; xor eax, [rdi]; add [rbx], ah; call qword ptr [rsi-0x4f0950af];
0xffffffff812b4583: pop rsp; xor eax, eax; ret;
0xffffffff822cbc68: pop rsp; xor ebp, [rsi]; ret;
0xffffffff8226698c: pop rsp; xor ebx, [edi-0x2a22ac3a]; call far fword ptr [rbx];
0xffffffff822f2863: pop rsp; xor ebx, ebx; call qword ptr [rax-0x4650e6cb];
0xffffffff8224e236: pop rsp; xor ecx, esi; add [rdi+0x2a7f2c17], edx; clc; xchg ecx, eax; ret 0x8c4f;
0xffffffff82005af5: pop rsp; xor edi, edi; sbb [rax*1-0x38dd6e01], dh; jmp qword ptr [rdi];
0xffffffff81ba0310: pop rsp; xor esp, edx; jmp qword ptr [rbp+0x48];
0xffffffff816afb0c: pop sp; add [rax-1], bh; pop rbx; ret;
0xffffffff816afae9: pop sp; add bl, ch; and [rcx-0x7d], ecx; ret;
0xffffffff824630b2: pop sp; enter 0xb802, 0xc; push rax; ret 0xec51;
0xffffffff8228edef: pop sp; iretd;
0xffffffff8225a068: pop sp; lahf; mov al, [0xd78c1bec52f07660]; outsb dx, [rsi]; call qword ptr [rdi];
0xffffffff8246a18c: pop sp; shr dword ptr [rdx+8], cl; cmp al, 0x8c; cld; iretd;
0xffffffff822b8a14: popfq; adc al, 0xcc; pop rsp; ret 0xe458;
0xffffffff822576d8: popfq; adc r10d, ebp; mov esp, eax; pushfq; ret 0xc1f5;
0xffffffff81c83086: popfq; add rsp, 8; pop rbx; ret;
0xffffffff8256c35c: popfq; and al, 0x85; mov eax, [0xbe8b3386f6ebee54]; push rdx; pop rsp; ret;
0xffffffff8225c7b0: popfq; and ecx, 0xffffffd9; xchg esp, eax; cmpsb [rsi], [rdi]; ret;
0xffffffff82569f60: popfq; cmp eax, 0x4dd1c6fe; fcom st, qword ptr [rbp+0x1748e88c]; outsd dx, [rsi]; mov esp, [rcx]; call far fword ptr [rbx];
0xffffffff82297b91: popfq; fcom st, dword ptr [rcx+0x26]; xchg [rcx-7], esp; rcpps xmm1, [rbp+0x54964d40]; ret;
0xffffffff8239f22c: popfq; fisttp qword ptr [rbp+0x7f], st; mov [rcx+0x4e], es; leave; jmp qword ptr [rax+rbx*8];
0xffffffff822f8d1f: popfq; leave; iretd;
0xffffffff8264ef45: popfq; leave; jmp far fword ptr [rdi+0x2fffc99d];
0xffffffff8264ef49: popfq; leave; jmp far fword ptr [rdi];
0xffffffff82559bf5: popfq; leave; jmp qword ptr [rdx+rbx*2-0x23];
0xffffffff82474da7: popfq; mov al, 0x2f; pop rsp; iretd;
0xffffffff813cf997: popfq; mov al, [0xfc339d231000005]; xchg esp, eax; ret 0x8948;
0xffffffff824a218d: popfq; pop rdx; int1; movsd [rdi], [rsi]; xchg sp, ax; iretd;
0xffffffff8197b6db: popfq; pop rsp; add [rax-0x39], ecx; ret 0x5428;
0xffffffff826c14d9: popfq; pop rsp; enter 0xa50b, 0x63; ret;
0xffffffff826fa7f2: popfq; pop rsp; iretd;
0xffffffff81aed56e: popfq; pop rsp; jmp qword ptr [rsi+0x66];
0xffffffff8223f7ea: popfq; pop rsp; mov edx, 0xbb0aee41; ret;
0xffffffff826f9d70: popfq; pop rsp; popfq; sub al, 6; imul dword ptr [rdi+0x6f]; call far fword ptr [rbp+0x6ff70b2c];
0xffffffff822e5b38: popfq; pop rsp; ret;
0xffffffff826ebd01: popfq; pop rsp; std; cmp eax, 0x668e0cf9; hlt; jmp qword ptr [rdx+0x72];
0xffffffff82337e21: popfq; push rax; xchg esp, eax; mov eax, [0xa3473a57b021b309]; jmp far fword ptr [rcx+rax+0x10];
0xffffffff83484cf3: popfq; sar ch, cl; add rsp, 8; pop rbx; ret;
0xffffffff83484c96: popfq; sar ch, cl; add rsp, 8; ret;
0xffffffff834984ef: popfq; sar ebp, 1; add rsp, 8; pop rbx; ret;
0xffffffff8347c3ef: popfq; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff83474ce4: popfq; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82570edc: popfq; sbb esi, [rip+0x330cb48d]; leave; fimul st, word ptr [rdx+rsi*8]; iretd;
0xffffffff819d299d: popfq; sub eax, 0xff7e60bc; add rsp, 8; ret;
0xffffffff819d2259: popfq; sub eax, 0xff7e6800; add rsp, 8; ret;
0xffffffff8265a44d: popfq; xchg esp, eax; call far fword ptr [rdi-0x63];
0xffffffff8265a454: popfq; xchg esp, eax; dec edi; pushfq; xchg esp, eax; jmp far fword ptr [rdi-0x64];
0xffffffff824975d6: popfq; xchg esp, eax; or dil, [r15+0x2c]; xor al, 0x9b; iretd;
0xffffffff8164547f: popfq; xchg esp, eax; ret 0x48ff;
0xffffffff82293c4d: popfq; xchg esp, eax; ret;
0xffffffff81b3cdb2: psadbw mm0, mm1; adc [rdi], cl; xchg esp, eax; ret 0xc208;
0xffffffff813c7dbe: psadbw mm0, mm1; add [rdi], ecx; xchg esp, eax; ret 0xc230;
0xffffffff8347dac7: psrlq mm7, mm5; add rsp, 8; pop rbx; ret;
0xffffffff822aa5f5: psubb mm6, [rdi]; pop rsp; ret;
0xffffffff82007f6d: punpckldq mm7, mm7; mov al, [0x10ffc70fe6ff050f]; adc [rdx-1], esp; xchg esp, eax; syscall;
0xffffffff81e01374: push 0x10; push 0xffffffff81e013a0; add rsp, 0x30; pop rdx; iretq;
0xffffffff83446013: push 0x122850f; add [rax], al; mov rsp, rbp; pop rbp; ret;
0xffffffff8141e009: push 0x1fe8c35b; xchg ebx, eax; leave; jmp qword ptr [rsi+0x66];
0xffffffff825473c9: push 0x2c; leave; mov [0xd9c4d51557d88d50], eax; ret 0x5e04;
0xffffffff823444c8: push 0x2d; xchg esp, eax; stosd [rdi]; iretd;
0xffffffff8247ab4b: push 0x30c1d559; leave; ret;
0xffffffff82509b44: push 0x31; xchg esp, eax; ret;
0xffffffff8252bbc7: push 0x351b9510; pop rsp; adc [rsi+0x7aeb0829], eax; ret;
0xffffffff824cc95c: push 0x35; pop rax; leave; sbb eax, 0x493f422f; mov [rcx], bh; ret;
0xffffffff824fd475: push 0x36; mov eax, [0x1ff3d4fd0e065cde]; xchg [rax-0x14], esp; ret;
0xffffffff82439772: push 0x381789c1; sbb al, ah; xchg esp, eax; iretd;
0xffffffff8251e719: push 0x3d; pop rsp; shl ch, cl; iretd;
0xffffffff824d2b1f: push 0x42ad1bab; insd [rdi], dx; leave; iretd;
0xffffffff82384cdc: push 0x43; and cl, bh; xchg rsp, rax; ret 0x50d5;
0xffffffff82006af8: push 0x47ffc71a; pop rsp; call qword ptr [rax];
0xffffffff83461b24: push 0x48fdd4cf; add esp, 8; pop rbx; ret;
0xffffffff83449f24: push 0x48fdd64b; add esp, 8; pop rbx; pop r14; ret;
0xffffffff81265a94: push 0x48fffffc; add esp, 0x18; ret;
0xffffffff8228a59b: push 0x52; mov dh, [rbx-9]; xchg esp, eax; sub [rdi+0x316fdf05], al; ret 0xcb0b;
0xffffffff82516b80: push 0x52d7aed3; stosd [rdi]; xor ebx, ecx; dec dword ptr [rdx]; leave; iretd;
0xffffffff8243f227: push 0x5f; int 0xd9; insd [rdi], dx; mov esp, [rax]; jmp qword ptr [rdi];
0xffffffff82245eab: push 0x5f; xchg esi, eax; mov cl, 0xf; sub esi, ebp; xchg [rdi], esp; iretd;
0xffffffff8255af44: push 0x60b20b91; add [rax-0x9a70c36], ebp; pop rsp; ret;
0xffffffff823bb9f3: push 0x64b89423; pop rsp; and ecx, edi; ret;
0xffffffff826656be: push 0x685cffff; dec edi; pop rsp; push 0x685cbfff; call far fword ptr [rdi-0x700097a4];
0xffffffff8256bae0: push 0x6ba553f9; xchg esp, eax; iretd;
0xffffffff8250a8fb: push 0x6bb345f3; mov [0xa0e9f21433215223], al; pop rsp; mov ebp, 0xb4a5eeff; iretd;
0xffffffff826fa7e7: push 0x6cb4d765; test byte ptr [rsi], 0x8e; shl word ptr [rdx-0x63], cl; pop rsp; iretd;
0xffffffff826c14d4: push 0x7262276f; popfq; pop rsp; enter 0xa50b, 0x63; ret;
0xffffffff826cf0d9: push 0x74a8276f; or [rbx+0x40c37363], ecx; push 0xa73e26f; mov esp, [rbx+0x73]; ret;
0xffffffff82688652: push 0x7561540a; leave; jmp far fword ptr [rax+0x6bdabeff];
0xffffffff826885f6: push 0x7561540c; leave; jmp far fword ptr [rbp-0x19];
0xffffffff826f6b63: push 0x75e0ba6f; mov esp, 0x27647407; leave; cmp al, 0xe7; or dl, fs:[rdi+rax*4+0x23]; iretd;
0xffffffff825ccfae: push 0x76; out 0xae, al; in eax, dx; leave; ret 0x3b81;
0xffffffff8226e957: push 0x773b32c0; cmpsd [rsi], [rdi]; xchg esp, eax; iretd;
0xffffffff825593e3: push 0x7e; leave; iretd;
0xffffffff82812968: push 0x7ffe9604; xchg esp, eax; add [rax], al; add [rax], al; add [rax], al; call far fword ptr [r9-0x10];
0xffffffff81b3605a: push 0x9f850f; add [rax], al; mov eax, ebx; add rsp, 0x70; pop rbx; ret;
0xffffffff81b35efa: push 0xa5850f; add [rax], al; mov eax, ebx; add rsp, 0x70; pop rbx; ret;
0xffffffff826cf247: push 0xa646df4; mov esp, [rbx+0x73]; ret;
0xffffffff826cf0e3: push 0xa73e26f; mov esp, [rbx+0x73]; ret;
0xffffffff826cf0ef: push 0xb73e26f; mov esp, [rbx+0x73]; ret;
0xffffffff826cf0a3: push 0xb84276f; mov esp, [rbx+0x73]; ret;
0xffffffff810cae16: push 0xfc98548; xchg esp, eax; ret 0xb74;
0xffffffff81e01376: push 0xffffffff81e013a0; add rsp, 0x30; pop rdx; iretq;
0xffffffff81972e64: push 0xffffffff8948ff79; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff8198c6a5: push 0xffffffff98480775; add rsp, 0x70; ret;
0xffffffff824b4d06: push 0xffffffff987da004; sbb eax, 0x3a980a1a; stosb [rdi]; cmp [rdx+0x152f41f2], r14; xchg esp, eax; ret;
0xffffffff82343672: push 0xffffffffa01897e6; xchg esp, eax; jmp qword ptr [rbp-0x33];
0xffffffff823be43f: push 0xffffffffa1da213e; xchg esp, eax; iretd;
0xffffffff822c50cc: push 0xffffffffab87cca1; leave; and ebp, eax; int 0x80;
0xffffffff823ce000: push 0xffffffffbe91931e; pop rsp; movsxd edi, edx; push rbx; ret 0x697c;
0xffffffff8249b2f2: push 0xffffffffc22b7950; or eax, 0x48c29a5d; and eax, 0x73984614; pop rsp; iretd;
0xffffffff82470400: push 0xffffffffc2881e09; leave; ret 0xd564;
0xffffffff8248a356: push 0xffffffffc42ef01c; xchg rsp, rax; cdq; fxch st, st(7); iretd;
0xffffffff823265e4: push 0xffffffffd1ec24a7; pop rsp; ret 0x7332;
0xffffffff82245d38: push 0xffffffffd5cc8e90; pushfq; imul ebp, [rdi-0x24], 0x50; pop rsp; iretd;
0xffffffff82245d39: push 0xffffffffd5cc8e90; pushfq; imul ebp, [rdi-0x24], 0x50; pop rsp; iretd;
0xffffffff8140dfcd: push 0xffffffffd8891975; add rsp, 0x70; pop rbx; pop r14; pop rbp; ret;
0xffffffff8142d938: push 0xffffffffd8893875; add rsp, 0x70; pop rbx; pop rbp; ret;
0xffffffff814739eb: push 0xffffffffe8000001; insb [rdi], dx; sbb esp, ebp; dec dword ptr [rax-0x77]; ret;
0xffffffff814282b1: push 0xffffffffe8890b75; add rsp, 0x70; pop rbx; pop r14; pop rbp; ret;
0xffffffff8192b367: push 0xffffffffe8891b75; add rsp, 0x70; pop rbx; pop r14; pop rbp; ret;
0xffffffff8140882d: push 0xffffffffe8893c75; add rsp, 0x70; pop rbx; pop r14; pop rbp; ret;
0xffffffff813633cc: push 0xffffffffe8d2b70f; sub ebx, ebp; leave; add [rbx+0x47303f8], al; ret;
0xffffffff81af3b9a: push 0xffffffffe8ffffff; lea esi, [rdi]; pop rsp; jmp qword ptr [rsi+0x66];
0xffffffff826cf096: push 0xfffffffff177276f; cwde; ror dword ptr fs:[rax], 1; mov esp, [rbx+0x73]; ret;
0xffffffff82569f5a: push 0xfffffffff3d0cb89; and [rbp-0x2e3901c3], ebx; fcom st, qword ptr [r13+0x1748e88c]; outsd dx, [rsi]; mov esp, [rcx]; call far fword ptr [rbx];
0xffffffff8233b662: push 0xfffffffffaea88a1; lodsb [rsi]; pop rcx; leave; sub eax, 0x637d62bd; iretd;
0xffffffff823cd2ce: push 0xffffffffffffff88; leave; iretd;
0xffffffff8231f6e8: push 0xffffffffffffff92; movsb [rdi], [rsi]; pop rsp; mov ah, 0x22; ret 0x9a7c;
0xffffffff83483922: push 0xffffffffffffffb1; sar ch, cl; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff825d55ed: push 0xffffffffffffffb3; pop rsp; cmpsd [rsi], [rdi]; call rdi;
0xffffffff824fc41e: push 0xffffffffffffffb9; xchg esp, eax; mov [0xa9f8ac24466f05f5], eax; adc [rbp-0x66], edx; jmp qword ptr [rcx];
0xffffffff822cbc66: push 0xffffffffffffffbb; pop rsp; xor ebp, [rsi]; ret;
0xffffffff822c4822: push 0xffffffffffffffc6; pop rsp; ret;
0xffffffff82421f28: push 0xffffffffffffffce; or [rdx], edx; fdivp st(3), st; rcl esi, 1; leave; iretd;
0xffffffff8349807a: push 0xffffffffffffffd1; std; add rsp, 8; pop rbx; ret;
0xffffffff8348802f: push 0xffffffffffffffd2; std; add rsp, 8; pop rbx; ret;
0xffffffff83468031: push 0xffffffffffffffd4; std; add rsp, 8; pop rbx; ret;
0xffffffff822d73a4: push 0xffffffffffffffe3; stosd [rdi]; in al, 0x1b; xchg ebp, eax; pop rsp; ret 0xfc8e;
0xffffffff824a4284: push 0xffffffffffffffeb; pop rsp; ret 0x97b5;
0xffffffff8349f822: push 0xfffffffffffffff2; sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff81c3acf9: push 0xffffffffffffffff; add rsp, 8; xor eax, eax; ret;
0xffffffff818d8ebf: push 1; add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x3944;
0xffffffff82688468: push qword ptr [rax-0x15]; adc dl, gs:[rcx+0x75]; leave; call qword ptr [rbp+0x5fef6e67];
0xffffffff83555a0f: push qword ptr [rax-0x3e]; xchg esp, eax; cmp edi, 0xc0ffffff; ret 0x8194;
0xffffffff82003e2f: push qword ptr [rax-0x4f00faae]; pop rsp; xchg esi, eax; jmp far fword ptr [rsi-0x5b0069a4];
0xffffffff82003e33: push qword ptr [rax-0x510069a4]; pop rsp; xchg esi, eax; jmp qword ptr [rdx+rdx*2+0x5da5ff05];
0xffffffff83555d17: push qword ptr [rax-2]; xchg esp, eax; cmp edi, 0x70ffffff; call qword ptr [rcx+rax*4-1];
0xffffffff8355dff7: push qword ptr [rax]; xchg [rsi-0x7f], esp; jmp qword ptr [rax-0x7e5979];
0xffffffff82008cab: push qword ptr [rcx+rcx+0x279effc7]; movsxd edi, edi; pop rsp; add al, [rip-0x38f65201]; jmp far fword ptr [rdi+0x250ff63];
0xffffffff82493dc9: push qword ptr [rcx]; cmpsb [rsi], [rdi]; imul ebx, [rbx+rbp*4], 0x23; pop rsp; ret 0xc22e;
0xffffffff81618b40: push qword ptr [rcx]; leave; cmp eax, 0xffffffa1; cmove eax, ecx; ret;
0xffffffff81bb0a33: push qword ptr [rcx]; leave; cmp eax, 0xfffffffd; cmove eax, ecx; ret;
0xffffffff81159aad: push qword ptr [rcx]; leave; cmp eax, 1; mov eax, 0xffffff9d; cmove eax, ecx; ret;
0xffffffff8112cb85: push qword ptr [rcx]; leave; cmp eax, 1; sete cl; mov eax, ecx; ret;
0xffffffff81669e57: push qword ptr [rcx]; leave; cmp esi, 3; mov eax, 0xffffffea; cmovae eax, ecx; ret;
0xffffffff811a5024: push qword ptr [rcx]; leave; cmp rax, 0xfffffffffffff001; cmovb eax, ecx; ret;
0xffffffff81c731fa: push qword ptr [rcx]; leave; mov eax, ecx; pop rcx; ret;
0xffffffff8135486c: push qword ptr [rcx]; leave; mov rax, rcx; pop rbx; ret;
0xffffffff816993d9: push qword ptr [rcx]; leave; test al, al; mov eax, 0xfffffdfd; cmovne eax, ecx; ret;
0xffffffff8125df96: push qword ptr [rcx]; leave; test al, al; mov eax, 0xfffffff3; cmovne eax, ecx; ret;
0xffffffff811aeb98: push qword ptr [rcx]; leave; test eax, eax; mov eax, 0xffffffed; cmovne eax, ecx; ret;
0xffffffff8102c90f: push qword ptr [rcx]; leave; test eax, eax; sete cl; mov eax, ecx; ret;
0xffffffff8113cd07: push qword ptr [rcx]; leave; test eax, eax; setg cl; mov eax, ecx; ret;
0xffffffff81bfa0c5: push qword ptr [rcx]; leave; test eax, eax; setne cl; mov eax, ecx; ret;
0xffffffff812e45f9: push qword ptr [rcx]; leave; test rax, rax; mov eax, 0xfffffff4; cmovne eax, ecx; ret;
0xffffffff8269ebf2: push qword ptr [rdx-0x23]; pop rsp; fdivrp; sysret;
0xffffffff8269f22b: push qword ptr [rdx-0x23]; pop rsp; test byte ptr [rax], 0x11; call rbx;
0xffffffff820031f7: push qword ptr [rip+0x34ff0ac9]; leave; or bh, bh; pop rsi; add eax, 0xac92cff; jmp far fword ptr [rbx];
0xffffffff826cff2c: push qword ptr [rsi+0x6c9563fa]; fimul st, dword ptr [rsi]; mov esp, [rbx+0x73]; ret;
0xffffffff81b254bd: push qword ptr [rsi+7]; xor eax, eax; add rsp, 4; ret;
0xffffffff81c83083: push qword ptr [rsp]; popfq; add rsp, 8; pop rbx; ret;
0xffffffff82668260: push r10; pop rsp; call far fword ptr [rdi+0x51];
0xffffffff825521bb: push r12; ror byte ptr [rdx+0x35d8c2ec], 1; pop rsp; ret 0x9f16;
0xffffffff824d98c5: push r13; add esp, 0x3d2b68de; iret;
0xffffffff823178bc: push r14; leave; sbb ebp, [rax+0x475afd]; ret;
0xffffffff823a0c81: push r15; pop rsp; or [rip-0x7db6533b], esp; xor eax, 0xa415ac8f; call rbp;
0xffffffff824a6e42: push r15; xchg ebx, esp; pushfq; adc al, 0xdd; stosb [rdi]; iretd;
0xffffffff8108dde3: push r9; std; add esp, eax; ret;
0xffffffff8224ce41: push rax; adc [r10], rax; rol byte ptr [rax-0x3c7419e], 1; leave; imul edx, [rsi-0x3c], 0x777e4d20; iretd;
0xffffffff818df4dd: push rax; add [rbp+0x76d88], ecx; add dh, dh; rol dword ptr [rbx], 0xf; xchg esp, eax; ret;
0xffffffff8177428d: push rax; add bl, ch; enter 0x9ae8, 0x30; xchg esp, eax; jmp qword ptr [rsi+0x2e];
0xffffffff81911333: push rax; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8343cb0d: push rax; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff822dd184: push rax; fwait; leave; and eax, 0x3c4dd143; adc dl, [rdi-0x3c]; iretd;
0xffffffff8349c6ae: push rax; inc byte ptr [rbp+0x481275c0]; add esp, 8; pop rbx; ret;
0xffffffff825193e2: push rax; leave; and [rcx], ecx; iretd;
0xffffffff822c6df5: push rax; leave; ret;
0xffffffff83568988: push rax; leave; ret;
0xffffffff8244af87: push rax; mov ch, 0x83; pop rsp; test eax, 0x4de413a6; pop rsp; ret;
0xffffffff81e01904: push rax; mov rbp, [rsp+0x20]; add rsp, 0xa8; ret;
0xffffffff814a8ea4: push rax; or [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff835219af: push rax; pop rsp; adc eax, 0xffffff81; call qword ptr [rax+0x5e];
0xffffffff82a7b53c: push rax; pop rsp; add [rax], eax; cmp eax, 0xa430000; add [rax], al; ret 0x178a;
0xffffffff824cb532: push rax; pop rsp; add al, 0xa0; ret 0x4644;
0xffffffff82668269: push rax; pop rsp; call far fword ptr [rdi-0x3000a3b0];
0xffffffff82245d42: push rax; pop rsp; iretd;
0xffffffff822a87fb: push rax; pop rsp; jmp qword ptr [rax-0x2bbfd25c];
0xffffffff823dea86: push rax; pop rsp; ret 0x2fe7;
0xffffffff8250a092: push rax; rcl dword ptr [rsi+0x4310f399], cl; leave; ret;
0xffffffff8250a093: push rax; rcl dword ptr [rsi+0x4310f399], cl; leave; ret;
0xffffffff810be6df: push rax; sbb [rax+0x21], cl; fimul st, dword ptr [rax+0x39]; fimul st, dword ptr [rdi]; xchg esp, eax; ret 0xc75;
0xffffffff82384cd6: push rax; sbb cl, [rax+0x6ab14d8a]; and r9b, dil; xchg rsp, rax; ret 0x50d5;
0xffffffff824188bb: push rax; sbb esp, ecx; adc edi, [rdi-0x2f]; iretd;
0xffffffff82291604: push rax; scasd [rdi]; or ah, [rcx+0x4b826ba8]; leave; in al, dx; iretd;
0xffffffff8199ee05: push rax; shr rax, 6; add eax, ebx; add rsp, 0x38; pop rbx; ret;
0xffffffff813dfb65: push rax; sub al, 0xf; leave; not ecx; and [rax+0x28], ecx; ret;
0xffffffff82320cff: push rax; xchg [rbx+0xab1a68], esp; xchg [rdx+0x65746c4], dh; jmp qword ptr [rax-0x20];
0xffffffff8355e80f: push rax; xchg [rdi-0x7f], esp; push qword ptr [rax]; mov [rdi-0x7f], ah; call qword ptr [rax-0x78];
0xffffffff8256787c: push rax; xchg ecx, eax; pop rsp; ret;
0xffffffff8238df86: push rax; xchg esp, eax; cmp dl, [rsi-0x5a]; ret;
0xffffffff82337e23: push rax; xchg esp, eax; mov eax, [0xa3473a57b021b309]; jmp far fword ptr [rcx+rax+0x10];
0xffffffff82337e22: push rax; xchg esp, eax; mov eax, [0xa3473a57b021b309]; jmp far fword ptr [rcx+rax+0x10];
0xffffffff8351c007: push rax; xchg esp, eax; or eax, 0xffffff81; call qword ptr [rax];
0xffffffff822ab9b7: push rax; xchg esp, eax; push rsi; clc; ret 0xc9ed;
0xffffffff825da848: push rax; xchg esp, eax; ret;
0xffffffff8222771e: push rax; xchg esp, eax; ror eax, 1; push rsi; std; ret 0x4447;
0xffffffff82561a97: push rbp; adc esp, edx; cmp [rsi], ebp; sahf; pop rsi; ret;
0xffffffff8116358e: push rbp; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff824d98c6: push rbp; add esp, 0x3d2b68de; iret;
0xffffffff816f778f: push rbp; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff81702110: push rbp; add rsp, 0x10; pop rbx; ret;
0xffffffff819b3153: push rbp; add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff8195db20: push rbp; add rsp, 0x20; ret;
0xffffffff81a80920: push rbp; and [rdi], cl; xchg esp, eax; ret 0xf641;
0xffffffff82452910: push rbp; cld; xchg esp, eax; pop rsp; fbld st, tbyte ptr [rax+0x2cf2e8de]; iretd;
0xffffffff82410129: push rbp; cmp al, [rcx]; leave; xlat [rbx]; ret 0xc487;
0xffffffff8113c142: push rbp; int3; add [rax-0x75], cl; xchg [rax+0x48000000], esp; sub eax, esi; ret;
0xffffffff824dad44: push rbp; leave; call qword ptr [rax];
0xffffffff82540f8a: push rbp; leave; mov eax, 0xb96591aa; lodsd [rsi]; iretd;
0xffffffff8241e8f6: push rbp; mov esp, 0x9731bc7e; mov esp, edx; cwde; iretd;
0xffffffff8256bada: push rbp; mov esp, 0xe81a9499; push 0x6ba553f9; xchg esp, eax; iretd;
0xffffffff8232add8: push rbp; mov esp, [rax]; mov [0x4bd9a39256b71f3b], al; mov ebx, ss; iretd;
0xffffffff822f3253: push rbp; nop; xchg esp, eax; ret 0x8abc;
0xffffffff82379a73: push rbp; outsd dx, [rsi]; cmp al, 0xe3; cmp bl, al; pop rsp; ret 0xe575;
0xffffffff8266825d: push rbp; pop rsp; dec dword ptr [rdi+0x52]; pop rsp; call far fword ptr [rdi+0x51];
0xffffffff8225745c: push rbp; pop rsp; mov edi, 0xbc6c721f; ret;
0xffffffff82287c2f: push rbp; sahf; in al, dx; pop rsp; iretd;
0xffffffff82474d9e: push rbp; sbb eax, 0x4d87bb06; fld st, dword ptr [rsp+rsi*4-0x63]; mov al, 0x2f; pop rsp; iretd;
0xffffffff82258290: push rbp; scasd [rdi]; xchg esp, eax; ret 0xedae;
0xffffffff822547bb: push rbp; sub ax, 0x2b15; int 0x2d; xchg esp, eax; cdq; ret;
0xffffffff824dcc75: push rbp; sub esp, ebx; or bh, [rcx-0x399e2a9a]; cmp esp, ebx; ret;
0xffffffff82478c7a: push rbp; xchg [rdx+0x53964eea], ebp; xchg esp, eax; ret 0xf015;
0xffffffff8225d165: push rbp; xchg esp, eax; iretd;
0xffffffff81a17ca7: push rbp; xchg esp, eax; pop rsi; add [rax-0x77], cl; ret;
0xffffffff82269365: push rbp; xchg esp, eax; sbb [rcx-0x703e4967], dh; iretd;
0xffffffff822688c6: push rbp; xor al, 0x91; and dh, [rbp+0x33]; pushfq; pop rsp; iretd;
0xffffffff822d5a2a: push rbx; add [rax+rbp*8+0x627c8a20], bl; cwde; xchg esp, eax; imul ebx, esi, 0x5a5ab7f0; iretd;
0xffffffff8241f349: push rbx; add al, 0xea; xchg esp, eax; xor [rdi-0x360d4531], esp; iretd;
0xffffffff81703cc7: push rbx; add rsp, 0x10; pop rbx; ret;
0xffffffff819a1266: push rbx; add rsp, 0x48; pop rbx; pop r14; ret;
0xffffffff824d14d8: push rbx; leave; cdq; cmc; or esi, [rbx]; iretd;
0xffffffff8245e53f: push rbx; leave; cdq; ret;
0xffffffff8236c1c9: push rbx; leave; iretq;
0xffffffff824dae00: push rbx; leave; xchg ebp, eax; iretd;
0xffffffff824d6e81: push rbx; mov edi, [rbp+rdi*4-0x28]; leave; pop rax; ret;
0xffffffff810b0323: push rbx; out dx, al; add [rdi], ecx; xchg esp, eax; ret 0xc208;
0xffffffff810b035f: push rbx; out dx, al; add [rdi], ecx; xchg esp, eax; ret 0xca08;
0xffffffff83488c39: push rbx; pop rsi; sar ch, cl; add rsp, 8; pop rbx; ret;
0xffffffff816ae216: push rbx; pop rsp; add [rcx-0x77], cl; ret 0x8948;
0xffffffff824b78f8: push rbx; pop rsp; cmc; iretd;
0xffffffff8255f245: push rbx; pop rsp; jmp far fword ptr [rbp+0x1e];
0xffffffff8255f247: push rbx; pop rsp; jmp far fword ptr [rbp+0x1e];
0xffffffff8254491c: push rbx; pop rsp; xlat [rbx]; iretd;
0xffffffff8250a091: push rbx; push rax; rcl dword ptr [rsi+0x4310f399], cl; leave; ret;
0xffffffff8348975f: push rbx; sar ch, cl; add rsp, 8; pop rbx; ret;
0xffffffff8348975e: push rbx; sar ch, cl; add rsp, 8; pop rbx; ret;
0xffffffff8250501a: push rbx; sar dword ptr [rip-0x6cd1da05], 1; imul eax, [rcx-0x8a2fbf0], 0x23; pop rsp; iretd;
0xffffffff835238f1: push rbx; sbb eax, 0xffffff81; inc dword ptr [rax]; pop rsp; sbb eax, 0xffffff81; jmp qword ptr [rax];
0xffffffff82480e3b: push rbx; xchg esp, eax; cli; call far fword ptr [rcx+0x54];
0xffffffff82471bdd: push rbx; xchg esp, eax; fstp qword ptr [rbp+0x7c], st; stosb [rdi]; ret 0xd81f;
0xffffffff822899ca: push rbx; xchg esp, eax; mov al, [0x5fb6977491959f48]; sub [rsi+0x404f53], cl; iretd;
0xffffffff82478c80: push rbx; xchg esp, eax; ret 0xf015;
0xffffffff825d7214: push rbx; xor r14b, [rax+0x2ebcc94e]; movsxd r14, [rax-0x7e]; pop rsp; test eax, 0x65e95c1c; call far fword ptr [rbx+0x66];
0xffffffff8247e35e: push rcx; adc ebx, [rbp+0x40]; xchg esp, eax; test byte ptr [rsi], 0x84; xchg ebx, eax; iretd;
0xffffffff82332e48: push rcx; adc rax, 0x7aa09a26; xchg esp, eax; ret 0x3fd5;
0xffffffff8252204e: push rcx; add [rax-0x28c93569], ecx; pop rsp; ret;
0xffffffff81a7e12e: push rcx; add al, 0x85; push rcx; or [rdi], cl; xchg esp, eax; ret 0xc789;
0xffffffff81a49222: push rcx; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff82257e9b: push rcx; and eax, 0x27726117; sub al, 0x23; pop rsp; pop rax; iretd;
0xffffffff8224e700: push rcx; clc; outsb dx, [rsi]; leave; shl qword ptr [rip+0x6f85397f], 0x5f; iretd;
0xffffffff81767adb: push rcx; clc; xchg esp, eax; call qword ptr [rax+0x699b9be8];
0xffffffff8243204d: push rcx; cmp al, 0xbf; leave; ret;
0xffffffff8346123b: push rcx; fcom st, st(4); std; add rsp, 8; pop rbx; ret;
0xffffffff8231297e: push rcx; mov [0xd4766988cde0d199], al; leave; ret;
0xffffffff81764ad5: push rcx; mov eax, ebp; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff811e07b8: push rcx; mov rax, rbx; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff81a7e131: push rcx; or [rdi], cl; xchg esp, eax; ret 0xc789;
0xffffffff824205ce: push rcx; or ecx, ebp; pop rsp; iretd;
0xffffffff8243e30f: push rcx; out dx, al; pop rsi; xchg [rbx-0x12], esp; ret 0xcc20;
0xffffffff8231ff15: push rcx; pop r12; xchg [rcx+0x7f], esp; iretd;
0xffffffff82668265: push rcx; pop rsp; jmp far fword ptr [rdi-0x6000a3b0];
0xffffffff822dd01e: push rcx; pop rsp; lahf; outsd dx, [rsi]; fcomi st, st(0); ret;
0xffffffff824ff81e: push rcx; pop rsp; ret 0xa553;
0xffffffff8108dde4: push rcx; std; add esp, eax; ret;
0xffffffff8265a54d: push rcx; xchg esp, eax; call far fword ptr [rdi-0x70006bb3];
0xffffffff82442c68: push rdi; add ah, [rax+0x3b]; cld; cli; xchg [rbp-0x24aa8fae], esp; notrack call rdi;
0xffffffff82442c69: push rdi; add ah, [rax+0x3b]; cld; cli; xchg [rbp-0x24aa8fae], esp; notrack call rdi;
0xffffffff834a2235: push rdi; enter 0xfdd0, 0x48; add esp, 8; pop rbx; ret;
0xffffffff82343909: push rdi; in eax, dx; adc esp, [rdx]; pop rsp; iretd;
0xffffffff81334275: push rdi; in eax, dx; xchg esp, eax; add [rax+0x63], cl; ret;
0xffffffff822a903a: push rdi; insd [rdi], dx; pop rsp; ret;
0xffffffff8116bf22: push rdi; leave; add cl, ch; call qword ptr [rcx];
0xffffffff8264f02d: push rdi; leave; jmp far fword ptr [rdi];
0xffffffff82253a56: push rdi; leave; push rsi; ret;
0xffffffff8348c6af: push rdi; mov eax, ebx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81699fbb: push rdi; or [rdi], cl; xchg esp, eax; ret 0x474;
0xffffffff83470435: push rdi; out 0xd3, al; std; add rsp, 8; pop rbx; ret;
0xffffffff823baa6f: push rdi; pop rdi; xchg esp, eax; iretd;
0xffffffff823a0c82: push rdi; pop rsp; or [rip-0x7db6533b], esp; xor eax, 0xa415ac8f; call rbp;
0xffffffff8232da49: push rdi; pop rsp; outsd dx, [rsi]; mov [rdi+0x688b3ecb], edi; ret 0x614c;
0xffffffff82547edb: push rdi; sbb eax, 0x7591be4f; sbb esp, esi; fwait; push rbp; ret 0xf670;
0xffffffff81467e95: push rdi; sbb esp, edx; dec dword ptr [rax-0x7b]; shl byte ptr [rsp+rdi+0x48], 0x89; ret;
0xffffffff822b5c01: push rdi; test bh, ch; data16 leave; ret;
0xffffffff824a6e43: push rdi; xchg ebx, esp; pushfq; adc al, 0xdd; stosb [rdi]; iretd;
0xffffffff822bf712: push rdi; xchg ecx, eax; xchg esp, eax; mov bh, 0x70; iretd;
0xffffffff83475835: push rdi; xchg edx, eax; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8254e406: push rdx; adc dh, [rsp+rbp]; pop rsp; and [rcx+0x2e8f8ded], eax; ret;
0xffffffff828ce9d9: push rdx; add [rax], al; xchg esp, eax; ret 5;
0xffffffff8227fea3: push rdx; add [rbx-0x113c1c53], sp; cli; leave; pop rsp; ret;
0xffffffff822e9cbe: push rdx; add esp, 0xffffffcd; adc [rcx], cl; mov ebp, 0x22ef45d4; push 0xffffffffef6c83aa; iretd;
0xffffffff82325798: push rdx; add esp, esp; scasd [rdi]; ret 0xae7;
0xffffffff818aab4e: push rdx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8197ce79: push rdx; add rsp, 0x10; pop rbx; ret;
0xffffffff8158a5c1: push rdx; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff82669c82: push rdx; dec dword ptr [rdi+0x4fff52ce]; leave; push rdx; jmp far fword ptr [rdi-0x5000ad38];
0xffffffff8230da3c: push rdx; lahf; xchg esp, eax; movsd [rdi], [rsi]; cld; ret 0x11bd;
0xffffffff822a5bbf: push rdx; leave; cmpsb [rsi], [rdi]; int1; cmp eax, 0xf5b0856b; iretd;
0xffffffff8229df57: push rdx; leave; fstp qword ptr [r10], st; cmp byte ptr [rsi+0x3d09a202], 0xcb; ret 0xbcf4;
0xffffffff82398f35: push rdx; leave; xchg ebx, eax; iretd;
0xffffffff8228a59c: push rdx; mov dh, [rbx-9]; xchg esp, eax; sub [rdi+0x316fdf05], al; ret 0xcb0b;
0xffffffff8117534a: push rdx; mov eax, ebx; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff81ae7be9: push rdx; mov rax, rbx; add rsp, 0x10; pop rbx; ret;
0xffffffff8232bc61: push rdx; movsd [rdi], [rsi]; leave; ret;
0xffffffff8240c676: push rdx; or [rsp+0x606c9571], dl; sub eax, [rax+0x2e]; leave; pop r9; ret 0x3c8e;
0xffffffff82668261: push rdx; pop rsp; call far fword ptr [rdi+0x51];
0xffffffff8222c59c: push rdx; pop rsp; push rax; in eax, 0xd; call qword ptr [rdi];
0xffffffff8239e9d0: push rdx; pop rsp; ret 0xd1f8;
0xffffffff8256c368: push rdx; pop rsp; ret;
0xffffffff82482909: push rdx; pop rsp; xor dh, [rcx+rcx*4-0x4924582b]; ret;
0xffffffff83579359: push rdx; sbb dh, dh; leave; cwde; ret;
0xffffffff82516b84: push rdx; stosd [rdi]; xor ebx, ecx; dec dword ptr [rdx]; leave; iretd;
0xffffffff823a37be: push rdx; xchg ebx, eax; pop rsp; cli; ret;
0xffffffff8179869b: push rdx; xchg esp, eax; dec dword ptr [rax-0x7d]; ret;
0xffffffff81946b4e: push rdx; xchg esp, eax; jmp qword ptr [rsi+0x66];
0xffffffff81b63209: push rsi; adc [rdi], cl; xchg esp, eax; ret 0xce89;
0xffffffff8252f640: push rsi; adc esp, esp; adc eax, 0xc8ed2267; iretd;
0xffffffff823893d9: push rsi; adc esp, esp; iretd;
0xffffffff82382445: push rsi; add esp, edx; ret;
0xffffffff8197298d: push rsi; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff819ae02b: push rsi; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff81a288dd: push rsi; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff81ba484a: push rsi; add rsp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff81a2a7d0: push rsi; add rsp, 0x60; pop rbx; pop r14; pop r15; ret;
0xffffffff8249eee9: push rsi; cmpsd [rsi], [rdi]; leave; xor [rcx+0x55729965], edi; jmp qword ptr [rdi+0x75];
0xffffffff83477d36: push rsi; insd [rdi], dx; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82498177: push rsi; leave; insd [rdi], dx; jmp qword ptr [rbp+0x69];
0xffffffff8110e246: push rsi; leave; mov ch, 0; cdqe; ret;
0xffffffff823bef9c: push rsi; leave; outsb dx, [rsi]; ret;
0xffffffff81053046: push rsi; leave; ret 0xbb00;
0xffffffff82381efd: push rsi; leave; ret;
0xffffffff823178bd: push rsi; leave; sbb ebp, [rax+0x475afd]; ret;
0xffffffff83473a36: push rsi; mov al, 0xd3; std; add rsp, 8; pop rbx; ret;
0xffffffff83456236: push rsi; mov ch, dl; std; add rsp, 8; ret;
0xffffffff827040ec: push rsi; mov cl, 0xe6; adc [rcx+0x75], dh; leave; jmp qword ptr [rdx-8];
0xffffffff818cb1df: push rsi; mov eax, ebx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff818fca8f: push rsi; mov ecx, 0x415b827b; pop rsp; pop r14; pop r15; ret;
0xffffffff825d8279: push rsi; movsxd esp, [rdx]; leave; cld; call qword ptr [rbx-0x7e];
0xffffffff81351d32: push rsi; or [rcx], dh; rol byte ptr [rbx+0xf062878], cl; xchg esp, eax; ret 0x8b48;
0xffffffff822db363: push rsi; pop rsp; iretd;
0xffffffff8105b05a: push rsi; rol dword ptr [rcx], 0xf; xchg esp, eax; ret;
0xffffffff8190e7b2: push rsi; rol dword ptr [rdx], 0xf; xchg esp, eax; ret;
0xffffffff823f7753: push rsi; stosb [rdi]; xchg esp, eax; shl byte ptr [rcx-0x3d], 1; mov esi, 0x2ada426e; ret;
0xffffffff82310478: push rsi; test al, 0x58; xchg esp, eax; mov edx, 0xb4a0140; ret 0x16f8;
0xffffffff8256820a: push rsi; xchg edi, eax; leave; pop rbx; popfq; jmp qword ptr [rdi-0x72fca4eb];
0xffffffff823c3171: push rsi; xchg esp, eax; fdiv st, qword ptr [rsi-0x47]; idiv spl; movsxd edx, eax; iretd;
0xffffffff824bee31: push rsi; xchg esp, eax; in al, dx; sbb [rbp-0x30a12b6], dl; iretd;
0xffffffff8265a549: push rsi; xchg esp, eax; jmp far fword ptr [rdi-0x60006baf];
0xffffffff824e902f: push rsi; xchg esp, eax; or ecx, [rdi+0x3d]; call far fword ptr [rsi-0x7b77430a];
0xffffffff824e9030: push rsi; xchg esp, eax; or ecx, [rdi+0x3d]; call far fword ptr [rsi-0x7b77430a];
0xffffffff812eebd6: push rsi; xchg esp, ebx; jmp qword ptr [rsi+0xf];
0xffffffff8238d5d9: push rsi; xchg rdx, rax; sbb bl, ah; leave; ret 0x298a;
0xffffffff81b272e6: push rsi; xor [rax], al; add [rcx-0x7a3fce3f], cl; leave; sete al; ret;
0xffffffff8252a826: push rsp; adc al, 0xb; pop rsp; ret;
0xffffffff8222c6ca: push rsp; adc esp, ebx; or ebx, [rbp-0xc2d6b71]; xchg [rbx-0x6d], ebp; iretd;
0xffffffff82808209: push rsp; add eax, [rax]; add [rax], al; add [rax], al; leave; jmp far fword ptr [rdx+0x53];
0xffffffff8344e738: push rsp; add edx, esi; std; add rsp, 8; pop rbx; ret;
0xffffffff815ab8fd: push rsp; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81e0193a: push rsp; and al, 8; mov rax, [rsp]; add rsp, 0x18; jmp rdi;
0xffffffff826cff2a: push rsp; cld; push qword ptr [rsi+0x6c9563fa]; fimul st, dword ptr [rsi]; mov esp, [rbx+0x73]; ret;
0xffffffff82702c6e: push rsp; fidiv st, dword ptr [rdi-4]; in eax, dx; mov edi, 0x7561740a; leave; jmp qword ptr [rbx+3];
0xffffffff8145ba47: push rsp; fistp word ptr [rbx+0x41], st; pop rsp; pop r14; pop r15; ret;
0xffffffff8256c140: push rsp; leave; mov ebx, 0x81600f5; mov dh, 0xd4; ret;
0xffffffff8267536e: push rsp; leave; or edx, gs:[rax+0x6d6ecc93]; ret;
0xffffffff823e71c7: push rsp; leave; ret;
0xffffffff83435530: push rsp; mov [0x415be8d002240018], eax; pop rsp; pop r14; pop r15; ret;
0xffffffff83476238: push rsp; mov bl, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff810a0ea8: push rsp; mov dl, 0x67; add esp, eax; ret 0x61;
0xffffffff822fce24: push rsp; mov esp, [rax-0x20d41d83]; movsd [rdi], [rsi]; ret;
0xffffffff825233a9: push rsp; movsb [rdi], [rsi]; xchg esp, eax; mov bh, 0x8c; ret 0x5e0b;
0xffffffff811634de: push rsp; or eax, 0xb70f024b; leave; not ecx; and eax, ecx; ret;
0xffffffff8121ea89: push rsp; pop rsp; add [rax+1], ecx; iretd;
0xffffffff822e91da: push rsp; pop rsp; cld; jmp far fword ptr [rdi];
0xffffffff82391e75: push rsp; pop rsp; in eax, dx; ret 0x87b1;
0xffffffff824f7bc3: push rsp; pop rsp; ret 0xca40;
0xffffffff82297b90: push rsp; popfq; fcom st, dword ptr [rcx+0x26]; xchg [rcx-7], esp; rcpps xmm1, [rbp+0x54964d40]; ret;
0xffffffff825521bc: push rsp; ror byte ptr [rdx+0x35d8c2ec], 1; pop rsp; ret 0x9f16;
0xffffffff822e52a3: push rsp; std; xchg esp, eax; mov al, [0x9e5bb01895bb1816]; iretd;
0xffffffff82557ec4: push rsp; stosb [rdi]; or ebx, [rcx]; xchg esp, eax; iretd;
0xffffffff82510d5f: push rsp; sub [rbx-0x3d57ddd4], eax; pop rsp; fadd st, st(1); sub [rdi+5], eax; jmp qword ptr [rsi-0x7b];
0xffffffff8269ffce: push rsp; sub esp, [rsi+0x63]; xchg esp, eax; out 0xff, eax; iretd;
0xffffffff826ee1e3: push rsp; xchg [rax+rbp*4], esp; jmp far fword ptr [rdi+0x73e895f6];
0xffffffff826ee216: push rsp; xchg [rax+rbp*4], esp; jmp qword ptr [rdx+0x79];
0xffffffff826f6b72: push rsp; xchg [rbx], esp; iretd;
0xffffffff82709d45: push rsp; xchg [rsi-0x45], esp; mov [0x540dbfec695404bf], al; cld; jmp far fword ptr gs:[rax-0x1c];
0xffffffff82227b4d: push rsp; xchg esp, eax; iretd;
0xffffffff823671fd: push rsp; xchg esp, eax; mov ebp, 0x5cf3e705; and al, 0x62; in eax, 0x52; ret 0x1255;
0xffffffff822a738e: push rsp; xchg esp, eax; ret 0x7055;
0xffffffff82230710: push rsp; xor ecx, [rax+0x17911e00]; lahf; pop rsp; ret 0x5a29;
0xffffffff8285e2e4: pushfq; add [rax], al; add esp, edx; iretd;
0xffffffff8198c017: pushfq; add [rax], eax; add [rcx-0x75], al; xchg [rax-0x76ffffff], esp; ret 0xfad1;
0xffffffff82245d3e: pushfq; imul ebp, [rdi-0x24], 0x50; pop rsp; iretd;
0xffffffff822e784e: pushfq; in al, 0x82; xchg esp, edi; push rbx; ret;
0xffffffff8228f744: pushfq; lahf; xchg edx, eax; cli; mov esp, ss; ret;
0xffffffff82415153: pushfq; leave; add edx, [rsi]; jmp far fword ptr [rcx+0x15];
0xffffffff819dbf57: pushfq; leave; ret;
0xffffffff822e7f9c: pushfq; mov ds, [rax-0x250a6532]; leave; ret 0xad63;
0xffffffff81036d00: pushfq; mov esp, es; add [rbx-0x2044b9fb], cl; add [rbx-0x76fbdbb4], ecx; ret 0xe283;
0xffffffff8256b10c: pushfq; or eax, 0xa0121b01; pop rsp; sub al, 0xa9; ret;
0xffffffff822ea65f: pushfq; pop rsp; cmp bh, dl; ret;
0xffffffff822688cc: pushfq; pop rsp; iretd;
0xffffffff82668169: pushfq; pop rsp; jmp far fword ptr [rdi];
0xffffffff822b1604: pushfq; pop rsp; movsd [rdi], [rsi]; ret 0xadb8;
0xffffffff823b0bdf: pushfq; pop rsp; pop rdi; test [rdx], ebx; std; ret 0xb4f6;
0xffffffff8256a058: pushfq; pop rsp; push rsp; out 0xb8, al; ret 0x8d5b;
0xffffffff8245676e: pushfq; pop rsp; shr byte ptr [rsi+rcx*4], 0x3d; call r12;
0xffffffff81e01373: pushfq; push 0x10; push 0xffffffff81e013a0; add rsp, 0x30; pop rdx; iretq;
0xffffffff834616f0: pushfq; rcl esp, cl; std; add rsp, 8; pop rbx; ret;
0xffffffff83484dec: pushfq; sar ch, cl; add rsp, 8; pop rbx; ret;
0xffffffff83474e43: pushfq; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff81417590: pushfq; std; leave; call qword ptr [rax-0x6f6f6f70];
0xffffffff82400384: pushfq; sub esp, esi; ret;
0xffffffff82483a0b: pushfq; xchg ecx, esi; xchg edx, esp; iretd;
0xffffffff825d81f0: pushfq; xchg ecx, esp; and al, 0x94; ret 0x1d3c;
0xffffffff81339366: pushfq; xchg esp, eax; add [rax-0x7d], cl; ret;
0xffffffff8247915f: pushfq; xchg esp, eax; iretd;
0xffffffff8265a459: pushfq; xchg esp, eax; jmp far fword ptr [rdi-0x64];
0xffffffff8224a6f8: pushfq; xchg esp, eax; ret 0x378b;
0xffffffff822dd19f: pushfq; xor rax, 0x4b6af4e; movsxd ebp, eax; leave; cmp eax, 0x852bff76; ret 0xa800;
0xffffffff834629dc: rcl ah, 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff8346199f: rcl ah, 1; std; add rsp, 8; pop rbx; ret;
0xffffffff8346181c: rcl ah, cl; std; add rsp, 8; pop rbx; ret;
0xffffffff834a17cf: rcl al, cl; std; add rsp, 8; pop rbx; ret;
0xffffffff83472a76: rcl bl, 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff834717e5: rcl bl, cl; std; add rsp, 8; pop rbx; ret;
0xffffffff83471726: rcl bx, cl; std; add rsp, 8; pop rbx; ret;
0xffffffff82237b5a: rcl byte ptr [r8-0xcc7c40a], 0xb2; pop rsp; ret;
0xffffffff8118e5d1: rcl byte ptr [rax+0x5b81e016], 0x41; pop rsp; pop r14; pop r15; ret;
0xffffffff82237b5d: rcl byte ptr [rax-0xcc7c40a], 0xb2; pop rsp; ret;
0xffffffff82527481: rcl byte ptr [rax], 0xc9; test [rdx+0x4e5d966d], dl; sbb ah, [rip+0x161fed76]; xchg esp, eax; iretd;
0xffffffff8250a090: rcl byte ptr [rbx+0x3e], 0x67; push rax; rcl dword ptr [rsi+0x4310f399], cl; leave; ret;
0xffffffff83527780: rcl byte ptr [rbx-0x7ed8], 0xff; inc dword ptr [rax]; xchg esp, eax; sub [rcx-1], al; rcl byte ptr [rax+rbp-0x7f], 1; call qword ptr [rax];
0xffffffff8265a37d: rcl byte ptr [rdi+rdi*8-0x6b3ff1], 0x1f; mov edi, 0xbe9fff94; xchg esp, eax; call far fword ptr [rdi];
0xffffffff81596794: rcl byte ptr [rdx+0x5b815967], 0x41; pop rsp; pop r14; pop r15; ret;
0xffffffff82415bdc: rcl ch, 8; xchg esp, eax; sub eax, 0x69e442ab; iretd;
0xffffffff83441993: rcl dh, 1; std; add rsp, 8; pop rbx; ret;
0xffffffff81b3cdb4: rcl dword ptr [rax], 0xf; xchg esp, eax; ret 0xc208;
0xffffffff8100cad8: rcl dword ptr [rax], 0xf; xchg esp, eax; ret 0xd038;
0xffffffff819d9226: rcl dword ptr [rax], 0xf; xchg esp, eax; ret;
0xffffffff81a6deb2: rcl dword ptr [rbx+0x75e80020], cl; xchg esp, eax; call qword ptr fs:[rax-0x6f6f6f70];
0xffffffff8250ffda: rcl dword ptr [rcx-0x2b871eeb], cl; leave; lahf; call rdi;
0xffffffff82267416: rcl dword ptr [rdi+0x1ccae2c8], 0xda; pop rsp; iretd;
0xffffffff8265a339: rcl dword ptr [rdi+rdi*8-0x6b3061], 1; dec esi; xchg esp, eax; jmp far fword ptr [rdi-0x32];
0xffffffff8265a375: rcl dword ptr [rdi+rdi*8-0x6b3e41], 0x2f; rcl byte ptr [rdi+rdi*8-0x6b3ff1], 0x1f; mov edi, 0xbe9fff94; xchg esp, eax; call far fword ptr [rdi];
0xffffffff823dea7f: rcl dword ptr [rdx], cl; test [rbx], dl; xchg ebx, eax; cmp dh, [rax+0x50]; pop rsp; ret 0x2fe7;
0xffffffff8250a095: rcl dword ptr [rsi+0x4310f399], cl; leave; ret;
0xffffffff834a18c2: rcl eax, 1; std; add rsp, 8; pop rbx; ret;
0xffffffff834a1746: rcl eax, cl; std; add rsp, 8; pop rbx; ret;
0xffffffff834a1772: rcl eax, cl; std; add rsp, 8; ret;
0xffffffff83472956: rcl ebx, 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff83472957: rcl ebx, 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff83471727: rcl ebx, cl; std; add rsp, 8; pop rbx; ret;
0xffffffff82421f30: rcl esi, 1; leave; iretd;
0xffffffff834616f1: rcl esp, cl; std; add rsp, 8; pop rbx; ret;
0xffffffff8347183f: rcl r11b, cl; std; add rsp, 8; pop rbx; ret;
0xffffffff834a1745: rcl r8d, cl; std; add rsp, 8; pop rbx; ret;
0xffffffff834a0dba: rcr ah, cl; sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff824a7998: rcr bl, 0x7e; clc; sbb bl, [rax+0x392a1045]; fwait; pop rsp; iretd;
0xffffffff8192f3c1: rcr byte ptr [rax+0x48], 3; xchg eax, esp; add [rax], al; add bl, al; xor eax, eax; ret;
0xffffffff823a21e5: rcr byte ptr [rax+0x69f9d757], cl; mov [rbp+0x11f00517], edi; sbb al, 0x1b; mov bl, 0x14; xchg esp, eax; ret;
0xffffffff824e93c1: rcr byte ptr [rax-0x73fc2861], 0xec; mov esp, ebp; cmovp esp, [rax-0x11]; mov [0x177a2218e6748b49], al; iretd;
0xffffffff824be813: rcr byte ptr [rbx+0x1b], cl; mov edx, 0xe68c2d92; fwait; out dx, al; leave; call qword ptr [rax+0x28];
0xffffffff815d1076: rcr byte ptr [rbx+0x41], 1; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff81344412: rcr byte ptr [rbx+0x41], 1; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff810ef501: rcr byte ptr [rbx+0x41], 1; pop rsp; pop r14; pop r15; ret;
0xffffffff8167526e: rcr byte ptr [rbx+0x41], cl; pop rsp; pop r14; pop r15; ret;
0xffffffff816bbeca: rcr byte ptr [rcx+rax], 0x31; ror byte ptr [rax-0x7d], cl; mov ecx, 0xb18; dec dword ptr [rdi]; xchg esp, eax; ret 0x4c8d;
0xffffffff817c984a: rcr byte ptr [rcx+rax], 0x80; sbb cl, ch; leave; xchg r9d, eax; jmp qword ptr [rsi+0xf];
0xffffffff826680d5: rcr byte ptr [rdi+rdi*8-0x11], 0xbf; pop rsp; call far fword ptr [rdi+0x5fff5cbd];
0xffffffff824b1a16: rcr byte ptr [rsi+0x51], 0xca; xchg esp, eax; bswap ebp; shl dword ptr [rax], 1; movsb [rdi], [rsi]; iretd;
0xffffffff83463220: rcr ch, 1; std; add rsp, 8; mov [rip-0xc7b89e], rax; ret;
0xffffffff822b2ea7: rcr dword ptr [rax-0x3136e61f], cl; mov sil, 0xc8; pop rsp; ret;
0xffffffff817af888: rcr dword ptr [rbx+0x41], 1; pop rsp; pop r14; pop r15; ret;
0xffffffff82236682: rcr dword ptr [rcx-0x7b], 0x3a; leave; pop rax; iretd;
0xffffffff82522557: rcr dword ptr [rcx], cl; leave; xor al, 0x5b; ret 0x7106;
0xffffffff826680c9: rcr dword ptr [rdi+rdi*8+0x5f], 0xc1; pop rsp; jmp far fword ptr [rdi-0x40];
0xffffffff826680c5: rcr dword ptr [rdi+rdi*8-0x61], 0xc1; pop rsp; call far fword ptr [rdi-0x3f];
0xffffffff822e7f9b: rcr dword ptr [rsi+rcx*4-0xa653168], 0xda; leave; ret 0xad63;
0xffffffff8235938b: rcr ebp, cl; fnstenv [rbx]; xlat [rbx]; leave; ret;
0xffffffff8223169f: rcr edi, cl; leave; out 0x3d, eax; iretd;
0xffffffff8174ab0c: rdtsc; leave; cmp qword ptr [rdi+8], 0; mov eax, 0x1001; cmovne eax, ecx; ret;
0xffffffff822d708e: rep ret;
0xffffffff81036ca9: rep ret;
0xffffffff81033af5: rep ret;
0xffffffff825dabef: rep ret;
0xffffffff81432399: ret 0;
0xffffffff8298a18c: ret 0;
0xffffffff8100032e: ret 0;
0xffffffff810148aa: ret 0x1000;
0xffffffff81bab32e: ret 0x1001;
0xffffffff83449ac5: ret 0x1003;
0xffffffff814d2c52: ret 0x1004;
0xffffffff823846e6: ret 0x1007;
0xffffffff8102f336: ret 0x100;
0xffffffff8173aeef: ret 0x100b;
0xffffffff8115836a: ret 0x100c;
0xffffffff813147b5: ret 0x100d;
0xffffffff817873d2: ret 0x100f;
0xffffffff81110d47: ret 0x1010;
0xffffffff81110d17: ret 0x1011;
0xffffffff83449b2f: ret 0x1018;
0xffffffff8243767a: ret 0x1019;
0xffffffff8125685a: ret 0x101;
0xffffffff814d2dbe: ret 0x101a;
0xffffffff823117b2: ret 0x101b;
0xffffffff823e2abd: ret 0x101f;
0xffffffff8241ba92: ret 0x1022;
0xffffffff82481276: ret 0x1023;
0xffffffff822edcca: ret 0x1026;
0xffffffff824331f5: ret 0x1027;
0xffffffff8173add5: ret 0x1028;
0xffffffff823d50f8: ret 0x1029;
0xffffffff829ea788: ret 0x102;
0xffffffff83449b91: ret 0x102b;
0xffffffff82542839: ret 0x102c;
0xffffffff822e3551: ret 0x102d;
0xffffffff83488bf2: ret 0x102f;
0xffffffff822ee231: ret 0x1030;
0xffffffff8248f5fb: ret 0x1033;
0xffffffff8236bc1e: ret 0x1037;
0xffffffff8158db6b: ret 0x103;
0xffffffff81a51b08: ret 0x103c;
0xffffffff8118808a: ret 0x103d;
0xffffffff822ee0ed: ret 0x103e;
0xffffffff8173ae17: ret 0x1045;
0xffffffff811b7fec: ret 0x1048;
0xffffffff8191bbc4: ret 0x104;
0xffffffff82362a1b: ret 0x104a;
0xffffffff8228d0d1: ret 0x104c;
0xffffffff82389852: ret 0x104d;
0xffffffff824828ff: ret 0x104e;
0xffffffff829dfad4: ret 0x1053;
0xffffffff823efa70: ret 0x1058;
0xffffffff81c66299: ret 0x105;
0xffffffff814cf73a: ret 0x105b;
0xffffffff81a519f9: ret 0x1060;
0xffffffff8173aded: ret 0x1063;
0xffffffff8244eb98: ret 0x1065;
0xffffffff8124d59f: ret 0x1067;
0xffffffff8222e49c: ret 0x106a;
0xffffffff82238998: ret 0x106b;
0xffffffff814d4b84: ret 0x106c;
0xffffffff81a50fbf: ret 0x106e;
0xffffffff82252be4: ret 0x1071;
0xffffffff8150fa24: ret 0x1072;
0xffffffff811135c7: ret 0x1073;
0xffffffff8193fda4: ret 0x1074;
0xffffffff812f1313: ret 0x1075;
0xffffffff816db6e5: ret 0x1076;
0xffffffff8345df18: ret 0x1077;
0xffffffff829e25d4: ret 0x1078;
0xffffffff814fbda0: ret 0x107;
0xffffffff822e86f1: ret 0x107d;
0xffffffff824626e0: ret 0x107f;
0xffffffff81a51e3d: ret 0x1084;
0xffffffff8118388a: ret 0x1085;
0xffffffff81478184: ret 0x1088;
0xffffffff8173aeb0: ret 0x1089;
0xffffffff813e8ec8: ret 0x108;
0xffffffff8143b284: ret 0x108b;
0xffffffff82438ba8: ret 0x108c;
0xffffffff82514dad: ret 0x1093;
0xffffffff83449c5c: ret 0x1096;
0xffffffff82385568: ret 0x109;
0xffffffff817e416f: ret 0x109a;
0xffffffff823dbc95: ret 0x109c;
0xffffffff829e6734: ret 0x109f;
0xffffffff810345ff: ret 0x10;
0xffffffff81159156: ret 0x10;
0xffffffff815bf9b3: ret 0x10a0;
0xffffffff8173ae72: ret 0x10a9;
0xffffffff813e8df7: ret 0x10a;
0xffffffff823ded2f: ret 0x10aa;
0xffffffff823e6b30: ret 0x10ac;
0xffffffff81a62faf: ret 0x10b1;
0xffffffff829e8518: ret 0x10b2;
0xffffffff8224d083: ret 0x10b3;
0xffffffff8224d082: ret 0x10b3;
0xffffffff817e42f0: ret 0x10b7;
0xffffffff822a5564: ret 0x10b8;
0xffffffff815c433d: ret 0x10b9;
0xffffffff829f7c84: ret 0x10b;
0xffffffff81a7eff8: ret 0x10bd;
0xffffffff818a1d3d: ret 0x10be;
0xffffffff823e286c: ret 0x10bf;
0xffffffff8246b4b6: ret 0x10c1;
0xffffffff81b7690a: ret 0x10c6;
0xffffffff8165cb4b: ret 0x10c;
0xffffffff8173b010: ret 0x10cc;
0xffffffff823a5119: ret 0x10ce;
0xffffffff8240b81e: ret 0x10d3;
0xffffffff82282627: ret 0x10d8;
0xffffffff8267d820: ret 0x10d9;
0xffffffff81274dd0: ret 0x10d;
0xffffffff82395ec9: ret 0x10e0;
0xffffffff825da6d3: ret 0x10e2;
0xffffffff8173b390: ret 0x10e4;
0xffffffff81117106: ret 0x10e8;
0xffffffff824405bd: ret 0x10e;
0xffffffff834320fa: ret 0x10eb;
0xffffffff82384ad0: ret 0x10f0;
0xffffffff82363681: ret 0x10f8;
0xffffffff823fb00d: ret 0x10f9;
0xffffffff8165cf82: ret 0x10f;
0xffffffff82242581: ret 0x10fb;
0xffffffff8252b70e: ret 0x10fc;
0xffffffff8254dd0b: ret 0x10fe;
0xffffffff8200d3fe: ret 0x10ff;
0xffffffff81b22751: ret 0x1100;
0xffffffff83449e47: ret 0x1107;
0xffffffff819bf40f: ret 0x110;
0xffffffff822b745c: ret 0x110b;
0xffffffff824cc94d: ret 0x110c;
0xffffffff829efc28: ret 0x110e;
0xffffffff8173b3ba: ret 0x1110;
0xffffffff83449e78: ret 0x1112;
0xffffffff822d770c: ret 0x1119;
0xffffffff82a0100c: ret 0x111;
0xffffffff82332465: ret 0x111a;
0xffffffff8240812d: ret 0x1125;
0xffffffff824806ed: ret 0x112;
0xffffffff8173b413: ret 0x112d;
0xffffffff822df461: ret 0x1130;
0xffffffff824063eb: ret 0x1134;
0xffffffff814d4fd0: ret 0x1135;
0xffffffff8187e2ba: ret 0x113b;
0xffffffff8243de6c: ret 0x113e;
0xffffffff83449ead: ret 0x1147;
0xffffffff815379c1: ret 0x114;
0xffffffff8173b171: ret 0x114d;
0xffffffff82423c7f: ret 0x114e;
0xffffffff83449f0b: ret 0x1150;
0xffffffff823e4d1b: ret 0x1153;
0xffffffff8251bac8: ret 0x1156;
0xffffffff8227eb94: ret 0x1158;
0xffffffff810aea7a: ret 0x115;
0xffffffff817e4a09: ret 0x115a;
0xffffffff825da6ea: ret 0x115d;
0xffffffff8224af2a: ret 0x1161;
0xffffffff82379b0e: ret 0x1166;
0xffffffff822363f8: ret 0x1168;
0xffffffff81057618: ret 0x1172;
0xffffffff8175ce25: ret 0x1174;
0xffffffff812a9388: ret 0x1175;
0xffffffff8119084f: ret 0x1176;
0xffffffff81006835: ret 0x1178;
0xffffffff829fa704: ret 0x117a;
0xffffffff823459c8: ret 0x117f;
0xffffffff8125c24a: ret 0x1188;
0xffffffff822cde1a: ret 0x118a;
0xffffffff8173b134: ret 0x118c;
0xffffffff81c7d125: ret 0x1191;
0xffffffff82252a5f: ret 0x1195;
0xffffffff8344a060: ret 0x1196;
0xffffffff829fdfbc: ret 0x119d;
0xffffffff8253ba6b: ret 0x119f;
0xffffffff814c63e0: ret 0x11;
0xffffffff8346b7e3: ret 0x11a0;
0xffffffff8346b9c9: ret 0x11a8;
0xffffffff824ad413: ret 0x11ab;
0xffffffff82a0022c: ret 0x11b0;
0xffffffff82a003b8: ret 0x11b1;
0xffffffff8346b9f7: ret 0x11b3;
0xffffffff81002a5a: ret 0x11b9;
0xffffffff8230da42: ret 0x11bd;
0xffffffff82386cb5: ret 0x11bf;
0xffffffff82547b1a: ret 0x11c0;
0xffffffff8173b0dc: ret 0x11c1;
0xffffffff824c973d: ret 0x11c3;
0xffffffff823e14d3: ret 0x11c7;
0xffffffff8161bc0e: ret 0x11c;
0xffffffff82558646: ret 0x11cc;
0xffffffff810dba1a: ret 0x11d0;
0xffffffff81b4b0aa: ret 0x11d1;
0xffffffff82493cbf: ret 0x11d2;
0xffffffff816915ba: ret 0x11d5;
0xffffffff824b223e: ret 0x11d8;
0xffffffff82810f2c: ret 0x11d;
0xffffffff8344a124: ret 0x11da;
0xffffffff82287110: ret 0x11db;
0xffffffff8225def6: ret 0x11dc;
0xffffffff8244a149: ret 0x11dd;
0xffffffff81b55e03: ret 0x11e0;
0xffffffff817e4c58: ret 0x11e1;
0xffffffff8173b7f3: ret 0x11e3;
0xffffffff82a043bc: ret 0x11e5;
0xffffffff82a045b8: ret 0x11e7;
0xffffffff81151739: ret 0x11e8;
0xffffffff816c622c: ret 0x11e;
0xffffffff810f8278: ret 0x11eb;
0xffffffff8256aa34: ret 0x11ed;
0xffffffff8230ea14: ret 0x11ee;
0xffffffff824f4953: ret 0x11ef;
0xffffffff82a05440: ret 0x11f2;
0xffffffff82a05544: ret 0x11f3;
0xffffffff8234edaa: ret 0x11f6;
0xffffffff811b825c: ret 0x11f8;
0xffffffff8172cd12: ret 0x11f;
0xffffffff8173b84a: ret 0x11fa;
0xffffffff822afd25: ret 0x11fb;
0xffffffff835a8e26: ret 0x11fd;
0xffffffff8188ff62: ret 0x1208;
0xffffffff82a07824: ret 0x1209;
0xffffffff834a4380: ret 0x120;
0xffffffff8224a325: ret 0x120f;
0xffffffff8344a289: ret 0x1210;
0xffffffff82457503: ret 0x1214;
0xffffffff814d6ec4: ret 0x1215;
0xffffffff82a089bc: ret 0x1216;
0xffffffff8344a2ba: ret 0x1218;
0xffffffff8173b86b: ret 0x1219;
0xffffffff8237a9b2: ret 0x121a;
0xffffffff82a09258: ret 0x121b;
0xffffffff823c4f7c: ret 0x121c;
0xffffffff823b059c: ret 0x121e;
0xffffffff8226082d: ret 0x121f;
0xffffffff8344a2eb: ret 0x1220;
0xffffffff824114dd: ret 0x1223;
0xffffffff8226a724: ret 0x1226;
0xffffffff8246de63: ret 0x122;
0xffffffff814d7317: ret 0x122b;
0xffffffff8233e0a2: ret 0x122d;
0xffffffff83496604: ret 0x1230;
0xffffffff822e82af: ret 0x1231;
0xffffffff814d2fda: ret 0x1236;
0xffffffff8228ea36: ret 0x1237;
0xffffffff8280aa70: ret 0x123;
0xffffffff8231d9f0: ret 0x123a;
0xffffffff8173b82a: ret 0x123f;
0xffffffff817e4223: ret 0x1240;
0xffffffff82291140: ret 0x1242;
0xffffffff82501998: ret 0x1243;
0xffffffff814d7844: ret 0x1244;
0xffffffff8246d15a: ret 0x1245;
0xffffffff823d89e7: ret 0x1247;
0xffffffff822d18bb: ret 0x1249;
0xffffffff814d3207: ret 0x124e;
0xffffffff822c8aab: ret 0x1250;
0xffffffff82367208: ret 0x1255;
0xffffffff82a0e0fc: ret 0x1256;
0xffffffff81c4e555: ret 0x1257;
0xffffffff82564c0a: ret 0x125;
0xffffffff8173b944: ret 0x125a;
0xffffffff822f9cca: ret 0x125b;
0xffffffff824374d7: ret 0x125f;
0xffffffff823ae086: ret 0x1261;
0xffffffff822df3dc: ret 0x1262;
0xffffffff825d7d79: ret 0x1265;
0xffffffff82375c4e: ret 0x1268;
0xffffffff82a24eb4: ret 0x126;
0xffffffff817e428c: ret 0x126a;
0xffffffff8344a31b: ret 0x126c;
0xffffffff82a10470: ret 0x126d;
0xffffffff810f0e9a: ret 0x1270;
0xffffffff822694a1: ret 0x1271;
0xffffffff823deeb3: ret 0x1272;
0xffffffff81bcf195: ret 0x1273;
0xffffffff812607bc: ret 0x1274;
0xffffffff8131d3c6: ret 0x1275;
0xffffffff8128a637: ret 0x1276;
0xffffffff8146b757: ret 0x127c;
0xffffffff8344a385: ret 0x127d;
0xffffffff81c6ee84: ret 0x127e;
0xffffffff817e46ef: ret 0x127f;
0xffffffff8344a21f: ret 0x1281;
0xffffffff8344a424: ret 0x1286;
0xffffffff8173b96a: ret 0x1288;
0xffffffff81a2609c: ret 0x128;
0xffffffff8344a459: ret 0x128e;
0xffffffff822f6471: ret 0x1291;
0xffffffff814d3c43: ret 0x1292;
0xffffffff82324f45: ret 0x1294;
0xffffffff8344a48e: ret 0x1297;
0xffffffff82512fc1: ret 0x1299;
0xffffffff82868b00: ret 0x129;
0xffffffff81ba359e: ret 0x129b;
0xffffffff82a15b78: ret 0x12;
0xffffffff813790ca: ret 0x12;
0xffffffff814d481f: ret 0x12a1;
0xffffffff817e46ca: ret 0x12a7;
0xffffffff822fbb94: ret 0x12a8;
0xffffffff82a2ba90: ret 0x12a;
0xffffffff812950ac: ret 0x12b0;
0xffffffff82463699: ret 0x12b4;
0xffffffff822662f7: ret 0x12b7;
0xffffffff814d9ccc: ret 0x12b8;
0xffffffff8221a5e6: ret 0x12b;
0xffffffff824ab836: ret 0x12bf;
0xffffffff8173b914: ret 0x12c0;
0xffffffff822f3ff6: ret 0x12c3;
0xffffffff8230c058: ret 0x12ca;
0xffffffff8235b040: ret 0x12cb;
0xffffffff8346bc04: ret 0x12d0;
0xffffffff8348f599: ret 0x12d2;
0xffffffff8231f7c2: ret 0x12d5;
0xffffffff82a17574: ret 0x12d6;
0xffffffff817e53ff: ret 0x12d7;
0xffffffff824173c3: ret 0x12d8;
0xffffffff82a17b48: ret 0x12d9;
0xffffffff824e763a: ret 0x12d;
0xffffffff8195dd70: ret 0x12e0;
0xffffffff82332209: ret 0x12e2;
0xffffffff8234727e: ret 0x12e3;
0xffffffff81b54ada: ret 0x12e5;
0xffffffff83443304: ret 0x12e8;
0xffffffff8189f59a: ret 0x12e;
0xffffffff8118613e: ret 0x12eb;
0xffffffff8173b7ba: ret 0x12ee;
0xffffffff812950c2: ret 0x12f0;
0xffffffff82a18b24: ret 0x12f2;
0xffffffff8187ff4a: ret 0x12f5;
0xffffffff8223dce3: ret 0x12f6;
0xffffffff82337b25: ret 0x12f8;
0xffffffff814da452: ret 0x12fc;
0xffffffff82a190c4: ret 0x12ff;
0xffffffff82a1939c: ret 0x1302;
0xffffffff8234c273: ret 0x1303;
0xffffffff817e545c: ret 0x1306;
0xffffffff8256b9d3: ret 0x1307;
0xffffffff814da8ff: ret 0x1308;
0xffffffff812a1978: ret 0x130;
0xffffffff823e724d: ret 0x130d;
0xffffffff814dafe1: ret 0x1313;
0xffffffff8173b987: ret 0x1314;
0xffffffff82a3715c: ret 0x131;
0xffffffff82a1c048: ret 0x131a;
0xffffffff8241c2d7: ret 0x131b;
0xffffffff814db267: ret 0x131e;
0xffffffff8185cdca: ret 0x1322;
0xffffffff822908bc: ret 0x1325;
0xffffffff82539f4b: ret 0x1329;
0xffffffff82869cb4: ret 0x132;
0xffffffff824b00d5: ret 0x1331;
0xffffffff82a1d58c: ret 0x1338;
0xffffffff81acb738: ret 0x133;
0xffffffff822ba47a: ret 0x133b;
0xffffffff82a1e4d4: ret 0x133d;
0xffffffff82266d47: ret 0x1341;
0xffffffff817e549b: ret 0x1343;
0xffffffff822e9805: ret 0x1346;
0xffffffff811bd8ca: ret 0x1348;
0xffffffff82a3d9e4: ret 0x134;
0xffffffff82a201e4: ret 0x134e;
0xffffffff824c8789: ret 0x134f;
0xffffffff824c878a: ret 0x134f;
0xffffffff8173b8e7: ret 0x1351;
0xffffffff81341d09: ret 0x1355;
0xffffffff82423f25: ret 0x1356;
0xffffffff82a210f4: ret 0x1358;
0xffffffff82a3ec0c: ret 0x135;
0xffffffff8256bc7c: ret 0x135a;
0xffffffff8104d82a: ret 0x135b;
0xffffffff82a2234c: ret 0x1360;
0xffffffff8185a7fa: ret 0x1362;
0xffffffff82a22520: ret 0x1364;
0xffffffff8225c406: ret 0x1365;
0xffffffff81874aaa: ret 0x1366;
0xffffffff82246bc3: ret 0x1367;
0xffffffff82a227b8: ret 0x1368;
0xffffffff82a41360: ret 0x136;
0xffffffff8237ce50: ret 0x136e;
0xffffffff817d38a7: ret 0x1370;
0xffffffff817d38ff: ret 0x1371;
0xffffffff814dc2e9: ret 0x1372;
0xffffffff8115cd4e: ret 0x1374;
0xffffffff8157f39e: ret 0x1375;
0xffffffff815584eb: ret 0x1377;
0xffffffff81a8b72f: ret 0x137;
0xffffffff824a50a0: ret 0x137b;
0xffffffff817e53c3: ret 0x137d;
0xffffffff811bbb01: ret 0x1380;
0xffffffff82251fc7: ret 0x1381;
0xffffffff8346c2f3: ret 0x1383;
0xffffffff8173b9d5: ret 0x1386;
0xffffffff817d7d5a: ret 0x1388;
0xffffffff812d4be3: ret 0x1389;
0xffffffff8173b836: ret 0x138;
0xffffffff8346c321: ret 0x138b;
0xffffffff82529abd: ret 0x138d;
0xffffffff82529abe: ret 0x138d;
0xffffffff8346c34e: ret 0x1394;
0xffffffff8247c1a4: ret 0x1397;
0xffffffff817dbc57: ret 0x1398;
0xffffffff817ddff0: ret 0x1399;
0xffffffff82a45560: ret 0x139;
0xffffffff817de056: ret 0x139a;
0xffffffff817de070: ret 0x139b;
0xffffffff824e1186: ret 0x139d;
0xffffffff811a7acb: ret 0x13;
0xffffffff81e01325: ret 0x13a0;
0xffffffff822c2723: ret 0x13a5;
0xffffffff8173bb3e: ret 0x13a6;
0xffffffff82516532: ret 0x13a;
0xffffffff82326757: ret 0x13aa;
0xffffffff82244c22: ret 0x13ab;
0xffffffff824d2c1b: ret 0x13ac;
0xffffffff824810b3: ret 0x13af;
0xffffffff824fa32e: ret 0x13b2;
0xffffffff8238c5be: ret 0x13b3;
0xffffffff823f3970: ret 0x13b6;
0xffffffff823fca64: ret 0x13b7;
0xffffffff810dc1b3: ret 0x13b;
0xffffffff82403c6c: ret 0x13ba;
0xffffffff82a27180: ret 0x13bd;
0xffffffff82544306: ret 0x13c2;
0xffffffff8240fb9f: ret 0x13c3;
0xffffffff81e01333: ret 0x13c5;
0xffffffff8222db2c: ret 0x13c8;
0xffffffff8228300f: ret 0x13c;
0xffffffff824741b8: ret 0x13cb;
0xffffffff82436d76: ret 0x13d1;
0xffffffff824a4546: ret 0x13d2;
0xffffffff8246e986: ret 0x13d3;
0xffffffff8140b478: ret 0x13d;
0xffffffff8223af92: ret 0x13dc;
0xffffffff822dca2e: ret 0x13dd;
0xffffffff8198da77: ret 0x13de;
0xffffffff8228c22f: ret 0x13df;
0xffffffff82a29480: ret 0x13e1;
0xffffffff8173bb77: ret 0x13e7;
0xffffffff812c5a37: ret 0x13e8;
0xffffffff81b63fb7: ret 0x13e9;
0xffffffff82a2a014: ret 0x13ea;
0xffffffff81a4f02a: ret 0x13eb;
0xffffffff82a2a33c: ret 0x13ed;
0xffffffff814dbeb3: ret 0x13f0;
0xffffffff82363c34: ret 0x13f5;
0xffffffff8241a274: ret 0x13f8;
0xffffffff82a2afe0: ret 0x13fb;
0xffffffff81b11322: ret 0x1400;
0xffffffff81995bf8: ret 0x1403;
0xffffffff814dbc16: ret 0x1408;
0xffffffff811efcc4: ret 0x140;
0xffffffff824eff8f: ret 0x140a;
0xffffffff811ab7db: ret 0x140b;
0xffffffff8173bc45: ret 0x140e;
0xffffffff8240aec8: ret 0x1413;
0xffffffff82a2c158: ret 0x1415;
0xffffffff8249af74: ret 0x1419;
0xffffffff810dc1e3: ret 0x141;
0xffffffff8241037f: ret 0x141a;
0xffffffff814dca3b: ret 0x141b;
0xffffffff81b41cd7: ret 0x141c;
0xffffffff81b423c5: ret 0x141d;
0xffffffff811142e7: ret 0x1421;
0xffffffff8111431a: ret 0x1422;
0xffffffff818346dc: ret 0x1428;
0xffffffff81b65b37: ret 0x142;
0xffffffff81471289: ret 0x142a;
0xffffffff8244e91b: ret 0x142c;
0xffffffff814dc84c: ret 0x142d;
0xffffffff822bd2ef: ret 0x142f;
0xffffffff82342821: ret 0x1430;
0xffffffff82284eb5: ret 0x1432;
0xffffffff824978ed: ret 0x1435;
0xffffffff81b1906f: ret 0x143;
0xffffffff8247a292: ret 0x143d;
0xffffffff814de125: ret 0x1441;
0xffffffff82a2f1c8: ret 0x1443;
0xffffffff8247ca83: ret 0x1446;
0xffffffff824931fe: ret 0x1447;
0xffffffff81371f78: ret 0x144;
0xffffffff8241d280: ret 0x144c;
0xffffffff82a2fb1c: ret 0x144d;
0xffffffff814de3b8: ret 0x144f;
0xffffffff8228c30c: ret 0x1450;
0xffffffff82a303b0: ret 0x1452;
0xffffffff8231779f: ret 0x1453;
0xffffffff824c50b8: ret 0x1454;
0xffffffff824c50b9: ret 0x1454;
0xffffffff8229b62c: ret 0x1456;
0xffffffff82a30e94: ret 0x1458;
0xffffffff81108471: ret 0x145;
0xffffffff814de8c3: ret 0x145d;
0xffffffff8173bdb5: ret 0x145e;
0xffffffff82528318: ret 0x145f;
0xffffffff810346d0: ret 0x1460;
0xffffffff82a31388: ret 0x1463;
0xffffffff82418d67: ret 0x1466;
0xffffffff82418d68: ret 0x1466;
0xffffffff8222bd9f: ret 0x146;
0xffffffff8231287f: ret 0x1471;
0xffffffff8181f883: ret 0x1472;
0xffffffff81c295af: ret 0x1473;
0xffffffff81048f60: ret 0x1475;
0xffffffff8196d986: ret 0x1476;
0xffffffff82425690: ret 0x1477;
0xffffffff82324e77: ret 0x1478;
0xffffffff81b0478e: ret 0x1479;
0xffffffff81ad756d: ret 0x147;
0xffffffff81af8ace: ret 0x147d;
0xffffffff812a0d0a: ret 0x147e;
0xffffffff823ee03a: ret 0x1481;
0xffffffff834a16d3: ret 0x1484;
0xffffffff8161922b: ret 0x1489;
0xffffffff8102831c: ret 0x148;
0xffffffff816a2117: ret 0x148b;
0xffffffff8124dfd7: ret 0x148d;
0xffffffff8173bfc7: ret 0x1495;
0xffffffff81055f8f: ret 0x149;
0xffffffff8135afaa: ret 0x14;
0xffffffff823deae0: ret 0x14a2;
0xffffffff824f5f63: ret 0x14a;
0xffffffff8250247b: ret 0x14ab;
0xffffffff82a37604: ret 0x14ac;
0xffffffff8129d267: ret 0x14b0;
0xffffffff824f5615: ret 0x14b1;
0xffffffff8242f97e: ret 0x14b4;
0xffffffff824bdab8: ret 0x14b8;
0xffffffff81a3e767: ret 0x14b9;
0xffffffff8346c93f: ret 0x14bd;
0xffffffff8251e90f: ret 0x14be;
0xffffffff823d2f08: ret 0x14bf;
0xffffffff823649d1: ret 0x14c3;
0xffffffff811372f8: ret 0x14c;
0xffffffff8237a28e: ret 0x14cf;
0xffffffff8173bf0a: ret 0x14d4;
0xffffffff81063157: ret 0x14d;
0xffffffff82380e16: ret 0x14db;
0xffffffff82538a19: ret 0x14df;
0xffffffff82352207: ret 0x14e5;
0xffffffff82564333: ret 0x14e6;
0xffffffff822f92dd: ret 0x14e7;
0xffffffff822f92dc: ret 0x14e7;
0xffffffff81828286: ret 0x14e8;
0xffffffff813c9dde: ret 0x14eb;
0xffffffff8247f7a7: ret 0x14ee;
0xffffffff834a17e5: ret 0x14ef;
0xffffffff81034634: ret 0x14f0;
0xffffffff82a3caf8: ret 0x14f2;
0xffffffff822a9d8e: ret 0x14f4;
0xffffffff823ca9b4: ret 0x14f6;
0xffffffff824d3234: ret 0x14fd;
0xffffffff8200d4fa: ret 0x14ff;
0xffffffff822ffd28: ret 0x1501;
0xffffffff822f04a7: ret 0x1505;
0xffffffff814dea15: ret 0x1509;
0xffffffff816a46bc: ret 0x150;
0xffffffff82283e2e: ret 0x150b;
0xffffffff82a3ec68: ret 0x150c;
0xffffffff814dd5f7: ret 0x1513;
0xffffffff822ebb40: ret 0x1514;
0xffffffff8173c14f: ret 0x1519;
0xffffffff8286d4d0: ret 0x151;
0xffffffff82227d81: ret 0x151b;
0xffffffff816a0fff: ret 0x1520;
0xffffffff812e18b1: ret 0x1523;
0xffffffff824cd860: ret 0x1529;
0xffffffff812b7d24: ret 0x152;
0xffffffff824ea6c5: ret 0x152b;
0xffffffff8145687f: ret 0x1530;
0xffffffff8237b8d2: ret 0x1537;
0xffffffff8248c8ef: ret 0x1538;
0xffffffff818cb6df: ret 0x153;
0xffffffff8223b476: ret 0x153d;
0xffffffff8227adf7: ret 0x1543;
0xffffffff82a432f8: ret 0x1544;
0xffffffff81297ce0: ret 0x154;
0xffffffff8173c097: ret 0x1551;
0xffffffff822d9e6d: ret 0x1557;
0xffffffff81a3c425: ret 0x155;
0xffffffff8257182d: ret 0x155e;
0xffffffff82533e55: ret 0x1565;
0xffffffff823a5954: ret 0x1568;
0xffffffff82237aea: ret 0x156b;
0xffffffff8346cc11: ret 0x156e;
0xffffffff814f9d16: ret 0x1572;
0xffffffff811ebad9: ret 0x1573;
0xffffffff811d4d70: ret 0x1574;
0xffffffff817c1c02: ret 0x1575;
0xffffffff81008caf: ret 0x1576;
0xffffffff8231cf54: ret 0x1577;
0xffffffff82a4861c: ret 0x1579;
0xffffffff81267ced: ret 0x157;
0xffffffff82a48990: ret 0x157c;
0xffffffff8173c29d: ret 0x157d;
0xffffffff81a74b5f: ret 0x157e;
0xffffffff8181a1bd: ret 0x1580;
0xffffffff82231bd1: ret 0x1583;
0xffffffff823f659d: ret 0x1584;
0xffffffff8103c495: ret 0x1589;
0xffffffff816a46e5: ret 0x158;
0xffffffff82a4a234: ret 0x158a;
0xffffffff8251d52e: ret 0x158c;
0xffffffff823ef458: ret 0x158d;
0xffffffff824b5a47: ret 0x1591;
0xffffffff824dc222: ret 0x1596;
0xffffffff8124b2eb: ret 0x159;
0xffffffff82442dec: ret 0x159a;
0xffffffff824796a7: ret 0x15;
0xffffffff81afb9eb: ret 0x15a0;
0xffffffff824d3538: ret 0x15a2;
0xffffffff822d7ccd: ret 0x15a4;
0xffffffff8242424c: ret 0x15ab;
0xffffffff8234510b: ret 0x15ac;
0xffffffff82346d09: ret 0x15b2;
0xffffffff82a4ec28: ret 0x15b5;
0xffffffff8173c25c: ret 0x15b8;
0xffffffff82a4fae0: ret 0x15bd;
0xffffffff8228872e: ret 0x15c0;
0xffffffff824db374: ret 0x15c6;
0xffffffff810ae0aa: ret 0x15cb;
0xffffffff810addea: ret 0x15ce;
0xffffffff8240e854: ret 0x15d5;
0xffffffff82a7d364: ret 0x15d;
0xffffffff8173c3a2: ret 0x15de;
0xffffffff82a52a88: ret 0x15e2;
0xffffffff82477a91: ret 0x15e3;
0xffffffff82a52d64: ret 0x15e4;
0xffffffff822f73b8: ret 0x15e5;
0xffffffff81038a45: ret 0x15e8;
0xffffffff819a98b9: ret 0x15e;
0xffffffff810ac19a: ret 0x15ea;
0xffffffff811f8d02: ret 0x15eb;
0xffffffff822b8f50: ret 0x15ec;
0xffffffff824aafb2: ret 0x15ed;
0xffffffff810abd9a: ret 0x15ee;
0xffffffff824aa9c0: ret 0x15f0;
0xffffffff8246778f: ret 0x15f2;
0xffffffff810ab49a: ret 0x15f7;
0xffffffff82385b6f: ret 0x15f9;
0xffffffff811efc41: ret 0x15f;
0xffffffff82a55198: ret 0x15fb;
0xffffffff822ffa5d: ret 0x1600;
0xffffffff8173c65d: ret 0x1603;
0xffffffff817d8e06: ret 0x160;
0xffffffff8223f168: ret 0x160a;
0xffffffff82a56a2c: ret 0x160b;
0xffffffff824a9509: ret 0x1611;
0xffffffff8344ce9e: ret 0x1614;
0xffffffff8225f91c: ret 0x1619;
0xffffffff819236b3: ret 0x161;
0xffffffff8243ad72: ret 0x161e;
0xffffffff82529a16: ret 0x1621;
0xffffffff8173c8cd: ret 0x1624;
0xffffffff82484848: ret 0x1625;
0xffffffff823ba960: ret 0x1626;
0xffffffff81c4aa4c: ret 0x162e;
0xffffffff81a76a4a: ret 0x1633;
0xffffffff81c4aa55: ret 0x1636;
0xffffffff82a87484: ret 0x163;
0xffffffff824b4af4: ret 0x163c;
0xffffffff81c4aa5e: ret 0x163d;
0xffffffff82471505: ret 0x163e;
0xffffffff82314f8f: ret 0x163f;
0xffffffff82a5ca0c: ret 0x1640;
0xffffffff824159e9: ret 0x1641;
0xffffffff81c4aa72: ret 0x1643;
0xffffffff82243d50: ret 0x1645;
0xffffffff82498566: ret 0x1648;
0xffffffff82a5db98: ret 0x1649;
0xffffffff810dcc5a: ret 0x164b;
0xffffffff8173c8f3: ret 0x164c;
0xffffffff82266a5e: ret 0x164d;
0xffffffff82a5e754: ret 0x164f;
0xffffffff8129d2fb: ret 0x1650;
0xffffffff823e149c: ret 0x1657;
0xffffffff823677f2: ret 0x1658;
0xffffffff8118a3f0: ret 0x165;
0xffffffff8240444a: ret 0x165a;
0xffffffff8250f243: ret 0x165c;
0xffffffff817e598e: ret 0x1660;
0xffffffff81b1c89a: ret 0x1669;
0xffffffff81a78fec: ret 0x166;
0xffffffff8349ccff: ret 0x166a;
0xffffffff81b44e66: ret 0x166c;
0xffffffff8349661c: ret 0x1670;
0xffffffff8173c91f: ret 0x1672;
0xffffffff813d492b: ret 0x1673;
0xffffffff8185e6d3: ret 0x1674;
0xffffffff811f6ea4: ret 0x1675;
0xffffffff810fa5cd: ret 0x1676;
0xffffffff81234d6b: ret 0x1677;
0xffffffff817e82e3: ret 0x1678;
0xffffffff8109fe0f: ret 0x167;
0xffffffff822efd17: ret 0x167a;
0xffffffff822c6928: ret 0x167b;
0xffffffff81b515a6: ret 0x167c;
0xffffffff8247207b: ret 0x167e;
0xffffffff81191976: ret 0x1680;
0xffffffff82a62a6c: ret 0x1686;
0xffffffff8129a275: ret 0x1689;
0xffffffff8108fe06: ret 0x168;
0xffffffff8108ffd6: ret 0x168;
0xffffffff81b62599: ret 0x168a;
0xffffffff817ecc76: ret 0x1690;
0xffffffff81b199da: ret 0x1696;
0xffffffff8173c942: ret 0x1698;
0xffffffff8229b39f: ret 0x1699;
0xffffffff8107febf: ret 0x169;
0xffffffff8107febe: ret 0x169;
0xffffffff82a64a40: ret 0x169a;
0xffffffff82382e2d: ret 0x169f;
0xffffffff81ae9474: ret 0x16;
0xffffffff817f5078: ret 0x16a0;
0xffffffff817f50a0: ret 0x16a1;
0xffffffff817f53ac: ret 0x16a2;
0xffffffff817f53c6: ret 0x16a3;
0xffffffff817f53e0: ret 0x16a4;
0xffffffff817f57fd: ret 0x16a5;
0xffffffff817f58c5: ret 0x16a6;
0xffffffff822b902d: ret 0x16a7;
0xffffffff8106fe80: ret 0x16a;
0xffffffff82265acc: ret 0x16ab;
0xffffffff817f971c: ret 0x16ac;
0xffffffff817f9736: ret 0x16ad;
0xffffffff8112041a: ret 0x16b1;
0xffffffff8231a178: ret 0x16b4;
0xffffffff8224d615: ret 0x16b7;
0xffffffff82a67778: ret 0x16b9;
0xffffffff824bc6de: ret 0x16b;
0xffffffff82a69590: ret 0x16c7;
0xffffffff824ff326: ret 0x16ca;
0xffffffff834562d7: ret 0x16cb;
0xffffffff823db9e9: ret 0x16cc;
0xffffffff817fbc3d: ret 0x16d0;
0xffffffff82a6a244: ret 0x16d2;
0xffffffff817e7416: ret 0x16d3;
0xffffffff82a6a3d0: ret 0x16d4;
0xffffffff82a6af84: ret 0x16d8;
0xffffffff8113af96: ret 0x16d;
0xffffffff82234e02: ret 0x16db;
0xffffffff824d522e: ret 0x16dd;
0xffffffff824599dc: ret 0x16de;
0xffffffff82270093: ret 0x16e0;
0xffffffff82a6c148: ret 0x16e2;
0xffffffff81938520: ret 0x16e4;
0xffffffff824771f2: ret 0x16e6;
0xffffffff811dedc4: ret 0x16e8;
0xffffffff8156e784: ret 0x16e9;
0xffffffff822c235b: ret 0x16e;
0xffffffff824e4f08: ret 0x16eb;
0xffffffff81049d49: ret 0x16ec;
0xffffffff8227d1ec: ret 0x16ef;
0xffffffff824372d0: ret 0x16f0;
0xffffffff82310481: ret 0x16f8;
0xffffffff82a9c56c: ret 0x16f;
0xffffffff8173ca26: ret 0x16fc;
0xffffffff8193855a: ret 0x16fd;
0xffffffff823eeb09: ret 0x1700;
0xffffffff823b0797: ret 0x1709;
0xffffffff8117252d: ret 0x170;
0xffffffff82a70a24: ret 0x170a;
0xffffffff8249917a: ret 0x170b;
0xffffffff817d3028: ret 0x1710;
0xffffffff81938584: ret 0x1711;
0xffffffff818064ab: ret 0x1712;
0xffffffff818064c2: ret 0x1713;
0xffffffff818064f1: ret 0x1714;
0xffffffff818065c3: ret 0x1715;
0xffffffff82405fcd: ret 0x1717;
0xffffffff8246c8ca: ret 0x1718;
0xffffffff8142c5fa: ret 0x171;
0xffffffff81939329: ret 0x171d;
0xffffffff810274a6: ret 0x1720;
0xffffffff8233e930: ret 0x1727;
0xffffffff82a73730: ret 0x172f;
0xffffffff81804efd: ret 0x1730;
0xffffffff818056cf: ret 0x1731;
0xffffffff834878b2: ret 0x1732;
0xffffffff834878e1: ret 0x1733;
0xffffffff822d0dee: ret 0x1735;
0xffffffff81855946: ret 0x173;
0xffffffff8173ccba: ret 0x173d;
0xffffffff8229b8bd: ret 0x173e;
0xffffffff8180bbc9: ret 0x1740;
0xffffffff8180dfae: ret 0x1741;
0xffffffff8180e6c0: ret 0x1742;
0xffffffff8180e6db: ret 0x1743;
0xffffffff824e1442: ret 0x174;
0xffffffff822a73e9: ret 0x174d;
0xffffffff8187bd3a: ret 0x174f;
0xffffffff8248d368: ret 0x1750;
0xffffffff81ae059a: ret 0x1751;
0xffffffff8238ca8e: ret 0x1753;
0xffffffff824652e2: ret 0x1757;
0xffffffff816ab6b0: ret 0x175;
0xffffffff823afa59: ret 0x175d;
0xffffffff822e73c3: ret 0x175e;
0xffffffff82a76e6c: ret 0x175f;
0xffffffff82372155: ret 0x1763;
0xffffffff82449443: ret 0x1765;
0xffffffff81939445: ret 0x1766;
0xffffffff8173ccdc: ret 0x1768;
0xffffffff822c861c: ret 0x176c;
0xffffffff8138acc6: ret 0x1772;
0xffffffff81141589: ret 0x1773;
0xffffffff81025307: ret 0x1774;
0xffffffff81819247: ret 0x1778;
0xffffffff818192eb: ret 0x1779;
0xffffffff81819511: ret 0x177a;
0xffffffff8181952b: ret 0x177b;
0xffffffff81819b7c: ret 0x177c;
0xffffffff81819b93: ret 0x177d;
0xffffffff8181930f: ret 0x177e;
0xffffffff8181cf4e: ret 0x1780;
0xffffffff82a7a798: ret 0x1782;
0xffffffff8230441c: ret 0x1784;
0xffffffff822b2018: ret 0x1785;
0xffffffff824c27ad: ret 0x1787;
0xffffffff8253bd1a: ret 0x1788;
0xffffffff810537b0: ret 0x1789;
0xffffffff8105b264: ret 0x178;
0xffffffff824cb5df: ret 0x178a;
0xffffffff817d303d: ret 0x1790;
0xffffffff82381457: ret 0x1792;
0xffffffff8232f2ee: ret 0x1793;
0xffffffff8239596d: ret 0x1797;
0xffffffff8130a460: ret 0x179;
0xffffffff824c788d: ret 0x179a;
0xffffffff810217ea: ret 0x179d;
0xffffffff82a7d168: ret 0x179e;
0xffffffff816472a8: ret 0x179f;
0xffffffff82220020: ret 0x17;
0xffffffff8238b873: ret 0x17a0;
0xffffffff823139ce: ret 0x17a1;
0xffffffff817d4e93: ret 0x17a;
0xffffffff82005080: ret 0x17ab;
0xffffffff81c4c395: ret 0x17b4;
0xffffffff8230b407: ret 0x17b7;
0xffffffff8255ec59: ret 0x17b9;
0xffffffff8130bd1b: ret 0x17b;
0xffffffff82552285: ret 0x17be;
0xffffffff82552287: ret 0x17be;
0xffffffff824ec5e3: ret 0x17c0;
0xffffffff8130bd35: ret 0x17c;
0xffffffff81c4c3af: ret 0x17ca;
0xffffffff8227205a: ret 0x17cb;
0xffffffff82272059: ret 0x17cb;
0xffffffff823d83ed: ret 0x17d0;
0xffffffff822a5cfd: ret 0x17d7;
0xffffffff8245fa86: ret 0x17d8;
0xffffffff8130cedb: ret 0x17d;
0xffffffff82a82250: ret 0x17da;
0xffffffff82a82424: ret 0x17db;
0xffffffff82318f35: ret 0x17de;
0xffffffff81c4c3c9: ret 0x17df;
0xffffffff824b89cd: ret 0x17e0;
0xffffffff8250c4c3: ret 0x17e2;
0xffffffff82282288: ret 0x17e7;
0xffffffff81308193: ret 0x17e8;
0xffffffff81794ddf: ret 0x17e;
0xffffffff82457345: ret 0x17ee;
0xffffffff8129d38b: ret 0x17f0;
0xffffffff81c4c3f2: ret 0x17f8;
0xffffffff81049da0: ret 0x17fa;
0xffffffff82525227: ret 0x17fd;
0xffffffff8229a89b: ret 0x17fe;
0xffffffff8173d03b: ret 0x17ff;
0xffffffff81c01338: ret 0x1800;
0xffffffff82a87958: ret 0x1805;
0xffffffff8228439e: ret 0x1807;
0xffffffff823f5581: ret 0x1809;
0xffffffff8117ffaf: ret 0x180;
0xffffffff8227e3cd: ret 0x180a;
0xffffffff822dfd1e: ret 0x180c;
0xffffffff8223de84: ret 0x180d;
0xffffffff8229409e: ret 0x180e;
0xffffffff8229409f: ret 0x180e;
0xffffffff823e13ed: ret 0x1810;
0xffffffff8168d7d1: ret 0x1811;
0xffffffff822bc95c: ret 0x1812;
0xffffffff82a88e24: ret 0x1813;
0xffffffff82a89300: ret 0x1815;
0xffffffff8173d4cc: ret 0x1816;
0xffffffff81764bcf: ret 0x181;
0xffffffff810257e7: ret 0x181;
0xffffffff823e897c: ret 0x181c;
0xffffffff823e897b: ret 0x181c;
0xffffffff82425cc5: ret 0x181f;
0xffffffff82a8a30c: ret 0x1820;
0xffffffff8344a7a6: ret 0x1828;
0xffffffff82370cc8: ret 0x182d;
0xffffffff822bf405: ret 0x182e;
0xffffffff817e8374: ret 0x1832;
0xffffffff82420989: ret 0x1833;
0xffffffff82a8bee8: ret 0x1835;
0xffffffff8173d4a9: ret 0x1836;
0xffffffff82406f64: ret 0x1839;
0xffffffff83496634: ret 0x1840;
0xffffffff8226d824: ret 0x1842;
0xffffffff82a8e700: ret 0x1849;
0xffffffff8233f92a: ret 0x184;
0xffffffff8229c62f: ret 0x184a;
0xffffffff82298ca9: ret 0x184d;
0xffffffff824fb23d: ret 0x1852;
0xffffffff822c4621: ret 0x1855;
0xffffffff8347ab08: ret 0x1856;
0xffffffff822e95b2: ret 0x185d;
0xffffffff8173d515: ret 0x185e;
0xffffffff82255369: ret 0x1860;
0xffffffff8223e27c: ret 0x1862;
0xffffffff8223e27b: ret 0x1862;
0xffffffff817e8347: ret 0x1868;
0xffffffff811f8e41: ret 0x1874;
0xffffffff81a1a597: ret 0x1875;
0xffffffff810eec0d: ret 0x1877;
0xffffffff817f0bb4: ret 0x1878;
0xffffffff823e99fd: ret 0x1879;
0xffffffff8222b734: ret 0x187a;
0xffffffff8222b733: ret 0x187a;
0xffffffff8227ce59: ret 0x187d;
0xffffffff81a5f832: ret 0x187f;
0xffffffff81049d15: ret 0x1880;
0xffffffff823e8e36: ret 0x1883;
0xffffffff82375256: ret 0x1885;
0xffffffff822414c1: ret 0x1886;
0xffffffff817e8bf2: ret 0x1889;
0xffffffff810f48e0: ret 0x188;
0xffffffff8165ec9a: ret 0x188a;
0xffffffff8242161f: ret 0x188b;
0xffffffff822a99dd: ret 0x188f;
0xffffffff8230b0d7: ret 0x1890;
0xffffffff82466e77: ret 0x1891;
0xffffffff81a5f7e5: ret 0x1898;
0xffffffff8121c58a: ret 0x189;
0xffffffff8229ccf9: ret 0x189b;
0xffffffff8256dabe: ret 0x189d;
0xffffffff8173da7f: ret 0x189f;
0xffffffff813dde9a: ret 0x18;
0xffffffff8251ca1c: ret 0x18a3;
0xffffffff82234c02: ret 0x18a4;
0xffffffff81029489: ret 0x18a8;
0xffffffff82499c70: ret 0x18a9;
0xffffffff8130fb9f: ret 0x18a;
0xffffffff82355eaa: ret 0x18ab;
0xffffffff82381f63: ret 0x18ad;
0xffffffff82381f64: ret 0x18ad;
0xffffffff82a96438: ret 0x18b0;
0xffffffff8193cb4d: ret 0x18b1;
0xffffffff82514410: ret 0x18b3;
0xffffffff817e8b99: ret 0x18b4;
0xffffffff822c38ca: ret 0x18b5;
0xffffffff8226a05b: ret 0x18b7;
0xffffffff8130fbb6: ret 0x18b;
0xffffffff8173da14: ret 0x18bc;
0xffffffff81746b26: ret 0x18bd;
0xffffffff82347405: ret 0x18be;
0xffffffff8239dcdf: ret 0x18c8;
0xffffffff8223bc8f: ret 0x18c;
0xffffffff823642fb: ret 0x18ca;
0xffffffff82394d2d: ret 0x18d0;
0xffffffff8173e106: ret 0x18d6;
0xffffffff8162aec9: ret 0x18d;
0xffffffff822a26d1: ret 0x18dc;
0xffffffff822ea931: ret 0x18de;
0xffffffff824ccdf5: ret 0x18e7;
0xffffffff81234772: ret 0x18e8;
0xffffffff81013002: ret 0x18e9;
0xffffffff823deb23: ret 0x18ea;
0xffffffff81182d0d: ret 0x18eb;
0xffffffff824f4138: ret 0x18ed;
0xffffffff8173e0a0: ret 0x18f4;
0xffffffff823ba096: ret 0x18f6;
0xffffffff824357e0: ret 0x18f7;
0xffffffff82470e15: ret 0x18fb;
0xffffffff824096d7: ret 0x18fc;
0xffffffff82512215: ret 0x1905;
0xffffffff817e8b6f: ret 0x1906;
0xffffffff8113b18b: ret 0x190;
0xffffffff82213ff0: ret 0x190b;
0xffffffff82552db2: ret 0x190d;
0xffffffff824a2077: ret 0x1910;
0xffffffff824a2076: ret 0x1910;
0xffffffff81ae99c0: ret 0x1911;
0xffffffff82214044: ret 0x1913;
0xffffffff824fcafe: ret 0x1915;
0xffffffff824d8930: ret 0x1916;
0xffffffff822dc93e: ret 0x1919;
0xffffffff81678d89: ret 0x191;
0xffffffff824bd4c1: ret 0x191a;
0xffffffff83432f44: ret 0x191b;
0xffffffff822e061b: ret 0x191e;
0xffffffff811ae285: ret 0x1920;
0xffffffff82a9c0a4: ret 0x1921;
0xffffffff8225744f: ret 0x1922;
0xffffffff817e90d9: ret 0x1923;
0xffffffff83432f72: ret 0x1924;
0xffffffff82a9c950: ret 0x1925;
0xffffffff822abf87: ret 0x1927;
0xffffffff82ad1a3c: ret 0x192;
0xffffffff82319bf6: ret 0x192a;
0xffffffff8223e72b: ret 0x192b;
0xffffffff824f2cab: ret 0x192c;
0xffffffff8243cbeb: ret 0x192d;
0xffffffff83432fa0: ret 0x192e;
0xffffffff82a9e57c: ret 0x1931;
0xffffffff82a9f080: ret 0x1939;
0xffffffff81ae2000: ret 0x193c;
0xffffffff82a9fd9c: ret 0x1940;
0xffffffff81ae1b20: ret 0x1941;
0xffffffff823249b0: ret 0x1942;
0xffffffff81ae1bb1: ret 0x1946;
0xffffffff8159702e: ret 0x1948;
0xffffffff82233ace: ret 0x194;
0xffffffff8230367f: ret 0x194a;
0xffffffff8230367e: ret 0x194a;
0xffffffff81a60f06: ret 0x194b;
0xffffffff822330f3: ret 0x194c;
0xffffffff817e8f9d: ret 0x194e;
0xffffffff8104a5cf: ret 0x1950;
0xffffffff82aa1414: ret 0x1952;
0xffffffff82aa1a24: ret 0x1955;
0xffffffff8231bb0e: ret 0x1958;
0xffffffff82872fb0: ret 0x195;
0xffffffff82aa2540: ret 0x195a;
0xffffffff822cc6e9: ret 0x195e;
0xffffffff817e90fb: ret 0x1963;
0xffffffff8251f0ab: ret 0x1964;
0xffffffff824cb6d1: ret 0x1965;
0xffffffff81a61bff: ret 0x1966;
0xffffffff822c533f: ret 0x1967;
0xffffffff8173e467: ret 0x1968;
0xffffffff8242d88a: ret 0x1969;
0xffffffff82ad71b8: ret 0x196;
0xffffffff811e197d: ret 0x196d;
0xffffffff825338c4: ret 0x1970;
0xffffffff823000cd: ret 0x1972;
0xffffffff81ad8ec1: ret 0x1973;
0xffffffff81225d42: ret 0x1974;
0xffffffff810be87f: ret 0x1975;
0xffffffff81492949: ret 0x1977;
0xffffffff81648d1c: ret 0x1987;
0xffffffff82570438: ret 0x1988;
0xffffffff82aa6f94: ret 0x1989;
0xffffffff82ada0a8: ret 0x198;
0xffffffff82aa72d4: ret 0x198b;
0xffffffff824089c0: ret 0x198c;
0xffffffff82aa797c: ret 0x198e;
0xffffffff822b2507: ret 0x1990;
0xffffffff8173e486: ret 0x1991;
0xffffffff8248c05e: ret 0x1993;
0xffffffff8248c05f: ret 0x1993;
0xffffffff8246c946: ret 0x1994;
0xffffffff822eb664: ret 0x1998;
0xffffffff81554f2a: ret 0x199;
0xffffffff822beb04: ret 0x199a;
0xffffffff817e9118: ret 0x199c;
0xffffffff8152f1d2: ret 0x19;
0xffffffff82aac0f4: ret 0x19;
0xffffffff823f7583: ret 0x19a0;
0xffffffff815d0eb5: ret 0x19a;
0xffffffff815d0a99: ret 0x19a;
0xffffffff81a629cd: ret 0x19aa;
0xffffffff8255d40f: ret 0x19af;
0xffffffff82536bc6: ret 0x19b0;
0xffffffff82443f5b: ret 0x19b4;
0xffffffff817e90ab: ret 0x19bc;
0xffffffff82aabbcc: ret 0x19be;
0xffffffff810edd2a: ret 0x19c;
0xffffffff819a20c2: ret 0x19ca;
0xffffffff82394019: ret 0x19cb;
0xffffffff82303bc4: ret 0x19cf;
0xffffffff823ad537: ret 0x19d3;
0xffffffff817e8ed1: ret 0x19db;
0xffffffff8173e6ff: ret 0x19e4;
0xffffffff8252ae5c: ret 0x19e6;
0xffffffff8127f3a1: ret 0x19e8;
0xffffffff814f3c44: ret 0x19e;
0xffffffff81a826b7: ret 0x19eb;
0xffffffff824e784f: ret 0x19ef;
0xffffffff8225f66f: ret 0x19f1;
0xffffffff82366ebe: ret 0x19f7;
0xffffffff82ab1b24: ret 0x19fa;
0xffffffff8229aa7c: ret 0x19fd;
0xffffffff82ab2778: ret 0x1a02;
0xffffffff817e8e93: ret 0x1a03;
0xffffffff822cc498: ret 0x1a06;
0xffffffff824765d3: ret 0x1a07;
0xffffffff81162284: ret 0x1a0;
0xffffffff8246df77: ret 0x1a0f;
0xffffffff8173eb4d: ret 0x1a12;
0xffffffff82ab4064: ret 0x1a13;
0xffffffff824f030e: ret 0x1a14;
0xffffffff815758d9: ret 0x1a1;
0xffffffff822c8891: ret 0x1a1d;
0xffffffff822ca1cf: ret 0x1a1f;
0xffffffff824d1084: ret 0x1a20;
0xffffffff82476299: ret 0x1a23;
0xffffffff8223aaa2: ret 0x1a27;
0xffffffff817e92bf: ret 0x1a37;
0xffffffff8173ebff: ret 0x1a38;
0xffffffff82ab7cd8: ret 0x1a39;
0xffffffff815558b4: ret 0x1a3;
0xffffffff82408ea7: ret 0x1a3a;
0xffffffff82ab83fc: ret 0x1a3d;
0xffffffff822eceb8: ret 0x1a41;
0xffffffff82277152: ret 0x1a47;
0xffffffff823b782f: ret 0x1a4a;
0xffffffff82aba314: ret 0x1a4d;
0xffffffff825237a0: ret 0x1a52;
0xffffffff822f0c66: ret 0x1a54;
0xffffffff822f0c65: ret 0x1a54;
0xffffffff81c2f43a: ret 0x1a5;
0xffffffff817e92f5: ret 0x1a5c;
0xffffffff8173eda2: ret 0x1a62;
0xffffffff82abcd50: ret 0x1a66;
0xffffffff824d88b9: ret 0x1a6a;
0xffffffff824f3dc1: ret 0x1a6b;
0xffffffff824f3dc4: ret 0x1a6b;
0xffffffff822e502f: ret 0x1a6d;
0xffffffff822e5030: ret 0x1a6d;
0xffffffff823d81ec: ret 0x1a6f;
0xffffffff8230768a: ret 0x1a70;
0xffffffff81028cac: ret 0x1a72;
0xffffffff816ee8c3: ret 0x1a74;
0xffffffff811da174: ret 0x1a75;
0xffffffff823844eb: ret 0x1a76;
0xffffffff81042c1e: ret 0x1a78;
0xffffffff82321e52: ret 0x1a7d;
0xffffffff82abf5f8: ret 0x1a7e;
0xffffffff8173f00d: ret 0x1a82;
0xffffffff81ad75da: ret 0x1a83;
0xffffffff8125036e: ret 0x1a8;
0xffffffff823a4a23: ret 0x1a8b;
0xffffffff817e92a0: ret 0x1a8b;
0xffffffff823f78f1: ret 0x1a8c;
0xffffffff82446806: ret 0x1a92;
0xffffffff814f589d: ret 0x1a9;
0xffffffff82ac2674: ret 0x1a9b;
0xffffffff82ac69e0: ret 0x1a;
0xffffffff818a627a: ret 0x1a;
0xffffffff82438ff6: ret 0x1aa2;
0xffffffff8225a7a3: ret 0x1aa3;
0xffffffff82ac380c: ret 0x1aa5;
0xffffffff817e948c: ret 0x1aa7;
0xffffffff81323832: ret 0x1aa;
0xffffffff8238e4dc: ret 0x1aab;
0xffffffff8228566e: ret 0x1ab8;
0xffffffff82274537: ret 0x1abf;
0xffffffff82274538: ret 0x1abf;
0xffffffff82ac6b48: ret 0x1ac5;
0xffffffff822d1ed2: ret 0x1ac7;
0xffffffff81c386b5: ret 0x1ac8;
0xffffffff8103f3c3: ret 0x1aca;
0xffffffff82365b1e: ret 0x1acb;
0xffffffff8255c979: ret 0x1acc;
0xffffffff8243211a: ret 0x1acd;
0xffffffff81ad5f7a: ret 0x1ad0;
0xffffffff823b011e: ret 0x1ad1;
0xffffffff82ac7d68: ret 0x1ad3;
0xffffffff82ac8c90: ret 0x1ad9;
0xffffffff8138eb9a: ret 0x1ad;
0xffffffff817e9461: ret 0x1adb;
0xffffffff8243828f: ret 0x1adc;
0xffffffff824671f6: ret 0x1add;
0xffffffff82ac972c: ret 0x1adf;
0xffffffff82357254: ret 0x1ae1;
0xffffffff8173f0ea: ret 0x1ae3;
0xffffffff8235a28e: ret 0x1ae7;
0xffffffff8100f720: ret 0x1ae8;
0xffffffff815733e0: ret 0x1ae9;
0xffffffff81b9bd9e: ret 0x1ae;
0xffffffff82473641: ret 0x1aea;
0xffffffff8236a15d: ret 0x1aeb;
0xffffffff8225f8e7: ret 0x1aed;
0xffffffff82acaec4: ret 0x1aee;
0xffffffff8226ddc5: ret 0x1af0;
0xffffffff810db02a: ret 0x1af1;
0xffffffff822d7dc5: ret 0x1af3;
0xffffffff8246537c: ret 0x1af4;
0xffffffff82445d9e: ret 0x1af9;
0xffffffff8147e50c: ret 0x1af;
0xffffffff817e9656: ret 0x1afb;
0xffffffff82382872: ret 0x1afe;
0xffffffff823c6b9a: ret 0x1b03;
0xffffffff823bffb9: ret 0x1b07;
0xffffffff8112bf17: ret 0x1b0;
0xffffffff82543081: ret 0x1b10;
0xffffffff82554aab: ret 0x1b11;
0xffffffff82474034: ret 0x1b15;
0xffffffff8173f2e3: ret 0x1b1d;
0xffffffff823123f3: ret 0x1b23;
0xffffffff8243aa78: ret 0x1b2;
0xffffffff822d4c6e: ret 0x1b2e;
0xffffffff822e57db: ret 0x1b2f;
0xffffffff823a6cf7: ret 0x1b31;
0xffffffff822dcf6f: ret 0x1b35;
0xffffffff82ad1ff0: ret 0x1b36;
0xffffffff822740a7: ret 0x1b38;
0xffffffff813c7dc6: ret 0x1b3;
0xffffffff8235f0a6: ret 0x1b3c;
0xffffffff82ad2b48: ret 0x1b3e;
0xffffffff82371326: ret 0x1b42;
0xffffffff823aa446: ret 0x1b44;
0xffffffff823aa447: ret 0x1b44;
0xffffffff82524051: ret 0x1b4;
0xffffffff817e9714: ret 0x1b4a;
0xffffffff82300e88: ret 0x1b4c;
0xffffffff82340b88: ret 0x1b4e;
0xffffffff822bbc8d: ret 0x1b53;
0xffffffff82ad4354: ret 0x1b56;
0xffffffff824e31d6: ret 0x1b57;
0xffffffff81b24103: ret 0x1b5;
0xffffffff824f9edd: ret 0x1b5b;
0xffffffff8252f24b: ret 0x1b5d;
0xffffffff82388a60: ret 0x1b5f;
0xffffffff8103a147: ret 0x1b60;
0xffffffff82ad5258: ret 0x1b62;
0xffffffff822f1dc2: ret 0x1b65;
0xffffffff82ad5d28: ret 0x1b68;
0xffffffff82328911: ret 0x1b6;
0xffffffff823509b2: ret 0x1b6c;
0xffffffff817e9793: ret 0x1b6e;
0xffffffff817cac7d: ret 0x1b70;
0xffffffff8114146e: ret 0x1b73;
0xffffffff812f0e80: ret 0x1b74;
0xffffffff81337d53: ret 0x1b75;
0xffffffff81493658: ret 0x1b77;
0xffffffff819018fe: ret 0x1b79;
0xffffffff824a919b: ret 0x1b7a;
0xffffffff813238e9: ret 0x1b7c;
0xffffffff8224c0a0: ret 0x1b7f;
0xffffffff8111ffd0: ret 0x1b80;
0xffffffff82345da7: ret 0x1b83;
0xffffffff8254f523: ret 0x1b87;
0xffffffff817e9974: ret 0x1b88;
0xffffffff81384445: ret 0x1b8;
0xffffffff822da617: ret 0x1b92;
0xffffffff8241086b: ret 0x1b96;
0xffffffff8164cae7: ret 0x1b98;
0xffffffff8103ac43: ret 0x1b9;
0xffffffff82393e91: ret 0x1b9a;
0xffffffff81ac92da: ret 0x1b9d;
0xffffffff8233a65d: ret 0x1b;
0xffffffff810d7f00: ret 0x1ba0;
0xffffffff8253ace7: ret 0x1ba9;
0xffffffff8114b5a5: ret 0x1ba;
0xffffffff82533a46: ret 0x1baa;
0xffffffff817e99f3: ret 0x1bac;
0xffffffff82adc14c: ret 0x1bb2;
0xffffffff810ebc0d: ret 0x1bc0;
0xffffffff814a9ef2: ret 0x1bc1;
0xffffffff82354032: ret 0x1bc3;
0xffffffff82468335: ret 0x1bc5;
0xffffffff824203e3: ret 0x1bc9;
0xffffffff8229ebc1: ret 0x1bcc;
0xffffffff824b3950: ret 0x1bce;
0xffffffff818526d9: ret 0x1bcf;
0xffffffff81611b53: ret 0x1bd0;
0xffffffff81852709: ret 0x1bd6;
0xffffffff81852771: ret 0x1bdc;
0xffffffff82ae0b64: ret 0x1be3;
0xffffffff8228118b: ret 0x1be5;
0xffffffff810346ff: ret 0x1be8;
0xffffffff819dfeff: ret 0x1be9;
0xffffffff81111370: ret 0x1be;
0xffffffff810f80fd: ret 0x1beb;
0xffffffff82260ebb: ret 0x1bed;
0xffffffff824d893f: ret 0x1bee;
0xffffffff822b6703: ret 0x1bf1;
0xffffffff82ae1f80: ret 0x1bf3;
0xffffffff8252463c: ret 0x1bf4;
0xffffffff8227b6b4: ret 0x1bf7;
0xffffffff824dbe09: ret 0x1bf8;
0xffffffff823d4e27: ret 0x1bfc;
0xffffffff81c4d100: ret 0x1c02;
0xffffffff824c9d9c: ret 0x1c05;
0xffffffff823f99e6: ret 0x1c05;
0xffffffff81bea22e: ret 0x1c0;
0xffffffff8244078f: ret 0x1c0b;
0xffffffff824f12dc: ret 0x1c10;
0xffffffff82ae538c: ret 0x1c14;
0xffffffff819457ef: ret 0x1c15;
0xffffffff8248c2a5: ret 0x1c17;
0xffffffff817e8dbd: ret 0x1c18;
0xffffffff824f0d87: ret 0x1c1e;
0xffffffff8124d3b6: ret 0x1c24;
0xffffffff812960c4: ret 0x1c25;
0xffffffff82347882: ret 0x1c26;
0xffffffff8225dd6f: ret 0x1c29;
0xffffffff8136588b: ret 0x1c2;
0xffffffff82540e06: ret 0x1c2a;
0xffffffff8230834e: ret 0x1c2c;
0xffffffff822a2be6: ret 0x1c2d;
0xffffffff82425b1d: ret 0x1c2e;
0xffffffff81a677e4: ret 0x1c2f;
0xffffffff82266df5: ret 0x1c3;
0xffffffff81581c46: ret 0x1c3c;
0xffffffff81a67823: ret 0x1c41;
0xffffffff8226906e: ret 0x1c42;
0xffffffff81852b46: ret 0x1c44;
0xffffffff817e8e29: ret 0x1c45;
0xffffffff823ebb22: ret 0x1c47;
0xffffffff81c4d9f9: ret 0x1c4e;
0xffffffff817c16c1: ret 0x1c50;
0xffffffff8344cf8a: ret 0x1c51;
0xffffffff81c4e1c7: ret 0x1c55;
0xffffffff817e8dde: ret 0x1c58;
0xffffffff81c4e58d: ret 0x1c59;
0xffffffff8121aff4: ret 0x1c5;
0xffffffff81852bb5: ret 0x1c5a;
0xffffffff81c4e6aa: ret 0x1c5c;
0xffffffff810dc242: ret 0x1c62;
0xffffffff815054d5: ret 0x1c64;
0xffffffff824e9368: ret 0x1c66;
0xffffffff81c4e94a: ret 0x1c69;
0xffffffff8242e275: ret 0x1c6;
0xffffffff81c4ea43: ret 0x1c6e;
0xffffffff81a68560: ret 0x1c70;
0xffffffff81852d4e: ret 0x1c71;
0xffffffff823cab8c: ret 0x1c73;
0xffffffff8168507f: ret 0x1c74;
0xffffffff8134e910: ret 0x1c75;
0xffffffff8127e133: ret 0x1c76;
0xffffffff81492c94: ret 0x1c77;
0xffffffff817f16ca: ret 0x1c78;
0xffffffff8243b1a6: ret 0x1c7;
0xffffffff8224f0bb: ret 0x1c7f;
0xffffffff81852e1f: ret 0x1c82;
0xffffffff82337d47: ret 0x1c85;
0xffffffff822d4f5b: ret 0x1c86;
0xffffffff81a6857c: ret 0x1c89;
0xffffffff8115e257: ret 0x1c8;
0xffffffff815059eb: ret 0x1c8a;
0xffffffff81666e88: ret 0x1c8b;
0xffffffff815b9a5e: ret 0x1c8d;
0xffffffff82344d33: ret 0x1c97;
0xffffffff817e8e00: ret 0x1c99;
0xffffffff827fd3b4: ret 0x1c9;
0xffffffff82257caf: ret 0x1c9c;
0xffffffff81505f6f: ret 0x1c9e;
0xffffffff81aa9075: ret 0x1c;
0xffffffff822aa648: ret 0x1ca4;
0xffffffff823c4261: ret 0x1ca9;
0xffffffff81a6858f: ret 0x1caa;
0xffffffff823fec6a: ret 0x1cab;
0xffffffff824e19ef: ret 0x1cae;
0xffffffff82253c5c: ret 0x1caf;
0xffffffff81c4ec02: ret 0x1cb3;
0xffffffff823f7ae5: ret 0x1cb6;
0xffffffff81c4edc2: ret 0x1cb7;
0xffffffff822e27c3: ret 0x1cb8;
0xffffffff8172ed73: ret 0x1cb;
0xffffffff8246d643: ret 0x1cba;
0xffffffff8161c3a6: ret 0x1cbf;
0xffffffff824f8457: ret 0x1cc4;
0xffffffff823e63ac: ret 0x1cc5;
0xffffffff825d580a: ret 0x1cc6;
0xffffffff81014050: ret 0x1cc;
0xffffffff82304c15: ret 0x1ccc;
0xffffffff8134c154: ret 0x1ccd;
0xffffffff81a68a03: ret 0x1cd1;
0xffffffff817e8d87: ret 0x1cd4;
0xffffffff82289167: ret 0x1cd8;
0xffffffff8249bf79: ret 0x1cd;
0xffffffff81853628: ret 0x1ce0;
0xffffffff81c4f577: ret 0x1ce1;
0xffffffff8134c0cd: ret 0x1ce3;
0xffffffff81ab4bda: ret 0x1ce4;
0xffffffff810f055e: ret 0x1ce8;
0xffffffff82433e63: ret 0x1ce9;
0xffffffff823a3fa8: ret 0x1ce;
0xffffffff8342a8c8: ret 0x1cf5;
0xffffffff8236606d: ret 0x1cf7;
0xffffffff8116fc85: ret 0x1cf;
0xffffffff81a677fb: ret 0x1cfe;
0xffffffff8200d3f1: ret 0x1cff;
0xffffffff8200d3f2: ret 0x1cff;
0xffffffff8165cec1: ret 0x1d05;
0xffffffff816d9782: ret 0x1d08;
0xffffffff82501eca: ret 0x1d09;
0xffffffff8100d5a7: ret 0x1d0;
0xffffffff81c4fa90: ret 0x1d0c;
0xffffffff81c4f799: ret 0x1d0d;
0xffffffff81c4fb0f: ret 0x1d10;
0xffffffff81c4fbd2: ret 0x1d13;
0xffffffff82541180: ret 0x1d15;
0xffffffff82483b31: ret 0x1d17;
0xffffffff8195938c: ret 0x1d1;
0xffffffff8241ba27: ret 0x1d1a;
0xffffffff81c4fd66: ret 0x1d1d;
0xffffffff81c4ff74: ret 0x1d22;
0xffffffff823a0098: ret 0x1d23;
0xffffffff8347b4ba: ret 0x1d24;
0xffffffff824edd96: ret 0x1d29;
0xffffffff8243a5b3: ret 0x1d2a;
0xffffffff8243a5b4: ret 0x1d2a;
0xffffffff82489963: ret 0x1d2c;
0xffffffff817cc8c1: ret 0x1d30;
0xffffffff814c2ffa: ret 0x1d3;
0xffffffff825d81f6: ret 0x1d3c;
0xffffffff824db686: ret 0x1d3f;
0xffffffff817d3138: ret 0x1d40;
0xffffffff8240e80b: ret 0x1d47;
0xffffffff8240e80c: ret 0x1d47;
0xffffffff834625a4: ret 0x1d4;
0xffffffff824bb15f: ret 0x1d4d;
0xffffffff824bb160: ret 0x1d4d;
0xffffffff81c50278: ret 0x1d50;
0xffffffff8242ace2: ret 0x1d55;
0xffffffff81c5037a: ret 0x1d57;
0xffffffff823ba305: ret 0x1d58;
0xffffffff81235b6e: ret 0x1d5;
0xffffffff81235b6f: ret 0x1d5;
0xffffffff823aed8a: ret 0x1d5a;
0xffffffff8233dbda: ret 0x1d5b;
0xffffffff81c50480: ret 0x1d5c;
0xffffffff81505c92: ret 0x1d5e;
0xffffffff81c5058b: ret 0x1d64;
0xffffffff81c505d5: ret 0x1d65;
0xffffffff815af82a: ret 0x1d6;
0xffffffff823ec2b6: ret 0x1d6d;
0xffffffff815cfa4b: ret 0x1d73;
0xffffffff810e7b0b: ret 0x1d74;
0xffffffff813e882a: ret 0x1d75;
0xffffffff814922b6: ret 0x1d77;
0xffffffff8159fc44: ret 0x1d78;
0xffffffff82877364: ret 0x1d7;
0xffffffff81122eaa: ret 0x1d80;
0xffffffff8242233d: ret 0x1d83;
0xffffffff823aaf10: ret 0x1d86;
0xffffffff815ab9bb: ret 0x1d88;
0xffffffff8238bded: ret 0x1d89;
0xffffffff824e7e27: ret 0x1d8f;
0xffffffff82268247: ret 0x1d94;
0xffffffff822c0f2c: ret 0x1d96;
0xffffffff823838f4: ret 0x1d99;
0xffffffff8236dddb: ret 0x1d9a;
0xffffffff82884574: ret 0x1d;
0xffffffff822fa821: ret 0x1da0;
0xffffffff822a8f6f: ret 0x1da4;
0xffffffff8196373a: ret 0x1da5;
0xffffffff82482e9b: ret 0x1da6;
0xffffffff818c83be: ret 0x1da;
0xffffffff8186c674: ret 0x1da;
0xffffffff8173fd15: ret 0x1db1;
0xffffffff8118bb57: ret 0x1db;
0xffffffff817b1ad6: ret 0x1dc0;
0xffffffff811c5ab6: ret 0x1dc;
0xffffffff8102b743: ret 0x1dd;
0xffffffff823d3fb1: ret 0x1dde;
0xffffffff8253430e: ret 0x1de7;
0xffffffff81014d7d: ret 0x1de8;
0xffffffff8223085c: ret 0x1de9;
0xffffffff82877f28: ret 0x1de;
0xffffffff8102fca0: ret 0x1deb;
0xffffffff824c045f: ret 0x1ded;
0xffffffff824c5462: ret 0x1dee;
0xffffffff8255c51d: ret 0x1def;
0xffffffff82553682: ret 0x1df0;
0xffffffff8228c359: ret 0x1df6;
0xffffffff8173fe26: ret 0x1df7;
0xffffffff82202375: ret 0x1df;
0xffffffff835a8e2a: ret 0x1dfd;
0xffffffff81891236: ret 0x1e00;
0xffffffff822ef6cf: ret 0x1e01;
0xffffffff82415c57: ret 0x1e02;
0xffffffff8227c765: ret 0x1e06;
0xffffffff823bf80c: ret 0x1e09;
0xffffffff813114e6: ret 0x1e0;
0xffffffff8239f7f0: ret 0x1e0d;
0xffffffff82512999: ret 0x1e11;
0xffffffff81311503: ret 0x1e1;
0xffffffff8230a580: ret 0x1e25;
0xffffffff81312fee: ret 0x1e2;
0xffffffff81456939: ret 0x1e30;
0xffffffff8231c39b: ret 0x1e32;
0xffffffff8225954a: ret 0x1e34;
0xffffffff825515af: ret 0x1e35;
0xffffffff8150777c: ret 0x1e37;
0xffffffff82455441: ret 0x1e38;
0xffffffff82517c50: ret 0x1e3;
0xffffffff824c4c4b: ret 0x1e3d;
0xffffffff8245dc27: ret 0x1e40;
0xffffffff823ede1d: ret 0x1e44;
0xffffffff8150796f: ret 0x1e46;
0xffffffff82549db5: ret 0x1e47;
0xffffffff822dfce7: ret 0x1e49;
0xffffffff822dfce8: ret 0x1e49;
0xffffffff8237d9ee: ret 0x1e4;
0xffffffff8236a49f: ret 0x1e4e;
0xffffffff816dad89: ret 0x1e50;
0xffffffff823c5d75: ret 0x1e51;
0xffffffff82318c00: ret 0x1e53;
0xffffffff823e8ff8: ret 0x1e56;
0xffffffff8233755c: ret 0x1e59;
0xffffffff82878438: ret 0x1e5;
0xffffffff82267e58: ret 0x1e5c;
0xffffffff822f230d: ret 0x1e5d;
0xffffffff8247ddb9: ret 0x1e67;
0xffffffff818f4a39: ret 0x1e6c;
0xffffffff825dae16: ret 0x1e6e;
0xffffffff81026c5a: ret 0x1e71;
0xffffffff81862b35: ret 0x1e74;
0xffffffff81c06f16: ret 0x1e75;
0xffffffff828786d0: ret 0x1e7;
0xffffffff82373387: ret 0x1e7a;
0xffffffff82454bbd: ret 0x1e7b;
0xffffffff8237cce6: ret 0x1e7c;
0xffffffff815bb9e2: ret 0x1e80;
0xffffffff823a2db2: ret 0x1e84;
0xffffffff81012519: ret 0x1e8;
0xffffffff82474c27: ret 0x1e8c;
0xffffffff81740530: ret 0x1e90;
0xffffffff82354577: ret 0x1e94;
0xffffffff8348afee: ret 0x1e96;
0xffffffff82237e20: ret 0x1e97;
0xffffffff822791e2: ret 0x1e9a;
0xffffffff822d89ef: ret 0x1e9b;
0xffffffff82533653: ret 0x1e9f;
0xffffffff814c70bc: ret 0x1e;
0xffffffff83485eb2: ret 0x1ea0;
0xffffffff825d808d: ret 0x1ea1;
0xffffffff814e3911: ret 0x1ea4;
0xffffffff82878a78: ret 0x1ea;
0xffffffff83448805: ret 0x1eb2;
0xffffffff822f2e11: ret 0x1eb4;
0xffffffff810d595d: ret 0x1eb;
0xffffffff82542da6: ret 0x1ebb;
0xffffffff8232c57a: ret 0x1ebc;
0xffffffff81c4e0e5: ret 0x1ec0;
0xffffffff81507d67: ret 0x1ec3;
0xffffffff822cb01c: ret 0x1ec5;
0xffffffff8347ab2a: ret 0x1ec7;
0xffffffff824a0899: ret 0x1ec9;
0xffffffff824c7e19: ret 0x1ec;
0xffffffff8252f238: ret 0x1eca;
0xffffffff8252f239: ret 0x1eca;
0xffffffff817404cd: ret 0x1ecd;
0xffffffff822bbfc0: ret 0x1ecf;
0xffffffff814b18ac: ret 0x1ed0;
0xffffffff82237503: ret 0x1ed1;
0xffffffff8238f9a2: ret 0x1ed5;
0xffffffff82382750: ret 0x1ed;
0xffffffff8225f9ad: ret 0x1eda;
0xffffffff8235e8ff: ret 0x1ee1;
0xffffffff822a99c5: ret 0x1ee3;
0xffffffff8253fd91: ret 0x1ee4;
0xffffffff8228f0de: ret 0x1ee7;
0xffffffff8105173c: ret 0x1ee8;
0xffffffff8174097b: ret 0x1ee9;
0xffffffff81b5f3c6: ret 0x1eeb;
0xffffffff812de2e6: ret 0x1ef0;
0xffffffff8164c5fe: ret 0x1ef5;
0xffffffff8349847d: ret 0x1ef7;
0xffffffff82256891: ret 0x1ef;
0xffffffff8164cf6b: ret 0x1efa;
0xffffffff83469714: ret 0x1efb;
0xffffffff83448704: ret 0x1efd;
0xffffffff81740966: ret 0x1efe;
0xffffffff8164cb79: ret 0x1f02;
0xffffffff8164d1d9: ret 0x1f07;
0xffffffff81762669: ret 0x1f0;
0xffffffff8176273e: ret 0x1f0;
0xffffffff81c16bba: ret 0x1f0d;
0xffffffff81008318: ret 0x1f0f;
0xffffffff8164d2f5: ret 0x1f10;
0xffffffff8348e21f: ret 0x1f13;
0xffffffff822a9847: ret 0x1f19;
0xffffffff81751dae: ret 0x1f1;
0xffffffff82458ec8: ret 0x1f23;
0xffffffff82458ec6: ret 0x1f23;
0xffffffff823d8b1f: ret 0x1f24;
0xffffffff817409d0: ret 0x1f26;
0xffffffff812dd62d: ret 0x1f28;
0xffffffff81007748: ret 0x1f30;
0xffffffff822c6c9f: ret 0x1f32;
0xffffffff82547a0c: ret 0x1f34;
0xffffffff8248e003: ret 0x1f35;
0xffffffff8248e002: ret 0x1f35;
0xffffffff8193f3c4: ret 0x1f36;
0xffffffff81731796: ret 0x1f3;
0xffffffff82462b0d: ret 0x1f3c;
0xffffffff81740ae9: ret 0x1f3d;
0xffffffff823f717b: ret 0x1f46;
0xffffffff834578bc: ret 0x1f47;
0xffffffff81034947: ret 0x1f4;
0xffffffff82272f10: ret 0x1f53;
0xffffffff8164cd73: ret 0x1f56;
0xffffffff8230c736: ret 0x1f57;
0xffffffff8103415c: ret 0x1f5;
0xffffffff8227b46f: ret 0x1f5a;
0xffffffff81a8d2da: ret 0x1f5d;
0xffffffff8164cfad: ret 0x1f5e;
0xffffffff8164c67d: ret 0x1f65;
0xffffffff81701198: ret 0x1f6;
0xffffffff8164ccb6: ret 0x1f6c;
0xffffffff82308db9: ret 0x1f6e;
0xffffffff81aea2ad: ret 0x1f73;
0xffffffff81681f71: ret 0x1f74;
0xffffffff81577dcb: ret 0x1f75;
0xffffffff819f9659: ret 0x1f78;
0xffffffff810048ce: ret 0x1f7;
0xffffffff823d8ea5: ret 0x1f7d;
0xffffffff8164c729: ret 0x1f7e;
0xffffffff823e8017: ret 0x1f82;
0xffffffff83450c9a: ret 0x1f84;
0xffffffff822e6586: ret 0x1f85;
0xffffffff8164d21b: ret 0x1f87;
0xffffffff81b82848: ret 0x1f88;
0xffffffff823fc79b: ret 0x1f8;
0xffffffff824cfecc: ret 0x1f90;
0xffffffff8164cbea: ret 0x1f91;
0xffffffff81b828f5: ret 0x1f97;
0xffffffff81a6da4d: ret 0x1f98;
0xffffffff8238c2f3: ret 0x1f99;
0xffffffff8164d111: ret 0x1f9b;
0xffffffff81871dea: ret 0x1f;
0xffffffff8164c81b: ret 0x1fa5;
0xffffffff81b862f6: ret 0x1fa8;
0xffffffff81a6da30: ret 0x1fa9;
0xffffffff82692c79: ret 0x1fa;
0xffffffff82524b4d: ret 0x1fac;
0xffffffff82446b78: ret 0x1fad;
0xffffffff822a0220: ret 0x1fb0;
0xffffffff8344ed51: ret 0x1fb3;
0xffffffff81aa0474: ret 0x1fba;
0xffffffff8132e761: ret 0x1fc0;
0xffffffff824e15a2: ret 0x1fc9;
0xffffffff82301d4a: ret 0x1fca;
0xffffffff8226e852: ret 0x1fcb;
0xffffffff82409a62: ret 0x1fcb;
0xffffffff81331a2a: ret 0x1fcc;
0xffffffff822f8087: ret 0x1fcd;
0xffffffff81b862e6: ret 0x1fd0;
0xffffffff8248c2c1: ret 0x1fd1;
0xffffffff824c8840: ret 0x1fe7;
0xffffffff810049f7: ret 0x1fe8;
0xffffffff817f76eb: ret 0x1fe9;
0xffffffff8250abbe: ret 0x1feb;
0xffffffff81508a08: ret 0x1fec;
0xffffffff82546f17: ret 0x1ff1;
0xffffffff82320135: ret 0x1ff2;
0xffffffff825157d9: ret 0x1ff5;
0xffffffff8230a568: ret 0x1ff7;
0xffffffff81b86302: ret 0x1ff8;
0xffffffff81171cc9: ret 0x1ff;
0xffffffff823c7f31: ret 0x1ffc;
0xffffffff8241de56: ret 0x1ffd;
0xffffffff8346cc43: ret 0x1ffe;
0xffffffff81c27c97: ret 0x1fff;
0xffffffff81014183: ret 0x2000;
0xffffffff814c29d1: ret 0x2002;
0xffffffff8256a549: ret 0x2004;
0xffffffff8222a662: ret 0x2005;
0xffffffff823f3fe5: ret 0x2006;
0xffffffff815e8d3f: ret 0x2008;
0xffffffff8111a981: ret 0x200;
0xffffffff823f06ec: ret 0x2019;
0xffffffff8191b38e: ret 0x201;
0xffffffff81448f7b: ret 0x201b;
0xffffffff81a665fa: ret 0x201c;
0xffffffff81a6dc52: ret 0x2021;
0xffffffff8163ec67: ret 0x2022;
0xffffffff8245a08a: ret 0x2024;
0xffffffff82536825: ret 0x2027;
0xffffffff81190137: ret 0x2028;
0xffffffff83441920: ret 0x202d;
0xffffffff81a6dc84: ret 0x2033;
0xffffffff8246434d: ret 0x2036;
0xffffffff8162ae51: ret 0x203;
0xffffffff81a6dc9c: ret 0x203f;
0xffffffff812295a6: ret 0x2040;
0xffffffff81b2a41e: ret 0x2041;
0xffffffff8105c02a: ret 0x2044;
0xffffffff835a50fa: ret 0x2046;
0xffffffff81a6dbd4: ret 0x204b;
0xffffffff825429ed: ret 0x204c;
0xffffffff823ea7f0: ret 0x204f;
0xffffffff824dc1c3: ret 0x2057;
0xffffffff82302beb: ret 0x2059;
0xffffffff822302c3: ret 0x205f;
0xffffffff81114708: ret 0x2060;
0xffffffff81114722: ret 0x2061;
0xffffffff8235d546: ret 0x2065;
0xffffffff810edd72: ret 0x2074;
0xffffffff823d7009: ret 0x207;
0xffffffff822e39fa: ret 0x207a;
0xffffffff8231ac69: ret 0x207e;
0xffffffff81420085: ret 0x2082;
0xffffffff8146b83f: ret 0x2084;
0xffffffff816e1176: ret 0x2085;
0xffffffff8100799c: ret 0x208;
0xffffffff8246179d: ret 0x208a;
0xffffffff8232726e: ret 0x208c;
0xffffffff8245d804: ret 0x2093;
0xffffffff8164c8a4: ret 0x2097;
0xffffffff813142d2: ret 0x209;
0xffffffff8236ec29: ret 0x209a;
0xffffffff823c1f94: ret 0x209b;
0xffffffff8101ca3a: ret 0x20;
0xffffffff825d6cfc: ret 0x20a0;
0xffffffff8233018f: ret 0x20a4;
0xffffffff8150905d: ret 0x20a8;
0xffffffff8247c6e2: ret 0x20a9;
0xffffffff813142ec: ret 0x20a;
0xffffffff8239cc59: ret 0x20aa;
0xffffffff81116fe7: ret 0x20b0;
0xffffffff823b43e9: ret 0x20b8;
0xffffffff8163def1: ret 0x20b9;
0xffffffff81314309: ret 0x20b;
0xffffffff823a0efb: ret 0x20be;
0xffffffff8229b9dd: ret 0x20c0;
0xffffffff8229b9de: ret 0x20c0;
0xffffffff8111ba31: ret 0x20c4;
0xffffffff824b0895: ret 0x20c5;
0xffffffff8131432b: ret 0x20c;
0xffffffff8248e64c: ret 0x20cc;
0xffffffff822578fb: ret 0x20cd;
0xffffffff8111ba02: ret 0x20d0;
0xffffffff81a6e875: ret 0x20d8;
0xffffffff817d54af: ret 0x20d;
0xffffffff82415016: ret 0x20db;
0xffffffff824834da: ret 0x20dd;
0xffffffff82542b07: ret 0x20e4;
0xffffffff8235a478: ret 0x20e6;
0xffffffff817e497a: ret 0x20e8;
0xffffffff8114b5c9: ret 0x20e9;
0xffffffff8157aa3f: ret 0x20e;
0xffffffff825027d0: ret 0x20ee;
0xffffffff824fd3d0: ret 0x20ef;
0xffffffff81121dfc: ret 0x20f0;
0xffffffff81121f81: ret 0x20f1;
0xffffffff81122249: ret 0x20f2;
0xffffffff811222a0: ret 0x20f3;
0xffffffff811222ba: ret 0x20f4;
0xffffffff811222f5: ret 0x20f5;
0xffffffff8112248c: ret 0x20f6;
0xffffffff811225dc: ret 0x20f7;
0xffffffff81122e94: ret 0x20f8;
0xffffffff822ad849: ret 0x20f9;
0xffffffff822f8ea1: ret 0x20fb;
0xffffffff824c5071: ret 0x20ff;
0xffffffff8200d4ee: ret 0x20ff;
0xffffffff812c32d1: ret 0x2100;
0xffffffff812c3820: ret 0x2101;
0xffffffff8223e2ec: ret 0x2106;
0xffffffff823e5411: ret 0x2109;
0xffffffff8245076c: ret 0x210;
0xffffffff8255f809: ret 0x210d;
0xffffffff8174199a: ret 0x210e;
0xffffffff8222adcf: ret 0x210f;
0xffffffff816a1f8f: ret 0x2110;
0xffffffff81a6e908: ret 0x2112;
0xffffffff824c6d02: ret 0x2117;
0xffffffff8238e6a6: ret 0x211e;
0xffffffff8238e6a5: ret 0x211e;
0xffffffff82402413: ret 0x2120;
0xffffffff8234f22b: ret 0x2121;
0xffffffff824b6927: ret 0x2122;
0xffffffff8247a62b: ret 0x2127;
0xffffffff8182210c: ret 0x212a;
0xffffffff8228ee89: ret 0x212b;
0xffffffff8222e245: ret 0x212c;
0xffffffff81a6e914: ret 0x2130;
0xffffffff822801b9: ret 0x2137;
0xffffffff82461f42: ret 0x213;
0xffffffff824adcd9: ret 0x213a;
0xffffffff834a1555: ret 0x213e;
0xffffffff8112562d: ret 0x2140;
0xffffffff81b7b432: ret 0x2141;
0xffffffff82387753: ret 0x2142;
0xffffffff8150b9a3: ret 0x2143;
0xffffffff81656b4d: ret 0x2144;
0xffffffff8344c96e: ret 0x2145;
0xffffffff8344c98c: ret 0x2146;
0xffffffff8344c9a2: ret 0x2147;
0xffffffff8100be51: ret 0x2148;
0xffffffff813416be: ret 0x2149;
0xffffffff823553d9: ret 0x214b;
0xffffffff81255bdc: ret 0x214c;
0xffffffff81a6e920: ret 0x214e;
0xffffffff814b18ec: ret 0x2150;
0xffffffff824de57a: ret 0x2157;
0xffffffff824c8e45: ret 0x215c;
0xffffffff81a6e6d0: ret 0x2162;
0xffffffff823220f2: ret 0x2165;
0xffffffff817a10e8: ret 0x2167;
0xffffffff824e46b2: ret 0x2169;
0xffffffff81405c8d: ret 0x2172;
0xffffffff825350f5: ret 0x2173;
0xffffffff8190289f: ret 0x2174;
0xffffffff81a2ccb2: ret 0x2175;
0xffffffff8155bc36: ret 0x2176;
0xffffffff81a6e864: ret 0x2178;
0xffffffff8228017e: ret 0x2179;
0xffffffff8130211a: ret 0x2180;
0xffffffff8249f539: ret 0x2183;
0xffffffff82373c24: ret 0x2188;
0xffffffff813175f7: ret 0x218;
0xffffffff82244081: ret 0x218b;
0xffffffff822e73d1: ret 0x218e;
0xffffffff8138cbe9: ret 0x2190;
0xffffffff8134e866: ret 0x2197;
0xffffffff81317611: ret 0x219;
0xffffffff822ac865: ret 0x219a;
0xffffffff83453677: ret 0x219d;
0xffffffff8143ce9a: ret 0x21;
0xffffffff8134e97f: ret 0x21a2;
0xffffffff824c9687: ret 0x21a4;
0xffffffff81a6eb68: ret 0x21a5;
0xffffffff822ad33d: ret 0x21a6;
0xffffffff81317675: ret 0x21a;
0xffffffff8134e940: ret 0x21ac;
0xffffffff81287997: ret 0x21af;
0xffffffff8236e09b: ret 0x21b2;
0xffffffff8244c2e9: ret 0x21b7;
0xffffffff8131768f: ret 0x21b;
0xffffffff8134e965: ret 0x21bc;
0xffffffff81a6f1d8: ret 0x21be;
0xffffffff825cd089: ret 0x21c0;
0xffffffff8247bda9: ret 0x21c4;
0xffffffff8230607c: ret 0x21c7;
0xffffffff82489085: ret 0x21c8;
0xffffffff82489086: ret 0x21c8;
0xffffffff813176a9: ret 0x21c;
0xffffffff824a8185: ret 0x21d2;
0xffffffff822462cd: ret 0x21d6;
0xffffffff822c1682: ret 0x21d9;
0xffffffff8131771d: ret 0x21d;
0xffffffff81a6f23f: ret 0x21dd;
0xffffffff8243ca79: ret 0x21e5;
0xffffffff813e0819: ret 0x21e8;
0xffffffff81317797: ret 0x21e;
0xffffffff8125c96e: ret 0x21eb;
0xffffffff81334f05: ret 0x21f0;
0xffffffff81334f74: ret 0x21f1;
0xffffffff825093f4: ret 0x21f2;
0xffffffff81130a0d: ret 0x21f4;
0xffffffff8113226f: ret 0x21f8;
0xffffffff81317636: ret 0x21f;
0xffffffff818a5e22: ret 0x21fb;
0xffffffff822f2d5d: ret 0x21fc;
0xffffffff8114af65: ret 0x21ff;
0xffffffff8232accc: ret 0x2203;
0xffffffff8239c3dd: ret 0x2206;
0xffffffff822b0db3: ret 0x2208;
0xffffffff822b0db4: ret 0x2208;
0xffffffff82453bc4: ret 0x2209;
0xffffffff816ff7e1: ret 0x220e;
0xffffffff8105f431: ret 0x220f;
0xffffffff8229cd1a: ret 0x2210;
0xffffffff8229911d: ret 0x2211;
0xffffffff823f258f: ret 0x2213;
0xffffffff8223fa06: ret 0x2219;
0xffffffff81448c4a: ret 0x221;
0xffffffff8236de73: ret 0x221a;
0xffffffff8239e185: ret 0x221e;
0xffffffff8239e184: ret 0x221e;
0xffffffff8249d073: ret 0x2229;
0xffffffff817be13b: ret 0x222f;
0xffffffff825121f5: ret 0x223e;
0xffffffff81134bf9: ret 0x2248;
0xffffffff8255cdf6: ret 0x2249;
0xffffffff8143f4d9: ret 0x224;
0xffffffff823a511f: ret 0x224a;
0xffffffff810128ff: ret 0x2250;
0xffffffff824b54dc: ret 0x225c;
0xffffffff8230f133: ret 0x225d;
0xffffffff82496ab9: ret 0x2261;
0xffffffff8187f373: ret 0x2268;
0xffffffff823a4381: ret 0x226a;
0xffffffff8344bf4e: ret 0x2272;
0xffffffff819da3e6: ret 0x2273;
0xffffffff810edc97: ret 0x2274;
0xffffffff810d68a8: ret 0x2275;
0xffffffff824634f6: ret 0x227a;
0xffffffff82384c2e: ret 0x227c;
0xffffffff815c2171: ret 0x2280;
0xffffffff82231e44: ret 0x2281;
0xffffffff83463517: ret 0x2289;
0xffffffff81775e32: ret 0x228;
0xffffffff824cdd6f: ret 0x228c;
0xffffffff8230a0ea: ret 0x2294;
0xffffffff824adfae: ret 0x2298;
0xffffffff817ab2aa: ret 0x22;
0xffffffff81a56dfe: ret 0x22;
0xffffffff814b192c: ret 0x22a0;
0xffffffff823a024a: ret 0x22a2;
0xffffffff824f29bf: ret 0x22a5;
0xffffffff82214abd: ret 0x22a;
0xffffffff824f564c: ret 0x22ab;
0xffffffff823ed987: ret 0x22ac;
0xffffffff824a097e: ret 0x22b0;
0xffffffff82252344: ret 0x22b1;
0xffffffff8240a7c5: ret 0x22b5;
0xffffffff82489c25: ret 0x22b6;
0xffffffff82401ac3: ret 0x22b9;
0xffffffff823e8506: ret 0x22bd;
0xffffffff8150bd1a: ret 0x22c0;
0xffffffff824862f5: ret 0x22c2;
0xffffffff81a4e1f1: ret 0x22c7;
0xffffffff82314633: ret 0x22d0;
0xffffffff823baf28: ret 0x22d5;
0xffffffff8232984b: ret 0x22e0;
0xffffffff81a54c9a: ret 0x22e3;
0xffffffff817e5e78: ret 0x22e8;
0xffffffff81007928: ret 0x22e9;
0xffffffff8156885a: ret 0x22e;
0xffffffff811e9e31: ret 0x22eb;
0xffffffff82286617: ret 0x22f1;
0xffffffff8249d39c: ret 0x22f2;
0xffffffff8242aca2: ret 0x22fb;
0xffffffff823d7855: ret 0x2300;
0xffffffff8231dead: ret 0x2305;
0xffffffff8231deae: ret 0x2305;
0xffffffff81353bf4: ret 0x2308;
0xffffffff814566f8: ret 0x230;
0xffffffff82250f67: ret 0x230b;
0xffffffff824587d2: ret 0x230d;
0xffffffff81354256: ret 0x2310;
0xffffffff81403f6a: ret 0x2311;
0xffffffff81499f2a: ret 0x2314;
0xffffffff825199ee: ret 0x2315;
0xffffffff813e0ad9: ret 0x2316;
0xffffffff822612a2: ret 0x2318;
0xffffffff822a3d0d: ret 0x231d;
0xffffffff8223da7e: ret 0x231e;
0xffffffff822ec24e: ret 0x2324;
0xffffffff8248e8c8: ret 0x2329;
0xffffffff812ed5fc: ret 0x232;
0xffffffff824d7128: ret 0x232a;
0xffffffff82679844: ret 0x2331;
0xffffffff823f9387: ret 0x2334;
0xffffffff824658b5: ret 0x2336;
0xffffffff8174246a: ret 0x2338;
0xffffffff822b16af: ret 0x2339;
0xffffffff82467e9b: ret 0x233;
0xffffffff82296a58: ret 0x233a;
0xffffffff825133f7: ret 0x233d;
0xffffffff82398ac7: ret 0x233e;
0xffffffff81014b65: ret 0x233f;
0xffffffff822f7713: ret 0x2346;
0xffffffff82484a74: ret 0x2347;
0xffffffff810460cb: ret 0x2348;
0xffffffff8237aef9: ret 0x234a;
0xffffffff823a8e64: ret 0x234d;
0xffffffff8240a7d7: ret 0x234e;
0xffffffff83498193: ret 0x234f;
0xffffffff816e9ae2: ret 0x2350;
0xffffffff8237e1c0: ret 0x2351;
0xffffffff82455afd: ret 0x2354;
0xffffffff812c12b1: ret 0x235;
0xffffffff8150db71: ret 0x235a;
0xffffffff8225768b: ret 0x235d;
0xffffffff82402a15: ret 0x235e;
0xffffffff8240d225: ret 0x2369;
0xffffffff82538d61: ret 0x236b;
0xffffffff817d325b: ret 0x2370;
0xffffffff8174263d: ret 0x2374;
0xffffffff8152335d: ret 0x2375;
0xffffffff8157e6d4: ret 0x2376;
0xffffffff8196a8f4: ret 0x2377;
0xffffffff82462ed8: ret 0x237e;
0xffffffff834532c3: ret 0x2381;
0xffffffff81742677: ret 0x2388;
0xffffffff8129023a: ret 0x238;
0xffffffff8252eec4: ret 0x2391;
0xffffffff824a4c26: ret 0x2397;
0xffffffff8250db24: ret 0x2398;
0xffffffff8234f5c6: ret 0x239;
0xffffffff824201a2: ret 0x239a;
0xffffffff8240d47c: ret 0x239e;
0xffffffff8126b3f1: ret 0x23;
0xffffffff817429aa: ret 0x23a1;
0xffffffff8165cf77: ret 0x23a7;
0xffffffff82520708: ret 0x23a;
0xffffffff817e8067: ret 0x23ab;
0xffffffff8252a2b7: ret 0x23ad;
0xffffffff81742f3a: ret 0x23b7;
0xffffffff82472cd1: ret 0x23bb;
0xffffffff8245c574: ret 0x23bd;
0xffffffff815a808a: ret 0x23be;
0xffffffff822add03: ret 0x23c3;
0xffffffff8227dd1d: ret 0x23c4;
0xffffffff81940241: ret 0x23c5;
0xffffffff8124d7f3: ret 0x23c;
0xffffffff819324b3: ret 0x23ca;
0xffffffff81931c99: ret 0x23cb;
0xffffffff8230c880: ret 0x23ce;
0xffffffff8225c156: ret 0x23d1;
0xffffffff819402f1: ret 0x23d3;
0xffffffff81742ee6: ret 0x23d4;
0xffffffff82530adc: ret 0x23d;
0xffffffff817cc263: ret 0x23db;
0xffffffff81a41b0a: ret 0x23de;
0xffffffff817e803b: ret 0x23e1;
0xffffffff8194031d: ret 0x23e3;
0xffffffff82237b4b: ret 0x23e6;
0xffffffff810344f3: ret 0x23e8;
0xffffffff810126f7: ret 0x23e9;
0xffffffff817d3274: ret 0x23f0;
0xffffffff824e330b: ret 0x23f2;
0xffffffff81940349: ret 0x23f3;
0xffffffff8110e60b: ret 0x23f4;
0xffffffff82410b51: ret 0x23fa;
0xffffffff8110e632: ret 0x23fd;
0xffffffff82550b8a: ret 0x23ff;
0xffffffff814b196c: ret 0x2400;
0xffffffff81b08000: ret 0x2401;
0xffffffff824b4aff: ret 0x2403;
0xffffffff810e79bb: ret 0x2404;
0xffffffff8110e655: ret 0x2405;
0xffffffff825b0e4a: ret 0x2408;
0xffffffff8117ffda: ret 0x240;
0xffffffff8194037a: ret 0x240b;
0xffffffff82553926: ret 0x240e;
0xffffffff8174421f: ret 0x2412;
0xffffffff822966d8: ret 0x2413;
0xffffffff81940189: ret 0x2415;
0xffffffff8150e9cb: ret 0x2418;
0xffffffff823cf17d: ret 0x241;
0xffffffff824f3237: ret 0x241a;
0xffffffff819403a9: ret 0x241c;
0xffffffff8251201b: ret 0x241d;
0xffffffff8228a3dd: ret 0x241e;
0xffffffff8237ac81: ret 0x2421;
0xffffffff822f2b9f: ret 0x2423;
0xffffffff81bc4fba: ret 0x2429;
0xffffffff82880930: ret 0x242;
0xffffffff817e8490: ret 0x242a;
0xffffffff819403d7: ret 0x242c;
0xffffffff8226c139: ret 0x242d;
0xffffffff81857275: ret 0x242e;
0xffffffff824ae1b5: ret 0x2437;
0xffffffff817442e8: ret 0x243b;
0xffffffff81804841: ret 0x2440;
0xffffffff824e1a56: ret 0x2444;
0xffffffff82255ef4: ret 0x2447;
0xffffffff823b25a3: ret 0x2449;
0xffffffff8253a679: ret 0x244;
0xffffffff8237a023: ret 0x244d;
0xffffffff816b214a: ret 0x2450;
0xffffffff8104ab58: ret 0x245;
0xffffffff822c436c: ret 0x245b;
0xffffffff823382ed: ret 0x245c;
0xffffffff82405f21: ret 0x245e;
0xffffffff816edcaf: ret 0x2460;
0xffffffff82304656: ret 0x2463;
0xffffffff82813fbc: ret 0x246;
0xffffffff822a3b3d: ret 0x246f;
0xffffffff811a4e8d: ret 0x2472;
0xffffffff813eb8d2: ret 0x2474;
0xffffffff8135f214: ret 0x2475;
0xffffffff822ee32b: ret 0x247a;
0xffffffff817e84b2: ret 0x247b;
0xffffffff8347d9ed: ret 0x247c;
0xffffffff8191a8df: ret 0x247d;
0xffffffff81399e49: ret 0x247e;
0xffffffff82494316: ret 0x2484;
0xffffffff823feb78: ret 0x248b;
0xffffffff82317579: ret 0x248c;
0xffffffff81178611: ret 0x249;
0xffffffff82244551: ret 0x249f;
0xffffffff81702d2a: ret 0x24;
0xffffffff817e845e: ret 0x24a1;
0xffffffff824aee06: ret 0x24a2;
0xffffffff82385e80: ret 0x24a8;
0xffffffff8249cb5e: ret 0x24af;
0xffffffff8222f8ec: ret 0x24b4;
0xffffffff822a8902: ret 0x24b6;
0xffffffff82881948: ret 0x24b;
0xffffffff823d8b1e: ret 0x24c2;
0xffffffff82305465: ret 0x24c5;
0xffffffff817e85e7: ret 0x24c6;
0xffffffff82465536: ret 0x24c;
0xffffffff81744bdf: ret 0x24cb;
0xffffffff8247f699: ret 0x24d0;
0xffffffff8143e535: ret 0x24d1;
0xffffffff81135fa9: ret 0x24d;
0xffffffff82530d9c: ret 0x24e1;
0xffffffff81744c00: ret 0x24e3;
0xffffffff82231b85: ret 0x24e5;
0xffffffff824c7a3e: ret 0x24e6;
0xffffffff82383356: ret 0x24e7;
0xffffffff81914bf2: ret 0x24e8;
0xffffffff81650407: ret 0x24e9;
0xffffffff81a12447: ret 0x24eb;
0xffffffff823dcd8e: ret 0x24f2;
0xffffffff817e8537: ret 0x24f6;
0xffffffff81112433: ret 0x24f;
0xffffffff8181563f: ret 0x2500;
0xffffffff8255654d: ret 0x2505;
0xffffffff824053d0: ret 0x2508;
0xffffffff822273c4: ret 0x250;
0xffffffff823d4f0f: ret 0x250b;
0xffffffff817e8609: ret 0x250d;
0xffffffff824c5535: ret 0x250f;
0xffffffff8238db6d: ret 0x2510;
0xffffffff8150e993: ret 0x2514;
0xffffffff823eadac: ret 0x2516;
0xffffffff82226c7d: ret 0x2519;
0xffffffff8344dd54: ret 0x2520;
0xffffffff8247bbe1: ret 0x2526;
0xffffffff822d464d: ret 0x252a;
0xffffffff8225b1bd: ret 0x252b;
0xffffffff817e85c1: ret 0x252f;
0xffffffff8234fd2d: ret 0x2530;
0xffffffff8174507c: ret 0x253b;
0xffffffff824a2639: ret 0x253e;
0xffffffff8251b624: ret 0x253f;
0xffffffff822406da: ret 0x2540;
0xffffffff8234f367: ret 0x2542;
0xffffffff823ffa1d: ret 0x2543;
0xffffffff822eb4a8: ret 0x2544;
0xffffffff81105c4b: ret 0x2548;
0xffffffff810c5efb: ret 0x254;
0xffffffff8226e005: ret 0x254b;
0xffffffff823b4924: ret 0x254c;
0xffffffff8224258f: ret 0x254e;
0xffffffff823eb796: ret 0x254f;
0xffffffff812324f8: ret 0x2550;
0xffffffff823b4855: ret 0x2555;
0xffffffff823b619b: ret 0x2558;
0xffffffff824fa16f: ret 0x255d;
0xffffffff814b19ac: ret 0x2560;
0xffffffff823bc993: ret 0x2565;
0xffffffff8150ee35: ret 0x2566;
0xffffffff810509c3: ret 0x256;
0xffffffff823279e7: ret 0x256b;
0xffffffff819693f0: ret 0x2570;
0xffffffff810e9571: ret 0x2574;
0xffffffff8182dcb6: ret 0x2575;
0xffffffff810458ad: ret 0x257;
0xffffffff8239ed40: ret 0x257a;
0xffffffff817e8651: ret 0x257c;
0xffffffff8246d943: ret 0x257e;
0xffffffff824a7db8: ret 0x2583;
0xffffffff8243d170: ret 0x2584;
0xffffffff824d31f2: ret 0x2586;
0xffffffff834888b2: ret 0x2588;
0xffffffff81745aac: ret 0x2589;
0xffffffff81726fcb: ret 0x258;
0xffffffff817e871e: ret 0x2591;
0xffffffff824b9d12: ret 0x2592;
0xffffffff8225c37d: ret 0x2595;
0xffffffff81745e6b: ret 0x2599;
0xffffffff8238a430: ret 0x259;
0xffffffff8240965a: ret 0x259d;
0xffffffff8239030e: ret 0x259e;
0xffffffff815cccea: ret 0x25;
0xffffffff825534de: ret 0x25a6;
0xffffffff82443db9: ret 0x25ac;
0xffffffff825319e2: ret 0x25ad;
0xffffffff81409d9c: ret 0x25b0;
0xffffffff8235ff89: ret 0x25b3;
0xffffffff81746ede: ret 0x25b5;
0xffffffff823c0cd7: ret 0x25b7;
0xffffffff823c0cd8: ret 0x25b7;
0xffffffff8239b775: ret 0x25ba;
0xffffffff82459092: ret 0x25c0;
0xffffffff82262d4e: ret 0x25c3;
0xffffffff822a7817: ret 0x25c;
0xffffffff8222750f: ret 0x25ca;
0xffffffff824223ab: ret 0x25d0;
0xffffffff823e23cb: ret 0x25d3;
0xffffffff817e8879: ret 0x25d8;
0xffffffff81244cba: ret 0x25d;
0xffffffff8256a4dd: ret 0x25e2;
0xffffffff834886f6: ret 0x25e8;
0xffffffff81746e68: ret 0x25e9;
0xffffffff8142030b: ret 0x25eb;
0xffffffff8228602c: ret 0x25f0;
0xffffffff82544d5c: ret 0x25f1;
0xffffffff811c7040: ret 0x25f4;
0xffffffff823f63e4: ret 0x25fa;
0xffffffff822e2c88: ret 0x25fc;
0xffffffff8142028f: ret 0x25fe;
0xffffffff81a846d2: ret 0x25ff;
0xffffffff81a846d1: ret 0x25ff;
0xffffffff82349668: ret 0x2602;
0xffffffff82412990: ret 0x2604;
0xffffffff817e87a8: ret 0x2606;
0xffffffff824299a4: ret 0x2608;
0xffffffff81746e82: ret 0x2612;
0xffffffff8141ffd1: ret 0x2614;
0xffffffff823749ad: ret 0x2619;
0xffffffff817e889b: ret 0x261c;
0xffffffff82534afb: ret 0x2620;
0xffffffff822900fe: ret 0x2622;
0xffffffff811e89ee: ret 0x2628;
0xffffffff8223cba7: ret 0x262a;
0xffffffff8142000b: ret 0x262b;
0xffffffff823f626e: ret 0x2636;
0xffffffff81746f1d: ret 0x2637;
0xffffffff8346fbe8: ret 0x2638;
0xffffffff81732e82: ret 0x263;
0xffffffff817e8854: ret 0x263a;
0xffffffff8227504d: ret 0x263b;
0xffffffff82244565: ret 0x263d;
0xffffffff824ba959: ret 0x263f;
0xffffffff81172250: ret 0x2640;
0xffffffff82466294: ret 0x2642;
0xffffffff811e9e51: ret 0x2645;
0xffffffff822d5634: ret 0x264b;
0xffffffff811e9e20: ret 0x264c;
0xffffffff82231b7d: ret 0x2654;
0xffffffff8248b2c8: ret 0x2656;
0xffffffff817ecaf3: ret 0x2657;
0xffffffff823a8b08: ret 0x265d;
0xffffffff8239bca7: ret 0x2660;
0xffffffff824fcbc9: ret 0x2664;
0xffffffff81746f08: ret 0x266e;
0xffffffff8249f3c3: ret 0x2673;
0xffffffff81060b60: ret 0x2674;
0xffffffff818fda5f: ret 0x2676;
0xffffffff8105b9f2: ret 0x2677;
0xffffffff81834a50: ret 0x2678;
0xffffffff823dfc82: ret 0x267f;
0xffffffff823dfc83: ret 0x267f;
0xffffffff8254cd1f: ret 0x2680;
0xffffffff817ec9f0: ret 0x2685;
0xffffffff811ec0d2: ret 0x2688;
0xffffffff8238ebdf: ret 0x2689;
0xffffffff8238ebe0: ret 0x2689;
0xffffffff824ae32e: ret 0x268e;
0xffffffff82372dcf: ret 0x268f;
0xffffffff825661b3: ret 0x2695;
0xffffffff817ecb15: ret 0x269a;
0xffffffff8229fabe: ret 0x269d;
0xffffffff81b95392: ret 0x26;
0xffffffff81746e9c: ret 0x26a1;
0xffffffff823d4ba1: ret 0x26a6;
0xffffffff824e9c19: ret 0x26a8;
0xffffffff8139602a: ret 0x26a;
0xffffffff8249e727: ret 0x26ab;
0xffffffff817eca80: ret 0x26b6;
0xffffffff81807e3d: ret 0x26b9;
0xffffffff8161f906: ret 0x26b;
0xffffffff823608ad: ret 0x26ba;
0xffffffff8246b10d: ret 0x26ca;
0xffffffff81746fd2: ret 0x26ce;
0xffffffff8254c240: ret 0x26cf;
0xffffffff817e936c: ret 0x26d1;
0xffffffff822aaaba: ret 0x26df;
0xffffffff81721861: ret 0x26e0;
0xffffffff8141cf35: ret 0x26e7;
0xffffffff810dde04: ret 0x26e8;
0xffffffff8245176c: ret 0x26e;
0xffffffff811b8679: ret 0x26eb;
0xffffffff81747053: ret 0x26ed;
0xffffffff824fa5de: ret 0x26f1;
0xffffffff825d5d66: ret 0x26f2;
0xffffffff82360d6b: ret 0x26f5;
0xffffffff817e933a: ret 0x26f8;
0xffffffff8254ff62: ret 0x26fc;
0xffffffff823f58c9: ret 0x2701;
0xffffffff82356204: ret 0x2702;
0xffffffff81a051da: ret 0x2704;
0xffffffff81245f78: ret 0x270;
0xffffffff8235275b: ret 0x270b;
0xffffffff8127033c: ret 0x2710;
0xffffffff823f1a97: ret 0x2718;
0xffffffff824f700b: ret 0x271d;
0xffffffff8234655c: ret 0x271f;
0xffffffff81721ae6: ret 0x2720;
0xffffffff814569bd: ret 0x2730;
0xffffffff8345bbf5: ret 0x273;
0xffffffff825524f5: ret 0x273c;
0xffffffff8244217d: ret 0x273e;
0xffffffff8158945c: ret 0x274;
0xffffffff822ca326: ret 0x274b;
0xffffffff8174715e: ret 0x274e;
0xffffffff8242be31: ret 0x2753;
0xffffffff8113f17f: ret 0x2758;
0xffffffff82504801: ret 0x2759;
0xffffffff82462bff: ret 0x275;
0xffffffff824268ab: ret 0x275f;
0xffffffff823373c0: ret 0x2761;
0xffffffff81c5b9da: ret 0x276;
0xffffffff81146deb: ret 0x2772;
0xffffffff81a4229d: ret 0x2774;
0xffffffff8233e53b: ret 0x2775;
0xffffffff81106f91: ret 0x2776;
0xffffffff8197c33b: ret 0x2777;
0xffffffff8156586a: ret 0x277;
0xffffffff82295fcd: ret 0x277d;
0xffffffff8174717e: ret 0x277e;
0xffffffff8242af0e: ret 0x2783;
0xffffffff817ecccc: ret 0x2786;
0xffffffff81a01d0f: ret 0x2789;
0xffffffff8103962a: ret 0x278;
0xffffffff817ecd32: ret 0x2793;
0xffffffff82452ea4: ret 0x2794;
0xffffffff82532a15: ret 0x279a;
0xffffffff81830966: ret 0x279c;
0xffffffff816dd7da: ret 0x27;
0xffffffff8256bf33: ret 0x27a3;
0xffffffff82236cbb: ret 0x27a7;
0xffffffff8253c1d1: ret 0x27a9;
0xffffffff82328d02: ret 0x27ab;
0xffffffff825586b6: ret 0x27af;
0xffffffff82461f25: ret 0x27b3;
0xffffffff81a03dda: ret 0x27bb;
0xffffffff8140f835: ret 0x27be;
0xffffffff825424d1: ret 0x27c0;
0xffffffff81106f7b: ret 0x27c1;
0xffffffff822dbb69: ret 0x27c5;
0xffffffff823be911: ret 0x27c7;
0xffffffff823f4beb: ret 0x27cd;
0xffffffff8222a5a0: ret 0x27d0;
0xffffffff8231d07c: ret 0x27d;
0xffffffff825216f7: ret 0x27da;
0xffffffff824fcf13: ret 0x27dc;
0xffffffff8174720c: ret 0x27dd;
0xffffffff8249dd2b: ret 0x27df;
0xffffffff8196c930: ret 0x27e0;
0xffffffff811decc3: ret 0x27e8;
0xffffffff824a6c81: ret 0x27ea;
0xffffffff824fefc0: ret 0x27eb;
0xffffffff82373e09: ret 0x27ed;
0xffffffff823634d7: ret 0x27ee;
0xffffffff82566b21: ret 0x27f3;
0xffffffff823ec055: ret 0x27f7;
0xffffffff824fc16b: ret 0x27f8;
0xffffffff8230b964: ret 0x27fa;
0xffffffff8245835b: ret 0x27fb;
0xffffffff824b02e0: ret 0x27fe;
0xffffffff8241571f: ret 0x2803;
0xffffffff81891335: ret 0x2804;
0xffffffff83472212: ret 0x2809;
0xffffffff8132f41a: ret 0x280;
0xffffffff8254a629: ret 0x2811;
0xffffffff82567b13: ret 0x2815;
0xffffffff82417ade: ret 0x2818;
0xffffffff81747755: ret 0x281a;
0xffffffff8232b6b9: ret 0x281b;
0xffffffff822e8cd1: ret 0x281c;
0xffffffff824e1006: ret 0x2825;
0xffffffff8254bbc4: ret 0x2828;
0xffffffff82458fd6: ret 0x282;
0xffffffff822c1046: ret 0x282c;
0xffffffff8247d397: ret 0x2830;
0xffffffff8236f993: ret 0x2831;
0xffffffff82383f45: ret 0x2832;
0xffffffff8256b437: ret 0x2833;
0xffffffff822b591b: ret 0x2834;
0xffffffff823205d2: ret 0x2837;
0xffffffff81747740: ret 0x2838;
0xffffffff825189f5: ret 0x283a;
0xffffffff825189f4: ret 0x283a;
0xffffffff825189f3: ret 0x283a;
0xffffffff822d4c92: ret 0x283c;
0xffffffff824627ae: ret 0x2843;
0xffffffff8230f3c5: ret 0x2848;
0xffffffff810ecba2: ret 0x284a;
0xffffffff82304158: ret 0x284b;
0xffffffff8163ec3a: ret 0x285;
0xffffffff81748950: ret 0x285c;
0xffffffff822954dd: ret 0x285d;
0xffffffff8234e391: ret 0x285e;
0xffffffff815b1b62: ret 0x2860;
0xffffffff81110ecf: ret 0x2862;
0xffffffff81110f0f: ret 0x286a;
0xffffffff824b1396: ret 0x286c;
0xffffffff8248d9e6: ret 0x286e;
0xffffffff824e02a9: ret 0x2870;
0xffffffff81110f2e: ret 0x2873;
0xffffffff818dfc22: ret 0x2875;
0xffffffff8236eabc: ret 0x2876;
0xffffffff825300b3: ret 0x2877;
0xffffffff8251b70f: ret 0x287b;
0xffffffff82286496: ret 0x2884;
0xffffffff8234afe5: ret 0x2885;
0xffffffff8246602a: ret 0x2889;
0xffffffff825065a1: ret 0x2890;
0xffffffff8256a3ce: ret 0x2891;
0xffffffff823e8cb7: ret 0x2897;
0xffffffff815220e0: ret 0x2899;
0xffffffff82392dab: ret 0x289f;
0xffffffff8185f232: ret 0x28;
0xffffffff834887b4: ret 0x28a0;
0xffffffff81522143: ret 0x28a1;
0xffffffff824a9773: ret 0x28a4;
0xffffffff8253d136: ret 0x28a5;
0xffffffff82235f85: ret 0x28a7;
0xffffffff81522171: ret 0x28b0;
0xffffffff8347e3fa: ret 0x28b2;
0xffffffff82366107: ret 0x28b9;
0xffffffff82886c48: ret 0x28b;
0xffffffff8249723b: ret 0x28bb;
0xffffffff82511521: ret 0x28bc;
0xffffffff81c4d456: ret 0x28c;
0xffffffff82264638: ret 0x28cb;
0xffffffff823012ab: ret 0x28cc;
0xffffffff8237477f: ret 0x28d3;
0xffffffff8344ea5f: ret 0x28d8;
0xffffffff81957171: ret 0x28de;
0xffffffff82245d1f: ret 0x28e1;
0xffffffff8230be0c: ret 0x28e4;
0xffffffff812adbe1: ret 0x28e8;
0xffffffff812bb642: ret 0x28e9;
0xffffffff8168656b: ret 0x28eb;
0xffffffff8227539e: ret 0x28ec;
0xffffffff81748b12: ret 0x28ee;
0xffffffff822522d9: ret 0x28f1;
0xffffffff81001a27: ret 0x28f5;
0xffffffff8235d475: ret 0x28f6;
0xffffffff8248ad5a: ret 0x28f9;
0xffffffff822e454c: ret 0x28fa;
0xffffffff82363137: ret 0x28fd;
0xffffffff8200d3e6: ret 0x28ff;
0xffffffff8249ab50: ret 0x2900;
0xffffffff81147667: ret 0x2904;
0xffffffff810d8cc0: ret 0x2906;
0xffffffff81a9ea40: ret 0x2908;
0xffffffff8224618b: ret 0x2909;
0xffffffff8222cf07: ret 0x290;
0xffffffff824550ea: ret 0x290a;
0xffffffff81147648: ret 0x290b;
0xffffffff811f0fcf: ret 0x290e;
0xffffffff8150a5de: ret 0x2910;
0xffffffff819e3101: ret 0x2912;
0xffffffff81bc8366: ret 0x2913;
0xffffffff81977c47: ret 0x2914;
0xffffffff810d8c46: ret 0x2918;
0xffffffff81147651: ret 0x2919;
0xffffffff81c552dc: ret 0x2920;
0xffffffff824479a2: ret 0x2925;
0xffffffff824f0c4e: ret 0x2926;
0xffffffff83488755: ret 0x2928;
0xffffffff82531b03: ret 0x292;
0xffffffff82343b4d: ret 0x292a;
0xffffffff8227cf09: ret 0x292b;
0xffffffff822f139e: ret 0x292d;
0xffffffff82387794: ret 0x292e;
0xffffffff819f007a: ret 0x292f;
0xffffffff822d68a4: ret 0x2932;
0xffffffff823a7a3b: ret 0x2938;
0xffffffff82452c20: ret 0x2939;
0xffffffff81925719: ret 0x293c;
0xffffffff8245ee40: ret 0x293e;
0xffffffff81749203: ret 0x2940;
0xffffffff8159f195: ret 0x2941;
0xffffffff81331df0: ret 0x2944;
0xffffffff81537bd6: ret 0x2945;
0xffffffff8100f3bf: ret 0x2948;
0xffffffff8119a3b6: ret 0x2949;
0xffffffff8100521e: ret 0x294c;
0xffffffff8100d08d: ret 0x294d;
0xffffffff824f9323: ret 0x294f;
0xffffffff8254672f: ret 0x2957;
0xffffffff823fd4e9: ret 0x2959;
0xffffffff8224ddbb: ret 0x295c;
0xffffffff811f99c2: ret 0x2960;
0xffffffff8231d3a0: ret 0x2961;
0xffffffff81b40b51: ret 0x2964;
0xffffffff828153d8: ret 0x296;
0xffffffff8241a711: ret 0x296a;
0xffffffff81a0d8f8: ret 0x296b;
0xffffffff8233eae2: ret 0x296c;
0xffffffff817ef3c7: ret 0x2970;
0xffffffff81b2d94f: ret 0x2972;
0xffffffff810068bb: ret 0x2975;
0xffffffff81b02f3b: ret 0x2976;
0xffffffff8254b26d: ret 0x2979;
0xffffffff824007fc: ret 0x2984;
0xffffffff8238d5df: ret 0x298a;
0xffffffff8237286b: ret 0x298b;
0xffffffff817ef4e0: ret 0x298f;
0xffffffff822db6e1: ret 0x2998;
0xffffffff82422429: ret 0x299b;
0xffffffff825d7001: ret 0x299d;
0xffffffff819d90dd: ret 0x29;
0xffffffff817d32c4: ret 0x29a0;
0xffffffff816595db: ret 0x29a2;
0xffffffff81323824: ret 0x29a4;
0xffffffff824de3e0: ret 0x29a8;
0xffffffff835b06f0: ret 0x29ac;
0xffffffff823e4446: ret 0x29ae;
0xffffffff8165958b: ret 0x29af;
0xffffffff8194569a: ret 0x29b1;
0xffffffff8194596b: ret 0x29b3;
0xffffffff8224fcd8: ret 0x29b4;
0xffffffff8246dd64: ret 0x29b7;
0xffffffff824c0ac8: ret 0x29b9;
0xffffffff824803d3: ret 0x29b;
0xffffffff8194566f: ret 0x29ba;
0xffffffff824df4a5: ret 0x29bd;
0xffffffff835b0724: ret 0x29c0;
0xffffffff8224c302: ret 0x29c4;
0xffffffff8254eb43: ret 0x29c7;
0xffffffff8246dfea: ret 0x29c;
0xffffffff81945718: ret 0x29cc;
0xffffffff824c0988: ret 0x29cd;
0xffffffff822f3d2a: ret 0x29cf;
0xffffffff817ef4b7: ret 0x29d1;
0xffffffff81c51556: ret 0x29d5;
0xffffffff8239ba5a: ret 0x29d8;
0xffffffff81c515d4: ret 0x29d9;
0xffffffff8245f129: ret 0x29db;
0xffffffff8238e1fd: ret 0x29dc;
0xffffffff81945745: ret 0x29e0;
0xffffffff823d2146: ret 0x29e3;
0xffffffff8143c801: ret 0x29e8;
0xffffffff81c514ce: ret 0x29eb;
0xffffffff817493d2: ret 0x29f1;
0xffffffff8157c17f: ret 0x29f8;
0xffffffff82816290: ret 0x29f;
0xffffffff824c371e: ret 0x29fd;
0xffffffff8225a139: ret 0x2a00;
0xffffffff8225a13b: ret 0x2a00;
0xffffffff823c6660: ret 0x2a05;
0xffffffff81c52927: ret 0x2a07;
0xffffffff822aa842: ret 0x2a09;
0xffffffff81c51aab: ret 0x2a0c;
0xffffffff824d44d1: ret 0x2a0f;
0xffffffff824dc751: ret 0x2a12;
0xffffffff82248453: ret 0x2a13;
0xffffffff8194579e: ret 0x2a14;
0xffffffff823cdb48: ret 0x2a16;
0xffffffff817ef69f: ret 0x2a18;
0xffffffff81749527: ret 0x2a1a;
0xffffffff8250106d: ret 0x2a22;
0xffffffff823d3fb6: ret 0x2a23;
0xffffffff819457cc: ret 0x2a24;
0xffffffff815fda35: ret 0x2a28;
0xffffffff819459de: ret 0x2a2a;
0xffffffff8190e5da: ret 0x2a30;
0xffffffff8237d117: ret 0x2a35;
0xffffffff817ef6bd: ret 0x2a3a;
0xffffffff8145ecd9: ret 0x2a40;
0xffffffff8229fc34: ret 0x2a43;
0xffffffff823ad9e7: ret 0x2a48;
0xffffffff82299e5f: ret 0x2a4;
0xffffffff8244ec12: ret 0x2a4b;
0xffffffff823c8018: ret 0x2a4c;
0xffffffff8251a144: ret 0x2a4d;
0xffffffff82254352: ret 0x2a50;
0xffffffff8230d3e2: ret 0x2a54;
0xffffffff82304648: ret 0x2a5d;
0xffffffff8243e52f: ret 0x2a5f;
0xffffffff817494ea: ret 0x2a63;
0xffffffff8235b887: ret 0x2a67;
0xffffffff823324d6: ret 0x2a6d;
0xffffffff819dc1da: ret 0x2a6e;
0xffffffff812d0316: ret 0x2a73;
0xffffffff8179be65: ret 0x2a74;
0xffffffff8254d8d7: ret 0x2a75;
0xffffffff8165fbc1: ret 0x2a76;
0xffffffff824df2e3: ret 0x2a77;
0xffffffff81a8195e: ret 0x2a77;
0xffffffff823991a6: ret 0x2a79;
0xffffffff8250b2f0: ret 0x2a7;
0xffffffff822eca23: ret 0x2a84;
0xffffffff8165fd12: ret 0x2a87;
0xffffffff8182ead0: ret 0x2a8;
0xffffffff8239dc34: ret 0x2a8b;
0xffffffff8241d198: ret 0x2a8e;
0xffffffff81723102: ret 0x2a90;
0xffffffff81660568: ret 0x2a93;
0xffffffff823fd757: ret 0x2a96;
0xffffffff82372809: ret 0x2a98;
0xffffffff823a363d: ret 0x2a99;
0xffffffff816610cf: ret 0x2a9b;
0xffffffff817ef7a5: ret 0x2a9c;
0xffffffff814e69a5: ret 0x2a;
0xffffffff824e74a5: ret 0x2aa3;
0xffffffff817492d5: ret 0x2aa6;
0xffffffff823595c7: ret 0x2aa8;
0xffffffff823dd7ba: ret 0x2aaa;
0xffffffff8236b097: ret 0x2aae;
0xffffffff81661d63: ret 0x2ab2;
0xffffffff8233e1b4: ret 0x2ab4;
0xffffffff8224cc6e: ret 0x2ab5;
0xffffffff8247f75c: ret 0x2ab6;
0xffffffff81661da0: ret 0x2ab9;
0xffffffff82413604: ret 0x2ac2;
0xffffffff81661758: ret 0x2ac9;
0xffffffff823a3410: ret 0x2aca;
0xffffffff815fef34: ret 0x2ad0;
0xffffffff81661897: ret 0x2ad1;
0xffffffff823e1f77: ret 0x2ad5;
0xffffffff822fa0f5: ret 0x2ad;
0xffffffff82464b45: ret 0x2adb;
0xffffffff81661a77: ret 0x2add;
0xffffffff825653b9: ret 0x2ae2;
0xffffffff81300470: ret 0x2ae8;
0xffffffff82889f98: ret 0x2ae;
0xffffffff81810087: ret 0x2aeb;
0xffffffff817efce2: ret 0x2aef;
0xffffffff8245cc25: ret 0x2af2;
0xffffffff824a6031: ret 0x2af3;
0xffffffff8241182e: ret 0x2af5;
0xffffffff822f169e: ret 0x2af7;
0xffffffff81663e3c: ret 0x2af8;
0xffffffff8288a19c: ret 0x2af;
0xffffffff82695aaf: ret 0x2afa;
0xffffffff8248cb8d: ret 0x2afe;
0xffffffff81663ebf: ret 0x2aff;
0xffffffff81c3fab2: ret 0x2b04;
0xffffffff81551b3f: ret 0x2b0;
0xffffffff825088ab: ret 0x2b0d;
0xffffffff8166386b: ret 0x2b0f;
0xffffffff823a0523: ret 0x2b10;
0xffffffff810d5fd2: ret 0x2b18;
0xffffffff816639a7: ret 0x2b1a;
0xffffffff8239c6e9: ret 0x2b1e;
0xffffffff822b4dc9: ret 0x2b21;
0xffffffff8166501c: ret 0x2b26;
0xffffffff82504a12: ret 0x2b27;
0xffffffff8238a7b7: ret 0x2b2;
0xffffffff8238a7b6: ret 0x2b2;
0xffffffff82301851: ret 0x2b2c;
0xffffffff822c4d12: ret 0x2b36;
0xffffffff8251988c: ret 0x2b37;
0xffffffff815fd0c7: ret 0x2b40;
0xffffffff818818ca: ret 0x2b41;
0xffffffff822d728f: ret 0x2b44;
0xffffffff8230005e: ret 0x2b47;
0xffffffff810148a0: ret 0x2b48;
0xffffffff818f0b40: ret 0x2b49;
0xffffffff811260fa: ret 0x2b4c;
0xffffffff817d32f4: ret 0x2b50;
0xffffffff8224a192: ret 0x2b58;
0xffffffff822e3df5: ret 0x2b59;
0xffffffff81c4ab56: ret 0x2b5;
0xffffffff82361fbd: ret 0x2b5b;
0xffffffff8228787b: ret 0x2b5c;
0xffffffff81668fc0: ret 0x2b63;
0xffffffff824849a9: ret 0x2b64;
0xffffffff824c47b2: ret 0x2b65;
0xffffffff81749437: ret 0x2b66;
0xffffffff8252b354: ret 0x2b69;
0xffffffff81669a8a: ret 0x2b72;
0xffffffff818cb7e1: ret 0x2b74;
0xffffffff8151a679: ret 0x2b75;
0xffffffff810d27bc: ret 0x2b76;
0xffffffff8233626e: ret 0x2b78;
0xffffffff8225f036: ret 0x2b7b;
0xffffffff8226da86: ret 0x2b7f;
0xffffffff822fb277: ret 0x2b80;
0xffffffff822bda01: ret 0x2b82;
0xffffffff812c788d: ret 0x2b8;
0xffffffff81017f24: ret 0x2b90;
0xffffffff8248e887: ret 0x2b91;
0xffffffff8256d543: ret 0x2b99;
0xffffffff8105b296: ret 0x2b9;
0xffffffff82324d24: ret 0x2b9c;
0xffffffff8114867a: ret 0x2b;
0xffffffff817b2b2f: ret 0x2ba0;
0xffffffff824d90c1: ret 0x2ba0;
0xffffffff822310cd: ret 0x2bab;
0xffffffff82288c20: ret 0x2bb5;
0xffffffff81859178: ret 0x2bb6;
0xffffffff8224c839: ret 0x2bb;
0xffffffff81858f75: ret 0x2bba;
0xffffffff8238d531: ret 0x2bbd;
0xffffffff8231c20a: ret 0x2bbf;
0xffffffff8231c209: ret 0x2bbf;
0xffffffff82494f4d: ret 0x2bc3;
0xffffffff8239265c: ret 0x2bc5;
0xffffffff822588ed: ret 0x2bca;
0xffffffff81414f0d: ret 0x2bd0;
0xffffffff82508f1b: ret 0x2bd1;
0xffffffff81c545d1: ret 0x2bd1;
0xffffffff8174959e: ret 0x2bd4;
0xffffffff825211a7: ret 0x2bda;
0xffffffff824362e4: ret 0x2bde;
0xffffffff8134e8e9: ret 0x2be1;
0xffffffff824ef9f8: ret 0x2be2;
0xffffffff822aa566: ret 0x2be4;
0xffffffff8243ffd1: ret 0x2be7;
0xffffffff8100c3ef: ret 0x2be8;
0xffffffff8105ac6c: ret 0x2be;
0xffffffff823f5fae: ret 0x2bef;
0xffffffff825d6ec7: ret 0x2bf0;
0xffffffff824e2198: ret 0x2bf8;
0xffffffff824cd9af: ret 0x2bf;
0xffffffff81110936: ret 0x2bfc;
0xffffffff822b694a: ret 0x2bff;
0xffffffff81180004: ret 0x2c00;
0xffffffff81749a73: ret 0x2c05;
0xffffffff82399203: ret 0x2c09;
0xffffffff81245f92: ret 0x2c0;
0xffffffff82356050: ret 0x2c0d;
0xffffffff81112b08: ret 0x2c0f;
0xffffffff823f783d: ret 0x2c10;
0xffffffff82555511: ret 0x2c13;
0xffffffff8240ba1b: ret 0x2c19;
0xffffffff8230d4d8: ret 0x2c20;
0xffffffff82243b40: ret 0x2c24;
0xffffffff8226ea56: ret 0x2c2a;
0xffffffff824fe15a: ret 0x2c2c;
0xffffffff823190ae: ret 0x2c31;
0xffffffff8227891f: ret 0x2c39;
0xffffffff8242431e: ret 0x2c40;
0xffffffff8228c4c9: ret 0x2c43;
0xffffffff82346f57: ret 0x2c50;
0xffffffff8234cab9: ret 0x2c55;
0xffffffff82500f08: ret 0x2c59;
0xffffffff810b40da: ret 0x2c5;
0xffffffff823ebd30: ret 0x2c6;
0xffffffff8168aca2: ret 0x2c72;
0xffffffff81739178: ret 0x2c73;
0xffffffff8112c52e: ret 0x2c76;
0xffffffff822e433f: ret 0x2c82;
0xffffffff81858cc5: ret 0x2c84;
0xffffffff816c7043: ret 0x2c85;
0xffffffff8237ff02: ret 0x2c86;
0xffffffff82334aa5: ret 0x2c87;
0xffffffff816c3c6a: ret 0x2c8d;
0xffffffff824639f7: ret 0x2c8e;
0xffffffff823a7f1b: ret 0x2c99;
0xffffffff817330eb: ret 0x2c9;
0xffffffff824b96ca: ret 0x2c9c;
0xffffffff81b35452: ret 0x2c;
0xffffffff8245be2f: ret 0x2ca1;
0xffffffff8248f595: ret 0x2ca9;
0xffffffff82324250: ret 0x2cac;
0xffffffff8247e223: ret 0x2cad;
0xffffffff824b0726: ret 0x2cb1;
0xffffffff82492e6f: ret 0x2cb3;
0xffffffff822c606b: ret 0x2cbc;
0xffffffff823d1645: ret 0x2cc1;
0xffffffff82336712: ret 0x2cc2;
0xffffffff81c55c9b: ret 0x2cc5;
0xffffffff8344d671: ret 0x2ccb;
0xffffffff8245d2cc: ret 0x2ccc;
0xffffffff82561362: ret 0x2ccd;
0xffffffff82476bda: ret 0x2cce;
0xffffffff817c011b: ret 0x2ccf;
0xffffffff823c67fa: ret 0x2cd4;
0xffffffff824bcd49: ret 0x2ce5;
0xffffffff8177c5ea: ret 0x2ce8;
0xffffffff82317210: ret 0x2ce9;
0xffffffff811e9e4c: ret 0x2ceb;
0xffffffff82393b08: ret 0x2cf1;
0xffffffff816afd21: ret 0x2cf8;
0xffffffff8233cd15: ret 0x2cfa;
0xffffffff8232d659: ret 0x2cfb;
0xffffffff8200d4e2: ret 0x2cff;
0xffffffff83466579: ret 0x2d05;
0xffffffff81114262: ret 0x2d06;
0xffffffff82406a69: ret 0x2d08;
0xffffffff828101e8: ret 0x2d0;
0xffffffff817d330c: ret 0x2d10;
0xffffffff82270511: ret 0x2d16;
0xffffffff824816eb: ret 0x2d1c;
0xffffffff824f996b: ret 0x2d1d;
0xffffffff8255b0ff: ret 0x2d1e;
0xffffffff823bea6c: ret 0x2d22;
0xffffffff824f23dc: ret 0x2d27;
0xffffffff8249d32b: ret 0x2d29;
0xffffffff822dcc8a: ret 0x2d2e;
0xffffffff823af120: ret 0x2d2f;
0xffffffff815b2bb9: ret 0x2d30;
0xffffffff81749dda: ret 0x2d36;
0xffffffff824adb4b: ret 0x2d37;
0xffffffff82427b34: ret 0x2d38;
0xffffffff8231a3a7: ret 0x2d3;
0xffffffff810af8ce: ret 0x2d4;
0xffffffff8254adfb: ret 0x2d51;
0xffffffff824ec8cf: ret 0x2d59;
0xffffffff828145ec: ret 0x2d5;
0xffffffff8224e2cb: ret 0x2d5b;
0xffffffff823b08c9: ret 0x2d5d;
0xffffffff82246100: ret 0x2d61;
0xffffffff822f5c27: ret 0x2d62;
0xffffffff8226979d: ret 0x2d63;
0xffffffff8226979c: ret 0x2d63;
0xffffffff82247221: ret 0x2d64;
0xffffffff82329200: ret 0x2d6e;
0xffffffff81c5e1aa: ret 0x2d72;
0xffffffff815d479d: ret 0x2d74;
0xffffffff81584f85: ret 0x2d76;
0xffffffff81749ec8: ret 0x2d77;
0xffffffff81b1bb5a: ret 0x2d78;
0xffffffff828060fc: ret 0x2d7;
0xffffffff822a418f: ret 0x2d7e;
0xffffffff83463bc7: ret 0x2d80;
0xffffffff824af3fc: ret 0x2d81;
0xffffffff8222a6c0: ret 0x2d82;
0xffffffff822ac36f: ret 0x2d83;
0xffffffff82475f2c: ret 0x2d87;
0xffffffff8243ebbe: ret 0x2d8a;
0xffffffff82290c5d: ret 0x2d92;
0xffffffff822e661e: ret 0x2d9c;
0xffffffff8199e150: ret 0x2d;
0xffffffff823390c7: ret 0x2da0;
0xffffffff8231e3e1: ret 0x2da1;
0xffffffff8223fd55: ret 0x2da8;
0xffffffff822c4d73: ret 0x2da;
0xffffffff8235d5e2: ret 0x2daa;
0xffffffff8222c600: ret 0x2dae;
0xffffffff81c22d8a: ret 0x2db0;
0xffffffff83463d52: ret 0x2db1;
0xffffffff82552ee0: ret 0x2db6;
0xffffffff8245dde8: ret 0x2db7;
0xffffffff81749efc: ret 0x2db8;
0xffffffff82289ad0: ret 0x2db9;
0xffffffff8288de5c: ret 0x2db;
0xffffffff82563f8a: ret 0x2dba;
0xffffffff82295604: ret 0x2dc5;
0xffffffff8233e10e: ret 0x2dc;
0xffffffff82455245: ret 0x2dcd;
0xffffffff824a177f: ret 0x2dce;
0xffffffff8117553f: ret 0x2dd0;
0xffffffff823fa97c: ret 0x2dd2;
0xffffffff8226627d: ret 0x2dd6;
0xffffffff823f14e5: ret 0x2dd7;
0xffffffff81114e3e: ret 0x2dd9;
0xffffffff8103ee92: ret 0x2ddc;
0xffffffff824980fa: ret 0x2de2;
0xffffffff823281f3: ret 0x2de4;
0xffffffff8122f861: ret 0x2de5;
0xffffffff8224eceb: ret 0x2de6;
0xffffffff8255bb67: ret 0x2de7;
0xffffffff8115c40d: ret 0x2de8;
0xffffffff81414f4d: ret 0x2df0;
0xffffffff81858e61: ret 0x2df6;
0xffffffff8167039d: ret 0x2df8;
0xffffffff817f0e7a: ret 0x2dfa;
0xffffffff82419a77: ret 0x2e02;
0xffffffff82248ea2: ret 0x2e07;
0xffffffff8249f1ff: ret 0x2e0;
0xffffffff819a240a: ret 0x2e0b;
0xffffffff823579dd: ret 0x2e11;
0xffffffff823724e3: ret 0x2e16;
0xffffffff81265cdb: ret 0x2e18;
0xffffffff83464060: ret 0x2e1a;
0xffffffff824e8269: ret 0x2e1f;
0xffffffff834838de: ret 0x2e20;
0xffffffff817f1620: ret 0x2e22;
0xffffffff834486cf: ret 0x2e23;
0xffffffff824e55f4: ret 0x2e2;
0xffffffff823f8ced: ret 0x2e2d;
0xffffffff81749fe7: ret 0x2e30;
0xffffffff8242f3c6: ret 0x2e31;
0xffffffff8224c469: ret 0x2e38;
0xffffffff824d67dc: ret 0x2e39;
0xffffffff823c9b89: ret 0x2e3d;
0xffffffff8199089a: ret 0x2e4a;
0xffffffff81036109: ret 0x2e4f;
0xffffffff82282154: ret 0x2e54;
0xffffffff8225a152: ret 0x2e5a;
0xffffffff817f19e0: ret 0x2e5c;
0xffffffff818bb827: ret 0x2e60;
0xffffffff81a74525: ret 0x2e66;
0xffffffff823708fc: ret 0x2e6a;
0xffffffff82429e54: ret 0x2e70;
0xffffffff822e83e4: ret 0x2e74;
0xffffffff824b1d81: ret 0x2e75;
0xffffffff8125a034: ret 0x2e76;
0xffffffff8233fbfa: ret 0x2e78;
0xffffffff81035fb3: ret 0x2e7b;
0xffffffff817f1a5d: ret 0x2e87;
0xffffffff8163d408: ret 0x2e8;
0xffffffff824cd3b2: ret 0x2e8a;
0xffffffff82413a42: ret 0x2e8b;
0xffffffff8345efd0: ret 0x2e8c;
0xffffffff83482009: ret 0x2e95;
0xffffffff822d2e33: ret 0x2e96;
0xffffffff818eb123: ret 0x2e97;
0xffffffff81b61088: ret 0x2e9;
0xffffffff8223863d: ret 0x2e9f;
0xffffffff8198de45: ret 0x2e;
0xffffffff822684fd: ret 0x2ea5;
0xffffffff8198f971: ret 0x2ea7;
0xffffffff8225761e: ret 0x2ea;
0xffffffff82276cf5: ret 0x2eaa;
0xffffffff824d9bf2: ret 0x2eb0;
0xffffffff822ca63a: ret 0x2eb1;
0xffffffff817f20a9: ret 0x2eb4;
0xffffffff82364675: ret 0x2eb5;
0xffffffff823e7ba4: ret 0x2eb7;
0xffffffff811cefcb: ret 0x2eb;
0xffffffff82492dc5: ret 0x2eba;
0xffffffff8174a051: ret 0x2ebc;
0xffffffff824ed4cd: ret 0x2ebe;
0xffffffff823eef36: ret 0x2ec6;
0xffffffff824f33f8: ret 0x2ecc;
0xffffffff82258ff5: ret 0x2ecd;
0xffffffff82542912: ret 0x2ece;
0xffffffff82352ac3: ret 0x2ecf;
0xffffffff82466711: ret 0x2ed0;
0xffffffff824cd591: ret 0x2ed2;
0xffffffff8223a9f1: ret 0x2ed6;
0xffffffff817f2aa1: ret 0x2ed8;
0xffffffff8244e433: ret 0x2ed9;
0xffffffff81602eb2: ret 0x2ee0;
0xffffffff82568521: ret 0x2ee1;
0xffffffff8174a0a9: ret 0x2ee2;
0xffffffff823454f1: ret 0x2ee7;
0xffffffff8116430c: ret 0x2ee8;
0xffffffff823dc84a: ret 0x2ee;
0xffffffff8249974a: ret 0x2ef5;
0xffffffff82390dca: ret 0x2ef;
0xffffffff8131840a: ret 0x2efa;
0xffffffff8243cad4: ret 0x2efc;
0xffffffff81c56045: ret 0x2eff;
0xffffffff8126785e: ret 0x2f00;
0xffffffff825ceea4: ret 0x2f03;
0xffffffff81036065: ret 0x2f06;
0xffffffff823fc04e: ret 0x2f09;
0xffffffff814e69e4: ret 0x2f0;
0xffffffff8232c10c: ret 0x2f0e;
0xffffffff82473c7b: ret 0x2f15;
0xffffffff82501f41: ret 0x2f16;
0xffffffff822ad5eb: ret 0x2f1;
0xffffffff813238c4: ret 0x2f1d;
0xffffffff824e7b88: ret 0x2f25;
0xffffffff811a7d89: ret 0x2f28;
0xffffffff8196b2ea: ret 0x2f2a;
0xffffffff817f3544: ret 0x2f2d;
0xffffffff823ffa2b: ret 0x2f2f;
0xffffffff824a35c3: ret 0x2f39;
0xffffffff82357bf4: ret 0x2f3a;
0xffffffff81976dca: ret 0x2f3c;
0xffffffff8138ab1a: ret 0x2f46;
0xffffffff8243495f: ret 0x2f49;
0xffffffff82890944: ret 0x2f4;
0xffffffff824bb69c: ret 0x2f4a;
0xffffffff823e4850: ret 0x2f51;
0xffffffff8185931e: ret 0x2f53;
0xffffffff823f2703: ret 0x2f57;
0xffffffff82294bec: ret 0x2f58;
0xffffffff817f385b: ret 0x2f5d;
0xffffffff823fdb76: ret 0x2f5f;
0xffffffff817505cb: ret 0x2f66;
0xffffffff824645a4: ret 0x2f6;
0xffffffff8230dcc9: ret 0x2f6c;
0xffffffff824a2047: ret 0x2f72;
0xffffffff8198a672: ret 0x2f74;
0xffffffff824ad440: ret 0x2f75;
0xffffffff814f5131: ret 0x2f76;
0xffffffff817f3728: ret 0x2f79;
0xffffffff823ec7a5: ret 0x2f7d;
0xffffffff8152da73: ret 0x2f7e;
0xffffffff81283473: ret 0x2f7f;
0xffffffff81c562ce: ret 0x2f82;
0xffffffff82335292: ret 0x2f86;
0xffffffff822bd449: ret 0x2f8b;
0xffffffff8247b855: ret 0x2f91;
0xffffffff82556db1: ret 0x2f99;
0xffffffff8248d728: ret 0x2f9a;
0xffffffff813395ea: ret 0x2f;
0xffffffff822c8ee6: ret 0x2fa0;
0xffffffff8197c5db: ret 0x2fa4;
0xffffffff822692f8: ret 0x2fad;
0xffffffff8227f136: ret 0x2faf;
0xffffffff815b1ce2: ret 0x2fb0;
0xffffffff823991a9: ret 0x2fb5;
0xffffffff811c0995: ret 0x2fb8;
0xffffffff8249d112: ret 0x2fbb;
0xffffffff823e224f: ret 0x2fc4;
0xffffffff8253b26d: ret 0x2fc5;
0xffffffff82233602: ret 0x2fc6;
0xffffffff811bcce4: ret 0x2fc8;
0xffffffff823f0d8f: ret 0x2fc;
0xffffffff823ef72a: ret 0x2fce;
0xffffffff82316be5: ret 0x2fcf;
0xffffffff824feff8: ret 0x2fd4;
0xffffffff827fc154: ret 0x2fd;
0xffffffff8250563a: ret 0x2fe2;
0xffffffff8255f9bc: ret 0x2fe6;
0xffffffff823dea88: ret 0x2fe7;
0xffffffff81117e4b: ret 0x2fe8;
0xffffffff8129329b: ret 0x2fe9;
0xffffffff817f3679: ret 0x2ff0;
0xffffffff823b5d71: ret 0x2ff3;
0xffffffff8174a55b: ret 0x2ff7;
0xffffffff81672ef1: ret 0x2ffc;
0xffffffff8264ffd6: ret 0x2fff;
0xffffffff81672f6f: ret 0x3000;
0xffffffff822561f8: ret 0x3009;
0xffffffff818316e6: ret 0x300;
0xffffffff8128430d: ret 0x300c;
0xffffffff82469dac: ret 0x300f;
0xffffffff822aabd6: ret 0x3011;
0xffffffff82376f9a: ret 0x3013;
0xffffffff823739cd: ret 0x3019;
0xffffffff8221a822: ret 0x301;
0xffffffff8253c224: ret 0x301e;
0xffffffff8250b6fb: ret 0x3024;
0xffffffff822d1f12: ret 0x3028;
0xffffffff823bfef0: ret 0x302d;
0xffffffff81456a6d: ret 0x3030;
0xffffffff8248a99e: ret 0x3030;
0xffffffff8248a99d: ret 0x3030;
0xffffffff83464465: ret 0x3035;
0xffffffff823eace2: ret 0x3039;
0xffffffff8235c8fc: ret 0x303;
0xffffffff834644c4: ret 0x303e;
0xffffffff8349bfd3: ret 0x3040;
0xffffffff816c4990: ret 0x3041;
0xffffffff81104406: ret 0x3044;
0xffffffff824c6301: ret 0x3047;
0xffffffff8349c473: ret 0x3048;
0xffffffff81b16436: ret 0x304;
0xffffffff823cef58: ret 0x3053;
0xffffffff82406a20: ret 0x3055;
0xffffffff823c679a: ret 0x3058;
0xffffffff823cb1ee: ret 0x305a;
0xffffffff8162acdc: ret 0x305f;
0xffffffff823d0659: ret 0x3061;
0xffffffff82363f6b: ret 0x3067;
0xffffffff824eb367: ret 0x3072;
0xffffffff818cb849: ret 0x3074;
0xffffffff8112af05: ret 0x3077;
0xffffffff81732f54: ret 0x307;
0xffffffff82292673: ret 0x307a;
0xffffffff82527d34: ret 0x307b;
0xffffffff8249b30d: ret 0x307e;
0xffffffff82351577: ret 0x3082;
0xffffffff8249e1be: ret 0x3085;
0xffffffff8349c398: ret 0x308;
0xffffffff81b4183b: ret 0x308b;
0xffffffff8174a950: ret 0x308d;
0xffffffff822ec027: ret 0x3090;
0xffffffff822ec028: ret 0x3090;
0xffffffff8241216c: ret 0x3094;
0xffffffff82247140: ret 0x309a;
0xffffffff817f36e8: ret 0x309c;
0xffffffff8235abcd: ret 0x309e;
0xffffffff81af53b2: ret 0x30;
0xffffffff81bcd149: ret 0x30a8;
0xffffffff8229326b: ret 0x30ae;
0xffffffff824fe821: ret 0x30b0;
0xffffffff81991178: ret 0x30b9;
0xffffffff825167d6: ret 0x30ba;
0xffffffff810483f0: ret 0x30bf;
0xffffffff822ab1a4: ret 0x30c0;
0xffffffff8240b94f: ret 0x30c1;
0xffffffff824d1452: ret 0x30c2;
0xffffffff824200de: ret 0x30c3;
0xffffffff817f3947: ret 0x30c5;
0xffffffff8231787b: ret 0x30c9;
0xffffffff81969456: ret 0x30cc;
0xffffffff82393180: ret 0x30ce;
0xffffffff823482ed: ret 0x30cf;
0xffffffff81c05589: ret 0x30d0;
0xffffffff82229f3a: ret 0x30d6;
0xffffffff82002664: ret 0x30d;
0xffffffff8224eea8: ret 0x30db;
0xffffffff8224eea9: ret 0x30db;
0xffffffff825332f0: ret 0x30e6;
0xffffffff817f3ad3: ret 0x30e7;
0xffffffff8124c32a: ret 0x30e8;
0xffffffff8249e2c6: ret 0x30e;
0xffffffff835b0c40: ret 0x30ea;
0xffffffff81a98a40: ret 0x30eb;
0xffffffff8231ba50: ret 0x30ed;
0xffffffff822a2388: ret 0x30f0;
0xffffffff82430d71: ret 0x30f5;
0xffffffff8165c695: ret 0x30f;
0xffffffff8103d7b7: ret 0x3100;
0xffffffff81158728: ret 0x3101;
0xffffffff81668b54: ret 0x3103;
0xffffffff810e7990: ret 0x3104;
0xffffffff81aadba0: ret 0x3106;
0xffffffff816c6274: ret 0x3107;
0xffffffff81014a20: ret 0x3108;
0xffffffff8137cde7: ret 0x3109;
0xffffffff81551b58: ret 0x310;
0xffffffff816c60e4: ret 0x310a;
0xffffffff810549f8: ret 0x310c;
0xffffffff824681fd: ret 0x310d;
0xffffffff8114a989: ret 0x3110;
0xffffffff811476fd: ret 0x3113;
0xffffffff816c6a43: ret 0x3115;
0xffffffff81796671: ret 0x3118;
0xffffffff8150a71a: ret 0x3119;
0xffffffff817c9514: ret 0x311;
0xffffffff81668b14: ret 0x311e;
0xffffffff811f2279: ret 0x3120;
0xffffffff822a3d88: ret 0x3127;
0xffffffff824baa1d: ret 0x3128;
0xffffffff82479c2d: ret 0x3129;
0xffffffff822f8a1a: ret 0x312;
0xffffffff8170e52f: ret 0x312b;
0xffffffff815b658e: ret 0x312c;
0xffffffff812afe21: ret 0x3130;
0xffffffff8267b65a: ret 0x3131;
0xffffffff8267b646: ret 0x3134;
0xffffffff8222a30a: ret 0x3137;
0xffffffff8267b63d: ret 0x3138;
0xffffffff8238a537: ret 0x313d;
0xffffffff82463d1d: ret 0x313f;
0xffffffff81698386: ret 0x3140;
0xffffffff816c385a: ret 0x3141;
0xffffffff817f39f1: ret 0x3143;
0xffffffff8165cb10: ret 0x3144;
0xffffffff81058a08: ret 0x3145;
0xffffffff82465132: ret 0x3147;
0xffffffff811de361: ret 0x3148;
0xffffffff81298f78: ret 0x3149;
0xffffffff82507d90: ret 0x314;
0xffffffff81257a36: ret 0x314c;
0xffffffff8232e494: ret 0x314f;
0xffffffff81bfe051: ret 0x3150;
0xffffffff82269dc8: ret 0x3152;
0xffffffff8228faa9: ret 0x315c;
0xffffffff823d3f96: ret 0x315e;
0xffffffff823d3f97: ret 0x315e;
0xffffffff823d3f94: ret 0x315e;
0xffffffff817f3b50: ret 0x3161;
0xffffffff82392aca: ret 0x3164;
0xffffffff823da5b6: ret 0x3166;
0xffffffff8174afce: ret 0x3169;
0xffffffff824dc45d: ret 0x316c;
0xffffffff82292204: ret 0x316d;
0xffffffff82357b99: ret 0x316f;
0xffffffff810453bf: ret 0x3174;
0xffffffff8268b399: ret 0x3175;
0xffffffff814031e2: ret 0x3178;
0xffffffff8223786b: ret 0x3179;
0xffffffff819490cf: ret 0x317b;
0xffffffff811c5eea: ret 0x3180;
0xffffffff81c236f4: ret 0x3181;
0xffffffff81b1f536: ret 0x318;
0xffffffff817f3e94: ret 0x318a;
0xffffffff823e9807: ret 0x318c;
0xffffffff810dd488: ret 0x3190;
0xffffffff824ce835: ret 0x3192;
0xffffffff82391b0c: ret 0x3193;
0xffffffff8252f361: ret 0x3194;
0xffffffff82271723: ret 0x3196;
0xffffffff811d392a: ret 0x31;
0xffffffff822e3ea8: ret 0x31a6;
0xffffffff8174b1c0: ret 0x31a8;
0xffffffff812ef8ae: ret 0x31b0;
0xffffffff82300b40: ret 0x31b1;
0xffffffff817f3b8f: ret 0x31b3;
0xffffffff82286af4: ret 0x31b6;
0xffffffff81811e9a: ret 0x31c3;
0xffffffff8136d64a: ret 0x31c4;
0xffffffff8165aea2: ret 0x31c6;
0xffffffff823c83eb: ret 0x31c;
0xffffffff822c9d9d: ret 0x31cb;
0xffffffff8247c90f: ret 0x31cd;
0xffffffff817f3c7e: ret 0x31d6;
0xffffffff8228b1c2: ret 0x31d;
0xffffffff823df35c: ret 0x31da;
0xffffffff823f11ad: ret 0x31dd;
0xffffffff824c1d56: ret 0x31e3;
0xffffffff8174b363: ret 0x31e7;
0xffffffff81006d59: ret 0x31e8;
0xffffffff81c0a62e: ret 0x31e9;
0xffffffff816d39a1: ret 0x31ec;
0xffffffff824e90c8: ret 0x31ee;
0xffffffff817cfd95: ret 0x31f0;
0xffffffff81890596: ret 0x31f1;
0xffffffff8348318f: ret 0x31f2;
0xffffffff822a768c: ret 0x31f3;
0xffffffff8106b8c6: ret 0x31f8;
0xffffffff8349c658: ret 0x31f;
0xffffffff82501eab: ret 0x31fb;
0xffffffff82501eac: ret 0x31fb;
0xffffffff81ba1f39: ret 0x31fc;
0xffffffff834965c2: ret 0x31fd;
0xffffffff816d8983: ret 0x31fe;
0xffffffff81214a7b: ret 0x31ff;
0xffffffff81959ebc: ret 0x3200;
0xffffffff8228d1c3: ret 0x3201;
0xffffffff8174b6b6: ret 0x3202;
0xffffffff823628d6: ret 0x320a;
0xffffffff823c6973: ret 0x3212;
0xffffffff823acd90: ret 0x3216;
0xffffffff81b21372: ret 0x321;
0xffffffff834a1ee2: ret 0x3220;
0xffffffff822fa409: ret 0x3221;
0xffffffff823f5091: ret 0x3224;
0xffffffff82403307: ret 0x3227;
0xffffffff8244726f: ret 0x3228;
0xffffffff817f4403: ret 0x322c;
0xffffffff8238f570: ret 0x322d;
0xffffffff82296295: ret 0x322f;
0xffffffff82679830: ret 0x3231;
0xffffffff82679818: ret 0x3232;
0xffffffff8267c97a: ret 0x3234;
0xffffffff8267c971: ret 0x3238;
0xffffffff8236737b: ret 0x3239;
0xffffffff822685da: ret 0x323e;
0xffffffff812efaea: ret 0x3240;
0xffffffff82328a04: ret 0x3243;
0xffffffff814a7c6e: ret 0x3244;
0xffffffff82308b3d: ret 0x3245;
0xffffffff817f49af: ret 0x3246;
0xffffffff82383b28: ret 0x3247;
0xffffffff82561f5a: ret 0x324f;
0xffffffff8346b811: ret 0x3250;
0xffffffff824f7263: ret 0x3258;
0xffffffff822e9f50: ret 0x325a;
0xffffffff822e9bae: ret 0x325d;
0xffffffff824525fd: ret 0x325e;
0xffffffff8241dac2: ret 0x3260;
0xffffffff824eff65: ret 0x3261;
0xffffffff82326871: ret 0x3268;
0xffffffff818325a4: ret 0x3270;
0xffffffff834a21f1: ret 0x3271;
0xffffffff8195bdaa: ret 0x3272;
0xffffffff8146262f: ret 0x3273;
0xffffffff81a858c1: ret 0x3274;
0xffffffff81564ece: ret 0x3275;
0xffffffff8111204b: ret 0x3276;
0xffffffff8196776c: ret 0x3277;
0xffffffff817cffc3: ret 0x3278;
0xffffffff834a221f: ret 0x327b;
0xffffffff81957d0a: ret 0x327c;
0xffffffff81617d3c: ret 0x327e;
0xffffffff83472fe8: ret 0x327f;
0xffffffff815b3269: ret 0x3280;
0xffffffff824363e3: ret 0x3281;
0xffffffff82367ed7: ret 0x3283;
0xffffffff817ca65c: ret 0x328;
0xffffffff82381175: ret 0x328a;
0xffffffff81aea24e: ret 0x328b;
0xffffffff8123575e: ret 0x3290;
0xffffffff823eb3ce: ret 0x3292;
0xffffffff823fae5a: ret 0x3296;
0xffffffff8244b9af: ret 0x3297;
0xffffffff817cb0eb: ret 0x329;
0xffffffff817f4801: ret 0x329c;
0xffffffff8139f1ac: ret 0x32;
0xffffffff82332647: ret 0x32a3;
0xffffffff824d2366: ret 0x32a8;
0xffffffff82235666: ret 0x32a;
0xffffffff82235664: ret 0x32a;
0xffffffff8249e0ae: ret 0x32ac;
0xffffffff8256e415: ret 0x32ae;
0xffffffff817f496f: ret 0x32b1;
0xffffffff82679828: ret 0x32b5;
0xffffffff823bf492: ret 0x32ba;
0xffffffff83454294: ret 0x32c1;
0xffffffff82505c7f: ret 0x32c9;
0xffffffff8242c9ee: ret 0x32ce;
0xffffffff823999f0: ret 0x32d3;
0xffffffff817f5039: ret 0x32d7;
0xffffffff824f82d3: ret 0x32da;
0xffffffff811843a2: ret 0x32e0;
0xffffffff8223473f: ret 0x32e6;
0xffffffff8128cec8: ret 0x32e8;
0xffffffff817336aa: ret 0x32e;
0xffffffff81be411f: ret 0x32eb;
0xffffffff82436a01: ret 0x32f2;
0xffffffff82570fa8: ret 0x32f4;
0xffffffff824b6472: ret 0x32f5;
0xffffffff82305c7a: ret 0x32f;
0xffffffff835a8eb6: ret 0x32fd;
0xffffffff81bfb722: ret 0x3300;
0xffffffff822ec452: ret 0x3302;
0xffffffff8250ccdc: ret 0x3303;
0xffffffff81700319: ret 0x330;
0xffffffff822c91ff: ret 0x330b;
0xffffffff81355009: ret 0x3310;
0xffffffff81354f85: ret 0x3311;
0xffffffff81356ae3: ret 0x3312;
0xffffffff81356b60: ret 0x3314;
0xffffffff81356cf7: ret 0x3315;
0xffffffff8250ac36: ret 0x3318;
0xffffffff8135317d: ret 0x3320;
0xffffffff8250d0fe: ret 0x3321;
0xffffffff8135a149: ret 0x3328;
0xffffffff8135aa72: ret 0x3329;
0xffffffff8243f069: ret 0x332;
0xffffffff822ae56a: ret 0x332f;
0xffffffff8267ca5e: ret 0x3331;
0xffffffff8267ca4c: ret 0x3334;
0xffffffff81c5e5e2: ret 0x3337;
0xffffffff8267ca44: ret 0x3338;
0xffffffff8135cdb5: ret 0x3340;
0xffffffff8166761c: ret 0x3341;
0xffffffff8135d87c: ret 0x3348;
0xffffffff82240471: ret 0x3349;
0xffffffff817cc6e9: ret 0x334;
0xffffffff81c4dfc9: ret 0x334e;
0xffffffff8135e822: ret 0x3350;
0xffffffff8135e83f: ret 0x3351;
0xffffffff82433b39: ret 0x3354;
0xffffffff83453833: ret 0x335;
0xffffffff823794fe: ret 0x335d;
0xffffffff818c4235: ret 0x3366;
0xffffffff8135f0dd: ret 0x3368;
0xffffffff8135f0f4: ret 0x3369;
0xffffffff8135f116: ret 0x3370;
0xffffffff82237268: ret 0x3372;
0xffffffff812d14c2: ret 0x3374;
0xffffffff819be526: ret 0x3375;
0xffffffff813e880c: ret 0x3376;
0xffffffff81872559: ret 0x3377;
0xffffffff82541ee4: ret 0x337d;
0xffffffff822c1a39: ret 0x3383;
0xffffffff8221ac6c: ret 0x338;
0xffffffff81bd0477: ret 0x338b;
0xffffffff8225a77e: ret 0x3398;
0xffffffff825449e7: ret 0x339;
0xffffffff8229ae19: ret 0x339a;
0xffffffff81946ce9: ret 0x33;
0xffffffff812de553: ret 0x33;
0xffffffff81946e08: ret 0x33;
0xffffffff8346460b: ret 0x33a0;
0xffffffff81362c5f: ret 0x33a1;
0xffffffff825d8d48: ret 0x33ad;
0xffffffff822f4efd: ret 0x33b6;
0xffffffff822cc61f: ret 0x33ba;
0xffffffff822e85fa: ret 0x33bc;
0xffffffff81379913: ret 0x33c0;
0xffffffff823269cc: ret 0x33c1;
0xffffffff8238d48a: ret 0x33c7;
0xffffffff822604db: ret 0x33c9;
0xffffffff81acaeba: ret 0x33ca;
0xffffffff82285381: ret 0x33cf;
0xffffffff81395ae4: ret 0x33d0;
0xffffffff81395cf6: ret 0x33d1;
0xffffffff81395d10: ret 0x33d2;
0xffffffff81395e1d: ret 0x33d3;
0xffffffff81395f04: ret 0x33d4;
0xffffffff823c335a: ret 0x33d5;
0xffffffff8254b9e1: ret 0x33d7;
0xffffffff8244838d: ret 0x33d9;
0xffffffff825db4ed: ret 0x33e2;
0xffffffff8140ab67: ret 0x33e8;
0xffffffff8249ee70: ret 0x33ea;
0xffffffff81257250: ret 0x33eb;
0xffffffff81395966: ret 0x33f0;
0xffffffff81530d48: ret 0x33f3;
0xffffffff82467cc9: ret 0x33f7;
0xffffffff8253423b: ret 0x33fc;
0xffffffff8222fabe: ret 0x3405;
0xffffffff82424fa5: ret 0x3406;
0xffffffff822bb8d4: ret 0x340c;
0xffffffff824f4e5c: ret 0x340d;
0xffffffff82270ad8: ret 0x3416;
0xffffffff810d8c5a: ret 0x341;
0xffffffff82287c4d: ret 0x341d;
0xffffffff8240dfbe: ret 0x3421;
0xffffffff8240dfbf: ret 0x3421;
0xffffffff8224cd9a: ret 0x3424;
0xffffffff82533ab7: ret 0x342a;
0xffffffff8240fed0: ret 0x342b;
0xffffffff82509c0c: ret 0x342e;
0xffffffff8139e40c: ret 0x3430;
0xffffffff8139e742: ret 0x3431;
0xffffffff8237ed42: ret 0x3433;
0xffffffff82539d3f: ret 0x3437;
0xffffffff82283dea: ret 0x343a;
0xffffffff82481769: ret 0x343e;
0xffffffff82407b91: ret 0x3442;
0xffffffff816c7341: ret 0x344;
0xffffffff8255546e: ret 0x344a;
0xffffffff8193ae0a: ret 0x344b;
0xffffffff8251e029: ret 0x344f;
0xffffffff823c9a1c: ret 0x3450;
0xffffffff8235532d: ret 0x3454;
0xffffffff8236ad8f: ret 0x3459;
0xffffffff82450bcd: ret 0x346d;
0xffffffff8256a742: ret 0x346e;
0xffffffff8181f863: ret 0x3472;
0xffffffff81175b3c: ret 0x3473;
0xffffffff8102778c: ret 0x3474;
0xffffffff8162ec1b: ret 0x3475;
0xffffffff82296216: ret 0x3477;
0xffffffff824ca47f: ret 0x347;
0xffffffff82482ab1: ret 0x347d;
0xffffffff82482ab2: ret 0x347d;
0xffffffff82314b8a: ret 0x3480;
0xffffffff82415d94: ret 0x3482;
0xffffffff82450a0e: ret 0x3485;
0xffffffff8225566f: ret 0x3486;
0xffffffff8223f1cd: ret 0x3487;
0xffffffff81137ad1: ret 0x348;
0xffffffff82263d54: ret 0x348e;
0xffffffff82272cb1: ret 0x3492;
0xffffffff8231f0a4: ret 0x3494;
0xffffffff823ad86d: ret 0x3497;
0xffffffff823ad86c: ret 0x3497;
0xffffffff81125a9c: ret 0x349;
0xffffffff82330476: ret 0x349a;
0xffffffff82369fd4: ret 0x349c;
0xffffffff823f0265: ret 0x349f;
0xffffffff8173eefe: ret 0x34;
0xffffffff81934eee: ret 0x34;
0xffffffff82254722: ret 0x34a6;
0xffffffff823cd0f1: ret 0x34a7;
0xffffffff8254fbe8: ret 0x34a9;
0xffffffff817f6415: ret 0x34ac;
0xffffffff823af325: ret 0x34b1;
0xffffffff82679bea: ret 0x34b5;
0xffffffff83493345: ret 0x34b8;
0xffffffff82232cb4: ret 0x34ba;
0xffffffff82364af5: ret 0x34c0;
0xffffffff8240400c: ret 0x34c9;
0xffffffff817f62cf: ret 0x34cc;
0xffffffff822b8c80: ret 0x34cd;
0xffffffff824bbd3f: ret 0x34d5;
0xffffffff8226c308: ret 0x34d6;
0xffffffff834837b5: ret 0x34da;
0xffffffff813f1ec6: ret 0x34e8;
0xffffffff816b6032: ret 0x34e9;
0xffffffff81a8269c: ret 0x34eb;
0xffffffff817336e2: ret 0x34f;
0xffffffff8200d3da: ret 0x34ff;
0xffffffff817f6308: ret 0x3500;
0xffffffff822a22cc: ret 0x3506;
0xffffffff8256936e: ret 0x350b;
0xffffffff8246f770: ret 0x351;
0xffffffff82362810: ret 0x351;
0xffffffff8230715b: ret 0x3528;
0xffffffff823f1274: ret 0x3529;
0xffffffff8224bd23: ret 0x352;
0xffffffff822bac09: ret 0x352c;
0xffffffff82527a24: ret 0x352f;
0xffffffff812f34f8: ret 0x3530;
0xffffffff825ce523: ret 0x3535;
0xffffffff824329c6: ret 0x3536;
0xffffffff8228f0d5: ret 0x3538;
0xffffffff82259566: ret 0x353b;
0xffffffff823ce966: ret 0x353c;
0xffffffff822ebf93: ret 0x3544;
0xffffffff8289a594: ret 0x354;
0xffffffff814e3048: ret 0x3550;
0xffffffff81c4f8d3: ret 0x3555;
0xffffffff8237b5b2: ret 0x355;
0xffffffff817f66eb: ret 0x3560;
0xffffffff825ce122: ret 0x3561;
0xffffffff818640a2: ret 0x3568;
0xffffffff82389bcd: ret 0x356e;
0xffffffff81864088: ret 0x356f;
0xffffffff814152b4: ret 0x3570;
0xffffffff824d2ef0: ret 0x3571;
0xffffffff8103599b: ret 0x3574;
0xffffffff82370022: ret 0x357b;
0xffffffff8254decf: ret 0x3586;
0xffffffff81759ff6: ret 0x358;
0xffffffff823b5d23: ret 0x358a;
0xffffffff8192a49a: ret 0x358b;
0xffffffff835b10bc: ret 0x358c;
0xffffffff8241d229: ret 0x358f;
0xffffffff817f0d1f: ret 0x3594;
0xffffffff81996fca: ret 0x359;
0xffffffff8228ba9e: ret 0x359b;
0xffffffff8122761a: ret 0x35;
0xffffffff822d08dc: ret 0x35a0;
0xffffffff8235b4b3: ret 0x35a3;
0xffffffff824d3a3d: ret 0x35a4;
0xffffffff824baece: ret 0x35af;
0xffffffff8226208f: ret 0x35b9;
0xffffffff823e7031: ret 0x35be;
0xffffffff83476139: ret 0x35c5;
0xffffffff8103f09e: ret 0x35ca;
0xffffffff817f0faf: ret 0x35cd;
0xffffffff825521c0: ret 0x35d8;
0xffffffff82376b81: ret 0x35d9;
0xffffffff8242e37a: ret 0x35df;
0xffffffff824b64e6: ret 0x35e2;
0xffffffff811b5315: ret 0x35e8;
0xffffffff8148db6c: ret 0x35e9;
0xffffffff827fd4b0: ret 0x35e;
0xffffffff8237d48d: ret 0x35ee;
0xffffffff8228e17c: ret 0x35f4;
0xffffffff82251ce1: ret 0x35f8;
0xffffffff8222e35b: ret 0x35fc;
0xffffffff824f5ce0: ret 0x35fd;
0xffffffff823f7828: ret 0x35ff;
0xffffffff8112edc6: ret 0x3600;
0xffffffff81922d0a: ret 0x3602;
0xffffffff82522d07: ret 0x3603;
0xffffffff81c26894: ret 0x3608;
0xffffffff823139ff: ret 0x3609;
0xffffffff81246014: ret 0x360;
0xffffffff822d6d62: ret 0x360d;
0xffffffff823e183d: ret 0x360f;
0xffffffff81014fc7: ret 0x3610;
0xffffffff817f13a6: ret 0x3623;
0xffffffff82368a45: ret 0x3629;
0xffffffff824f8ec1: ret 0x362a;
0xffffffff823253f6: ret 0x362b;
0xffffffff825074a5: ret 0x3631;
0xffffffff82679bda: ret 0x3634;
0xffffffff8232c2af: ret 0x3637;
0xffffffff8228a38c: ret 0x3638;
0xffffffff835b11dc: ret 0x363c;
0xffffffff817a226e: ret 0x3640;
0xffffffff8232ef48: ret 0x3642;
0xffffffff822c20b4: ret 0x364a;
0xffffffff81678fd2: ret 0x364e;
0xffffffff817f13c5: ret 0x3653;
0xffffffff823279be: ret 0x365d;
0xffffffff8226334f: ret 0x3660;
0xffffffff824a08c5: ret 0x3661;
0xffffffff8241dfba: ret 0x3664;
0xffffffff82345862: ret 0x3665;
0xffffffff82428f8c: ret 0x3667;
0xffffffff8224a01d: ret 0x3669;
0xffffffff822672d4: ret 0x366f;
0xffffffff823267f1: ret 0x3672;
0xffffffff811ea18b: ret 0x3673;
0xffffffff813f5889: ret 0x3674;
0xffffffff8268b291: ret 0x3675;
0xffffffff82332149: ret 0x3676;
0xffffffff824f018c: ret 0x3679;
0xffffffff81150c29: ret 0x367f;
0xffffffff824e54ba: ret 0x3680;
0xffffffff824e54b9: ret 0x3680;
0xffffffff82432857: ret 0x3681;
0xffffffff82432858: ret 0x3681;
0xffffffff82343e53: ret 0x3685;
0xffffffff822cf73b: ret 0x3686;
0xffffffff817f1408: ret 0x368b;
0xffffffff8251085a: ret 0x368c;
0xffffffff835b13ec: ret 0x368d;
0xffffffff8237b53a: ret 0x3690;
0xffffffff82308494: ret 0x3693;
0xffffffff82467b4f: ret 0x3698;
0xffffffff8230119f: ret 0x3699;
0xffffffff823b8b47: ret 0x369d;
0xffffffff8174bbc3: ret 0x36;
0xffffffff82295035: ret 0x36a0;
0xffffffff8255fbc2: ret 0x36a2;
0xffffffff824ebd99: ret 0x36a5;
0xffffffff83455ac4: ret 0x36a8;
0xffffffff81949116: ret 0x36a9;
0xffffffff81323381: ret 0x36b0;
0xffffffff83455af2: ret 0x36b1;
0xffffffff81679c2b: ret 0x36b2;
0xffffffff819491a9: ret 0x36b6;
0xffffffff822e9c72: ret 0x36b7;
0xffffffff82266b5b: ret 0x36ba;
0xffffffff817f13ec: ret 0x36bb;
0xffffffff822f3606: ret 0x36bc;
0xffffffff810bda33: ret 0x36c0;
0xffffffff83455b20: ret 0x36c4;
0xffffffff819490fd: ret 0x36c5;
0xffffffff824246da: ret 0x36c6;
0xffffffff8243a35f: ret 0x36c9;
0xffffffff8244c2da: ret 0x36ca;
0xffffffff824b9032: ret 0x36d4;
0xffffffff824a8177: ret 0x36d6;
0xffffffff8136a4e1: ret 0x36d8;
0xffffffff81679f9d: ret 0x36d9;
0xffffffff812acc72: ret 0x36de;
0xffffffff817f78dc: ret 0x36e2;
0xffffffff823659b4: ret 0x36e6;
0xffffffff816353d4: ret 0x36e8;
0xffffffff816e4af4: ret 0x36e9;
0xffffffff82802520: ret 0x36e;
0xffffffff818bb3c2: ret 0x36eb;
0xffffffff82456cab: ret 0x36ec;
0xffffffff81c60500: ret 0x36ef;
0xffffffff8223b956: ret 0x36f2;
0xffffffff82432ca8: ret 0x36f3;
0xffffffff8110e596: ret 0x36f4;
0xffffffff819131ca: ret 0x36f5;
0xffffffff8136a4ea: ret 0x36f8;
0xffffffff81c236f1: ret 0x3700;
0xffffffff822299f7: ret 0x3702;
0xffffffff822299f6: ret 0x3702;
0xffffffff825038a3: ret 0x3705;
0xffffffff81c60509: ret 0x3708;
0xffffffff8136a4f3: ret 0x3709;
0xffffffff8170035e: ret 0x370;
0xffffffff822ea3bb: ret 0x370d;
0xffffffff822ea3ba: ret 0x370d;
0xffffffff82430e17: ret 0x370f;
0xffffffff8130491a: ret 0x3712;
0xffffffff8231e316: ret 0x3719;
0xffffffff822393ed: ret 0x371e;
0xffffffff824bd387: ret 0x3724;
0xffffffff817f1cee: ret 0x3726;
0xffffffff81900df3: ret 0x372;
0xffffffff8136a4fc: ret 0x372b;
0xffffffff823908de: ret 0x372f;
0xffffffff8231334e: ret 0x3738;
0xffffffff8289cf5c: ret 0x373;
0xffffffff817f1afb: ret 0x373d;
0xffffffff823a17ee: ret 0x373e;
0xffffffff8243ec90: ret 0x3740;
0xffffffff8136a505: ret 0x3743;
0xffffffff82389162: ret 0x3746;
0xffffffff824fdad1: ret 0x3747;
0xffffffff82420ad5: ret 0x3748;
0xffffffff8173370a: ret 0x374;
0xffffffff82311c3c: ret 0x3750;
0xffffffff823ac31e: ret 0x3751;
0xffffffff82562af7: ret 0x3752;
0xffffffff8232a7c8: ret 0x375;
0xffffffff823ad0a2: ret 0x375c;
0xffffffff81141b5d: ret 0x3760;
0xffffffff823d4c77: ret 0x3764;
0xffffffff81141d24: ret 0x3768;
0xffffffff817a0360: ret 0x376;
0xffffffff8136a50e: ret 0x376a;
0xffffffff8241b098: ret 0x376c;
0xffffffff823773f2: ret 0x376d;
0xffffffff8230c00a: ret 0x3771;
0xffffffff81c75af6: ret 0x3773;
0xffffffff815669d4: ret 0x3774;
0xffffffff8245227d: ret 0x3775;
0xffffffff81a81fe5: ret 0x3775;
0xffffffff8101f1f9: ret 0x3777;
0xffffffff822bb50b: ret 0x3778;
0xffffffff8232dbb0: ret 0x377d;
0xffffffff81c504bc: ret 0x377f;
0xffffffff8244334e: ret 0x3781;
0xffffffff81141e4f: ret 0x3788;
0xffffffff817f17b4: ret 0x378a;
0xffffffff8224a6fa: ret 0x378b;
0xffffffff834568e2: ret 0x3797;
0xffffffff818de02a: ret 0x37;
0xffffffff828023dc: ret 0x37a;
0xffffffff8255080a: ret 0x37ae;
0xffffffff8101a68e: ret 0x37b0;
0xffffffff82430aa2: ret 0x37b7;
0xffffffff822531f5: ret 0x37bc;
0xffffffff81144f64: ret 0x37c0;
0xffffffff822b4177: ret 0x37c1;
0xffffffff817f1b29: ret 0x37c4;
0xffffffff823a615f: ret 0x37c5;
0xffffffff823be61b: ret 0x37d9;
0xffffffff8250b380: ret 0x37da;
0xffffffff824e23c4: ret 0x37dd;
0xffffffff8347855d: ret 0x37e0;
0xffffffff83489682: ret 0x37e1;
0xffffffff8226dced: ret 0x37e5;
0xffffffff8239b829: ret 0x37e6;
0xffffffff83489748: ret 0x37e7;
0xffffffff8134ae23: ret 0x37e8;
0xffffffff8162972d: ret 0x37e9;
0xffffffff82356cdb: ret 0x37e9;
0xffffffff82362413: ret 0x37f0;
0xffffffff8249d29d: ret 0x37f1;
0xffffffff824099f8: ret 0x37f7;
0xffffffff824d5e34: ret 0x37f;
0xffffffff8234ce17: ret 0x37fe;
0xffffffff823fe871: ret 0x37ff;
0xffffffff81726ef3: ret 0x3800;
0xffffffff817f1cc9: ret 0x3803;
0xffffffff8188a6a3: ret 0x3804;
0xffffffff8188a675: ret 0x3808;
0xffffffff81777f0f: ret 0x380;
0xffffffff822dcae1: ret 0x380b;
0xffffffff824bddb0: ret 0x3815;
0xffffffff823345ad: ret 0x3817;
0xffffffff8136b269: ret 0x3818;
0xffffffff823dcd10: ret 0x3819;
0xffffffff823dcd0f: ret 0x3819;
0xffffffff822a8f38: ret 0x381f;
0xffffffff816037ef: ret 0x3820;
0xffffffff82295582: ret 0x3824;
0xffffffff824293d6: ret 0x3826;
0xffffffff8239a297: ret 0x3829;
0xffffffff811456e9: ret 0x3830;
0xffffffff824fcb34: ret 0x3831;
0xffffffff823d46f6: ret 0x3832;
0xffffffff817f1ba3: ret 0x3838;
0xffffffff82500b37: ret 0x383a;
0xffffffff81a81f5e: ret 0x3840;
0xffffffff81a51b7a: ret 0x3841;
0xffffffff81ac0629: ret 0x3844;
0xffffffff8167ca89: ret 0x384c;
0xffffffff82380678: ret 0x384d;
0xffffffff823db5fd: ret 0x3852;
0xffffffff8234c13a: ret 0x3853;
0xffffffff81726f2f: ret 0x3858;
0xffffffff8251aa7a: ret 0x385d;
0xffffffff810e2d5c: ret 0x3860;
0xffffffff8226f60b: ret 0x3861;
0xffffffff82491fa4: ret 0x3865;
0xffffffff822f3dbf: ret 0x3867;
0xffffffff823ad387: ret 0x386;
0xffffffff817f23d7: ret 0x386b;
0xffffffff83448a2d: ret 0x386d;
0xffffffff81144c8b: ret 0x3870;
0xffffffff81255bef: ret 0x3874;
0xffffffff818f517e: ret 0x3875;
0xffffffff8105408e: ret 0x3876;
0xffffffff8163a799: ret 0x3880;
0xffffffff824936d3: ret 0x3881;
0xffffffff824d752f: ret 0x3883;
0xffffffff82549dd0: ret 0x388b;
0xffffffff8342ee13: ret 0x389;
0xffffffff81a753a2: ret 0x38;
0xffffffff818f85ca: ret 0x38a1;
0xffffffff817f2314: ret 0x38a3;
0xffffffff8249cc33: ret 0x38a5;
0xffffffff81726f5f: ret 0x38a8;
0xffffffff8230cc0b: ret 0x38af;
0xffffffff8256a6c0: ret 0x38b0;
0xffffffff82344d04: ret 0x38b1;
0xffffffff8243b203: ret 0x38b2;
0xffffffff823c1630: ret 0x38b7;
0xffffffff82373782: ret 0x38b8;
0xffffffff822412dc: ret 0x38ba;
0xffffffff824ac59a: ret 0x38c0;
0xffffffff823f7571: ret 0x38c2;
0xffffffff8236ebe1: ret 0x38ca;
0xffffffff822f57b2: ret 0x38cc;
0xffffffff8254ee67: ret 0x38cf;
0xffffffff81b4436f: ret 0x38d0;
0xffffffff817f225c: ret 0x38d3;
0xffffffff82437cc2: ret 0x38d6;
0xffffffff81c829ca: ret 0x38d7;
0xffffffff825d5589: ret 0x38d8;
0xffffffff8111c875: ret 0x38d9;
0xffffffff8238658a: ret 0x38d;
0xffffffff8136be51: ret 0x38de;
0xffffffff8233c55d: ret 0x38e1;
0xffffffff81302f6a: ret 0x38e4;
0xffffffff8118bac2: ret 0x38e8;
0xffffffff816419d2: ret 0x38e9;
0xffffffff82312922: ret 0x38f3;
0xffffffff8246ef12: ret 0x38f5;
0xffffffff82536da5: ret 0x38f7;
0xffffffff82345f9e: ret 0x38f9;
0xffffffff82002a9c: ret 0x38f;
0xffffffff817f24ec: ret 0x38fc;
0xffffffff81b3f34b: ret 0x38ff;
0xffffffff82436bb3: ret 0x3900;
0xffffffff811cf015: ret 0x3901;
0xffffffff813ae805: ret 0x3902;
0xffffffff811edcc0: ret 0x3904;
0xffffffff82286963: ret 0x3906;
0xffffffff822824d5: ret 0x3907;
0xffffffff816565a1: ret 0x3908;
0xffffffff824b4ad7: ret 0x3909;
0xffffffff822d8f53: ret 0x390;
0xffffffff8100cd3f: ret 0x390b;
0xffffffff815deadf: ret 0x3910;
0xffffffff818e22ba: ret 0x3911;
0xffffffff814f51f0: ret 0x3914;
0xffffffff81be01dd: ret 0x3918;
0xffffffff81733742: ret 0x391;
0xffffffff82282b76: ret 0x391e;
0xffffffff81821e06: ret 0x391f;
0xffffffff8111ff2b: ret 0x3920;
0xffffffff8349327c: ret 0x3922;
0xffffffff818eca0a: ret 0x392f;
0xffffffff81456b19: ret 0x3930;
0xffffffff8244b3e7: ret 0x393a;
0xffffffff81c2392b: ret 0x3940;
0xffffffff811726df: ret 0x3941;
0xffffffff81724dec: ret 0x3943;
0xffffffff81171ccc: ret 0x3944;
0xffffffff822fc204: ret 0x3946;
0xffffffff810220bc: ret 0x3948;
0xffffffff8104507e: ret 0x3949;
0xffffffff8104dbb8: ret 0x394c;
0xffffffff810d279d: ret 0x394d;
0xffffffff8347c617: ret 0x394f;
0xffffffff81669cc5: ret 0x3950;
0xffffffff816c6298: ret 0x3956;
0xffffffff8250636d: ret 0x3957;
0xffffffff814bf1e5: ret 0x3958;
0xffffffff8347c6dc: ret 0x395e;
0xffffffff812f390d: ret 0x3960;
0xffffffff8183b441: ret 0x3961;
0xffffffff8183b458: ret 0x3962;
0xffffffff8183b472: ret 0x3963;
0xffffffff8183b48c: ret 0x3964;
0xffffffff8183b4a6: ret 0x3965;
0xffffffff81759649: ret 0x3966;
0xffffffff8183b53b: ret 0x3967;
0xffffffff8183b57f: ret 0x3968;
0xffffffff8183b599: ret 0x3969;
0xffffffff8114d081: ret 0x396a;
0xffffffff8183b5f7: ret 0x396b;
0xffffffff8183b70b: ret 0x396c;
0xffffffff8232cf31: ret 0x396d;
0xffffffff824e83bb: ret 0x396f;
0xffffffff8115e416: ret 0x3974;
0xffffffff818f9dcc: ret 0x3975;
0xffffffff8127804e: ret 0x3976;
0xffffffff8183abf6: ret 0x3978;
0xffffffff8183dc57: ret 0x397c;
0xffffffff8183dc72: ret 0x397d;
0xffffffff810e2dae: ret 0x3980;
0xffffffff822e6984: ret 0x3982;
0xffffffff818d25ca: ret 0x3984;
0xffffffff824fcf6f: ret 0x398a;
0xffffffff8347c82f: ret 0x398c;
0xffffffff822ebf7d: ret 0x398f;
0xffffffff81531d09: ret 0x3990;
0xffffffff83455d76: ret 0x3994;
0xffffffff823301ab: ret 0x3995;
0xffffffff81844f77: ret 0x3998;
0xffffffff81844f91: ret 0x3999;
0xffffffff82260b66: ret 0x399;
0xffffffff81845fb0: ret 0x399a;
0xffffffff818473c6: ret 0x399b;
0xffffffff818473dd: ret 0x399c;
0xffffffff818473f4: ret 0x399d;
0xffffffff81847565: ret 0x399e;
0xffffffff817f332f: ret 0x399f;
0xffffffff810ab27d: ret 0x39;
0xffffffff810e2dd3: ret 0x39a0;
0xffffffff81846e94: ret 0x39a1;
0xffffffff81846eae: ret 0x39a2;
0xffffffff81846e7a: ret 0x39a3;
0xffffffff8243446a: ret 0x39a5;
0xffffffff823b9359: ret 0x39a6;
0xffffffff824df928: ret 0x39a7;
0xffffffff8343e4ae: ret 0x39a8;
0xffffffff82802694: ret 0x39a;
0xffffffff823ca3b5: ret 0x39aa;
0xffffffff823a40a2: ret 0x39ad;
0xffffffff8197011d: ret 0x39b0;
0xffffffff8267a2bb: ret 0x39b5;
0xffffffff8226015e: ret 0x39b6;
0xffffffff82552f7c: ret 0x39b8;
0xffffffff81151e88: ret 0x39b9;
0xffffffff8255bcbe: ret 0x39b;
0xffffffff82395673: ret 0x39ba;
0xffffffff8186ff7d: ret 0x39bb;
0xffffffff810e2e15: ret 0x39c0;
0xffffffff823505f2: ret 0x39c2;
0xffffffff8106d37c: ret 0x39c5;
0xffffffff81156667: ret 0x39c8;
0xffffffff81156609: ret 0x39c9;
0xffffffff8237762c: ret 0x39c;
0xffffffff811566c0: ret 0x39ca;
0xffffffff822bb0e0: ret 0x39cc;
0xffffffff8186ddfa: ret 0x39cd;
0xffffffff81415450: ret 0x39d0;
0xffffffff8222e472: ret 0x39d3;
0xffffffff83455e5b: ret 0x39da;
0xffffffff816955e3: ret 0x39e1;
0xffffffff83449442: ret 0x39e2;
0xffffffff8118ecf1: ret 0x39e8;
0xffffffff81677fa9: ret 0x39eb;
0xffffffff822d7031: ret 0x39ee;
0xffffffff834745f9: ret 0x39f1;
0xffffffff810e3029: ret 0x39f8;
0xffffffff81848559: ret 0x39f9;
0xffffffff81848573: ret 0x39fa;
0xffffffff8184a84d: ret 0x39fb;
0xffffffff816d09a5: ret 0x39fc;
0xffffffff822ded2f: ret 0x39fd;
0xffffffff8115a44d: ret 0x39fe;
0xffffffff8112bcd9: ret 0x39ff;
0xffffffff817f3376: ret 0x3a01;
0xffffffff822aa1fb: ret 0x3a03;
0xffffffff824232c3: ret 0x3a07;
0xffffffff811f3007: ret 0x3a0;
0xffffffff82434ac8: ret 0x3a0d;
0xffffffff82563f18: ret 0x3a11;
0xffffffff823f025f: ret 0x3a12;
0xffffffff818c96da: ret 0x3a14;
0xffffffff818c95da: ret 0x3a15;
0xffffffff8233cdc7: ret 0x3a1b;
0xffffffff8237e4da: ret 0x3a1c;
0xffffffff822dfd84: ret 0x3a1c;
0xffffffff823382b0: ret 0x3a1d;
0xffffffff8233e6c2: ret 0x3a1e;
0xffffffff8115dc86: ret 0x3a20;
0xffffffff8234f305: ret 0x3a22;
0xffffffff817f604a: ret 0x3a27;
0xffffffff8152e296: ret 0x3a28;
0xffffffff823d12ff: ret 0x3a2a;
0xffffffff8187048e: ret 0x3a2d;
0xffffffff824281b9: ret 0x3a2e;
0xffffffff8240e706: ret 0x3a2f;
0xffffffff82444166: ret 0x3a34;
0xffffffff8172b10d: ret 0x3a38;
0xffffffff8239b719: ret 0x3a3a;
0xffffffff823b7db2: ret 0x3a3d;
0xffffffff8187049c: ret 0x3a3e;
0xffffffff81bda367: ret 0x3a41;
0xffffffff8236736d: ret 0x3a44;
0xffffffff823887ed: ret 0x3a49;
0xffffffff81733a36: ret 0x3a4;
0xffffffff8238fdca: ret 0x3a4a;
0xffffffff817f5fee: ret 0x3a4f;
0xffffffff824de947: ret 0x3a56;
0xffffffff81c38516: ret 0x3a58;
0xffffffff822568ce: ret 0x3a5b;
0xffffffff8236ace3: ret 0x3a60;
0xffffffff81051cfe: ret 0x3a68;
0xffffffff82231f07: ret 0x3a69;
0xffffffff82487af9: ret 0x3a6a;
0xffffffff8231440c: ret 0x3a72;
0xffffffff81c2e6ea: ret 0x3a74;
0xffffffff83441472: ret 0x3a75;
0xffffffff813c353a: ret 0x3a78;
0xffffffff813c35e4: ret 0x3a79;
0xffffffff813c3f5c: ret 0x3a7f;
0xffffffff822991ed: ret 0x3a81;
0xffffffff82274336: ret 0x3a84;
0xffffffff823cc612: ret 0x3a87;
0xffffffff81c556d4: ret 0x3a8;
0xffffffff822bebce: ret 0x3a8a;
0xffffffff83497742: ret 0x3a8b;
0xffffffff823034b3: ret 0x3a91;
0xffffffff82428c2b: ret 0x3a9;
0xffffffff818704b7: ret 0x3a9b;
0xffffffff8131f185: ret 0x3a;
0xffffffff823af2be: ret 0x3aa3;
0xffffffff810dd524: ret 0x3aa8;
0xffffffff824ce953: ret 0x3aa;
0xffffffff818704c0: ret 0x3aab;
0xffffffff823ab8c4: ret 0x3ab0;
0xffffffff818d7b0a: ret 0x3ab4;
0xffffffff8243c2ae: ret 0x3ab6;
0xffffffff813c3386: ret 0x3ab8;
0xffffffff817f30fa: ret 0x3aba;
0xffffffff81c626ea: ret 0x3ac6;
0xffffffff813c6e57: ret 0x3ac8;
0xffffffff813c6e86: ret 0x3ac9;
0xffffffff823c3b3d: ret 0x3ac;
0xffffffff813c6eac: ret 0x3aca;
0xffffffff813c6f05: ret 0x3acb;
0xffffffff813c6f77: ret 0x3acc;
0xffffffff813c6fe2: ret 0x3acd;
0xffffffff813c6bec: ret 0x3ace;
0xffffffff8346a167: ret 0x3acf;
0xffffffff8346a181: ret 0x3ad0;
0xffffffff813c91cb: ret 0x3ad1;
0xffffffff813c91e5: ret 0x3ad2;
0xffffffff813c91ff: ret 0x3ad3;
0xffffffff823198f6: ret 0x3ad6;
0xffffffff8105200f: ret 0x3ae0;
0xffffffff8227776e: ret 0x3ae1;
0xffffffff823e9b12: ret 0x3ae5;
0xffffffff8150bde0: ret 0x3ae8;
0xffffffff8244d1b5: ret 0x3ae9;
0xffffffff82361063: ret 0x3ae;
0xffffffff8250814e: ret 0x3aed;
0xffffffff813c92d1: ret 0x3af0;
0xffffffff8255a92d: ret 0x3af4;
0xffffffff813cf461: ret 0x3af8;
0xffffffff822610ee: ret 0x3afa;
0xffffffff824aaa80: ret 0x3afe;
0xffffffff81032594: ret 0x3b00;
0xffffffff81147cd2: ret 0x3b01;
0xffffffff81b0c12a: ret 0x3b02;
0xffffffff818cf5da: ret 0x3b03;
0xffffffff823a6963: ret 0x3b05;
0xffffffff818c2c7a: ret 0x3b08;
0xffffffff812460fa: ret 0x3b0;
0xffffffff8344bd0a: ret 0x3b0e;
0xffffffff813d3f1c: ret 0x3b10;
0xffffffff8104591b: ret 0x3b11;
0xffffffff8152ab3b: ret 0x3b12;
0xffffffff8247e642: ret 0x3b13;
0xffffffff8227b339: ret 0x3b15;
0xffffffff8152abeb: ret 0x3b17;
0xffffffff8344bd3c: ret 0x3b1a;
0xffffffff8104543e: ret 0x3b1c;
0xffffffff82473e95: ret 0x3b22;
0xffffffff813da793: ret 0x3b28;
0xffffffff8234d9e3: ret 0x3b2a;
0xffffffff8344bd6a: ret 0x3b2b;
0xffffffff83464d2a: ret 0x3b2c;
0xffffffff82372791: ret 0x3b2d;
0xffffffff817f41ab: ret 0x3b30;
0xffffffff82308158: ret 0x3b36;
0xffffffff824faf9d: ret 0x3b3;
0xffffffff8344bd98: ret 0x3b3b;
0xffffffff81b6a8fc: ret 0x3b41;
0xffffffff8156d275: ret 0x3b42;
0xffffffff824babbe: ret 0x3b43;
0xffffffff817f4039: ret 0x3b45;
0xffffffff823374db: ret 0x3b47;
0xffffffff810cc39e: ret 0x3b48;
0xffffffff813df1fa: ret 0x3b49;
0xffffffff834f07e3: ret 0x3b4;
0xffffffff813df214: ret 0x3b4a;
0xffffffff813df22e: ret 0x3b4b;
0xffffffff813df248: ret 0x3b4c;
0xffffffff813df262: ret 0x3b4d;
0xffffffff813df279: ret 0x3b4e;
0xffffffff813df293: ret 0x3b4f;
0xffffffff813df2ad: ret 0x3b50;
0xffffffff813df2c7: ret 0x3b51;
0xffffffff813df2de: ret 0x3b52;
0xffffffff813df365: ret 0x3b53;
0xffffffff818ca30a: ret 0x3b56;
0xffffffff818cd26a: ret 0x3b5d;
0xffffffff8224dfd6: ret 0x3b61;
0xffffffff825d87f4: ret 0x3b62;
0xffffffff8229fd33: ret 0x3b6c;
0xffffffff817f4651: ret 0x3b71;
0xffffffff8146b79f: ret 0x3b74;
0xffffffff818e06a1: ret 0x3b75;
0xffffffff818cb3aa: ret 0x3b7c;
0xffffffff825ccfb6: ret 0x3b81;
0xffffffff8226a6bb: ret 0x3b89;
0xffffffff822b1281: ret 0x3b8b;
0xffffffff818c6d0a: ret 0x3b8c;
0xffffffff82346187: ret 0x3b8d;
0xffffffff8235051e: ret 0x3b90;
0xffffffff816dd466: ret 0x3b9;
0xffffffff8228c9e5: ret 0x3b9e;
0xffffffff81a45392: ret 0x3b;
0xffffffff822cb448: ret 0x3ba0;
0xffffffff824609aa: ret 0x3ba3;
0xffffffff817f4abb: ret 0x3ba5;
0xffffffff818440d8: ret 0x3ba;
0xffffffff822681bf: ret 0x3baa;
0xffffffff822681c0: ret 0x3baa;
0xffffffff822836b9: ret 0x3bab;
0xffffffff8224ea96: ret 0x3bad;
0xffffffff8224ea95: ret 0x3bad;
0xffffffff823848c9: ret 0x3bb1;
0xffffffff824339be: ret 0x3bbd;
0xffffffff8235a8c2: ret 0x3bc0;
0xffffffff82381b56: ret 0x3bc7;
0xffffffff8238edea: ret 0x3bc;
0xffffffff822e70d7: ret 0x3bd3;
0xffffffff813e2b51: ret 0x3bd8;
0xffffffff8251958d: ret 0x3bd9;
0xffffffff81b3620d: ret 0x3bd;
0xffffffff82322196: ret 0x3bdb;
0xffffffff823d4a23: ret 0x3bdd;
0xffffffff82229259: ret 0x3bde;
0xffffffff8222925a: ret 0x3bde;
0xffffffff818b52ba: ret 0x3be1;
0xffffffff823475e9: ret 0x3be3;
0xffffffff82300d89: ret 0x3be7;
0xffffffff8101cb4f: ret 0x3be8;
0xffffffff812a92d7: ret 0x3be9;
0xffffffff818100e0: ret 0x3beb;
0xffffffff82426a53: ret 0x3bed;
0xffffffff8233c154: ret 0x3bf5;
0xffffffff819c19ec: ret 0x3bfc;
0xffffffff811ea190: ret 0x3c01;
0xffffffff813e6d2f: ret 0x3c08;
0xffffffff81180886: ret 0x3c0;
0xffffffff824b5fde: ret 0x3c0a;
0xffffffff819686f1: ret 0x3c12;
0xffffffff82498b29: ret 0x3c14;
0xffffffff82237f66: ret 0x3c15;
0xffffffff81c3f93a: ret 0x3c17;
0xffffffff813ea830: ret 0x3c18;
0xffffffff813eb6cc: ret 0x3c19;
0xffffffff828a230c: ret 0x3c1;
0xffffffff813ec4ac: ret 0x3c1a;
0xffffffff813ea897: ret 0x3c1b;
0xffffffff813eba9b: ret 0x3c1c;
0xffffffff813ebad2: ret 0x3c1d;
0xffffffff813ecbd2: ret 0x3c1e;
0xffffffff812d3b64: ret 0x3c20;
0xffffffff823ef56e: ret 0x3c22;
0xffffffff823ef56d: ret 0x3c22;
0xffffffff824664a7: ret 0x3c24;
0xffffffff81968745: ret 0x3c26;
0xffffffff823bee34: ret 0x3c29;
0xffffffff823532d8: ret 0x3c30;
0xffffffff822d6a22: ret 0x3c36;
0xffffffff8255cc31: ret 0x3c37;
0xffffffff8241645b: ret 0x3c38;
0xffffffff824e2677: ret 0x3c3d;
0xffffffff824e2678: ret 0x3c3d;
0xffffffff822343b6: ret 0x3c40;
0xffffffff81872b36: ret 0x3c42;
0xffffffff8234c180: ret 0x3c43;
0xffffffff82456d8a: ret 0x3c48;
0xffffffff823343d6: ret 0x3c52;
0xffffffff8183db03: ret 0x3c58;
0xffffffff8125d47a: ret 0x3c5;
0xffffffff817f5b18: ret 0x3c5a;
0xffffffff825d805e: ret 0x3c5b;
0xffffffff82278a3c: ret 0x3c5e;
0xffffffff82369795: ret 0x3c66;
0xffffffff82392c91: ret 0x3c69;
0xffffffff82309207: ret 0x3c71;
0xffffffff817a056a: ret 0x3c73;
0xffffffff81566502: ret 0x3c74;
0xffffffff8349246f: ret 0x3c78;
0xffffffff8226e8eb: ret 0x3c7;
0xffffffff8246db41: ret 0x3c7d;
0xffffffff8230f30d: ret 0x3c7e;
0xffffffff811806aa: ret 0x3c80;
0xffffffff824b8bad: ret 0x3c85;
0xffffffff8152cb9b: ret 0x3c88;
0xffffffff81833776: ret 0x3c8;
0xffffffff824cb458: ret 0x3c8c;
0xffffffff813f8446: ret 0x3c8d;
0xffffffff82284722: ret 0x3c8e;
0xffffffff8223d40f: ret 0x3c91;
0xffffffff8247d408: ret 0x3c95;
0xffffffff8239e1d8: ret 0x3c97;
0xffffffff8240456e: ret 0x3c9e;
0xffffffff81a353a2: ret 0x3c;
0xffffffff82338073: ret 0x3ca0;
0xffffffff823da49b: ret 0x3ca3;
0xffffffff822c6e72: ret 0x3ca5;
0xffffffff81844a08: ret 0x3ca8;
0xffffffff82421465: ret 0x3ca9;
0xffffffff82421464: ret 0x3ca9;
0xffffffff823dc784: ret 0x3cac;
0xffffffff824b0a44: ret 0x3cae;
0xffffffff817f59c2: ret 0x3cb1;
0xffffffff81874462: ret 0x3cb3;
0xffffffff83468b9d: ret 0x3cb6;
0xffffffff823e8703: ret 0x3cb7;
0xffffffff823eb5fa: ret 0x3cb;
0xffffffff823919f0: ret 0x3cba;
0xffffffff82571e97: ret 0x3cbc;
0xffffffff82571e96: ret 0x3cbc;
0xffffffff82542b5d: ret 0x3cbe;
0xffffffff822864f1: ret 0x3cc1;
0xffffffff81874582: ret 0x3cc2;
0xffffffff822d3ddd: ret 0x3cc3;
0xffffffff82230aca: ret 0x3cc6;
0xffffffff82250e22: ret 0x3cc9;
0xffffffff81733a66: ret 0x3cc;
0xffffffff81847455: ret 0x3cd0;
0xffffffff8225ad20: ret 0x3cd1;
0xffffffff827fe8c0: ret 0x3cd;
0xffffffff8228f87d: ret 0x3ce1;
0xffffffff81014d5e: ret 0x3ce8;
0xffffffff8180c987: ret 0x3ce9;
0xffffffff824fef66: ret 0x3ce;
0xffffffff817f5a06: ret 0x3ceb;
0xffffffff822ff349: ret 0x3ced;
0xffffffff81415589: ret 0x3cf0;
0xffffffff824a7967: ret 0x3cf2;
0xffffffff823ed980: ret 0x3cf3;
0xffffffff8237d5e3: ret 0x3cf4;
0xffffffff81c3f26c: ret 0x3cf;
0xffffffff825d5dd3: ret 0x3cfb;
0xffffffff811797b0: ret 0x3cff;
0xffffffff822cf2b0: ret 0x3d00;
0xffffffff81441d79: ret 0x3d04;
0xffffffff81ba42f8: ret 0x3d05;
0xffffffff8249df3e: ret 0x3d07;
0xffffffff819a0134: ret 0x3d08;
0xffffffff8226cca8: ret 0x3d09;
0xffffffff822b3539: ret 0x3d0a;
0xffffffff822414a5: ret 0x3d0d;
0xffffffff8227a3af: ret 0x3d0f;
0xffffffff82264c8a: ret 0x3d15;
0xffffffff82264c89: ret 0x3d15;
0xffffffff822442fc: ret 0x3d1;
0xffffffff8345613f: ret 0x3d1a;
0xffffffff8226b933: ret 0x3d1f;
0xffffffff8194cbc8: ret 0x3d23;
0xffffffff8345616d: ret 0x3d24;
0xffffffff817f60f4: ret 0x3d26;
0xffffffff8231efa7: ret 0x3d29;
0xffffffff8137eb4a: ret 0x3d2;
0xffffffff822a444f: ret 0x3d34;
0xffffffff8345619e: ret 0x3d36;
0xffffffff8101b67e: ret 0x3d40;
0xffffffff8174bbb2: ret 0x3d43;
0xffffffff81143472: ret 0x3d48;
0xffffffff817f655e: ret 0x3d4a;
0xffffffff8233d564: ret 0x3d4b;
0xffffffff822d1da5: ret 0x3d4e;
0xffffffff8155e8fb: ret 0x3d50;
0xffffffff82450a8e: ret 0x3d55;
0xffffffff8241c264: ret 0x3d59;
0xffffffff8254ba97: ret 0x3d5d;
0xffffffff82314427: ret 0x3d68;
0xffffffff81c2e809: ret 0x3d74;
0xffffffff8172367d: ret 0x3d75;
0xffffffff81584f63: ret 0x3d76;
0xffffffff822beb38: ret 0x3d79;
0xffffffff82806264: ret 0x3d7;
0xffffffff817f65c9: ret 0x3d7c;
0xffffffff834320ef: ret 0x3d80;
0xffffffff8174bc82: ret 0x3d82;
0xffffffff810117d3: ret 0x3d83;
0xffffffff8246fdc5: ret 0x3d87;
0xffffffff824d1c0d: ret 0x3d8e;
0xffffffff823ccc75: ret 0x3d93;
0xffffffff824e374c: ret 0x3d98;
0xffffffff82404dde: ret 0x3d9;
0xffffffff812b7929: ret 0x3d;
0xffffffff8249362c: ret 0x3da0;
0xffffffff8254fe80: ret 0x3da5;
0xffffffff823ee51d: ret 0x3daa;
0xffffffff822eeb96: ret 0x3dae;
0xffffffff817f7b68: ret 0x3daf;
0xffffffff82362045: ret 0x3db2;
0xffffffff82417bef: ret 0x3db6;
0xffffffff8238a4c3: ret 0x3dbb;
0xffffffff83456372: ret 0x3dbd;
0xffffffff8238308f: ret 0x3dc0;
0xffffffff823df786: ret 0x3dc3;
0xffffffff8174bc51: ret 0x3dc7;
0xffffffff816f9ce1: ret 0x3dc9;
0xffffffff8239df83: ret 0x3dcd;
0xffffffff82315bfb: ret 0x3dcf;
0xffffffff825729bb: ret 0x3dd0;
0xffffffff8254cc86: ret 0x3dd6;
0xffffffff8267539e: ret 0x3dd9;
0xffffffff82248387: ret 0x3de0;
0xffffffff817f7cb6: ret 0x3de2;
0xffffffff824b9dd7: ret 0x3de5;
0xffffffff81c6c617: ret 0x3de6;
0xffffffff810226bb: ret 0x3de8;
0xffffffff8250db44: ret 0x3dec;
0xffffffff8174bc19: ret 0x3ded;
0xffffffff823dc14f: ret 0x3df7;
0xffffffff823dc150: ret 0x3df7;
0xffffffff81c6e6e1: ret 0x3df9;
0xffffffff822de671: ret 0x3df;
0xffffffff82412ec3: ret 0x3dfc;
0xffffffff822777e0: ret 0x3e08;
0xffffffff816e7826: ret 0x3e0;
0xffffffff81c6cc93: ret 0x3e0a;
0xffffffff823fb286: ret 0x3e0f;
0xffffffff82275967: ret 0x3e12;
0xffffffff8231746e: ret 0x3e17;
0xffffffff82466ccf: ret 0x3e18;
0xffffffff82295373: ret 0x3e1d;
0xffffffff817f7d51: ret 0x3e20;
0xffffffff8268f7bb: ret 0x3e24;
0xffffffff82355fe2: ret 0x3e25;
0xffffffff8238f579: ret 0x3e29;
0xffffffff824d7466: ret 0x3e2d;
0xffffffff8174bdda: ret 0x3e31;
0xffffffff8249a304: ret 0x3e33;
0xffffffff823f7572: ret 0x3e38;
0xffffffff8242670e: ret 0x3e3c;
0xffffffff824b347b: ret 0x3e43;
0xffffffff824b347a: ret 0x3e43;
0xffffffff8241aff6: ret 0x3e45;
0xffffffff82532221: ret 0x3e49;
0xffffffff822e7e0b: ret 0x3e50;
0xffffffff82229ff1: ret 0x3e52;
0xffffffff82445c9f: ret 0x3e53;
0xffffffff822fc7c0: ret 0x3e58;
0xffffffff817c40e8: ret 0x3e5;
0xffffffff82510ee4: ret 0x3e5b;
0xffffffff8233d7fa: ret 0x3e5f;
0xffffffff822af0e0: ret 0x3e60;
0xffffffff8226549f: ret 0x3e64;
0xffffffff82238a9f: ret 0x3e66;
0xffffffff817f8bd4: ret 0x3e70;
0xffffffff8256c0d7: ret 0x3e72;
0xffffffff8115c97c: ret 0x3e74;
0xffffffff8248ebb0: ret 0x3e76;
0xffffffff8224360a: ret 0x3e7;
0xffffffff834a43dd: ret 0x3e7d;
0xffffffff823f96fb: ret 0x3e83;
0xffffffff823824c7: ret 0x3e85;
0xffffffff823824c6: ret 0x3e85;
0xffffffff8110dbbd: ret 0x3e8;
0xffffffff82495c16: ret 0x3e8a;
0xffffffff824dcc33: ret 0x3e8b;
0xffffffff822b4243: ret 0x3e8f;
0xffffffff82302511: ret 0x3e93;
0xffffffff823dd797: ret 0x3e9e;
0xffffffff817f8d36: ret 0x3e9f;
0xffffffff81c14e2a: ret 0x3e;
0xffffffff823576d9: ret 0x3ea4;
0xffffffff824e2fd4: ret 0x3ea8;
0xffffffff835b1e30: ret 0x3eab;
0xffffffff824fa0ad: ret 0x3eac;
0xffffffff817e31bb: ret 0x3eae;
0xffffffff82544169: ret 0x3eb0;
0xffffffff824be8bb: ret 0x3eb2;
0xffffffff82332f4b: ret 0x3eb4;
0xffffffff825385ab: ret 0x3eb8;
0xffffffff8228724c: ret 0x3eb9;
0xffffffff8112aef4: ret 0x3eb;
0xffffffff817f9192: ret 0x3ec2;
0xffffffff823e8340: ret 0x3ec3;
0xffffffff823731f5: ret 0x3ec7;
0xffffffff824b05dd: ret 0x3ec8;
0xffffffff823abb99: ret 0x3ec9;
0xffffffff8189641a: ret 0x3ecb;
0xffffffff822f7d03: ret 0x3ed1;
0xffffffff8228ca76: ret 0x3ed2;
0xffffffff817f8fdd: ret 0x3ed4;
0xffffffff8254708f: ret 0x3ed6;
0xffffffff82457130: ret 0x3ed;
0xffffffff8253bcad: ret 0x3ee1;
0xffffffff823d23d7: ret 0x3ee4;
0xffffffff812b70ec: ret 0x3ee8;
0xffffffff8238c36e: ret 0x3eec;
0xffffffff8233abeb: ret 0x3ef0;
0xffffffff822972d5: ret 0x3ef1;
0xffffffff82395897: ret 0x3ef4;
0xffffffff8255f260: ret 0x3ef7;
0xffffffff817f8df5: ret 0x3ef8;
0xffffffff82291b54: ret 0x3efa;
0xffffffff822ba59e: ret 0x3efd;
0xffffffff824ec2f7: ret 0x3eff;
0xffffffff811fdab9: ret 0x3f10;
0xffffffff8246150a: ret 0x3f12;
0xffffffff817f9037: ret 0x3f13;
0xffffffff81885353: ret 0x3f16;
0xffffffff82234ee5: ret 0x3f1f;
0xffffffff824e1a68: ret 0x3f21;
0xffffffff824a83fa: ret 0x3f23;
0xffffffff82239dda: ret 0x3f24;
0xffffffff817f9081: ret 0x3f24;
0xffffffff82299ef4: ret 0x3f2a;
0xffffffff822ac00a: ret 0x3f2d;
0xffffffff8254b21c: ret 0x3f34;
0xffffffff82306868: ret 0x3f36;
0xffffffff828042e4: ret 0x3f3;
0xffffffff822abefd: ret 0x3f3a;
0xffffffff8238eb33: ret 0x3f43;
0xffffffff817f929e: ret 0x3f46;
0xffffffff826cc9fe: ret 0x3f4;
0xffffffff82382259: ret 0x3f4c;
0xffffffff824ce70f: ret 0x3f4f;
0xffffffff8223dfaf: ret 0x3f52;
0xffffffff8127e218: ret 0x3f58;
0xffffffff8222d7ab: ret 0x3f5a;
0xffffffff823e8815: ret 0x3f5b;
0xffffffff82551f3f: ret 0x3f5c;
0xffffffff824752d2: ret 0x3f63;
0xffffffff82530b2e: ret 0x3f64;
0xffffffff8231738b: ret 0x3f6d;
0xffffffff81b52187: ret 0x3f70;
0xffffffff81247104: ret 0x3f73;
0xffffffff8146b78d: ret 0x3f74;
0xffffffff8165343a: ret 0x3f75;
0xffffffff823dfeb9: ret 0x3f79;
0xffffffff812d3cf0: ret 0x3f80;
0xffffffff81714be6: ret 0x3f83;
0xffffffff82528b37: ret 0x3f84;
0xffffffff8226c847: ret 0x3f87;
0xffffffff8174c352: ret 0x3f8c;
0xffffffff810e4604: ret 0x3f90;
0xffffffff82309292: ret 0x3f91;
0xffffffff8234c55f: ret 0x3f94;
0xffffffff823cf0fa: ret 0x3f97;
0xffffffff8134614c: ret 0x3f9b;
0xffffffff8250dec8: ret 0x3f9d;
0xffffffff81a053e2: ret 0x3f;
0xffffffff823c5f3f: ret 0x3fa2;
0xffffffff8254af30: ret 0x3fa3;
0xffffffff8174c3bb: ret 0x3fa4;
0xffffffff822a79f5: ret 0x3fa5;
0xffffffff82251f48: ret 0x3fa;
0xffffffff824ec6ee: ret 0x3fb0;
0xffffffff824a8f3e: ret 0x3fb9;
0xffffffff82535dc6: ret 0x3fbb;
0xffffffff817f94d9: ret 0x3fbf;
0xffffffff8174c415: ret 0x3fc0;
0xffffffff824df3ea: ret 0x3fc6;
0xffffffff824df3e9: ret 0x3fc6;
0xffffffff824b561f: ret 0x3fc8;
0xffffffff8255375b: ret 0x3fcb;
0xffffffff822d8984: ret 0x3fd3;
0xffffffff82332e50: ret 0x3fd5;
0xffffffff823d3e4f: ret 0x3fd6;
0xffffffff834536a8: ret 0x3fd8;
0xffffffff81b4b03a: ret 0x3fd9;
0xffffffff82261d7a: ret 0x3fda;
0xffffffff8174c442: ret 0x3fe0;
0xffffffff8233b687: ret 0x3fe4;
0xffffffff82548841: ret 0x3fe7;
0xffffffff8114ccab: ret 0x3fe8;
0xffffffff824ef6b8: ret 0x3fe;
0xffffffff824fe071: ret 0x3fed;
0xffffffff8251322c: ret 0x3fee;
0xffffffff822abcbd: ret 0x3ff1;
0xffffffff822c1100: ret 0x3ff2;
0xffffffff8123dc93: ret 0x3ff;
0xffffffff82273171: ret 0x3ffa;
0xffffffff823b4524: ret 0x3ffb;
0xffffffff82380c58: ret 0x3ffc;
0xffffffff819c894d: ret 0x3fff;
0xffffffff8100eb25: ret 0x4000;
0xffffffff810105b0: ret 0x4001;
0xffffffff8177b67e: ret 0x4002;
0xffffffff814c29c9: ret 0x4004;
0xffffffff82480de3: ret 0x4006;
0xffffffff81aa3bab: ret 0x4008;
0xffffffff822631b1: ret 0x4009;
0xffffffff810ef1ce: ret 0x400;
0xffffffff8138292e: ret 0x400c;
0xffffffff822da07f: ret 0x400d;
0xffffffff813f7037: ret 0x400f;
0xffffffff819755fc: ret 0x4018;
0xffffffff82439ac3: ret 0x401;
0xffffffff82359c3d: ret 0x402f;
0xffffffff82359c3e: ret 0x402f;
0xffffffff817f8433: ret 0x4031;
0xffffffff82495965: ret 0x4033;
0xffffffff82495964: ret 0x4033;
0xffffffff82566f93: ret 0x4037;
0xffffffff8233ad73: ret 0x403f;
0xffffffff8245d89a: ret 0x4041;
0xffffffff822dbd6a: ret 0x404b;
0xffffffff824def70: ret 0x404f;
0xffffffff8234b32e: ret 0x4052;
0xffffffff8253e98a: ret 0x4059;
0xffffffff822d4af5: ret 0x405;
0xffffffff817f86aa: ret 0x405b;
0xffffffff8236bf45: ret 0x405e;
0xffffffff8229cb6b: ret 0x4061;
0xffffffff822e1a13: ret 0x4069;
0xffffffff834873b6: ret 0x406f;
0xffffffff823ea153: ret 0x4070;
0xffffffff810470c8: ret 0x4074;
0xffffffff817f8504: ret 0x4077;
0xffffffff810e7aff: ret 0x4078;
0xffffffff8237c19f: ret 0x407;
0xffffffff8156e59d: ret 0x407e;
0xffffffff810e3f82: ret 0x4080;
0xffffffff822367f4: ret 0x4086;
0xffffffff8241c226: ret 0x4089;
0xffffffff814100d3: ret 0x408;
0xffffffff8199ccde: ret 0x408b;
0xffffffff8248f4bc: ret 0x408c;
0xffffffff8222e671: ret 0x4095;
0xffffffff8222e672: ret 0x4095;
0xffffffff82336aca: ret 0x409c;
0xffffffff82555b89: ret 0x409f;
0xffffffff8115616d: ret 0x40;
0xffffffff822442d2: ret 0x40a3;
0xffffffff817f8a0a: ret 0x40b2;
0xffffffff8254255a: ret 0x40b6;
0xffffffff824fd832: ret 0x40b7;
0xffffffff81286e7f: ret 0x40b9;
0xffffffff818a5f3d: ret 0x40be;
0xffffffff81037a0f: ret 0x40bf;
0xffffffff82236a56: ret 0x40c3;
0xffffffff81aad8ce: ret 0x40c7;
0xffffffff8174cd48: ret 0x40ca;
0xffffffff82323c10: ret 0x40da;
0xffffffff8224f5f8: ret 0x40de;
0xffffffff82249d2a: ret 0x40df;
0xffffffff81c752ed: ret 0x40e4;
0xffffffff817f8904: ret 0x40e6;
0xffffffff8235c3e7: ret 0x40ec;
0xffffffff8174cf8c: ret 0x40ef;
0xffffffff8247a085: ret 0x40f2;
0xffffffff8249bd9b: ret 0x40f3;
0xffffffff82441568: ret 0x40f5;
0xffffffff824c4524: ret 0x40f6;
0xffffffff824968ab: ret 0x40f9;
0xffffffff8248c46e: ret 0x40f;
0xffffffff822e5d9a: ret 0x40fe;
0xffffffff81641ca6: ret 0x40ff;
0xffffffff810325b8: ret 0x4100;
0xffffffff8101755a: ret 0x4101;
0xffffffff810b10c4: ret 0x4102;
0xffffffff810b0fc4: ret 0x4103;
0xffffffff810b100a: ret 0x4104;
0xffffffff81c65811: ret 0x4105;
0xffffffff81585c0e: ret 0x4106;
0xffffffff81bea569: ret 0x4107;
0xffffffff8111219b: ret 0x4108;
0xffffffff8165c3f1: ret 0x410b;
0xffffffff8111cbcc: ret 0x410c;
0xffffffff8114763c: ret 0x410e;
0xffffffff8243deff: ret 0x410f;
0xffffffff810105e1: ret 0x4110;
0xffffffff81a178f6: ret 0x4112;
0xffffffff81495dd3: ret 0x4113;
0xffffffff8187cd5e: ret 0x4114;
0xffffffff816c321d: ret 0x4117;
0xffffffff8114775b: ret 0x4118;
0xffffffff81b1efe9: ret 0x4119;
0xffffffff83447c74: ret 0x411;
0xffffffff8235a0cf: ret 0x411c;
0xffffffff816c6a69: ret 0x411e;
0xffffffff8106ab90: ret 0x4120;
0xffffffff81acdf2e: ret 0x4124;
0xffffffff822fbf6b: ret 0x4125;
0xffffffff8132bac0: ret 0x4126;
0xffffffff8187cdbf: ret 0x4128;
0xffffffff82409483: ret 0x412;
0xffffffff82302b86: ret 0x412a;
0xffffffff8106ab80: ret 0x4130;
0xffffffff814f460e: ret 0x4134;
0xffffffff8230650b: ret 0x4137;
0xffffffff818f1f26: ret 0x4138;
0xffffffff8255ebc5: ret 0x413b;
0xffffffff81875a38: ret 0x4140;
0xffffffff8231b05c: ret 0x4146;
0xffffffff811721ac: ret 0x4148;
0xffffffff8103b542: ret 0x414b;
0xffffffff826d1627: ret 0x414e;
0xffffffff826d1002: ret 0x4150;
0xffffffff8136243f: ret 0x4153;
0xffffffff826d184e: ret 0x4154;
0xffffffff81a6f675: ret 0x4155;
0xffffffff8222f266: ret 0x4156;
0xffffffff8235f79a: ret 0x415;
0xffffffff8235f79b: ret 0x415;
0xffffffff822312bb: ret 0x415a;
0xffffffff81002d84: ret 0x415b;
0xffffffff8253888e: ret 0x4160;
0xffffffff810647e1: ret 0x4166;
0xffffffff811d737c: ret 0x4168;
0xffffffff8231ba49: ret 0x416;
0xffffffff81c0ce10: ret 0x4170;
0xffffffff823b868c: ret 0x4171;
0xffffffff82367e0d: ret 0x4172;
0xffffffff817f8882: ret 0x4173;
0xffffffff8135f1f7: ret 0x4175;
0xffffffff8246fef7: ret 0x4177;
0xffffffff8246fef5: ret 0x4177;
0xffffffff818b3252: ret 0x417;
0xffffffff822a9ec3: ret 0x417e;
0xffffffff822c106e: ret 0x4182;
0xffffffff81535835: ret 0x4183;
0xffffffff823b26a6: ret 0x4185;
0xffffffff81811849: ret 0x4188;
0xffffffff816a9926: ret 0x4189;
0xffffffff8120607a: ret 0x418a;
0xffffffff81b58d8b: ret 0x418b;
0xffffffff812d40e5: ret 0x4190;
0xffffffff8174d4f8: ret 0x419b;
0xffffffff8256a69f: ret 0x419d;
0xffffffff810ac1d9: ret 0x41;
0xffffffff81975e5d: ret 0x41a0;
0xffffffff82234358: ret 0x41a3;
0xffffffff82293116: ret 0x41a4;
0xffffffff82363338: ret 0x41a8;
0xffffffff82562832: ret 0x41a;
0xffffffff817f9c0a: ret 0x41ac;
0xffffffff823fad0a: ret 0x41ad;
0xffffffff83455f48: ret 0x41b9;
0xffffffff823fbd76: ret 0x41c4;
0xffffffff822e2a40: ret 0x41c5;
0xffffffff8176343a: ret 0x41c8;
0xffffffff817f9bbd: ret 0x41c9;
0xffffffff82392303: ret 0x41cc;
0xffffffff8174d686: ret 0x41cd;
0xffffffff81879f3c: ret 0x41ce;
0xffffffff81673547: ret 0x41d0;
0xffffffff8246b177: ret 0x41d2;
0xffffffff824e1604: ret 0x41d8;
0xffffffff823cf9e2: ret 0x41df;
0xffffffff8230b34d: ret 0x41e3;
0xffffffff81036359: ret 0x41e8;
0xffffffff815d7234: ret 0x41f0;
0xffffffff824bdd0e: ret 0x41f2;
0xffffffff8174d6e6: ret 0x41f5;
0xffffffff822d181c: ret 0x41f6;
0xffffffff815d0073: ret 0x41f7;
0xffffffff8157c36f: ret 0x41f8;
0xffffffff82479ec4: ret 0x41f;
0xffffffff822bb832: ret 0x41fa;
0xffffffff816c33e5: ret 0x41fc;
0xffffffff8163a825: ret 0x41fd;
0xffffffff81606327: ret 0x41fe;
0xffffffff8117bcf5: ret 0x41ff;
0xffffffff81bf31c0: ret 0x4200;
0xffffffff810b13b8: ret 0x4201;
0xffffffff82395c3f: ret 0x4204;
0xffffffff817f9c2f: ret 0x4207;
0xffffffff811cfde1: ret 0x4208;
0xffffffff8240a6a6: ret 0x4209;
0xffffffff822abe11: ret 0x420d;
0xffffffff811e0081: ret 0x420f;
0xffffffff82453b0e: ret 0x4212;
0xffffffff82453b0f: ret 0x4212;
0xffffffff82565332: ret 0x4213;
0xffffffff815395d0: ret 0x4218;
0xffffffff8174da18: ret 0x421b;
0xffffffff823f4764: ret 0x421b;
0xffffffff824d5fe6: ret 0x421c;
0xffffffff824d5fe7: ret 0x421c;
0xffffffff81c65acb: ret 0x421e;
0xffffffff8256a9c7: ret 0x4222;
0xffffffff824be4bf: ret 0x4226;
0xffffffff817f9c80: ret 0x4229;
0xffffffff81456bc8: ret 0x4230;
0xffffffff8344fc74: ret 0x4234;
0xffffffff8344fc8a: ret 0x4236;
0xffffffff81a6b423: ret 0x4238;
0xffffffff8115d25b: ret 0x4239;
0xffffffff8115d3ed: ret 0x423a;
0xffffffff8115d2c2: ret 0x423b;
0xffffffff8115d17e: ret 0x423c;
0xffffffff8231819e: ret 0x423e;
0xffffffff8102303b: ret 0x4240;
0xffffffff826d1729: ret 0x4241;
0xffffffff823fa605: ret 0x4247;
0xffffffff8345008a: ret 0x4248;
0xffffffff817f9ad1: ret 0x4249;
0xffffffff8247613b: ret 0x424c;
0xffffffff8233f188: ret 0x4251;
0xffffffff8153646f: ret 0x425e;
0xffffffff8174dae1: ret 0x4261;
0xffffffff819a0e81: ret 0x4266;
0xffffffff82447c37: ret 0x4267;
0xffffffff824e69a8: ret 0x426c;
0xffffffff8184f256: ret 0x426e;
0xffffffff8116bd20: ret 0x4270;
0xffffffff823307e4: ret 0x4273;
0xffffffff8116bdfc: ret 0x4274;
0xffffffff81884e49: ret 0x4276;
0xffffffff83515650: ret 0x4277;
0xffffffff81b34ce2: ret 0x4278;
0xffffffff8249a08f: ret 0x427e;
0xffffffff83450226: ret 0x4280;
0xffffffff8184df56: ret 0x4281;
0xffffffff8138044b: ret 0x428d;
0xffffffff82264c62: ret 0x4290;
0xffffffff815387d1: ret 0x4291;
0xffffffff82385748: ret 0x4294;
0xffffffff82374e51: ret 0x429;
0xffffffff817f9ca8: ret 0x429b;
0xffffffff818490bd: ret 0x42;
0xffffffff8234bd88: ret 0x42a1;
0xffffffff81884f15: ret 0x42a3;
0xffffffff824863d6: ret 0x42a5;
0xffffffff81538bd2: ret 0x42a7;
0xffffffff824ed635: ret 0x42b5;
0xffffffff8174dabf: ret 0x42b8;
0xffffffff824ba26b: ret 0x42b9;
0xffffffff8346ce16: ret 0x42bb;
0xffffffff824c77f3: ret 0x42bf;
0xffffffff82330b83: ret 0x42c1;
0xffffffff82330b82: ret 0x42c1;
0xffffffff81538924: ret 0x42c2;
0xffffffff8252c136: ret 0x42c6;
0xffffffff823c9599: ret 0x42c7;
0xffffffff83462d33: ret 0x42c9;
0xffffffff824da1ac: ret 0x42c;
0xffffffff8232b510: ret 0x42ce;
0xffffffff812d4114: ret 0x42d0;
0xffffffff8254bfc6: ret 0x42d5;
0xffffffff834899d4: ret 0x42d6;
0xffffffff8116bb4c: ret 0x42d8;
0xffffffff8183d0ca: ret 0x42d9;
0xffffffff817f9cd6: ret 0x42da;
0xffffffff823ced58: ret 0x42dc;
0xffffffff82318323: ret 0x42dd;
0xffffffff82384dc9: ret 0x42de;
0xffffffff8244ce0b: ret 0x42e5;
0xffffffff8232243d: ret 0x42e5;
0xffffffff81839bfa: ret 0x42e6;
0xffffffff814eaa18: ret 0x42e8;
0xffffffff823de0b9: ret 0x42e;
0xffffffff823eb2bf: ret 0x42eb;
0xffffffff8110e5bd: ret 0x42f4;
0xffffffff81538820: ret 0x42f5;
0xffffffff8229f233: ret 0x42f7;
0xffffffff824cb44b: ret 0x42fb;
0xffffffff82494169: ret 0x42fc;
0xffffffff823e5845: ret 0x42ff;
0xffffffff81c5dd00: ret 0x4301;
0xffffffff81a498c5: ret 0x4303;
0xffffffff82479490: ret 0x4305;
0xffffffff8247948f: ret 0x4305;
0xffffffff81733c41: ret 0x430;
0xffffffff812436c1: ret 0x430f;
0xffffffff823cdd82: ret 0x4311;
0xffffffff81538efc: ret 0x4314;
0xffffffff825d63b1: ret 0x431;
0xffffffff822681e9: ret 0x431b;
0xffffffff8228d310: ret 0x431f;
0xffffffff8251bd57: ret 0x4322;
0xffffffff82397808: ret 0x4324;
0xffffffff823a7030: ret 0x4327;
0xffffffff827fab70: ret 0x432;
0xffffffff8230ef16: ret 0x432f;
0xffffffff811704e6: ret 0x4330;
0xffffffff8224f9d5: ret 0x4333;
0xffffffff824384f5: ret 0x4334;
0xffffffff817f8efb: ret 0x433a;
0xffffffff81853df3: ret 0x4340;
0xffffffff8236afce: ret 0x4341;
0xffffffff8153b72f: ret 0x4345;
0xffffffff81172bf9: ret 0x4348;
0xffffffff8168d303: ret 0x434b;
0xffffffff81415859: ret 0x4350;
0xffffffff823f9c60: ret 0x4351;
0xffffffff83456605: ret 0x4353;
0xffffffff8248c1bf: ret 0x4357;
0xffffffff82516cc0: ret 0x435;
0xffffffff82425007: ret 0x435c;
0xffffffff823e6112: ret 0x435d;
0xffffffff817f8e6a: ret 0x4365;
0xffffffff8243d788: ret 0x4366;
0xffffffff823d53e4: ret 0x4367;
0xffffffff834566fd: ret 0x436e;
0xffffffff824954c9: ret 0x436f;
0xffffffff82273137: ret 0x4372;
0xffffffff8126ac67: ret 0x4373;
0xffffffff817f9402: ret 0x4374;
0xffffffff81b0783a: ret 0x437;
0xffffffff8120915a: ret 0x437e;
0xffffffff8128960a: ret 0x4380;
0xffffffff824ffc17: ret 0x4381;
0xffffffff824ffc18: ret 0x4381;
0xffffffff823d33ec: ret 0x4382;
0xffffffff823d33ed: ret 0x4382;
0xffffffff82528369: ret 0x4386;
0xffffffff813f5a30: ret 0x4389;
0xffffffff8221ba22: ret 0x438;
0xffffffff81b7ceaf: ret 0x438a;
0xffffffff81555a80: ret 0x438b;
0xffffffff824a5e8c: ret 0x438d;
0xffffffff82448394: ret 0x4392;
0xffffffff823d9fc3: ret 0x439;
0xffffffff8243435d: ret 0x439a;
0xffffffff823b9bdf: ret 0x439b;
0xffffffff82242d79: ret 0x439d;
0xffffffff82566e02: ret 0x439f;
0xffffffff8182e810: ret 0x43;
0xffffffff82484cd5: ret 0x43a8;
0xffffffff824da1bb: ret 0x43b7;
0xffffffff822333de: ret 0x43b8;
0xffffffff822333df: ret 0x43b8;
0xffffffff811d6698: ret 0x43b9;
0xffffffff824f126b: ret 0x43b;
0xffffffff823ffa1c: ret 0x43c2;
0xffffffff8108d81d: ret 0x43c4;
0xffffffff8153d986: ret 0x43c7;
0xffffffff82558c65: ret 0x43c9;
0xffffffff823a48a0: ret 0x43d6;
0xffffffff81839ac3: ret 0x43d7;
0xffffffff8184559a: ret 0x43da;
0xffffffff82338f78: ret 0x43db;
0xffffffff817db847: ret 0x43e0;
0xffffffff81838cc3: ret 0x43e5;
0xffffffff81c752e7: ret 0x43e6;
0xffffffff8134d917: ret 0x43e8;
0xffffffff815a3443: ret 0x43e9;
0xffffffff813a33ab: ret 0x43eb;
0xffffffff82449e33: ret 0x43f4;
0xffffffff811f340a: ret 0x43f6;
0xffffffff822debd3: ret 0x43f7;
0xffffffff8157c240: ret 0x43f8;
0xffffffff8226bcb3: ret 0x43f9;
0xffffffff8157fe2c: ret 0x43fc;
0xffffffff817fa08a: ret 0x43fe;
0xffffffff81c5dd7b: ret 0x43ff;
0xffffffff81049830: ret 0x4400;
0xffffffff8129a271: ret 0x4401;
0xffffffff81102d8e: ret 0x4402;
0xffffffff8163a832: ret 0x4403;
0xffffffff8150a72f: ret 0x4404;
0xffffffff81c65e64: ret 0x4405;
0xffffffff811e36a5: ret 0x4406;
0xffffffff816c6612: ret 0x4407;
0xffffffff81495dba: ret 0x4408;
0xffffffff8137ce33: ret 0x4409;
0xffffffff81b6a31e: ret 0x440a;
0xffffffff8150a710: ret 0x440b;
0xffffffff81800848: ret 0x440c;
0xffffffff816c49ef: ret 0x440e;
0xffffffff8165c647: ret 0x440f;
0xffffffff81af1c0a: ret 0x4410;
0xffffffff816c6a0b: ret 0x4413;
0xffffffff8123e28f: ret 0x4414;
0xffffffff816c72ca: ret 0x4415;
0xffffffff8165cec7: ret 0x4417;
0xffffffff816c3774: ret 0x4418;
0xffffffff816c6666: ret 0x441a;
0xffffffff816c4a42: ret 0x441c;
0xffffffff81351eb3: ret 0x441e;
0xffffffff825328f0: ret 0x4420;
0xffffffff823fd0fd: ret 0x4421;
0xffffffff823e57ae: ret 0x4423;
0xffffffff82407271: ret 0x4424;
0xffffffff81bdc09c: ret 0x4428;
0xffffffff825d908c: ret 0x4429;
0xffffffff822d23fb: ret 0x442;
0xffffffff8153daa1: ret 0x442a;
0xffffffff8237b0f7: ret 0x442f;
0xffffffff814dc936: ret 0x4430;
0xffffffff824a80b3: ret 0x4431;
0xffffffff8197ffce: ret 0x4438;
0xffffffff824c8112: ret 0x4438;
0xffffffff82369ad9: ret 0x4439;
0xffffffff8226d535: ret 0x443a;
0xffffffff8225f555: ret 0x4440;
0xffffffff8234e026: ret 0x4441;
0xffffffff822f397a: ret 0x4441;
0xffffffff822f543d: ret 0x4444;
0xffffffff82227724: ret 0x4447;
0xffffffff8153dac2: ret 0x4448;
0xffffffff826d1689: ret 0x4449;
0xffffffff82456513: ret 0x444a;
0xffffffff811735db: ret 0x4451;
0xffffffff824ba53a: ret 0x4452;
0xffffffff834504b4: ret 0x4453;
0xffffffff824e0353: ret 0x4454;
0xffffffff824832db: ret 0x4456;
0xffffffff822863c2: ret 0x445b;
0xffffffff8174df8f: ret 0x4460;
0xffffffff8106325d: ret 0x4466;
0xffffffff8238e0ed: ret 0x4467;
0xffffffff81854723: ret 0x4468;
0xffffffff82367dcc: ret 0x4469;
0xffffffff824657cc: ret 0x446a;
0xffffffff823b3bc4: ret 0x446e;
0xffffffff823cc83d: ret 0x446f;
0xffffffff82399a63: ret 0x4473;
0xffffffff81061292: ret 0x4474;
0xffffffff815c43ea: ret 0x4475;
0xffffffff822712f0: ret 0x4476;
0xffffffff824e18c1: ret 0x4478;
0xffffffff823b20ec: ret 0x4479;
0xffffffff82517cde: ret 0x447;
0xffffffff817fa254: ret 0x447c;
0xffffffff816c6fe0: ret 0x4481;
0xffffffff8174e025: ret 0x4482;
0xffffffff811b85be: ret 0x4483;
0xffffffff8229dfde: ret 0x4485;
0xffffffff816ce30b: ret 0x4488;
0xffffffff810eb2d8: ret 0x4489;
0xffffffff8103b24a: ret 0x448b;
0xffffffff8182a7ba: ret 0x448c;
0xffffffff82345b8b: ret 0x4490;
0xffffffff8251daa4: ret 0x4491;
0xffffffff81560eba: ret 0x449;
0xffffffff82292b87: ret 0x449b;
0xffffffff82320d96: ret 0x449c;
0xffffffff8127f16c: ret 0x44;
0xffffffff82493bc9: ret 0x44a2;
0xffffffff82353a0b: ret 0x44a6;
0xffffffff817fb2e1: ret 0x44a7;
0xffffffff8251b422: ret 0x44a;
0xffffffff8251b423: ret 0x44a;
0xffffffff8139018a: ret 0x44b;
0xffffffff817d98cc: ret 0x44ba;
0xffffffff824c37fd: ret 0x44bc;
0xffffffff8174e0a3: ret 0x44bf;
0xffffffff8240eaf7: ret 0x44c1;
0xffffffff825d48d4: ret 0x44c2;
0xffffffff817faffb: ret 0x44c3;
0xffffffff8224b6a8: ret 0x44c4;
0xffffffff81457852: ret 0x44c7;
0xffffffff81bb473a: ret 0x44c9;
0xffffffff823220d0: ret 0x44ce;
0xffffffff8137d2cb: ret 0x44d0;
0xffffffff823b248e: ret 0x44d1;
0xffffffff823b248d: ret 0x44d1;
0xffffffff8234ecc9: ret 0x44d6;
0xffffffff8174e0ec: ret 0x44d8;
0xffffffff8233475f: ret 0x44d;
0xffffffff81854a4b: ret 0x44dd;
0xffffffff81854aab: ret 0x44de;
0xffffffff81053b7c: ret 0x44e0;
0xffffffff810049d2: ret 0x44e8;
0xffffffff815733b6: ret 0x44e9;
0xffffffff8137d2f6: ret 0x44ec;
0xffffffff8118f136: ret 0x44f0;
0xffffffff81064a2c: ret 0x44f3;
0xffffffff8162b659: ret 0x44f6;
0xffffffff8225bd9b: ret 0x44f7;
0xffffffff817fb1d5: ret 0x44f8;
0xffffffff8153ddec: ret 0x44fb;
0xffffffff82454a86: ret 0x44fb;
0xffffffff8224ff27: ret 0x44fc;
0xffffffff816e13df: ret 0x44fd;
0xffffffff816e1415: ret 0x44fe;
0xffffffff8104e992: ret 0x44ff;
0xffffffff8105b2de: ret 0x4500;
0xffffffff810b1461: ret 0x4501;
0xffffffff810b12b9: ret 0x4502;
0xffffffff81abe58d: ret 0x4503;
0xffffffff81652219: ret 0x4504;
0xffffffff810b144c: ret 0x4505;
0xffffffff81506a94: ret 0x4508;
0xffffffff810b1258: ret 0x4509;
0xffffffff8185aa72: ret 0x450a;
0xffffffff8185b271: ret 0x450b;
0xffffffff811e7927: ret 0x450c;
0xffffffff8185d09e: ret 0x450d;
0xffffffff81877052: ret 0x450e;
0xffffffff81630cae: ret 0x450f;
0xffffffff8104e3bc: ret 0x4510;
0xffffffff8165cae3: ret 0x4511;
0xffffffff82430abb: ret 0x4512;
0xffffffff81a7f400: ret 0x4513;
0xffffffff8127d29b: ret 0x4518;
0xffffffff81866830: ret 0x4519;
0xffffffff828ae278: ret 0x451;
0xffffffff8186a8ae: ret 0x451b;
0xffffffff818678a6: ret 0x451c;
0xffffffff818678dd: ret 0x451d;
0xffffffff81867872: ret 0x451e;
0xffffffff8186788c: ret 0x451f;
0xffffffff8186ebe5: ret 0x4520;
0xffffffff8186ec03: ret 0x4521;
0xffffffff81164fe3: ret 0x4523;
0xffffffff823cb237: ret 0x4525;
0xffffffff8347ccb1: ret 0x4526;
0xffffffff822ee69c: ret 0x4527;
0xffffffff81877a0d: ret 0x4528;
0xffffffff8238d796: ret 0x4529;
0xffffffff8187f98e: ret 0x4530;
0xffffffff811d4301: ret 0x4538;
0xffffffff8174e441: ret 0x4539;
0xffffffff823bde36: ret 0x453d;
0xffffffff814cc88d: ret 0x4540;
0xffffffff82535059: ret 0x4542;
0xffffffff8188e78a: ret 0x4544;
0xffffffff826d1788: ret 0x4552;
0xffffffff823467ee: ret 0x4556;
0xffffffff823a153f: ret 0x455a;
0xffffffff82402122: ret 0x455b;
0xffffffff82373a93: ret 0x455c;
0xffffffff817faa8e: ret 0x455e;
0xffffffff8180e68e: ret 0x4560;
0xffffffff8153e032: ret 0x4562;
0xffffffff824d6bcf: ret 0x4564;
0xffffffff810631ea: ret 0x4566;
0xffffffff823c5808: ret 0x4568;
0xffffffff823b1ab8: ret 0x4569;
0xffffffff823feb59: ret 0x456;
0xffffffff83456784: ret 0x456a;
0xffffffff81baa13a: ret 0x456f;
0xffffffff81415a22: ret 0x4570;
0xffffffff823492c6: ret 0x4571;
0xffffffff81653434: ret 0x4575;
0xffffffff811c1216: ret 0x4576;
0xffffffff82403d16: ret 0x4577;
0xffffffff823f42e3: ret 0x4578;
0xffffffff825cd2ec: ret 0x4579;
0xffffffff824752b9: ret 0x457;
0xffffffff8153e068: ret 0x457a;
0xffffffff8174e476: ret 0x457c;
0xffffffff817fa7d1: ret 0x457e;
0xffffffff815a95f1: ret 0x457f;
0xffffffff82368d4b: ret 0x4580;
0xffffffff81a13d48: ret 0x458b;
0xffffffff823b1abf: ret 0x458c;
0xffffffff8224ee25: ret 0x4593;
0xffffffff8153e100: ret 0x4598;
0xffffffff823b542d: ret 0x459a;
0xffffffff834567b0: ret 0x459b;
0xffffffff83456849: ret 0x459f;
0xffffffff8141862a: ret 0x45;
0xffffffff8347db71: ret 0x45a0;
0xffffffff8252fac6: ret 0x45a1;
0xffffffff817faa1c: ret 0x45a2;
0xffffffff82503bb0: ret 0x45a4;
0xffffffff824a90a2: ret 0x45a6;
0xffffffff822d8afd: ret 0x45a8;
0xffffffff8222e4e2: ret 0x45ab;
0xffffffff818bb626: ret 0x45ac;
0xffffffff818bb6d7: ret 0x45ad;
0xffffffff81415af2: ret 0x45b0;
0xffffffff818c0a49: ret 0x45b1;
0xffffffff818c0a63: ret 0x45b2;
0xffffffff834568b0: ret 0x45b4;
0xffffffff817b7631: ret 0x45b8;
0xffffffff83456910: ret 0x45c0;
0xffffffff8224545d: ret 0x45c1;
0xffffffff8251830f: ret 0x45c6;
0xffffffff818c0a0b: ret 0x45c8;
0xffffffff818c09b1: ret 0x45c9;
0xffffffff8254b4bd: ret 0x45c;
0xffffffff818c241b: ret 0x45ca;
0xffffffff818c2435: ret 0x45cb;
0xffffffff818c38c1: ret 0x45cc;
0xffffffff818c38f9: ret 0x45cd;
0xffffffff818c3893: ret 0x45ce;
0xffffffff83489aeb: ret 0x45cf;
0xffffffff8174e5c5: ret 0x45d0;
0xffffffff818c3abb: ret 0x45d1;
0xffffffff818c3b10: ret 0x45d2;
0xffffffff818c3b6c: ret 0x45d3;
0xffffffff82394861: ret 0x45d4;
0xffffffff818c6bea: ret 0x45d9;
0xffffffff818c6c04: ret 0x45da;
0xffffffff824bbb9a: ret 0x45db;
0xffffffff817fb513: ret 0x45dd;
0xffffffff82241b98: ret 0x45e2;
0xffffffff8253f159: ret 0x45e3;
0xffffffff8245fd63: ret 0x45e4;
0xffffffff8102f9e5: ret 0x45e8;
0xffffffff81afe3c5: ret 0x45eb;
0xffffffff81415d34: ret 0x45f0;
0xffffffff8126be2a: ret 0x45f5;
0xffffffff81b05ffa: ret 0x45f6;
0xffffffff813a3126: ret 0x45f8;
0xffffffff8155b239: ret 0x45fb;
0xffffffff816cb997: ret 0x45fc;
0xffffffff8163a966: ret 0x45fd;
0xffffffff81054bb6: ret 0x45ff;
0xffffffff812d4575: ret 0x4600;
0xffffffff8255c16a: ret 0x4602;
0xffffffff81859cb3: ret 0x4603;
0xffffffff81c663a5: ret 0x4605;
0xffffffff8254e6f2: ret 0x460c;
0xffffffff81113d58: ret 0x460f;
0xffffffff8153e32b: ret 0x4610;
0xffffffff822e42a7: ret 0x4611;
0xffffffff822e42a6: ret 0x4611;
0xffffffff8165cadc: ret 0x4613;
0xffffffff81b306e2: ret 0x4616;
0xffffffff818c8b9b: ret 0x4619;
0xffffffff825d8ca6: ret 0x461;
0xffffffff818c8bb5: ret 0x461a;
0xffffffff8247cda7: ret 0x461e;
0xffffffff815f64cc: ret 0x4620;
0xffffffff8174e81b: ret 0x4626;
0xffffffff817fad14: ret 0x462c;
0xffffffff82366f7e: ret 0x462f;
0xffffffff8352d1b8: ret 0x4632;
0xffffffff83456a07: ret 0x4635;
0xffffffff82353a7c: ret 0x463a;
0xffffffff8153e377: ret 0x463b;
0xffffffff8245bb2b: ret 0x463c;
0xffffffff822c9ac6: ret 0x463d;
0xffffffff8222b4f6: ret 0x463e;
0xffffffff8240621c: ret 0x463f;
0xffffffff83456a3c: ret 0x4641;
0xffffffff824cb536: ret 0x4644;
0xffffffff824b03e7: ret 0x4646;
0xffffffff824d0b7b: ret 0x464a;
0xffffffff825daeca: ret 0x464d;
0xffffffff82246cae: ret 0x4652;
0xffffffff81692edc: ret 0x4659;
0xffffffff8242459a: ret 0x465b;
0xffffffff81692f72: ret 0x465f;
0xffffffff817fac64: ret 0x4662;
0xffffffff822e0f56: ret 0x4665;
0xffffffff816c8c2d: ret 0x466a;
0xffffffff8222bd31: ret 0x466e;
0xffffffff815f6550: ret 0x4670;
0xffffffff82267957: ret 0x4671;
0xffffffff8183619f: ret 0x4673;
0xffffffff8130cb70: ret 0x4674;
0xffffffff8230b1e6: ret 0x4679;
0xffffffff8132e5ab: ret 0x467;
0xffffffff824e4899: ret 0x467d;
0xffffffff825562e7: ret 0x4688;
0xffffffff81270b26: ret 0x4689;
0xffffffff81913b76: ret 0x468;
0xffffffff824895e7: ret 0x468a;
0xffffffff822c7903: ret 0x468d;
0xffffffff82504123: ret 0x468e;
0xffffffff822aba53: ret 0x4694;
0xffffffff822f01e7: ret 0x4695;
0xffffffff823bab69: ret 0x469c;
0xffffffff8139abca: ret 0x46;
0xffffffff817db967: ret 0x46a0;
0xffffffff83456ace: ret 0x46af;
0xffffffff822fd54e: ret 0x46b3;
0xffffffff83456071: ret 0x46b4;
0xffffffff8223343c: ret 0x46b7;
0xffffffff824f57fe: ret 0x46b9;
0xffffffff83456b38: ret 0x46bd;
0xffffffff815f66dc: ret 0x46c0;
0xffffffff8181dcff: ret 0x46c6;
0xffffffff8247c05d: ret 0x46c7;
0xffffffff83456b6a: ret 0x46ca;
0xffffffff823c6108: ret 0x46cc;
0xffffffff8249df3c: ret 0x46ce;
0xffffffff811c80a6: ret 0x46d0;
0xffffffff817fb87b: ret 0x46d1;
0xffffffff83456b9c: ret 0x46d5;
0xffffffff8253f2eb: ret 0x46d7;
0xffffffff81175f94: ret 0x46d8;
0xffffffff83456bce: ret 0x46e0;
0xffffffff823c35a8: ret 0x46e7;
0xffffffff81add6f4: ret 0x46e8;
0xffffffff811df5b0: ret 0x46eb;
0xffffffff820068e0: ret 0x46f2;
0xffffffff8255208a: ret 0x46f7;
0xffffffff823b8f07: ret 0x46f7;
0xffffffff82268506: ret 0x46f8;
0xffffffff81806b45: ret 0x46f9;
0xffffffff82269068: ret 0x46fa;
0xffffffff8348265d: ret 0x46fc;
0xffffffff8249b86e: ret 0x46fe;
0xffffffff824e35b2: ret 0x4703;
0xffffffff822c5d91: ret 0x4706;
0xffffffff81c2f056: ret 0x470;
0xffffffff817fc6eb: ret 0x470b;
0xffffffff8226e7bf: ret 0x470c;
0xffffffff824c48aa: ret 0x470e;
0xffffffff81276229: ret 0x470f;
0xffffffff817db907: ret 0x4710;
0xffffffff822bb197: ret 0x4712;
0xffffffff8153f3f5: ret 0x4714;
0xffffffff81175eaa: ret 0x4718;
0xffffffff81035375: ret 0x4719;
0xffffffff8230a853: ret 0x471c;
0xffffffff817fc1c0: ret 0x471f;
0xffffffff823bbfbe: ret 0x4722;
0xffffffff82376c42: ret 0x4729;
0xffffffff83485141: ret 0x472;
0xffffffff822de52d: ret 0x472a;
0xffffffff822cfffc: ret 0x472c;
0xffffffff82288351: ret 0x472e;
0xffffffff8252c0d4: ret 0x4732;
0xffffffff8238837f: ret 0x4736;
0xffffffff824a30cc: ret 0x4738;
0xffffffff816e214f: ret 0x4739;
0xffffffff8250c23c: ret 0x473a;
0xffffffff83498c9b: ret 0x473b;
0xffffffff8254bbb9: ret 0x473e;
0xffffffff8252e0ee: ret 0x4744;
0xffffffff8254cd90: ret 0x4747;
0xffffffff81621ff5: ret 0x474;
0xffffffff823cc61c: ret 0x474f;
0xffffffff817db917: ret 0x4750;
0xffffffff82514a63: ret 0x4751;
0xffffffff824d4261: ret 0x4752;
0xffffffff824120ce: ret 0x4755;
0xffffffff8241c3c3: ret 0x4755;
0xffffffff823b0c53: ret 0x4758;
0xffffffff8114a036: ret 0x475;
0xffffffff8224a57e: ret 0x475d;
0xffffffff8155476a: ret 0x4760;
0xffffffff825d5a85: ret 0x4765;
0xffffffff82249ccf: ret 0x4766;
0xffffffff81323da0: ret 0x476;
0xffffffff824d4bee: ret 0x476b;
0xffffffff82280632: ret 0x476e;
0xffffffff83456c88: ret 0x476f;
0xffffffff818a0c18: ret 0x4773;
0xffffffff824c0851: ret 0x4774;
0xffffffff82491812: ret 0x4776;
0xffffffff824a0e75: ret 0x4778;
0xffffffff818911ed: ret 0x477;
0xffffffff815b994e: ret 0x477c;
0xffffffff83450596: ret 0x4788;
0xffffffff81458ae3: ret 0x4789;
0xffffffff81baa196: ret 0x479;
0xffffffff8180756a: ret 0x479b;
0xffffffff8241ba85: ret 0x479e;
0xffffffff815b7c2a: ret 0x47;
0xffffffff8238f0a3: ret 0x47a1;
0xffffffff823177be: ret 0x47a2;
0xffffffff82287589: ret 0x47b3;
0xffffffff8236a029: ret 0x47bd;
0xffffffff824ff1ee: ret 0x47bf;
0xffffffff81a77081: ret 0x47c6;
0xffffffff824b31f7: ret 0x47ca;
0xffffffff82249b01: ret 0x47cb;
0xffffffff8153e991: ret 0x47cd;
0xffffffff824b3c5c: ret 0x47cf;
0xffffffff817db8f7: ret 0x47d0;
0xffffffff8254dbe5: ret 0x47d1;
0xffffffff8348734c: ret 0x47d2;
0xffffffff8254bd90: ret 0x47d5;
0xffffffff822efecd: ret 0x47d8;
0xffffffff815b993a: ret 0x47d;
0xffffffff8153eab6: ret 0x47dd;
0xffffffff817db977: ret 0x47e0;
0xffffffff81755213: ret 0x47e8;
0xffffffff81590793: ret 0x47e9;
0xffffffff81233cba: ret 0x47eb;
0xffffffff81274aea: ret 0x47f0;
0xffffffff8223cdcf: ret 0x47f3;
0xffffffff82265bc8: ret 0x47f4;
0xffffffff83456d51: ret 0x47f9;
0xffffffff822a36bb: ret 0x47fd;
0xffffffff81038a28: ret 0x4800;
0xffffffff81a5376d: ret 0x4801;
0xffffffff81014a39: ret 0x4801;
0xffffffff81019f6a: ret 0x4802;
0xffffffff81127ae6: ret 0x4803;
0xffffffff81053bbf: ret 0x4804;
0xffffffff813ef378: ret 0x4805;
0xffffffff814b2ad7: ret 0x4806;
0xffffffff8137d971: ret 0x4807;
0xffffffff81a30fc4: ret 0x4808;
0xffffffff8101632a: ret 0x4808;
0xffffffff81c18623: ret 0x480;
0xffffffff81796c93: ret 0x480a;
0xffffffff8232b153: ret 0x480b;
0xffffffff810005cb: ret 0x480c;
0xffffffff816b3c4a: ret 0x480d;
0xffffffff8157123b: ret 0x480e;
0xffffffff83456db5: ret 0x480f;
0xffffffff8106b075: ret 0x4810;
0xffffffff81045187: ret 0x4811;
0xffffffff8171f0fb: ret 0x4812;
0xffffffff810e5fec: ret 0x4814;
0xffffffff816b3b95: ret 0x4815;
0xffffffff81888bf9: ret 0x4816;
0xffffffff810441aa: ret 0x4818;
0xffffffff8165de95: ret 0x4819;
0xffffffff823a6e88: ret 0x481;
0xffffffff8188e4bb: ret 0x481a;
0xffffffff8188e4ba: ret 0x481a;
0xffffffff816d2033: ret 0x481b;
0xffffffff8115b8a8: ret 0x481c;
0xffffffff8126b27c: ret 0x481e;
0xffffffff8115ae17: ret 0x481f;
0xffffffff811056fb: ret 0x4820;
0xffffffff816cb49b: ret 0x4822;
0xffffffff8154036e: ret 0x4823;
0xffffffff8165de81: ret 0x4824;
0xffffffff814e9c26: ret 0x4827;
0xffffffff810079bb: ret 0x4828;
0xffffffff83456e19: ret 0x4829;
0xffffffff8142604f: ret 0x482c;
0xffffffff8165de45: ret 0x482e;
0xffffffff81654f3a: ret 0x482f;
0xffffffff810bed19: ret 0x4830;
0xffffffff8239b238: ret 0x4831;
0xffffffff818d950b: ret 0x4833;
0xffffffff8348b37d: ret 0x4835;
0xffffffff818cc15e: ret 0x4836;
0xffffffff82242030: ret 0x4837;
0xffffffff818cc178: ret 0x4837;
0xffffffff81154d12: ret 0x4838;
0xffffffff824e1d76: ret 0x4839;
0xffffffff812887c2: ret 0x483e;
0xffffffff810c0e71: ret 0x483f;
0xffffffff8100ee01: ret 0x4840;
0xffffffff83456e7d: ret 0x4843;
0xffffffff8132ee99: ret 0x4845;
0xffffffff8104544d: ret 0x4848;
0xffffffff8252ff6c: ret 0x484b;
0xffffffff816ab9eb: ret 0x484c;
0xffffffff822aa383: ret 0x484e;
0xffffffff83456eaf: ret 0x484f;
0xffffffff8132184b: ret 0x4850;
0xffffffff82381aea: ret 0x4851;
0xffffffff8174fa60: ret 0x4853;
0xffffffff81847e59: ret 0x4854;
0xffffffff8136593f: ret 0x4858;
0xffffffff81540263: ret 0x485b;
0xffffffff82449844: ret 0x485d;
0xffffffff815e2a15: ret 0x485f;
0xffffffff817db957: ret 0x4860;
0xffffffff81969675: ret 0x4863;
0xffffffff81001a37: ret 0x4864;
0xffffffff811ab769: ret 0x4865;
0xffffffff81066b0d: ret 0x4866;
0xffffffff823d77db: ret 0x4867;
0xffffffff8126ad09: ret 0x4868;
0xffffffff8254a214: ret 0x4869;
0xffffffff82002e44: ret 0x486;
0xffffffff82284f46: ret 0x486d;
0xffffffff8112246a: ret 0x4870;
0xffffffff817aad34: ret 0x4878;
0xffffffff8238ad9b: ret 0x4879;
0xffffffff81b0322a: ret 0x487d;
0xffffffff817fb18a: ret 0x487f;
0xffffffff81056404: ret 0x4880;
0xffffffff81175038: ret 0x4881;
0xffffffff8118e2e2: ret 0x4882;
0xffffffff834444db: ret 0x4883;
0xffffffff8234d94a: ret 0x4887;
0xffffffff818cd93b: ret 0x4888;
0xffffffff818cd952: ret 0x4889;
0xffffffff813ff5c5: ret 0x488;
0xffffffff81403f37: ret 0x488a;
0xffffffff824ee76a: ret 0x488c;
0xffffffff81b1c01b: ret 0x488d;
0xffffffff8167eb0b: ret 0x4890;
0xffffffff818cf999: ret 0x4891;
0xffffffff825080ff: ret 0x4893;
0xffffffff81c8322a: ret 0x4895;
0xffffffff81471d7f: ret 0x4896;
0xffffffff8174fc13: ret 0x4898;
0xffffffff8146511c: ret 0x489;
0xffffffff824de968: ret 0x489a;
0xffffffff819d45a0: ret 0x489c;
0xffffffff8233175e: ret 0x489e;
0xffffffff817e9eec: ret 0x48;
0xffffffff812df01b: ret 0x48a0;
0xffffffff818d3ffb: ret 0x48a1;
0xffffffff818d57d2: ret 0x48a2;
0xffffffff818d57ec: ret 0x48a3;
0xffffffff818d5803: ret 0x48a4;
0xffffffff818d6513: ret 0x48a5;
0xffffffff818d6f8a: ret 0x48a6;
0xffffffff818d6fa4: ret 0x48a7;
0xffffffff818d6fbb: ret 0x48a8;
0xffffffff818d7a19: ret 0x48a9;
0xffffffff8124062a: ret 0x48ad;
0xffffffff814e5497: ret 0x48b0;
0xffffffff8169594a: ret 0x48b8;
0xffffffff81716f9b: ret 0x48b9;
0xffffffff810b1a5c: ret 0x48b;
0xffffffff8252a120: ret 0x48bd;
0xffffffff811ae974: ret 0x48c0;
0xffffffff8115c81c: ret 0x48c3;
0xffffffff8138527d: ret 0x48c4;
0xffffffff81c6bfad: ret 0x48c6;
0xffffffff816a518b: ret 0x48c8;
0xffffffff8222ccf8: ret 0x48ce;
0xffffffff81920753: ret 0x48d0;
0xffffffff82415f32: ret 0x48d5;
0xffffffff8223b8e0: ret 0x48d7;
0xffffffff818dd2b9: ret 0x48d8;
0xffffffff818dbb7f: ret 0x48d9;
0xffffffff8101935e: ret 0x48d;
0xffffffff818dbb99: ret 0x48da;
0xffffffff818dbbb3: ret 0x48db;
0xffffffff818dbbcd: ret 0x48dc;
0xffffffff822757da: ret 0x48dd;
0xffffffff8125a46c: ret 0x48e0;
0xffffffff82226f73: ret 0x48e1;
0xffffffff8110d77a: ret 0x48e8;
0xffffffff81238229: ret 0x48e9;
0xffffffff8224bdbc: ret 0x48e;
0xffffffff818ddd2d: ret 0x48ea;
0xffffffff8348bc66: ret 0x48eb;
0xffffffff810cdbe8: ret 0x48f0;
0xffffffff810b7439: ret 0x48f3;
0xffffffff8136ed8d: ret 0x48f4;
0xffffffff8154034d: ret 0x48f5;
0xffffffff816961f2: ret 0x48f6;
0xffffffff822fdfaa: ret 0x48f7;
0xffffffff813a306d: ret 0x48f8;
0xffffffff816c012a: ret 0x48f9;
0xffffffff814b2af2: ret 0x48fa;
0xffffffff8114b2a1: ret 0x48fc;
0xffffffff816d010b: ret 0x48fd;
0xffffffff81019f40: ret 0x48fe;
0xffffffff816657c6: ret 0x48ff;
0xffffffff8102a0ba: ret 0x48ff;
0xffffffff8150af35: ret 0x48ff;
0xffffffff8103ab6d: ret 0x4900;
0xffffffff8100188d: ret 0x4901;
0xffffffff810b1eba: ret 0x4902;
0xffffffff81064cc2: ret 0x4904;
0xffffffff81026e34: ret 0x4905;
0xffffffff81641b4c: ret 0x4907;
0xffffffff8172bad1: ret 0x4908;
0xffffffff81064ca9: ret 0x4908;
0xffffffff822f779c: ret 0x490a;
0xffffffff822a45b6: ret 0x490b;
0xffffffff8162611f: ret 0x490c;
0xffffffff816b3c16: ret 0x490d;
0xffffffff81a80dee: ret 0x490f;
0xffffffff81062f86: ret 0x4910;
0xffffffff816b3dac: ret 0x4911;
0xffffffff813cb8fb: ret 0x4913;
0xffffffff8103cde0: ret 0x4914;
0xffffffff822a011a: ret 0x4915;
0xffffffff834757c0: ret 0x4916;
0xffffffff823c6469: ret 0x4917;
0xffffffff81248df1: ret 0x4918;
0xffffffff823eea86: ret 0x4919;
0xffffffff8132e1d4: ret 0x491c;
0xffffffff8165df04: ret 0x491e;
0xffffffff81105cbb: ret 0x4920;
0xffffffff81a25a53: ret 0x4922;
0xffffffff8165df79: ret 0x4924;
0xffffffff823b3766: ret 0x4925;
0xffffffff823b3767: ret 0x4925;
0xffffffff824d0e78: ret 0x492;
0xffffffff83456fd7: ret 0x492e;
0xffffffff817505a9: ret 0x492f;
0xffffffff81b73e3a: ret 0x4930;
0xffffffff824e2ae0: ret 0x4936;
0xffffffff825702d8: ret 0x4937;
0xffffffff811d96bb: ret 0x4938;
0xffffffff828b3cf4: ret 0x493;
0xffffffff83493bbb: ret 0x493c;
0xffffffff8244c4e0: ret 0x493d;
0xffffffff823af7b0: ret 0x493e;
0xffffffff816b4323: ret 0x493f;
0xffffffff81044927: ret 0x4940;
0xffffffff815403a0: ret 0x4943;
0xffffffff826d13f6: ret 0x4944;
0xffffffff823c8e1d: ret 0x4947;
0xffffffff811daa50: ret 0x4948;
0xffffffff822aea98: ret 0x4949;
0xffffffff81906b38: ret 0x494b;
0xffffffff817e1356: ret 0x494d;
0xffffffff826d1830: ret 0x494e;
0xffffffff8101bdee: ret 0x4950;
0xffffffff8234e742: ret 0x4951;
0xffffffff826d1312: ret 0x4953;
0xffffffff812848a4: ret 0x4958;
0xffffffff83456341: ret 0x495b;
0xffffffff8226c2e0: ret 0x4962;
0xffffffff834a43ae: ret 0x4968;
0xffffffff81758a46: ret 0x4969;
0xffffffff8173cffc: ret 0x4974;
0xffffffff8345d1ec: ret 0x4975;
0xffffffff811843bd: ret 0x4978;
0xffffffff825272ef: ret 0x497e;
0xffffffff81b41a04: ret 0x497f;
0xffffffff810258c5: ret 0x4980;
0xffffffff81c23dec: ret 0x4981;
0xffffffff82515a39: ret 0x4983;
0xffffffff828b4590: ret 0x498;
0xffffffff8136ee53: ret 0x498a;
0xffffffff81477051: ret 0x498b;
0xffffffff8348c026: ret 0x4990;
0xffffffff818e4a1c: ret 0x4991;
0xffffffff818e4a39: ret 0x4992;
0xffffffff824bcc91: ret 0x4998;
0xffffffff8154079b: ret 0x4999;
0xffffffff818e4f63: ret 0x499c;
0xffffffff818e4f7d: ret 0x499d;
0xffffffff818e4f97: ret 0x499e;
0xffffffff818e4fb1: ret 0x499f;
0xffffffff810abe51: ret 0x49;
0xffffffff82525cdf: ret 0x49a2;
0xffffffff822ceeaa: ret 0x49a6;
0xffffffff834570cd: ret 0x49a8;
0xffffffff824df3f9: ret 0x49ac;
0xffffffff8355eac0: ret 0x49ad;
0xffffffff81393893: ret 0x49b0;
0xffffffff83457102: ret 0x49b4;
0xffffffff82344acf: ret 0x49b5;
0xffffffff82238cd1: ret 0x49b9;
0xffffffff81733cf6: ret 0x49b;
0xffffffff83457134: ret 0x49ba;
0xffffffff810b6c87: ret 0x49c0;
0xffffffff819f62f9: ret 0x49c3;
0xffffffff835b2798: ret 0x49cb;
0xffffffff82335ccd: ret 0x49ce;
0xffffffff81a60332: ret 0x49d0;
0xffffffff82517003: ret 0x49d7;
0xffffffff8251618c: ret 0x49d;
0xffffffff823b20c4: ret 0x49dc;
0xffffffff8120e801: ret 0x49e0;
0xffffffff8181a7a4: ret 0x49e2;
0xffffffff811633f1: ret 0x49e8;
0xffffffff824b1a22: ret 0x49e9;
0xffffffff8242a626: ret 0x49e;
0xffffffff81526f2c: ret 0x49eb;
0xffffffff813cee2e: ret 0x49ec;
0xffffffff810de9ef: ret 0x49f0;
0xffffffff81380340: ret 0x49f4;
0xffffffff8244127d: ret 0x49f7;
0xffffffff816c0764: ret 0x49f8;
0xffffffff81540aba: ret 0x49fb;
0xffffffff819cb618: ret 0x49fc;
0xffffffff8342e4d0: ret 0x49fd;
0xffffffff81a52176: ret 0x49fe;
0xffffffff81665936: ret 0x49ff;
0xffffffff8124e691: ret 0x49ff;
0xffffffff815f83e5: ret 0x49ff;
0xffffffff82244e22: ret 0x4a01;
0xffffffff82006d30: ret 0x4a03;
0xffffffff8254a7b6: ret 0x4a04;
0xffffffff8185ee4e: ret 0x4a08;
0xffffffff824e1e4c: ret 0x4a10;
0xffffffff822bf89b: ret 0x4a12;
0xffffffff8244a2fa: ret 0x4a1;
0xffffffff82535fca: ret 0x4a1c;
0xffffffff81a49589: ret 0x4a20;
0xffffffff81540ac5: ret 0x4a22;
0xffffffff824df173: ret 0x4a25;
0xffffffff81371f0a: ret 0x4a2;
0xffffffff822a41c8: ret 0x4a2b;
0xffffffff8255cdd5: ret 0x4a30;
0xffffffff823a7835: ret 0x4a36;
0xffffffff822a1bc0: ret 0x4a39;
0xffffffff82232988: ret 0x4a3;
0xffffffff81343dc3: ret 0x4a3b;
0xffffffff82350978: ret 0x4a44;
0xffffffff811d9952: ret 0x4a48;
0xffffffff824d5a4b: ret 0x4a49;
0xffffffff8116f842: ret 0x4a4a;
0xffffffff81540ad7: ret 0x4a52;
0xffffffff8243ad57: ret 0x4a53;
0xffffffff8243ad54: ret 0x4a53;
0xffffffff81114235: ret 0x4a54;
0xffffffff82291f6b: ret 0x4a55;
0xffffffff825218c8: ret 0x4a56;
0xffffffff82480090: ret 0x4a5;
0xffffffff82406003: ret 0x4a5b;
0xffffffff81341582: ret 0x4a5f;
0xffffffff824ffb0e: ret 0x4a63;
0xffffffff824c57a7: ret 0x4a64;
0xffffffff8242ff77: ret 0x4a6c;
0xffffffff82416087: ret 0x4a6e;
0xffffffff82546a64: ret 0x4a6f;
0xffffffff813227bb: ret 0x4a70;
0xffffffff81565c99: ret 0x4a74;
0xffffffff811b1296: ret 0x4a75;
0xffffffff818f45f4: ret 0x4a76;
0xffffffff8238daaa: ret 0x4a77;
0xffffffff8251af89: ret 0x4a7;
0xffffffff82429b77: ret 0x4a7b;
0xffffffff81883d32: ret 0x4a80;
0xffffffff817b59ea: ret 0x4a83;
0xffffffff822d1a87: ret 0x4a86;
0xffffffff8157fd76: ret 0x4a8d;
0xffffffff8231d022: ret 0x4a8e;
0xffffffff8244c5bb: ret 0x4a92;
0xffffffff822e2381: ret 0x4a96;
0xffffffff835a5f7a: ret 0x4a98;
0xffffffff818e93fe: ret 0x4a9c;
0xffffffff8122e602: ret 0x4a;
0xffffffff824757a3: ret 0x4aa3;
0xffffffff818e8e77: ret 0x4aa5;
0xffffffff818e93cf: ret 0x4aa6;
0xffffffff8348c3ff: ret 0x4aa7;
0xffffffff81540a1c: ret 0x4aac;
0xffffffff8161f9c6: ret 0x4abb;
0xffffffff82374f67: ret 0x4ac3;
0xffffffff818ec6e1: ret 0x4ac4;
0xffffffff82488d49: ret 0x4ac5;
0xffffffff822e048c: ret 0x4ac7;
0xffffffff8253b95c: ret 0x4acf;
0xffffffff82289137: ret 0x4ad0;
0xffffffff818ed80a: ret 0x4ad1;
0xffffffff82257005: ret 0x4ad9;
0xffffffff822660f5: ret 0x4ada;
0xffffffff818f072e: ret 0x4adc;
0xffffffff818f37c9: ret 0x4add;
0xffffffff823de8ac: ret 0x4ade;
0xffffffff8223f433: ret 0x4adf;
0xffffffff818f9c86: ret 0x4ae0;
0xffffffff819596ba: ret 0x4ae2;
0xffffffff824c9ea6: ret 0x4ae4;
0xffffffff817d13da: ret 0x4ae5;
0xffffffff816f7c50: ret 0x4ae8;
0xffffffff8168a842: ret 0x4ae9;
0xffffffff824fff31: ret 0x4ae;
0xffffffff82231ffb: ret 0x4aec;
0xffffffff8238711f: ret 0x4aed;
0xffffffff81540a31: ret 0x4aef;
0xffffffff818f54c5: ret 0x4af0;
0xffffffff8120d4fa: ret 0x4af1;
0xffffffff825d7cc6: ret 0x4af3;
0xffffffff8240a4f1: ret 0x4af8;
0xffffffff823db11e: ret 0x4af9;
0xffffffff8246aa30: ret 0x4afe;
0xffffffff81056240: ret 0x4b00;
0xffffffff818ff8c4: ret 0x4b01;
0xffffffff817512cf: ret 0x4b03;
0xffffffff823d187e: ret 0x4b06;
0xffffffff816a08f3: ret 0x4b08;
0xffffffff82358fd3: ret 0x4b0;
0xffffffff813ea66c: ret 0x4b0e;
0xffffffff813ea635: ret 0x4b16;
0xffffffff817b662c: ret 0x4b18;
0xffffffff81a4a6fc: ret 0x4b20;
0xffffffff82506219: ret 0x4b29;
0xffffffff828b6bec: ret 0x4b2;
0xffffffff811d9450: ret 0x4b30;
0xffffffff81540a46: ret 0x4b36;
0xffffffff823b80f8: ret 0x4b37;
0xffffffff81c5664a: ret 0x4b3b;
0xffffffff8187172d: ret 0x4b40;
0xffffffff822fb54b: ret 0x4b42;
0xffffffff82323c70: ret 0x4b44;
0xffffffff811d9379: ret 0x4b48;
0xffffffff81750c94: ret 0x4b49;
0xffffffff817b5dda: ret 0x4b4d;
0xffffffff822e72aa: ret 0x4b4f;
0xffffffff817aadda: ret 0x4b51;
0xffffffff822cef03: ret 0x4b53;
0xffffffff823ca1a7: ret 0x4b57;
0xffffffff8247ad95: ret 0x4b5b;
0xffffffff82543829: ret 0x4b5d;
0xffffffff823cad2b: ret 0x4b5f;
0xffffffff81750caf: ret 0x4b61;
0xffffffff82405772: ret 0x4b62;
0xffffffff82252927: ret 0x4b66;
0xffffffff82560cca: ret 0x4b69;
0xffffffff822773c7: ret 0x4b6f;
0xffffffff813228b0: ret 0x4b70;
0xffffffff81907104: ret 0x4b71;
0xffffffff813f56c9: ret 0x4b72;
0xffffffff81907138: ret 0x4b73;
0xffffffff8102949d: ret 0x4b74;
0xffffffff819071a7: ret 0x4b75;
0xffffffff81197d94: ret 0x4b76;
0xffffffff819071db: ret 0x4b77;
0xffffffff82246195: ret 0x4b7d;
0xffffffff823e5e27: ret 0x4b7f;
0xffffffff823d9552: ret 0x4b84;
0xffffffff8191bd60: ret 0x4b86;
0xffffffff8191be8e: ret 0x4b87;
0xffffffff8191be97: ret 0x4b88;
0xffffffff8191bea0: ret 0x4b89;
0xffffffff8191bea9: ret 0x4b8a;
0xffffffff81751998: ret 0x4b8b;
0xffffffff822d2ab0: ret 0x4b8c;
0xffffffff8230e0e1: ret 0x4b8e;
0xffffffff824839ef: ret 0x4b90;
0xffffffff81751887: ret 0x4b92;
0xffffffff811ee215: ret 0x4b98;
0xffffffff8102fd04: ret 0x4b9;
0xffffffff82380721: ret 0x4b9e;
0xffffffff81c276ba: ret 0x4b9f;
0xffffffff81203adf: ret 0x4b;
0xffffffff82253188: ret 0x4ba4;
0xffffffff828b76b0: ret 0x4ba;
0xffffffff81540c17: ret 0x4baa;
0xffffffff82344244: ret 0x4baf;
0xffffffff81456d2f: ret 0x4bb0;
0xffffffff824ac6f9: ret 0x4bb1;
0xffffffff8190913a: ret 0x4bb2;
0xffffffff8191201e: ret 0x4bb3;
0xffffffff8253e54e: ret 0x4bb;
0xffffffff8224afd8: ret 0x4bbc;
0xffffffff824ced41: ret 0x4bc8;
0xffffffff822eb238: ret 0x4bcc;
0xffffffff81914159: ret 0x4bd0;
0xffffffff81914173: ret 0x4bd1;
0xffffffff8191418d: ret 0x4bd2;
0xffffffff819141fd: ret 0x4bd3;
0xffffffff81914221: ret 0x4bd4;
0xffffffff8191423b: ret 0x4bd5;
0xffffffff819155f0: ret 0x4bd6;
0xffffffff8192580c: ret 0x4bdc;
0xffffffff824bf699: ret 0x4bde;
0xffffffff81916843: ret 0x4be0;
0xffffffff81209fff: ret 0x4be8;
0xffffffff810595d0: ret 0x4be;
0xffffffff815409e9: ret 0x4bec;
0xffffffff82327586: ret 0x4bef;
0xffffffff823f5728: ret 0x4bf0;
0xffffffff8236a896: ret 0x4bf2;
0xffffffff82558fb2: ret 0x4bf3;
0xffffffff8247b4c5: ret 0x4bf4;
0xffffffff8122f817: ret 0x4bf5;
0xffffffff82362630: ret 0x4bf8;
0xffffffff81c4edef: ret 0x4bf9;
0xffffffff8122f7a4: ret 0x4bfb;
0xffffffff824670e7: ret 0x4bfc;
0xffffffff835a8ead: ret 0x4bfd;
0xffffffff810461f7: ret 0x4c00;
0xffffffff8110bb94: ret 0x4c01;
0xffffffff810b1bb9: ret 0x4c02;
0xffffffff819278f5: ret 0x4c03;
0xffffffff810277a7: ret 0x4c04;
0xffffffff81927934: ret 0x4c05;
0xffffffff81927951: ret 0x4c06;
0xffffffff8111e16f: ret 0x4c08;
0xffffffff81bd3bfc: ret 0x4c08;
0xffffffff818154b0: ret 0x4c0;
0xffffffff8231ad7f: ret 0x4c0a;
0xffffffff8239e6b8: ret 0x4c0b;
0xffffffff816260a9: ret 0x4c0c;
0xffffffff816b3d56: ret 0x4c0d;
0xffffffff81232a3a: ret 0x4c0e;
0xffffffff81698e2d: ret 0x4c0f;
0xffffffff811753d5: ret 0x4c10;
0xffffffff822dac85: ret 0x4c11;
0xffffffff8344f7ac: ret 0x4c12;
0xffffffff819d1466: ret 0x4c14;
0xffffffff81c66b13: ret 0x4c15;
0xffffffff81121136: ret 0x4c18;
0xffffffff81b2eb25: ret 0x4c1d;
0xffffffff817a8cda: ret 0x4c1e;
0xffffffff811ace84: ret 0x4c20;
0xffffffff8234cca7: ret 0x4c23;
0xffffffff8165dff8: ret 0x4c24;
0xffffffff816935d7: ret 0x4c25;
0xffffffff8153a66e: ret 0x4c26;
0xffffffff81887452: ret 0x4c28;
0xffffffff8230d851: ret 0x4c2d;
0xffffffff8165dec1: ret 0x4c2e;
0xffffffff8110b5c6: ret 0x4c2f;
0xffffffff814e217c: ret 0x4c30;
0xffffffff8192ad21: ret 0x4c31;
0xffffffff8192ad38: ret 0x4c32;
0xffffffff8192ad52: ret 0x4c33;
0xffffffff8192adb5: ret 0x4c34;
0xffffffff8192ae22: ret 0x4c35;
0xffffffff8192ae6d: ret 0x4c36;
0xffffffff8192af00: ret 0x4c37;
0xffffffff811d43a1: ret 0x4c38;
0xffffffff8192ae91: ret 0x4c39;
0xffffffff81541041: ret 0x4c3b;
0xffffffff8159d13f: ret 0x4c40;
0xffffffff82452e3e: ret 0x4c41;
0xffffffff824bef88: ret 0x4c42;
0xffffffff81699703: ret 0x4c44;
0xffffffff81045932: ret 0x4c48;
0xffffffff823cb867: ret 0x4c49;
0xffffffff82412a6a: ret 0x4c4f;
0xffffffff81bfce0a: ret 0x4c57;
0xffffffff823791cb: ret 0x4c5b;
0xffffffff82291d66: ret 0x4c60;
0xffffffff81bfc30a: ret 0x4c62;
0xffffffff819f3982: ret 0x4c65;
0xffffffff8234da13: ret 0x4c67;
0xffffffff811d37cc: ret 0x4c68;
0xffffffff813f5e7a: ret 0x4c69;
0xffffffff81ba331f: ret 0x4c6c;
0xffffffff811fbc05: ret 0x4c70;
0xffffffff822ab334: ret 0x4c72;
0xffffffff81756dd7: ret 0x4c74;
0xffffffff815410ba: ret 0x4c76;
0xffffffff818ff288: ret 0x4c7;
0xffffffff8234f1d6: ret 0x4c7a;
0xffffffff81c23b31: ret 0x4c81;
0xffffffff823517d0: ret 0x4c83;
0xffffffff815a5b35: ret 0x4c89;
0xffffffff8165cdab: ret 0x4c8a;
0xffffffff811bb83b: ret 0x4c8b;
0xffffffff8232780f: ret 0x4c8c;
0xffffffff816bbeda: ret 0x4c8d;
0xffffffff825604a3: ret 0x4c96;
0xffffffff81401a69: ret 0x4c98;
0xffffffff81401a83: ret 0x4c99;
0xffffffff81401abd: ret 0x4c9a;
0xffffffff8242013c: ret 0x4c9c;
0xffffffff82328e1b: ret 0x4c9d;
0xffffffff828c7138: ret 0x4c;
0xffffffff81456df7: ret 0x4ca0;
0xffffffff817a07da: ret 0x4ca3;
0xffffffff82343910: ret 0x4ca5;
0xffffffff8235bedc: ret 0x4ca8;
0xffffffff825266c3: ret 0x4cab;
0xffffffff8252612a: ret 0x4cac;
0xffffffff8253d92b: ret 0x4cae;
0xffffffff8172a4ec: ret 0x4cb0;
0xffffffff824556b2: ret 0x4cb3;
0xffffffff8231cdbc: ret 0x4cb7;
0xffffffff82487bfe: ret 0x4cb9;
0xffffffff823e96cd: ret 0x4cbc;
0xffffffff8228097d: ret 0x4cbe;
0xffffffff811b7ab7: ret 0x4cc0;
0xffffffff81541098: ret 0x4cc2;
0xffffffff817aa653: ret 0x4cc3;
0xffffffff81877718: ret 0x4cd0;
0xffffffff822a82e9: ret 0x4cdd;
0xffffffff819ef913: ret 0x4ce0;
0xffffffff8252abdc: ret 0x4ce3;
0xffffffff82560b5a: ret 0x4ce4;
0xffffffff811a448e: ret 0x4ce8;
0xffffffff81144e1a: ret 0x4ce9;
0xffffffff8136f0ba: ret 0x4ce;
0xffffffff824deed6: ret 0x4cea;
0xffffffff82546c5c: ret 0x4ceb;
0xffffffff8186dd29: ret 0x4cec;
0xffffffff8140654f: ret 0x4cf0;
0xffffffff814064e8: ret 0x4cf1;
0xffffffff81928214: ret 0x4cf3;
0xffffffff824b7a23: ret 0x4cf4;
0xffffffff811acf58: ret 0x4cf8;
0xffffffff8239a383: ret 0x4cf;
0xffffffff813e86cd: ret 0x4cfc;
0xffffffff813e877d: ret 0x4cfe;
0xffffffff8104b6f7: ret 0x4cff;
0xffffffff8104d7fa: ret 0x4d00;
0xffffffff81266405: ret 0x4d01;
0xffffffff816d485a: ret 0x4d02;
0xffffffff810d8cf6: ret 0x4d04;
0xffffffff810fccd2: ret 0x4d05;
0xffffffff810163ac: ret 0x4d08;
0xffffffff8243f2cd: ret 0x4d0;
0xffffffff823499e6: ret 0x4d0a;
0xffffffff8140b801: ret 0x4d0c;
0xffffffff81681276: ret 0x4d10;
0xffffffff813d0cf1: ret 0x4d14;
0xffffffff81c67b8a: ret 0x4d15;
0xffffffff82453b18: ret 0x4d16;
0xffffffff81ac1706: ret 0x4d18;
0xffffffff82311a00: ret 0x4d1;
0xffffffff8245a615: ret 0x4d1a;
0xffffffff81150d33: ret 0x4d20;
0xffffffff823ab0ab: ret 0x4d22;
0xffffffff823ab0ac: ret 0x4d22;
0xffffffff828b9a9c: ret 0x4d2;
0xffffffff82296516: ret 0x4d2b;
0xffffffff81a69972: ret 0x4d30;
0xffffffff822cd148: ret 0x4d30;
0xffffffff822df5c0: ret 0x4d35;
0xffffffff82325447: ret 0x4d36;
0xffffffff8234e76b: ret 0x4d39;
0xffffffff8127edcd: ret 0x4d40;
0xffffffff82520451: ret 0x4d47;
0xffffffff824d0c2f: ret 0x4d4b;
0xffffffff822912a2: ret 0x4d4d;
0xffffffff811f632a: ret 0x4d50;
0xffffffff826d174a: ret 0x4d54;
0xffffffff81237172: ret 0x4d58;
0xffffffff8235d456: ret 0x4d5d;
0xffffffff822df860: ret 0x4d5e;
0xffffffff82339454: ret 0x4d61;
0xffffffff824d8cd3: ret 0x4d65;
0xffffffff81237196: ret 0x4d66;
0xffffffff82254788: ret 0x4d6a;
0xffffffff824a2556: ret 0x4d6b;
0xffffffff812a212c: ret 0x4d6e;
0xffffffff81322ab8: ret 0x4d70;
0xffffffff8132cd87: ret 0x4d73;
0xffffffff818f5aef: ret 0x4d74;
0xffffffff8153e208: ret 0x4d77;
0xffffffff81b1ad0a: ret 0x4d79;
0xffffffff812371ba: ret 0x4d7c;
0xffffffff824d07b7: ret 0x4d7f;
0xffffffff81c238bd: ret 0x4d81;
0xffffffff8225d421: ret 0x4d82;
0xffffffff812a2154: ret 0x4d84;
0xffffffff824b6f84: ret 0x4d87;
0xffffffff82394cff: ret 0x4d8f;
0xffffffff812371de: ret 0x4d90;
0xffffffff812a217c: ret 0x4d98;
0xffffffff8230a0d7: ret 0x4d9a;
0xffffffff8113867a: ret 0x4d9e;
0xffffffff822a9b33: ret 0x4da1;
0xffffffff8235e085: ret 0x4da4;
0xffffffff8235e086: ret 0x4da4;
0xffffffff81237202: ret 0x4da6;
0xffffffff812a21a4: ret 0x4dae;
0xffffffff82395f8a: ret 0x4db0;
0xffffffff823711e8: ret 0x4db2;
0xffffffff822d5809: ret 0x4db7;
0xffffffff811369b2: ret 0x4db8;
0xffffffff81237226: ret 0x4dba;
0xffffffff815414e9: ret 0x4dbb;
0xffffffff8247323a: ret 0x4dbf;
0xffffffff822e25f0: ret 0x4dc0;
0xffffffff8256e5db: ret 0x4dc1;
0xffffffff812a21cc: ret 0x4dc2;
0xffffffff824c59b3: ret 0x4dc9;
0xffffffff828ba808: ret 0x4dc;
0xffffffff823a4151: ret 0x4dcc;
0xffffffff8123724a: ret 0x4dce;
0xffffffff81134d9a: ret 0x4dd4;
0xffffffff8342a897: ret 0x4dd7;
0xffffffff810ef70d: ret 0x4dda;
0xffffffff82371ab0: ret 0x4ddf;
0xffffffff824c3fe6: ret 0x4de0;
0xffffffff8123726e: ret 0x4de4;
0xffffffff81032c4d: ret 0x4de8;
0xffffffff8252e391: ret 0x4de9;
0xffffffff81bf12c9: ret 0x4deb;
0xffffffff81237292: ret 0x4ded;
0xffffffff823a9ae4: ret 0x4df1;
0xffffffff82297e04: ret 0x4df2;
0xffffffff8248472c: ret 0x4df3;
0xffffffff819a9dd4: ret 0x4df8;
0xffffffff8235c08c: ret 0x4df9;
0xffffffff822382c1: ret 0x4df;
0xffffffff83455085: ret 0x4dfe;
0xffffffff812b8099: ret 0x4dff;
0xffffffff812372b6: ret 0x4e01;
0xffffffff816a652e: ret 0x4e03;
0xffffffff810ec8e2: ret 0x4e08;
0xffffffff811b11af: ret 0x4e0;
0xffffffff8236cb06: ret 0x4e0a;
0xffffffff81541566: ret 0x4e0b;
0xffffffff825da0a0: ret 0x4e10;
0xffffffff812372da: ret 0x4e11;
0xffffffff8241a7c8: ret 0x4e15;
0xffffffff8169da14: ret 0x4e19;
0xffffffff812372fe: ret 0x4e1b;
0xffffffff823f9bcd: ret 0x4e23;
0xffffffff81237322: ret 0x4e26;
0xffffffff8255580e: ret 0x4e2b;
0xffffffff8237931a: ret 0x4e2b;
0xffffffff81237346: ret 0x4e32;
0xffffffff82481bb2: ret 0x4e3a;
0xffffffff8123736a: ret 0x4e3b;
0xffffffff82301f35: ret 0x4e43;
0xffffffff8123738e: ret 0x4e45;
0xffffffff8234c859: ret 0x4e46;
0xffffffff823b89cc: ret 0x4e47;
0xffffffff822fc3ad: ret 0x4e4a;
0xffffffff812373b2: ret 0x4e52;
0xffffffff82335298: ret 0x4e54;
0xffffffff824b6daa: ret 0x4e59;
0xffffffff8169da68: ret 0x4e5b;
0xffffffff82291c4d: ret 0x4e5c;
0xffffffff822c072a: ret 0x4e5f;
0xffffffff812373d6: ret 0x4e62;
0xffffffff8349f21a: ret 0x4e65;
0xffffffff824aa3cf: ret 0x4e66;
0xffffffff81c1900e: ret 0x4e67;
0xffffffff82257321: ret 0x4e68;
0xffffffff823ac155: ret 0x4e6;
0xffffffff8255c044: ret 0x4e6a;
0xffffffff8257336f: ret 0x4e6b;
0xffffffff81237151: ret 0x4e6d;
0xffffffff8227153b: ret 0x4e6e;
0xffffffff81322b93: ret 0x4e70;
0xffffffff818e0653: ret 0x4e74;
0xffffffff82476f04: ret 0x4e75;
0xffffffff81967647: ret 0x4e77;
0xffffffff81542c05: ret 0x4e7c;
0xffffffff823988c2: ret 0x4e7d;
0xffffffff824adb5d: ret 0x4e82;
0xffffffff823f2540: ret 0x4e84;
0xffffffff823ac085: ret 0x4e85;
0xffffffff823ac4d2: ret 0x4e86;
0xffffffff81574e93: ret 0x4e89;
0xffffffff8178cff6: ret 0x4e8;
0xffffffff822e9964: ret 0x4e90;
0xffffffff8250bdd7: ret 0x4e91;
0xffffffff835b2b2c: ret 0x4e92;
0xffffffff8248de3d: ret 0x4e94;
0xffffffff8228677d: ret 0x4e96;
0xffffffff811e9b36: ret 0x4e9;
0xffffffff83495c8a: ret 0x4e9a;
0xffffffff82421482: ret 0x4e9b;
0xffffffff8169e57c: ret 0x4e9d;
0xffffffff81574ea9: ret 0x4e9f;
0xffffffff81796e28: ret 0x4e;
0xffffffff8112e042: ret 0x4e;
0xffffffff81542c26: ret 0x4ea0;
0xffffffff82257257: ret 0x4ea3;
0xffffffff8236e87c: ret 0x4ea7;
0xffffffff822b1da1: ret 0x4ea8;
0xffffffff82323358: ret 0x4ea9;
0xffffffff822e2615: ret 0x4eaf;
0xffffffff8181bdd6: ret 0x4eb;
0xffffffff82517616: ret 0x4eba;
0xffffffff81126542: ret 0x4ebb;
0xffffffff8222bb37: ret 0x4ebc;
0xffffffff8242a116: ret 0x4ebd;
0xffffffff82252d9e: ret 0x4ec0;
0xffffffff834560db: ret 0x4ecf;
0xffffffff81542c40: ret 0x4ed1;
0xffffffff8245553f: ret 0x4ed4;
0xffffffff825da375: ret 0x4ed;
0xffffffff8251bcaf: ret 0x4ee0;
0xffffffff8228fbb5: ret 0x4ee5;
0xffffffff816a0259: ret 0x4ee7;
0xffffffff811932ec: ret 0x4ee8;
0xffffffff8235237f: ret 0x4ee9;
0xffffffff82352380: ret 0x4ee9;
0xffffffff8224a756: ret 0x4eea;
0xffffffff814881db: ret 0x4eeb;
0xffffffff8234a7e0: ret 0x4ef6;
0xffffffff822ad5c7: ret 0x4ef9;
0xffffffff8230c473: ret 0x4efa;
0xffffffff816ab11b: ret 0x4f03;
0xffffffff823476a6: ret 0x4f04;
0xffffffff822e80e0: ret 0x4f09;
0xffffffff82469afc: ret 0x4f0a;
0xffffffff811624b8: ret 0x4f0f;
0xffffffff81784956: ret 0x4f17;
0xffffffff81b0f83a: ret 0x4f18;
0xffffffff818716a8: ret 0x4f20;
0xffffffff822975cc: ret 0x4f21;
0xffffffff8111fcba: ret 0x4f23;
0xffffffff814422ea: ret 0x4f2c;
0xffffffff81442383: ret 0x4f2d;
0xffffffff81442324: ret 0x4f2e;
0xffffffff81442a2a: ret 0x4f2f;
0xffffffff812f4eed: ret 0x4f30;
0xffffffff81442a65: ret 0x4f31;
0xffffffff81447180: ret 0x4f32;
0xffffffff82386543: ret 0x4f36;
0xffffffff824afcd8: ret 0x4f37;
0xffffffff824dab49: ret 0x4f3;
0xffffffff8169e35c: ret 0x4f3f;
0xffffffff81448cf1: ret 0x4f40;
0xffffffff822a602e: ret 0x4f45;
0xffffffff823ff02a: ret 0x4f47;
0xffffffff81c4c6c6: ret 0x4f48;
0xffffffff8233ae62: ret 0x4f4;
0xffffffff8144dac4: ret 0x4f4a;
0xffffffff82232ad1: ret 0x4f4d;
0xffffffff826d1255: ret 0x4f50;
0xffffffff826d1811: ret 0x4f52;
0xffffffff825032c2: ret 0x4f55;
0xffffffff817be156: ret 0x4f56;
0xffffffff82340e18: ret 0x4f57;
0xffffffff816a0378: ret 0x4f5a;
0xffffffff822df5d2: ret 0x4f5b;
0xffffffff823bd0dc: ret 0x4f5c;
0xffffffff8224b378: ret 0x4f5e;
0xffffffff82512b13: ret 0x4f65;
0xffffffff82411077: ret 0x4f66;
0xffffffff818d1a6b: ret 0x4f6;
0xffffffff8252774c: ret 0x4f6a;
0xffffffff824aa1de: ret 0x4f6e;
0xffffffff81322bce: ret 0x4f70;
0xffffffff82240a09: ret 0x4f72;
0xffffffff8182a05d: ret 0x4f74;
0xffffffff822dbb97: ret 0x4f78;
0xffffffff8228e8d2: ret 0x4f7c;
0xffffffff8244823f: ret 0x4f81;
0xffffffff816bc9fb: ret 0x4f89;
0xffffffff81752537: ret 0x4f8b;
0xffffffff8228ced7: ret 0x4f8c;
0xffffffff8228ced6: ret 0x4f8c;
0xffffffff8169ea40: ret 0x4f8e;
0xffffffff81201c6f: ret 0x4f90;
0xffffffff82519c30: ret 0x4f96;
0xffffffff825651e2: ret 0x4f9b;
0xffffffff8239b053: ret 0x4f9c;
0xffffffff817836b2: ret 0x4f;
0xffffffff8240e127: ret 0x4fa2;
0xffffffff813c9734: ret 0x4fab;
0xffffffff8230ac5f: ret 0x4fae;
0xffffffff81b05f3a: ret 0x4fb1;
0xffffffff822ff408: ret 0x4fb4;
0xffffffff8144d90a: ret 0x4fb8;
0xffffffff8144d9c3: ret 0x4fb9;
0xffffffff8144f92c: ret 0x4fba;
0xffffffff8144f955: ret 0x4fbb;
0xffffffff8144f979: ret 0x4fbc;
0xffffffff8345eb9a: ret 0x4fbd;
0xffffffff811160e2: ret 0x4fbf;
0xffffffff8169ee9b: ret 0x4fc5;
0xffffffff824cda3e: ret 0x4fc8;
0xffffffff82417539: ret 0x4fc;
0xffffffff8116a451: ret 0x4fd7;
0xffffffff82342b1c: ret 0x4fd9;
0xffffffff816a0a51: ret 0x4fdb;
0xffffffff82519aa2: ret 0x4fdd;
0xffffffff811107f2: ret 0x4fde;
0xffffffff824b53a6: ret 0x4fe3;
0xffffffff82545243: ret 0x4fe5;
0xffffffff811865c7: ret 0x4fe8;
0xffffffff81012fcb: ret 0x4fe9;
0xffffffff824a3c8d: ret 0x4fe;
0xffffffff822d5906: ret 0x4fea;
0xffffffff82495d5b: ret 0x4fed;
0xffffffff823c2d99: ret 0x4ff3;
0xffffffff82306600: ret 0x4ff5;
0xffffffff82448af0: ret 0x4ff6;
0xffffffff823466a2: ret 0x4ff7;
0xffffffff823466a1: ret 0x4ff7;
0xffffffff822c074f: ret 0x4ff9;
0xffffffff81734bfc: ret 0x4ff;
0xffffffff817fd72c: ret 0x4ffc;
0xffffffff823dfe9b: ret 0x4ffe;
0xffffffff8264ffe2: ret 0x4fff;
0xffffffff811e1263: ret 0x5000;
0xffffffff815ce64d: ret 0x5005;
0xffffffff823d246b: ret 0x5007;
0xffffffff82295fbf: ret 0x500;
0xffffffff812c33de: ret 0x500c;
0xffffffff81c33b5a: ret 0x5015;
0xffffffff817fd9cc: ret 0x5017;
0xffffffff8347dd8e: ret 0x5018;
0xffffffff835a1762: ret 0x501;
0xffffffff8169f0d5: ret 0x501b;
0xffffffff81aff43a: ret 0x501c;
0xffffffff82282611: ret 0x501d;
0xffffffff83461896: ret 0x501e;
0xffffffff834521e9: ret 0x5020;
0xffffffff816efc23: ret 0x5021;
0xffffffff8236f6c2: ret 0x5026;
0xffffffff824f3ccd: ret 0x5033;
0xffffffff817fda30: ret 0x5034;
0xffffffff8245d2fb: ret 0x5038;
0xffffffff81a7dd16: ret 0x5039;
0xffffffff81324df0: ret 0x5040;
0xffffffff83436988: ret 0x5046;
0xffffffff823780cb: ret 0x504c;
0xffffffff826d10c7: ret 0x5053;
0xffffffff8346195a: ret 0x5056;
0xffffffff83461cce: ret 0x5059;
0xffffffff8226113b: ret 0x505f;
0xffffffff8245e76d: ret 0x5060;
0xffffffff83461988: ret 0x5061;
0xffffffff823f6420: ret 0x5062;
0xffffffff81801cae: ret 0x5063;
0xffffffff82380fe8: ret 0x5064;
0xffffffff822902dd: ret 0x5065;
0xffffffff8176c797: ret 0x5068;
0xffffffff8169f835: ret 0x5069;
0xffffffff824571fb: ret 0x506;
0xffffffff82278e93: ret 0x506d;
0xffffffff823b3e1d: ret 0x506f;
0xffffffff822c6b56: ret 0x507d;
0xffffffff82299ded: ret 0x5082;
0xffffffff834699d2: ret 0x5086;
0xffffffff81546a53: ret 0x5089;
0xffffffff81115075: ret 0x508c;
0xffffffff81204a5b: ret 0x508d;
0xffffffff82271646: ret 0x508e;
0xffffffff81754cea: ret 0x5090;
0xffffffff817764da: ret 0x5094;
0xffffffff816a0c32: ret 0x5096;
0xffffffff8222eaf1: ret 0x509b;
0xffffffff818f5472: ret 0x50;
0xffffffff823d9d0b: ret 0x50a6;
0xffffffff823e98a4: ret 0x50a7;
0xffffffff82388fb2: ret 0x50ac;
0xffffffff824c79a9: ret 0x50af;
0xffffffff82371fe5: ret 0x50b6;
0xffffffff812aa00c: ret 0x50b8;
0xffffffff81bab96a: ret 0x50b9;
0xffffffff818bc6be: ret 0x50b;
0xffffffff817fe1f1: ret 0x50bc;
0xffffffff812aa072: ret 0x50bf;
0xffffffff816a0c4a: ret 0x50c4;
0xffffffff822815fa: ret 0x50c6;
0xffffffff8233be3c: ret 0x50ca;
0xffffffff834715ab: ret 0x50d0;
0xffffffff82384ce2: ret 0x50d5;
0xffffffff8347160f: ret 0x50d6;
0xffffffff823fc11d: ret 0x50d7;
0xffffffff81460005: ret 0x50d8;
0xffffffff81463c26: ret 0x50d9;
0xffffffff81467b0f: ret 0x50da;
0xffffffff81467b26: ret 0x50db;
0xffffffff83471641: ret 0x50dc;
0xffffffff81468212: ret 0x50de;
0xffffffff816a16d6: ret 0x50e2;
0xffffffff8244232a: ret 0x50e3;
0xffffffff82312587: ret 0x50e4;
0xffffffff824d8af7: ret 0x50e5;
0xffffffff8103ac2a: ret 0x50e8;
0xffffffff811da4fa: ret 0x50e9;
0xffffffff82481306: ret 0x50ea;
0xffffffff81464ea8: ret 0x50eb;
0xffffffff822552d2: ret 0x50f0;
0xffffffff822978f1: ret 0x50f5;
0xffffffff824b691d: ret 0x50f6;
0xffffffff8235ef2f: ret 0x50f8;
0xffffffff816a1727: ret 0x50f9;
0xffffffff8239de08: ret 0x50fa;
0xffffffff822df5d6: ret 0x50fd;
0xffffffff8234956b: ret 0x50fe;
0xffffffff8200d4be: ret 0x50ff;
0xffffffff82331797: ret 0x510;
0xffffffff825d87a5: ret 0x510a;
0xffffffff825d87a6: ret 0x510a;
0xffffffff811c5471: ret 0x5110;
0xffffffff8146fb9b: ret 0x5114;
0xffffffff82384fd4: ret 0x5119;
0xffffffff823f76e5: ret 0x511a;
0xffffffff822a6d44: ret 0x511d;
0xffffffff82460444: ret 0x511e;
0xffffffff8233c642: ret 0x511f;
0xffffffff81472e38: ret 0x5124;
0xffffffff81472e60: ret 0x5125;
0xffffffff81997486: ret 0x512b;
0xffffffff822a7a45: ret 0x5131;
0xffffffff8103d6a0: ret 0x5137;
0xffffffff81a81afb: ret 0x5139;
0xffffffff8179ab07: ret 0x513a;
0xffffffff82558606: ret 0x513c;
0xffffffff8105cbd2: ret 0x5140;
0xffffffff82270281: ret 0x5149;
0xffffffff816a1c96: ret 0x514d;
0xffffffff818529f2: ret 0x5151;
0xffffffff8344ce3e: ret 0x5152;
0xffffffff824cf40d: ret 0x5155;
0xffffffff824888ae: ret 0x5159;
0xffffffff823d37be: ret 0x515b;
0xffffffff8223c702: ret 0x5161;
0xffffffff82264d32: ret 0x5162;
0xffffffff8248f36c: ret 0x5164;
0xffffffff823a9432: ret 0x5165;
0xffffffff8344ce70: ret 0x5166;
0xffffffff8232e523: ret 0x5168;
0xffffffff81560520: ret 0x516;
0xffffffff8190d9b4: ret 0x5174;
0xffffffff822e8c1b: ret 0x5175;
0xffffffff819676ef: ret 0x5177;
0xffffffff8236fb15: ret 0x5178;
0xffffffff8229b199: ret 0x517f;
0xffffffff8229b19a: ret 0x517f;
0xffffffff811379f9: ret 0x5180;
0xffffffff81856dfa: ret 0x5189;
0xffffffff81c31620: ret 0x518b;
0xffffffff8242a40d: ret 0x518d;
0xffffffff82276fde: ret 0x5193;
0xffffffff82234ebc: ret 0x5197;
0xffffffff82490040: ret 0x519a;
0xffffffff810abb48: ret 0x51;
0xffffffff824190c2: ret 0x51a2;
0xffffffff824190c3: ret 0x51a2;
0xffffffff822cf36f: ret 0x51a7;
0xffffffff823a774e: ret 0x51ad;
0xffffffff812aa0d8: ret 0x51b3;
0xffffffff824586a5: ret 0x51b4;
0xffffffff823a6372: ret 0x51b9;
0xffffffff812aa13e: ret 0x51bb;
0xffffffff82462953: ret 0x51bd;
0xffffffff8237e1bf: ret 0x51c2;
0xffffffff825018aa: ret 0x51c5;
0xffffffff82379a85: ret 0x51c8;
0xffffffff822af229: ret 0x51cb;
0xffffffff8251625b: ret 0x51ce;
0xffffffff823a8bc8: ret 0x51cf;
0xffffffff8230631c: ret 0x51d0;
0xffffffff82442d09: ret 0x51d7;
0xffffffff8229fbdc: ret 0x51db;
0xffffffff83471a87: ret 0x51de;
0xffffffff82567c27: ret 0x51df;
0xffffffff823993f3: ret 0x51e3;
0xffffffff8138f396: ret 0x51e7;
0xffffffff811a99a9: ret 0x51e8;
0xffffffff8156d4d9: ret 0x51e9;
0xffffffff8234405b: ret 0x51ee;
0xffffffff8197b05c: ret 0x51f0;
0xffffffff82294a6b: ret 0x51f2;
0xffffffff822d4467: ret 0x51f3;
0xffffffff8222f659: ret 0x51f4;
0xffffffff82397586: ret 0x51f8;
0xffffffff824fc37c: ret 0x51f;
0xffffffff8254cf15: ret 0x51ff;
0xffffffff81893ede: ret 0x5200;
0xffffffff823f43e2: ret 0x5201;
0xffffffff8138f2a0: ret 0x5212;
0xffffffff82354e1e: ret 0x5213;
0xffffffff825011f3: ret 0x5214;
0xffffffff82526616: ret 0x5215;
0xffffffff81754856: ret 0x5218;
0xffffffff82306b57: ret 0x521;
0xffffffff82437514: ret 0x5220;
0xffffffff823701ea: ret 0x5222;
0xffffffff82525af1: ret 0x5226;
0xffffffff82365113: ret 0x522b;
0xffffffff8347d481: ret 0x522c;
0xffffffff82301221: ret 0x522d;
0xffffffff826c63d1: ret 0x5230;
0xffffffff826c63c3: ret 0x5231;
0xffffffff82249c76: ret 0x5235;
0xffffffff8347d4b3: ret 0x5237;
0xffffffff8197b154: ret 0x5238;
0xffffffff822efda8: ret 0x5239;
0xffffffff82459d9a: ret 0x523d;
0xffffffff811ac53d: ret 0x5241;
0xffffffff82455b13: ret 0x5248;
0xffffffff8235f3b4: ret 0x524a;
0xffffffff81af0f02: ret 0x524d;
0xffffffff822f6965: ret 0x5259;
0xffffffff822f6964: ret 0x5259;
0xffffffff8225823b: ret 0x5267;
0xffffffff82322c9c: ret 0x5268;
0xffffffff81734c8f: ret 0x526;
0xffffffff8247b0fa: ret 0x5271;
0xffffffff81c3a7d4: ret 0x5275;
0xffffffff816fccbe: ret 0x5277;
0xffffffff8138f2bb: ret 0x5278;
0xffffffff822f9909: ret 0x527d;
0xffffffff81399e1b: ret 0x527e;
0xffffffff824f6dfe: ret 0x5282;
0xffffffff82450f40: ret 0x5285;
0xffffffff82450f3f: ret 0x5285;
0xffffffff81af307d: ret 0x528b;
0xffffffff81c2606a: ret 0x528f;
0xffffffff824f6306: ret 0x5290;
0xffffffff823c4c12: ret 0x529a;
0xffffffff822dd562: ret 0x529e;
0xffffffff8119f1b8: ret 0x52;
0xffffffff817850bd: ret 0x52a0;
0xffffffff82263afe: ret 0x52a7;
0xffffffff823f4f99: ret 0x52a9;
0xffffffff823c9272: ret 0x52ae;
0xffffffff8197b330: ret 0x52b0;
0xffffffff82444c54: ret 0x52b2;
0xffffffff822c6790: ret 0x52bc;
0xffffffff83471c71: ret 0x52bd;
0xffffffff8236f0be: ret 0x52c2;
0xffffffff823987b4: ret 0x52cc;
0xffffffff825d8ae6: ret 0x52d8;
0xffffffff822c1845: ret 0x52da;
0xffffffff8139114d: ret 0x52df;
0xffffffff81275062: ret 0x52e0;
0xffffffff8245e37a: ret 0x52e3;
0xffffffff823ca5cc: ret 0x52e5;
0xffffffff810346c8: ret 0x52e8;
0xffffffff81396da3: ret 0x52e9;
0xffffffff8146fb32: ret 0x52f0;
0xffffffff8230d0e5: ret 0x52f5;
0xffffffff822ae283: ret 0x52f7;
0xffffffff81391166: ret 0x52fc;
0xffffffff82498b3d: ret 0x52fe;
0xffffffff811da5f3: ret 0x5300;
0xffffffff8166962e: ret 0x5303;
0xffffffff8249ee03: ret 0x5304;
0xffffffff82289b52: ret 0x5308;
0xffffffff810de6ea: ret 0x530;
0xffffffff82418501: ret 0x530c;
0xffffffff8255b33a: ret 0x530f;
0xffffffff816a5152: ret 0x5310;
0xffffffff82423634: ret 0x5311;
0xffffffff81391195: ret 0x5315;
0xffffffff824ea0e6: ret 0x5319;
0xffffffff828c2fac: ret 0x531;
0xffffffff824441fd: ret 0x531b;
0xffffffff822ad619: ret 0x531d;
0xffffffff8112c003: ret 0x5320;
0xffffffff816d009c: ret 0x5323;
0xffffffff8234e446: ret 0x5324;
0xffffffff813911ca: ret 0x5326;
0xffffffff824f1b46: ret 0x532;
0xffffffff818691ee: ret 0x532b;
0xffffffff824449f9: ret 0x532c;
0xffffffff8233b3bd: ret 0x5330;
0xffffffff8112d5c1: ret 0x5331;
0xffffffff8345f02e: ret 0x5335;
0xffffffff813911e3: ret 0x5338;
0xffffffff82354cfe: ret 0x533c;
0xffffffff8238c512: ret 0x533d;
0xffffffff822ed5a8: ret 0x5340;
0xffffffff817f70f8: ret 0x5341;
0xffffffff8229082f: ret 0x5343;
0xffffffff822b07f3: ret 0x534d;
0xffffffff814713b9: ret 0x5350;
0xffffffff81b7181e: ret 0x5351;
0xffffffff81391200: ret 0x5352;
0xffffffff81b71804: ret 0x5353;
0xffffffff81b7193d: ret 0x5354;
0xffffffff81b74346: ret 0x5355;
0xffffffff826d14a4: ret 0x5357;
0xffffffff81b76399: ret 0x5358;
0xffffffff81b763c1: ret 0x5359;
0xffffffff8255c3a9: ret 0x535a;
0xffffffff816a5575: ret 0x5360;
0xffffffff8238ad65: ret 0x5361;
0xffffffff812adc9a: ret 0x5362;
0xffffffff824566b2: ret 0x5368;
0xffffffff8242f645: ret 0x5369;
0xffffffff824c1c68: ret 0x536;
0xffffffff81953cff: ret 0x5373;
0xffffffff816a51d8: ret 0x5379;
0xffffffff81b9c4ca: ret 0x5382;
0xffffffff81542f7d: ret 0x5388;
0xffffffff8113aeea: ret 0x5389;
0xffffffff8112aa39: ret 0x538b;
0xffffffff8244708f: ret 0x538e;
0xffffffff82850ac4: ret 0x53;
0xffffffff81b7c554: ret 0x53a0;
0xffffffff810e22da: ret 0x53a2;
0xffffffff816a6216: ret 0x53a3;
0xffffffff8227b98a: ret 0x53a6;
0xffffffff823ce506: ret 0x53a7;
0xffffffff81ae1faa: ret 0x53a9;
0xffffffff824849b0: ret 0x53aa;
0xffffffff82402800: ret 0x53ad;
0xffffffff81678d8e: ret 0x53b0;
0xffffffff83471ec5: ret 0x53c0;
0xffffffff822c92d7: ret 0x53c1;
0xffffffff816a60cc: ret 0x53c5;
0xffffffff823a1108: ret 0x53c6;
0xffffffff8110de69: ret 0x53c9;
0xffffffff82410706: ret 0x53cf;
0xffffffff814b881d: ret 0x53d0;
0xffffffff82265cfc: ret 0x53d1;
0xffffffff824a2ed1: ret 0x53d7;
0xffffffff8232fe55: ret 0x53dc;
0xffffffff82487fda: ret 0x53dd;
0xffffffff8147e8e6: ret 0x53e0;
0xffffffff822b5e0a: ret 0x53e5;
0xffffffff8147e59f: ret 0x53e8;
0xffffffff8127ea55: ret 0x53e9;
0xffffffff8157a6ba: ret 0x53e;
0xffffffff825633df: ret 0x53eb;
0xffffffff819072ed: ret 0x53f0;
0xffffffff824c3480: ret 0x53f4;
0xffffffff816a6122: ret 0x53f5;
0xffffffff824097fd: ret 0x53f7;
0xffffffff825406ff: ret 0x53fc;
0xffffffff835a8e46: ret 0x53fd;
0xffffffff823ee8fa: ret 0x53ff;
0xffffffff81893e5c: ret 0x5400;
0xffffffff81638e26: ret 0x5401;
0xffffffff81026dcd: ret 0x5403;
0xffffffff8238f25d: ret 0x5405;
0xffffffff81a388a6: ret 0x5409;
0xffffffff823bdb64: ret 0x540c;
0xffffffff823eac8b: ret 0x540e;
0xffffffff8180bdc5: ret 0x5410;
0xffffffff8241c53b: ret 0x5411;
0xffffffff82405146: ret 0x5416;
0xffffffff8229d292: ret 0x541b;
0xffffffff81b7d5fe: ret 0x541c;
0xffffffff81b7d618: ret 0x541d;
0xffffffff81b7d632: ret 0x541e;
0xffffffff81b7d7ad: ret 0x541f;
0xffffffff8172538f: ret 0x5420;
0xffffffff824156e8: ret 0x5426;
0xffffffff816a618a: ret 0x5428;
0xffffffff8237c724: ret 0x5429;
0xffffffff8224709a: ret 0x542b;
0xffffffff82370a7b: ret 0x542e;
0xffffffff83487262: ret 0x5430;
0xffffffff8197c39a: ret 0x5438;
0xffffffff8250d65a: ret 0x5439;
0xffffffff823b101c: ret 0x543;
0xffffffff8245c780: ret 0x543a;
0xffffffff822fd85e: ret 0x543b;
0xffffffff82364430: ret 0x5440;
0xffffffff81618178: ret 0x5441;
0xffffffff8227981f: ret 0x5443;
0xffffffff835b3274: ret 0x5444;
0xffffffff819358b6: ret 0x5448;
0xffffffff815549da: ret 0x544;
0xffffffff8255c2ca: ret 0x544c;
0xffffffff816a61db: ret 0x544f;
0xffffffff8129ee9a: ret 0x5450;
0xffffffff826d10a3: ret 0x5453;
0xffffffff8222fb62: ret 0x545b;
0xffffffff822401ee: ret 0x5461;
0xffffffff81936241: ret 0x5468;
0xffffffff8188eae5: ret 0x5469;
0xffffffff81936a30: ret 0x546a;
0xffffffff82336044: ret 0x546c;
0xffffffff819378d2: ret 0x5470;
0xffffffff815d4776: ret 0x5474;
0xffffffff81b3ab65: ret 0x5475;
0xffffffff82374eb0: ret 0x547d;
0xffffffff825614b8: ret 0x547f;
0xffffffff8188eb01: ret 0x5481;
0xffffffff816cf3f9: ret 0x5484;
0xffffffff834721dd: ret 0x5486;
0xffffffff81104c77: ret 0x5488;
0xffffffff812cc5d2: ret 0x5489;
0xffffffff810fc355: ret 0x548;
0xffffffff834696b8: ret 0x548a;
0xffffffff822340d6: ret 0x548b;
0xffffffff816a64ee: ret 0x548b;
0xffffffff814badaa: ret 0x548d;
0xffffffff8242a87e: ret 0x548e;
0xffffffff8193da41: ret 0x5490;
0xffffffff83471d6b: ret 0x5492;
0xffffffff824183eb: ret 0x5494;
0xffffffff8249fa02: ret 0x5495;
0xffffffff823457ee: ret 0x5496;
0xffffffff83472279: ret 0x5497;
0xffffffff823b2fd2: ret 0x5498;
0xffffffff813936f0: ret 0x549a;
0xffffffff83471da0: ret 0x549b;
0xffffffff81170262: ret 0x54;
0xffffffff81774dce: ret 0x54a0;
0xffffffff824290f2: ret 0x54a1;
0xffffffff834722ae: ret 0x54a4;
0xffffffff811848fd: ret 0x54a5;
0xffffffff824430fb: ret 0x54a6;
0xffffffff83471dd5: ret 0x54a8;
0xffffffff822aa157: ret 0x54a9;
0xffffffff834722e3: ret 0x54b0;
0xffffffff823f529c: ret 0x54b1;
0xffffffff823f529d: ret 0x54b1;
0xffffffff8249d45c: ret 0x54b3;
0xffffffff83472315: ret 0x54ba;
0xffffffff8223c071: ret 0x54c1;
0xffffffff8254b06c: ret 0x54c4;
0xffffffff813939a6: ret 0x54c6;
0xffffffff82232141: ret 0x54c9;
0xffffffff8234fafd: ret 0x54c;
0xffffffff8229570f: ret 0x54cb;
0xffffffff8238bf87: ret 0x54cf;
0xffffffff82443cbd: ret 0x54d0;
0xffffffff83472378: ret 0x54d1;
0xffffffff834723a6: ret 0x54d2;
0xffffffff82519f8f: ret 0x54d4;
0xffffffff82265462: ret 0x54d9;
0xffffffff823ba240: ret 0x54d;
0xffffffff82394dcc: ret 0x54dc;
0xffffffff8119d8a6: ret 0x54e8;
0xffffffff81b132a3: ret 0x54e9;
0xffffffff81734e02: ret 0x54e;
0xffffffff822c2fd8: ret 0x54ea;
0xffffffff8226ba67: ret 0x54eb;
0xffffffff824d9bbb: ret 0x54ef;
0xffffffff812f506c: ret 0x54f0;
0xffffffff81a253a8: ret 0x54f4;
0xffffffff8235c24d: ret 0x54fd;
0xffffffff811d22d2: ret 0x5500;
0xffffffff811d1a03: ret 0x5500;
0xffffffff823e370a: ret 0x5504;
0xffffffff81756a04: ret 0x550;
0xffffffff816a9692: ret 0x550f;
0xffffffff8227efe2: ret 0x5510;
0xffffffff8227efe3: ret 0x5510;
0xffffffff8243caa3: ret 0x5511;
0xffffffff823b932b: ret 0x5512;
0xffffffff823bb51f: ret 0x5518;
0xffffffff81b6586a: ret 0x551a;
0xffffffff8248c3fb: ret 0x5523;
0xffffffff822c2ace: ret 0x5524;
0xffffffff822fe4de: ret 0x5526;
0xffffffff823053f1: ret 0x552;
0xffffffff83487381: ret 0x552a;
0xffffffff8141db93: ret 0x552b;
0xffffffff8222ec0a: ret 0x552e;
0xffffffff8149279c: ret 0x5530;
0xffffffff814927b6: ret 0x5531;
0xffffffff814926f9: ret 0x5532;
0xffffffff8245bd87: ret 0x5534;
0xffffffff816a9485: ret 0x5536;
0xffffffff81756caf: ret 0x5537;
0xffffffff8197f1f4: ret 0x5538;
0xffffffff834874b3: ret 0x5539;
0xffffffff82260a7f: ret 0x553c;
0xffffffff82280106: ret 0x5540;
0xffffffff826d157f: ret 0x5542;
0xffffffff82271cce: ret 0x5545;
0xffffffff8231256d: ret 0x5548;
0xffffffff82386a85: ret 0x5549;
0xffffffff822a167f: ret 0x5550;
0xffffffff816a94b9: ret 0x5555;
0xffffffff8193dcf0: ret 0x5558;
0xffffffff817c929c: ret 0x555a;
0xffffffff8237d558: ret 0x555b;
0xffffffff81392e71: ret 0x555c;
0xffffffff8224e394: ret 0x5567;
0xffffffff8193e190: ret 0x5568;
0xffffffff82263cd0: ret 0x556f;
0xffffffff82263cd1: ret 0x556f;
0xffffffff8193e439: ret 0x5570;
0xffffffff8256c846: ret 0x5571;
0xffffffff825595ad: ret 0x5573;
0xffffffff81ab65af: ret 0x5574;
0xffffffff813958f6: ret 0x5575;
0xffffffff8102dfe0: ret 0x5577;
0xffffffff8197f55e: ret 0x5578;
0xffffffff8171313a: ret 0x5579;
0xffffffff82425afe: ret 0x557;
0xffffffff81abdf02: ret 0x557d;
0xffffffff8344d43e: ret 0x5580;
0xffffffff8193f7f0: ret 0x5585;
0xffffffff8193fbb6: ret 0x5586;
0xffffffff82535f93: ret 0x5588;
0xffffffff811bb5dc: ret 0x5589;
0xffffffff811b207a: ret 0x558;
0xffffffff823870bc: ret 0x558b;
0xffffffff825250c5: ret 0x558c;
0xffffffff81756e74: ret 0x558e;
0xffffffff81449421: ret 0x558f;
0xffffffff8110fc3e: ret 0x5590;
0xffffffff816aa127: ret 0x5591;
0xffffffff824c01d4: ret 0x5594;
0xffffffff81395b15: ret 0x5595;
0xffffffff82261637: ret 0x5597;
0xffffffff82436983: ret 0x5598;
0xffffffff8230e9c5: ret 0x559c;
0xffffffff81860ea2: ret 0x559d;
0xffffffff8171afcf: ret 0x55;
0xffffffff8238dbdb: ret 0x55a2;
0xffffffff8238dbdc: ret 0x55a2;
0xffffffff81abb502: ret 0x55a7;
0xffffffff8194456f: ret 0x55a8;
0xffffffff81756ea5: ret 0x55a9;
0xffffffff823e6026: ret 0x55a;
0xffffffff819448b7: ret 0x55aa;
0xffffffff819472dc: ret 0x55ab;
0xffffffff8225d193: ret 0x55ac;
0xffffffff8226c068: ret 0x55ad;
0xffffffff824f234d: ret 0x55af;
0xffffffff824f234e: ret 0x55af;
0xffffffff816aa92d: ret 0x55b5;
0xffffffff83472586: ret 0x55b7;
0xffffffff81b82ceb: ret 0x55b8;
0xffffffff81395a64: ret 0x55ba;
0xffffffff8344bf80: ret 0x55bd;
0xffffffff81947a7a: ret 0x55c0;
0xffffffff81947ab1: ret 0x55c1;
0xffffffff81947ad7: ret 0x55c2;
0xffffffff81947b71: ret 0x55c3;
0xffffffff81756d9d: ret 0x55c4;
0xffffffff816aa997: ret 0x55c7;
0xffffffff8250a360: ret 0x55ca;
0xffffffff834a4e28: ret 0x55d0;
0xffffffff81a17198: ret 0x55d6;
0xffffffff81c2628b: ret 0x55d;
0xffffffff82377fed: ret 0x55db;
0xffffffff816aa95f: ret 0x55de;
0xffffffff81131f68: ret 0x55e0;
0xffffffff810c6215: ret 0x55e8;
0xffffffff8224d605: ret 0x55e9;
0xffffffff822c4a3b: ret 0x55e;
0xffffffff813027da: ret 0x55e;
0xffffffff822fe3e9: ret 0x55ec;
0xffffffff822fada5: ret 0x55ed;
0xffffffff822e802c: ret 0x55f5;
0xffffffff8233f36b: ret 0x55f7;
0xffffffff822b97bf: ret 0x55f8;
0xffffffff828c6d58: ret 0x55f;
0xffffffff81893daa: ret 0x5600;
0xffffffff81c30987: ret 0x5601;
0xffffffff82455021: ret 0x5605;
0xffffffff8175d3b6: ret 0x5607;
0xffffffff8147b596: ret 0x5608;
0xffffffff81c4e0bb: ret 0x5609;
0xffffffff818da8b0: ret 0x560;
0xffffffff816aa8f8: ret 0x560b;
0xffffffff82370eed: ret 0x560c;
0xffffffff822c45a0: ret 0x560e;
0xffffffff82475e72: ret 0x560f;
0xffffffff8110eb4a: ret 0x5614;
0xffffffff822f3150: ret 0x5616;
0xffffffff8234f7ec: ret 0x5617;
0xffffffff8348ec5f: ret 0x5620;
0xffffffff8110de36: ret 0x5621;
0xffffffff81952c6c: ret 0x5622;
0xffffffff825d81ea: ret 0x5625;
0xffffffff82358e3e: ret 0x562;
0xffffffff815a9e3c: ret 0x562b;
0xffffffff816aa1dd: ret 0x562d;
0xffffffff81131f7e: ret 0x5630;
0xffffffff8223dc56: ret 0x5632;
0xffffffff8237b1fb: ret 0x5637;
0xffffffff81339e4d: ret 0x5638;
0xffffffff8243b5a8: ret 0x5639;
0xffffffff822354e8: ret 0x563a;
0xffffffff8256ab6c: ret 0x563e;
0xffffffff8193063c: ret 0x5641;
0xffffffff8248317a: ret 0x5642;
0xffffffff816aa2d8: ret 0x5645;
0xffffffff82537fee: ret 0x564a;
0xffffffff81282982: ret 0x564b;
0xffffffff8117b09a: ret 0x5651;
0xffffffff825d935b: ret 0x5652;
0xffffffff8231c4ec: ret 0x5653;
0xffffffff824bb525: ret 0x5654;
0xffffffff82321314: ret 0x565;
0xffffffff82546509: ret 0x565e;
0xffffffff8237ebe1: ret 0x5661;
0xffffffff82361e0a: ret 0x5666;
0xffffffff81396446: ret 0x5667;
0xffffffff823cf8c7: ret 0x566;
0xffffffff816aa5fc: ret 0x566c;
0xffffffff8223df58: ret 0x566e;
0xffffffff824ca86d: ret 0x5671;
0xffffffff82333ec7: ret 0x5673;
0xffffffff811da952: ret 0x5675;
0xffffffff81b81957: ret 0x5677;
0xffffffff82425bb3: ret 0x5678;
0xffffffff824b4ce0: ret 0x567;
0xffffffff81956283: ret 0x5680;
0xffffffff81956542: ret 0x5681;
0xffffffff819592b5: ret 0x5682;
0xffffffff819591e7: ret 0x5683;
0xffffffff8195dce8: ret 0x5684;
0xffffffff82505591: ret 0x5687;
0xffffffff81590abd: ret 0x5689;
0xffffffff81960ea6: ret 0x568c;
0xffffffff822595e9: ret 0x568d;
0xffffffff8139647c: ret 0x568f;
0xffffffff816a7033: ret 0x5694;
0xffffffff822d8f76: ret 0x5697;
0xffffffff82292007: ret 0x569b;
0xffffffff8115f112: ret 0x56;
0xffffffff8347275d: ret 0x56a7;
0xffffffff8228a04d: ret 0x56a8;
0xffffffff81965db5: ret 0x56ac;
0xffffffff81965dcf: ret 0x56ad;
0xffffffff81965de9: ret 0x56ae;
0xffffffff81965e0e: ret 0x56af;
0xffffffff81967c8c: ret 0x56b0;
0xffffffff8344d5e5: ret 0x56b2;
0xffffffff8256439e: ret 0x56b5;
0xffffffff823b3880: ret 0x56b7;
0xffffffff811d637e: ret 0x56b9;
0xffffffff82276bdf: ret 0x56ba;
0xffffffff822d9779: ret 0x56bc;
0xffffffff822d9778: ret 0x56bc;
0xffffffff8232fd4b: ret 0x56bd;
0xffffffff8113200a: ret 0x56c0;
0xffffffff8248f1cb: ret 0x56c5;
0xffffffff8240d466: ret 0x56c6;
0xffffffff816aaf83: ret 0x56c9;
0xffffffff825614d1: ret 0x56ca;
0xffffffff823ea130: ret 0x56d1;
0xffffffff824b69b6: ret 0x56d4;
0xffffffff8253c0d8: ret 0x56d6;
0xffffffff816f42ba: ret 0x56d8;
0xffffffff817350ca: ret 0x56d;
0xffffffff813964a6: ret 0x56da;
0xffffffff83472940: ret 0x56db;
0xffffffff82375383: ret 0x56dc;
0xffffffff823aa376: ret 0x56de;
0xffffffff823b508a: ret 0x56e0;
0xffffffff816a8c47: ret 0x56e1;
0xffffffff8241891c: ret 0x56e4;
0xffffffff8344d640: ret 0x56e5;
0xffffffff81036344: ret 0x56e8;
0xffffffff812165f5: ret 0x56e9;
0xffffffff8253cabe: ret 0x56e;
0xffffffff824b5f26: ret 0x56ea;
0xffffffff823b0874: ret 0x56f5;
0xffffffff823de5a3: ret 0x56f6;
0xffffffff823a7c4d: ret 0x56f;
0xffffffff822c79bd: ret 0x56fa;
0xffffffff8222c514: ret 0x56fb;
0xffffffff8231fe5c: ret 0x56ff;
0xffffffff813964c9: ret 0x5701;
0xffffffff8226d6ca: ret 0x5702;
0xffffffff818bd75e: ret 0x5703;
0xffffffff81758ac3: ret 0x5704;
0xffffffff8245d391: ret 0x5706;
0xffffffff81625830: ret 0x5709;
0xffffffff81172589: ret 0x570;
0xffffffff8244f1e4: ret 0x570d;
0xffffffff82368bcb: ret 0x570f;
0xffffffff81237f61: ret 0x5717;
0xffffffff824ad6cf: ret 0x5718;
0xffffffff824f4d8b: ret 0x571a;
0xffffffff81026548: ret 0x571d;
0xffffffff816ab0e1: ret 0x5720;
0xffffffff8170d60a: ret 0x5723;
0xffffffff8234af25: ret 0x5724;
0xffffffff8139672d: ret 0x5728;
0xffffffff810255d5: ret 0x572;
0xffffffff817f2161: ret 0x572b;
0xffffffff824fc5b7: ret 0x572e;
0xffffffff8222f7e2: ret 0x572f;
0xffffffff8237e351: ret 0x5730;
0xffffffff816c3940: ret 0x5733;
0xffffffff8240c95c: ret 0x5734;
0xffffffff82442087: ret 0x5737;
0xffffffff8230ba02: ret 0x5738;
0xffffffff811750a2: ret 0x573;
0xffffffff822957ae: ret 0x573a;
0xffffffff823e1b60: ret 0x573b;
0xffffffff834560a6: ret 0x573c;
0xffffffff817255af: ret 0x5740;
0xffffffff812181d9: ret 0x5741;
0xffffffff83472a31: ret 0x5747;
0xffffffff834729d1: ret 0x5748;
0xffffffff816a2122: ret 0x574;
0xffffffff83472a5f: ret 0x574e;
0xffffffff83472a03: ret 0x574f;
0xffffffff811321e5: ret 0x5750;
0xffffffff8229e8e9: ret 0x5751;
0xffffffff8103b8ad: ret 0x575;
0xffffffff817b1c3c: ret 0x575a;
0xffffffff823c6a41: ret 0x575d;
0xffffffff816aad63: ret 0x575f;
0xffffffff8226f724: ret 0x5761;
0xffffffff818b06bb: ret 0x5762;
0xffffffff823c313b: ret 0x5767;
0xffffffff81053dc6: ret 0x576;
0xffffffff82441ba4: ret 0x576a;
0xffffffff822b44be: ret 0x576d;
0xffffffff8104ecda: ret 0x5772;
0xffffffff810f9431: ret 0x5773;
0xffffffff8256e3a8: ret 0x5774;
0xffffffff81238074: ret 0x5775;
0xffffffff8237092d: ret 0x577b;
0xffffffff812010f9: ret 0x577c;
0xffffffff82405bb5: ret 0x577d;
0xffffffff816abaae: ret 0x577f;
0xffffffff82544551: ret 0x5780;
0xffffffff822ae11a: ret 0x5781;
0xffffffff822b4b2c: ret 0x5783;
0xffffffff8241492c: ret 0x5784;
0xffffffff810d9dbd: ret 0x5789;
0xffffffff81c39afb: ret 0x578;
0xffffffff823666b8: ret 0x578e;
0xffffffff8359bc88: ret 0x5790;
0xffffffff816a7e26: ret 0x5796;
0xffffffff814d98fa: ret 0x57;
0xffffffff8139711f: ret 0x57a1;
0xffffffff822c20c6: ret 0x57a1;
0xffffffff8225a0e7: ret 0x57a5;
0xffffffff825545d6: ret 0x57a6;
0xffffffff8236af52: ret 0x57ac;
0xffffffff822849f6: ret 0x57af;
0xffffffff82349201: ret 0x57b8;
0xffffffff82263a15: ret 0x57bb;
0xffffffff816a7e5a: ret 0x57bc;
0xffffffff8242eb39: ret 0x57bd;
0xffffffff81c55785: ret 0x57c0;
0xffffffff823e71de: ret 0x57c4;
0xffffffff8246b02d: ret 0x57c9;
0xffffffff823ba81f: ret 0x57c;
0xffffffff8195a146: ret 0x57ca;
0xffffffff824d2ce5: ret 0x57ce;
0xffffffff8254f437: ret 0x57d1;
0xffffffff822be949: ret 0x57d7;
0xffffffff8237800b: ret 0x57d9;
0xffffffff8247ca5e: ret 0x57e5;
0xffffffff8162e9a7: ret 0x57e6;
0xffffffff811df983: ret 0x57e8;
0xffffffff81010bc3: ret 0x57e9;
0xffffffff816a86d1: ret 0x57eb;
0xffffffff82562cb5: ret 0x57f0;
0xffffffff8126498a: ret 0x57f5;
0xffffffff8237adfe: ret 0x57fb;
0xffffffff835a8e6e: ret 0x57fd;
0xffffffff823875a1: ret 0x57fe;
0xffffffff8246f092: ret 0x57ff;
0xffffffff834968e5: ret 0x5800;
0xffffffff82421cdb: ret 0x5803;
0xffffffff82529e23: ret 0x5805;
0xffffffff823c3d82: ret 0x5809;
0xffffffff8103c141: ret 0x580a;
0xffffffff824f34a6: ret 0x580e;
0xffffffff82381da6: ret 0x5810;
0xffffffff816a8c07: ret 0x5814;
0xffffffff83472ca0: ret 0x581e;
0xffffffff822ed3c6: ret 0x5820;
0xffffffff823998ff: ret 0x5821;
0xffffffff82399900: ret 0x5821;
0xffffffff83472ba7: ret 0x5822;
0xffffffff8233d63e: ret 0x5823;
0xffffffff824131ca: ret 0x5824;
0xffffffff82365f0e: ret 0x5828;
0xffffffff83472cd5: ret 0x582a;
0xffffffff8344d8ac: ret 0x5832;
0xffffffff824d5baa: ret 0x5833;
0xffffffff81877346: ret 0x5839;
0xffffffff8344d8e1: ret 0x583c;
0xffffffff816a8bd5: ret 0x583e;
0xffffffff823e6b88: ret 0x5840;
0xffffffff83472d36: ret 0x5842;
0xffffffff82502514: ret 0x5845;
0xffffffff8344d912: ret 0x5847;
0xffffffff8224c536: ret 0x5848;
0xffffffff8224c535: ret 0x5848;
0xffffffff81717fc1: ret 0x584a;
0xffffffff82243fb7: ret 0x584d;
0xffffffff8231b60c: ret 0x5852;
0xffffffff8344d943: ret 0x5854;
0xffffffff81a90602: ret 0x5856;
0xffffffff823bf504: ret 0x585f;
0xffffffff816a869f: ret 0x5862;
0xffffffff824069d5: ret 0x5868;
0xffffffff82327f56: ret 0x586b;
0xffffffff81ae0074: ret 0x5874;
0xffffffff811a4fc8: ret 0x5878;
0xffffffff81255867: ret 0x5880;
0xffffffff823051f4: ret 0x5882;
0xffffffff824b7c20: ret 0x5883;
0xffffffff822de4c1: ret 0x5888;
0xffffffff8100e4ca: ret 0x588;
0xffffffff82377fd0: ret 0x588b;
0xffffffff824aad12: ret 0x588e;
0xffffffff816a8c20: ret 0x5890;
0xffffffff8251db8d: ret 0x5892;
0xffffffff83482b3c: ret 0x5897;
0xffffffff8104efa9: ret 0x589;
0xffffffff8224fe22: ret 0x589f;
0xffffffff816f36aa: ret 0x58;
0xffffffff816f36a9: ret 0x58;
0xffffffff83482af1: ret 0x58a4;
0xffffffff83472e30: ret 0x58a5;
0xffffffff82361fe6: ret 0x58a8;
0xffffffff83472e62: ret 0x58a9;
0xffffffff816c3a69: ret 0x58a;
0xffffffff824964a4: ret 0x58b0;
0xffffffff824436d1: ret 0x58b1;
0xffffffff8139a5d2: ret 0x58b2;
0xffffffff81040b3e: ret 0x58b;
0xffffffff816a8cc6: ret 0x58bd;
0xffffffff83472ef8: ret 0x58be;
0xffffffff823999a3: ret 0x58c6;
0xffffffff824b9b26: ret 0x58c7;
0xffffffff8241687d: ret 0x58c8;
0xffffffff824ca4b5: ret 0x58c;
0xffffffff824ca4b4: ret 0x58c;
0xffffffff83472f26: ret 0x58cc;
0xffffffff82523393: ret 0x58ce;
0xffffffff82325576: ret 0x58d2;
0xffffffff8160e494: ret 0x58d8;
0xffffffff83472f54: ret 0x58da;
0xffffffff8240d72b: ret 0x58dc;
0xffffffff82264f12: ret 0x58e0;
0xffffffff8234758d: ret 0x58e1;
0xffffffff81255c9a: ret 0x58e2;
0xffffffff82427900: ret 0x58e5;
0xffffffff818316bb: ret 0x58e8;
0xffffffff824f0fe6: ret 0x58ea;
0xffffffff8132ee7d: ret 0x58eb;
0xffffffff82358d78: ret 0x58ed;
0xffffffff823c93c9: ret 0x58f3;
0xffffffff82528043: ret 0x58f4;
0xffffffff81735133: ret 0x58f;
0xffffffff816a8d0f: ret 0x58fb;
0xffffffff8200d3b6: ret 0x58ff;
0xffffffff82418578: ret 0x5908;
0xffffffff822c8a67: ret 0x590f;
0xffffffff824cc74d: ret 0x5911;
0xffffffff81b70dda: ret 0x5912;
0xffffffff823a8860: ret 0x5916;
0xffffffff822a7c98: ret 0x5917;
0xffffffff82382b20: ret 0x591b;
0xffffffff82558248: ret 0x591c;
0xffffffff816abdc3: ret 0x591d;
0xffffffff8235aebe: ret 0x591f;
0xffffffff82244113: ret 0x5922;
0xffffffff81759695: ret 0x5924;
0xffffffff823d7b78: ret 0x5927;
0xffffffff82338d14: ret 0x5930;
0xffffffff8102907a: ret 0x5937;
0xffffffff8229da64: ret 0x5943;
0xffffffff8222b09f: ret 0x5946;
0xffffffff8254812c: ret 0x5949;
0xffffffff8239bc57: ret 0x594b;
0xffffffff823bcb86: ret 0x594d;
0xffffffff82313c6e: ret 0x5952;
0xffffffff826d1a5a: ret 0x5954;
0xffffffff822eb54a: ret 0x5957;
0xffffffff8120a6c7: ret 0x5960;
0xffffffff82355f7c: ret 0x5968;
0xffffffff81690cfc: ret 0x596c;
0xffffffff81035e39: ret 0x5973;
0xffffffff81250082: ret 0x5974;
0xffffffff82286269: ret 0x5977;
0xffffffff82250422: ret 0x5979;
0xffffffff8226f1f3: ret 0x597c;
0xffffffff8222f8c8: ret 0x597f;
0xffffffff823b1c6e: ret 0x5981;
0xffffffff8347301d: ret 0x5986;
0xffffffff828cba88: ret 0x598;
0xffffffff83473052: ret 0x598f;
0xffffffff82281de9: ret 0x5994;
0xffffffff823ea873: ret 0x5996;
0xffffffff834730b9: ret 0x5998;
0xffffffff825514dc: ret 0x599;
0xffffffff825514db: ret 0x599;
0xffffffff82415ba3: ret 0x599a;
0xffffffff8223f128: ret 0x599f;
0xffffffff810ab8ad: ret 0x59;
0xffffffff834730ee: ret 0x59a1;
0xffffffff8227e2d3: ret 0x59a2;
0xffffffff83473123: ret 0x59a8;
0xffffffff8200a744: ret 0x59b1;
0xffffffff8103f484: ret 0x59b4;
0xffffffff823157fc: ret 0x59b5;
0xffffffff83473158: ret 0x59bc;
0xffffffff8245794e: ret 0x59bd;
0xffffffff834966a9: ret 0x59c0;
0xffffffff8225445c: ret 0x59c3;
0xffffffff8222e9be: ret 0x59c6;
0xffffffff82281299: ret 0x59c8;
0xffffffff822714d8: ret 0x59cc;
0xffffffff834877c4: ret 0x59cd;
0xffffffff8160e313: ret 0x59d0;
0xffffffff824adc2e: ret 0x59d1;
0xffffffff8234fd33: ret 0x59d4;
0xffffffff834877f2: ret 0x59d5;
0xffffffff82480708: ret 0x59d8;
0xffffffff824d0c9c: ret 0x59dd;
0xffffffff834731c2: ret 0x59e2;
0xffffffff82335582: ret 0x59e4;
0xffffffff8224b349: ret 0x59e5;
0xffffffff81646cbd: ret 0x59e8;
0xffffffff810d8dd3: ret 0x59eb;
0xffffffff822e4e3c: ret 0x59ef;
0xffffffff825057d1: ret 0x59f0;
0xffffffff834731f7: ret 0x59f4;
0xffffffff816acba1: ret 0x59f5;
0xffffffff81972b8f: ret 0x59f8;
0xffffffff816d599a: ret 0x59f9;
0xffffffff824c0aaf: ret 0x59fa;
0xffffffff835a8e0e: ret 0x59fd;
0xffffffff823e1703: ret 0x59fe;
0xffffffff83473228: ret 0x59ff;
0xffffffff8199ede2: ret 0x5a00;
0xffffffff8240ccfa: ret 0x5a07;
0xffffffff824a70c8: ret 0x5a0;
0xffffffff8238d1b0: ret 0x5a0a;
0xffffffff8245ad3b: ret 0x5a0b;
0xffffffff8348bcb1: ret 0x5a0c;
0xffffffff834879bb: ret 0x5a10;
0xffffffff816adaef: ret 0x5a11;
0xffffffff8243d932: ret 0x5a17;
0xffffffff8243ca14: ret 0x5a1b;
0xffffffff819a122b: ret 0x5a20;
0xffffffff824a140c: ret 0x5a22;
0xffffffff824f318a: ret 0x5a23;
0xffffffff823ecc79: ret 0x5a24;
0xffffffff816adc2d: ret 0x5a27;
0xffffffff8238de00: ret 0x5a28;
0xffffffff82230719: ret 0x5a29;
0xffffffff8233a6b3: ret 0x5a30;
0xffffffff816ad0a2: ret 0x5a3b;
0xffffffff822eefcc: ret 0x5a3f;
0xffffffff8236fe33: ret 0x5a41;
0xffffffff825d9744: ret 0x5a48;
0xffffffff8190e606: ret 0x5a50;
0xffffffff82381982: ret 0x5a53;
0xffffffff822ab2ae: ret 0x5a57;
0xffffffff8175b77f: ret 0x5a5a;
0xffffffff824cb245: ret 0x5a5b;
0xffffffff819a133b: ret 0x5a5c;
0xffffffff816ad0fd: ret 0x5a5f;
0xffffffff824cd8eb: ret 0x5a68;
0xffffffff8249ec52: ret 0x5a6f;
0xffffffff8175b651: ret 0x5a74;
0xffffffff81157592: ret 0x5a77;
0xffffffff823f98c7: ret 0x5a7b;
0xffffffff819766f8: ret 0x5a85;
0xffffffff81976f38: ret 0x5a86;
0xffffffff834929da: ret 0x5a88;
0xffffffff8235a152: ret 0x5a89;
0xffffffff8123e7f2: ret 0x5a8e;
0xffffffff823a1752: ret 0x5a90;
0xffffffff824d1ea2: ret 0x5a94;
0xffffffff816ad92b: ret 0x5a98;
0xffffffff8175c02d: ret 0x5a99;
0xffffffff818553c2: ret 0x5a;
0xffffffff834320cf: ret 0x5aa0;
0xffffffff8238b36e: ret 0x5aa1;
0xffffffff82558314: ret 0x5aab;
0xffffffff8253da4d: ret 0x5aad;
0xffffffff822f767d: ret 0x5aae;
0xffffffff834929a5: ret 0x5ab0;
0xffffffff8189cbe8: ret 0x5ab1;
0xffffffff8230d901: ret 0x5ab2;
0xffffffff81977f6c: ret 0x5ab4;
0xffffffff8247ff76: ret 0x5ab8;
0xffffffff82236381: ret 0x5ab;
0xffffffff822746d6: ret 0x5aba;
0xffffffff82273831: ret 0x5ac5;
0xffffffff822e31e5: ret 0x5ac7;
0xffffffff816c9756: ret 0x5ac9;
0xffffffff81c2837a: ret 0x5ac;
0xffffffff823ad1ea: ret 0x5aca;
0xffffffff82538442: ret 0x5ad2;
0xffffffff8175cb40: ret 0x5ad2;
0xffffffff822810a4: ret 0x5ad4;
0xffffffff81805449: ret 0x5ad8;
0xffffffff823455d4: ret 0x5add;
0xffffffff819a98be: ret 0x5ae0;
0xffffffff823cc008: ret 0x5ae2;
0xffffffff8253dce6: ret 0x5ae6;
0xffffffff8134ae80: ret 0x5ae8;
0xffffffff8223f9e3: ret 0x5ae;
0xffffffff824e22f4: ret 0x5aea;
0xffffffff8255572f: ret 0x5af1;
0xffffffff82359f30: ret 0x5af6;
0xffffffff824ea60c: ret 0x5af8;
0xffffffff82409bc1: ret 0x5af;
0xffffffff8223fd5e: ret 0x5aff;
0xffffffff819a5dbe: ret 0x5b00;
0xffffffff823c78ce: ret 0x5b01;
0xffffffff823f7474: ret 0x5b02;
0xffffffff81a4d854: ret 0x5b03;
0xffffffff819a5de9: ret 0x5b04;
0xffffffff8231fc33: ret 0x5b07;
0xffffffff82232b32: ret 0x5b08;
0xffffffff824044a4: ret 0x5b09;
0xffffffff8175cbf0: ret 0x5b0d;
0xffffffff825267e2: ret 0x5b11;
0xffffffff824a4013: ret 0x5b12;
0xffffffff81b1f9a7: ret 0x5b20;
0xffffffff81154038: ret 0x5b28;
0xffffffff825236c8: ret 0x5b2a;
0xffffffff824ddc18: ret 0x5b2d;
0xffffffff8175cac7: ret 0x5b36;
0xffffffff82319f53: ret 0x5b37;
0xffffffff8224cc94: ret 0x5b39;
0xffffffff819a1d58: ret 0x5b3c;
0xffffffff819a1d79: ret 0x5b40;
0xffffffff82262b70: ret 0x5b46;
0xffffffff81396024: ret 0x5b47;
0xffffffff81978444: ret 0x5b48;
0xffffffff82408e1c: ret 0x5b50;
0xffffffff8237898a: ret 0x5b52;
0xffffffff823aa035: ret 0x5b58;
0xffffffff8139607a: ret 0x5b5b;
0xffffffff8230d523: ret 0x5b5c;
0xffffffff8175cae6: ret 0x5b62;
0xffffffff82479d9e: ret 0x5b68;
0xffffffff823374d6: ret 0x5b6b;
0xffffffff823374d5: ret 0x5b6b;
0xffffffff8173e0bf: ret 0x5b6c;
0xffffffff8240caa0: ret 0x5b6e;
0xffffffff82370dd9: ret 0x5b6f;
0xffffffff81b246b7: ret 0x5b70;
0xffffffff8342a157: ret 0x5b73;
0xffffffff81397ba6: ret 0x5b74;
0xffffffff82351d28: ret 0x5b75;
0xffffffff822d6983: ret 0x5b7;
0xffffffff8240a350: ret 0x5b7a;
0xffffffff8236cfdd: ret 0x5b7c;
0xffffffff82326504: ret 0x5b7f;
0xffffffff82314b40: ret 0x5b81;
0xffffffff8241034d: ret 0x5b82;
0xffffffff82445f9f: ret 0x5b89;
0xffffffff8222edb9: ret 0x5b8c;
0xffffffff824a228d: ret 0x5b90;
0xffffffff824a228c: ret 0x5b90;
0xffffffff8349a7aa: ret 0x5b91;
0xffffffff82350241: ret 0x5b99;
0xffffffff816dd72d: ret 0x5b9;
0xffffffff81100383: ret 0x5b;
0xffffffff8175c940: ret 0x5ba3;
0xffffffff83445e8f: ret 0x5ba;
0xffffffff8244f0ec: ret 0x5baa;
0xffffffff8223b5d8: ret 0x5bae;
0xffffffff82342528: ret 0x5bb0;
0xffffffff82459948: ret 0x5bb1;
0xffffffff82467480: ret 0x5bb2;
0xffffffff823a9faa: ret 0x5bb4;
0xffffffff823a9fa9: ret 0x5bb4;
0xffffffff8225d8d8: ret 0x5bbd;
0xffffffff81a4523a: ret 0x5bbe;
0xffffffff81398f60: ret 0x5bc6;
0xffffffff8173510e: ret 0x5bc;
0xffffffff8239547e: ret 0x5bcd;
0xffffffff81625a60: ret 0x5bd0;
0xffffffff8175c9d8: ret 0x5bd2;
0xffffffff8226c900: ret 0x5bd4;
0xffffffff81a4373a: ret 0x5bd9;
0xffffffff822fc486: ret 0x5bdb;
0xffffffff8175c484: ret 0x5be4;
0xffffffff8135dddf: ret 0x5be8;
0xffffffff822c46c8: ret 0x5beb;
0xffffffff82398ff0: ret 0x5bed;
0xffffffff8254e051: ret 0x5bf8;
0xffffffff8140fe4e: ret 0x5bff;
0xffffffff8237bf33: ret 0x5c0a;
0xffffffff8175c262: ret 0x5c13;
0xffffffff825120f0: ret 0x5c14;
0xffffffff822c2db4: ret 0x5c18;
0xffffffff81045eb1: ret 0x5c1a;
0xffffffff822ffb22: ret 0x5c1c;
0xffffffff834734c9: ret 0x5c22;
0xffffffff834734fa: ret 0x5c2a;
0xffffffff82293946: ret 0x5c2b;
0xffffffff8197cf0d: ret 0x5c30;
0xffffffff8232dca8: ret 0x5c31;
0xffffffff823d9376: ret 0x5c32;
0xffffffff82468f8a: ret 0x5c35;
0xffffffff814e76ee: ret 0x5c37;
0xffffffff816bf7aa: ret 0x5c38;
0xffffffff82257882: ret 0x5c3d;
0xffffffff822ebff4: ret 0x5c40;
0xffffffff8175c9f8: ret 0x5c43;
0xffffffff8345785d: ret 0x5c47;
0xffffffff8248996a: ret 0x5c51;
0xffffffff8175c5f8: ret 0x5c56;
0xffffffff819aee54: ret 0x5c59;
0xffffffff816b0156: ret 0x5c5f;
0xffffffff824638de: ret 0x5c61;
0xffffffff8228c3ac: ret 0x5c62;
0xffffffff82473481: ret 0x5c67;
0xffffffff823d40c2: ret 0x5c68;
0xffffffff819ad954: ret 0x5c6e;
0xffffffff8229f506: ret 0x5c70;
0xffffffff834735be: ret 0x5c71;
0xffffffff810c645a: ret 0x5c74;
0xffffffff824dafda: ret 0x5c76;
0xffffffff83473349: ret 0x5c7b;
0xffffffff824b0069: ret 0x5c7e;
0xffffffff82418f1c: ret 0x5c83;
0xffffffff8175c3b6: ret 0x5c86;
0xffffffff819ac054: ret 0x5c87;
0xffffffff8165f937: ret 0x5c89;
0xffffffff81269e3e: ret 0x5c8b;
0xffffffff82235e24: ret 0x5c97;
0xffffffff822b546b: ret 0x5c98;
0xffffffff82257f0f: ret 0x5c99;
0xffffffff8247ec97: ret 0x5c9;
0xffffffff823e6645: ret 0x5c9f;
0xffffffff810b64a0: ret 0x5c;
0xffffffff81aecc6a: ret 0x5ca6;
0xffffffff8232067c: ret 0x5ca8;
0xffffffff824f599c: ret 0x5cac;
0xffffffff8175c4ff: ret 0x5cad;
0xffffffff824c37b5: ret 0x5cae;
0xffffffff815d5cb7: ret 0x5cb0;
0xffffffff822a0083: ret 0x5cb9;
0xffffffff83484a19: ret 0x5cbd;
0xffffffff8175ca36: ret 0x5cc0;
0xffffffff823ebd98: ret 0x5cd5;
0xffffffff822c004d: ret 0x5cd5;
0xffffffff8245ccc3: ret 0x5cd9;
0xffffffff82339a45: ret 0x5cdb;
0xffffffff8248d4e3: ret 0x5cdc;
0xffffffff8175c915: ret 0x5cde;
0xffffffff823b3d27: ret 0x5ce2;
0xffffffff823b3d28: ret 0x5ce2;
0xffffffff815d5ceb: ret 0x5ce4;
0xffffffff811de6ae: ret 0x5ce8;
0xffffffff8256914a: ret 0x5ce9;
0xffffffff81af435f: ret 0x5ceb;
0xffffffff810e374a: ret 0x5cf6;
0xffffffff823b7f4c: ret 0x5cf7;
0xffffffff8175c31b: ret 0x5cf8;
0xffffffff8105a2ba: ret 0x5cf;
0xffffffff8200d4b2: ret 0x5cff;
0xffffffff8249ade2: ret 0x5d00;
0xffffffff824aaa17: ret 0x5d02;
0xffffffff822f1877: ret 0x5d0a;
0xffffffff82491f4b: ret 0x5d0c;
0xffffffff8249b2f6: ret 0x5d0d;
0xffffffff82236bd7: ret 0x5d13;
0xffffffff819585e1: ret 0x5d14;
0xffffffff8235b3e6: ret 0x5d15;
0xffffffff81b55f5d: ret 0x5d18;
0xffffffff824bc962: ret 0x5d1c;
0xffffffff824bc961: ret 0x5d1c;
0xffffffff8175ca17: ret 0x5d1f;
0xffffffff82347bc2: ret 0x5d29;
0xffffffff819587aa: ret 0x5d2e;
0xffffffff82287eb3: ret 0x5d2f;
0xffffffff8175c9b9: ret 0x5d32;
0xffffffff82511731: ret 0x5d33;
0xffffffff822dad22: ret 0x5d3;
0xffffffff82512bef: ret 0x5d3f;
0xffffffff81496112: ret 0x5d40;
0xffffffff814967a5: ret 0x5d41;
0xffffffff81496ada: ret 0x5d42;
0xffffffff819587c5: ret 0x5d45;
0xffffffff819586a8: ret 0x5d49;
0xffffffff828cfa4c: ret 0x5d4;
0xffffffff822cdc7b: ret 0x5d4a;
0xffffffff8346cdba: ret 0x5d51;
0xffffffff8228d6e8: ret 0x5d57;
0xffffffff819586d4: ret 0x5d59;
0xffffffff8195881d: ret 0x5d5c;
0xffffffff82412ed3: ret 0x5d60;
0xffffffff8347d72f: ret 0x5d63;
0xffffffff8196c0da: ret 0x5d66;
0xffffffff8256aa1e: ret 0x5d68;
0xffffffff8347d764: ret 0x5d69;
0xffffffff8344ec5c: ret 0x5d6;
0xffffffff82460326: ret 0x5d6a;
0xffffffff8195872e: ret 0x5d6e;
0xffffffff8175d066: ret 0x5d70;
0xffffffff8347d7c8: ret 0x5d73;
0xffffffff824ad7d1: ret 0x5d76;
0xffffffff8347d50f: ret 0x5d77;
0xffffffff8347d7fd: ret 0x5d7f;
0xffffffff82320c05: ret 0x5d81;
0xffffffff825256c1: ret 0x5d82;
0xffffffff825256c0: ret 0x5d82;
0xffffffff82433ab3: ret 0x5d83;
0xffffffff8347d832: ret 0x5d85;
0xffffffff8346ce7a: ret 0x5d89;
0xffffffff8175d042: ret 0x5d8a;
0xffffffff8347d867: ret 0x5d8b;
0xffffffff822c1013: ret 0x5d8c;
0xffffffff822c1012: ret 0x5d8c;
0xffffffff81bc69b9: ret 0x5d8d;
0xffffffff8240c697: ret 0x5d8e;
0xffffffff8346cede: ret 0x5d90;
0xffffffff8347d8c7: ret 0x5d95;
0xffffffff8346ceac: ret 0x5d97;
0xffffffff8226a9f8: ret 0x5d99;
0xffffffff823ed15a: ret 0x5d9c;
0xffffffff824da143: ret 0x5d9f;
0xffffffff816a6cef: ret 0x5d;
0xffffffff8195847a: ret 0x5da1;
0xffffffff822a252a: ret 0x5da6;
0xffffffff8149a51e: ret 0x5da8;
0xffffffff8149be7c: ret 0x5da9;
0xffffffff8149be96: ret 0x5daa;
0xffffffff8149beea: ret 0x5dab;
0xffffffff8230f4c7: ret 0x5dac;
0xffffffff82404efd: ret 0x5daf;
0xffffffff824946e9: ret 0x5db0;
0xffffffff8195867c: ret 0x5db1;
0xffffffff82545841: ret 0x5dba;
0xffffffff8224469d: ret 0x5dbf;
0xffffffff8175d1bb: ret 0x5dc2;
0xffffffff81958702: ret 0x5dc5;
0xffffffff823dd105: ret 0x5dc8;
0xffffffff822af77a: ret 0x5dc;
0xffffffff8241ba09: ret 0x5dca;
0xffffffff822b034d: ret 0x5dcc;
0xffffffff822a6bf0: ret 0x5dcf;
0xffffffff818e9fc4: ret 0x5dd0;
0xffffffff824bbdda: ret 0x5dd1;
0xffffffff8248bfcf: ret 0x5dd5;
0xffffffff814a3b3f: ret 0x5dd9;
0xffffffff8173517b: ret 0x5dd;
0xffffffff814a4123: ret 0x5dda;
0xffffffff814a68f6: ret 0x5ddb;
0xffffffff82228599: ret 0x5ddd;
0xffffffff822b9a7f: ret 0x5dde;
0xffffffff82227181: ret 0x5ddf;
0xffffffff824301e4: ret 0x5de1;
0xffffffff8255ac73: ret 0x5de3;
0xffffffff8104cbed: ret 0x5de8;
0xffffffff823a77e1: ret 0x5dea;
0xffffffff8175d2ca: ret 0x5dea;
0xffffffff82464c63: ret 0x5deb;
0xffffffff8246b8ed: ret 0x5df7;
0xffffffff81987c7c: ret 0x5df8;
0xffffffff81987e53: ret 0x5e00;
0xffffffff824a42a3: ret 0x5e02;
0xffffffff825473d5: ret 0x5e04;
0xffffffff824025a2: ret 0x5e05;
0xffffffff8198c9d3: ret 0x5e08;
0xffffffff822e69d0: ret 0x5e09;
0xffffffff81551fa6: ret 0x5e0;
0xffffffff825233ae: ret 0x5e0b;
0xffffffff82294ab9: ret 0x5e0e;
0xffffffff81b567fe: ret 0x5e10;
0xffffffff82564fb9: ret 0x5e11;
0xffffffff8167f98a: ret 0x5e12;
0xffffffff823b6829: ret 0x5e18;
0xffffffff8198a529: ret 0x5e20;
0xffffffff814e8b87: ret 0x5e21;
0xffffffff8198ad2f: ret 0x5e24;
0xffffffff8198ac8b: ret 0x5e25;
0xffffffff8224a30a: ret 0x5e2c;
0xffffffff824256b3: ret 0x5e2d;
0xffffffff823a3b1b: ret 0x5e2f;
0xffffffff8198dd52: ret 0x5e30;
0xffffffff8198dd69: ret 0x5e31;
0xffffffff8246d193: ret 0x5e36;
0xffffffff8256ab42: ret 0x5e39;
0xffffffff824c61ab: ret 0x5e3c;
0xffffffff8199cad0: ret 0x5e40;
0xffffffff82358e02: ret 0x5e43;
0xffffffff82343e39: ret 0x5e45;
0xffffffff82343e3a: ret 0x5e45;
0xffffffff824ae770: ret 0x5e46;
0xffffffff822f5464: ret 0x5e47;
0xffffffff825da44a: ret 0x5e48;
0xffffffff8254f314: ret 0x5e4d;
0xffffffff8199cfa8: ret 0x5e50;
0xffffffff8199cfc2: ret 0x5e51;
0xffffffff8199cf70: ret 0x5e52;
0xffffffff8175d330: ret 0x5e58;
0xffffffff814a9219: ret 0x5e59;
0xffffffff81690656: ret 0x5e5a;
0xffffffff82507c61: ret 0x5e5b;
0xffffffff8175d37e: ret 0x5e60;
0xffffffff82258817: ret 0x5e67;
0xffffffff824bd8f4: ret 0x5e69;
0xffffffff823a3731: ret 0x5e6;
0xffffffff8169c36a: ret 0x5e6c;
0xffffffff812ee2c6: ret 0x5e70;
0xffffffff81747201: ret 0x5e71;
0xffffffff825033eb: ret 0x5e72;
0xffffffff8229627b: ret 0x5e77;
0xffffffff8175d358: ret 0x5e7a;
0xffffffff822f01a3: ret 0x5e87;
0xffffffff81b5b08c: ret 0x5e88;
0xffffffff81440911: ret 0x5e8;
0xffffffff816b1ecc: ret 0x5e8b;
0xffffffff816b2051: ret 0x5e96;
0xffffffff8247fbc7: ret 0x5e97;
0xffffffff8345c2c3: ret 0x5e9;
0xffffffff824c5651: ret 0x5e9b;
0xffffffff81689400: ret 0x5e;
0xffffffff8347da22: ret 0x5ea2;
0xffffffff82433731: ret 0x5ea3;
0xffffffff822bf4e5: ret 0x5ea4;
0xffffffff834577c7: ret 0x5ea6;
0xffffffff81b5b33c: ret 0x5ea8;
0xffffffff82519b04: ret 0x5ea;
0xffffffff8250a566: ret 0x5eb0;
0xffffffff82247b33: ret 0x5eb4;
0xffffffff8235cfdc: ret 0x5eb6;
0xffffffff823656ae: ret 0x5eb9;
0xffffffff811070a9: ret 0x5eb;
0xffffffff822b1e6e: ret 0x5ec4;
0xffffffff824e7df9: ret 0x5ec6;
0xffffffff8242946f: ret 0x5ecc;
0xffffffff823341e3: ret 0x5ecd;
0xffffffff824ad0fd: ret 0x5ecf;
0xffffffff824716db: ret 0x5ed4;
0xffffffff824f5435: ret 0x5ed6;
0xffffffff824c0f06: ret 0x5ed9;
0xffffffff824f5e6c: ret 0x5eda;
0xffffffff8233187a: ret 0x5ede;
0xffffffff81c4674a: ret 0x5edf;
0xffffffff8167a18a: ret 0x5ee3;
0xffffffff824971d2: ret 0x5ee4;
0xffffffff811d80ec: ret 0x5ee8;
0xffffffff81873923: ret 0x5ee;
0xffffffff824ca285: ret 0x5eed;
0xffffffff82479b22: ret 0x5ef3;
0xffffffff823c7c14: ret 0x5ef4;
0xffffffff8346d02b: ret 0x5ef8;
0xffffffff823b3981: ret 0x5efa;
0xffffffff810d015a: ret 0x5efb;
0xffffffff824c7bd9: ret 0x5efd;
0xffffffff81045ae5: ret 0x5f00;
0xffffffff82516d37: ret 0x5f04;
0xffffffff82290925: ret 0x5f0a;
0xffffffff8253522d: ret 0x5f13;
0xffffffff82572562: ret 0x5f14;
0xffffffff822589c7: ret 0x5f18;
0xffffffff822d5b72: ret 0x5f1;
0xffffffff82236a20: ret 0x5f1c;
0xffffffff82302212: ret 0x5f20;
0xffffffff82344e53: ret 0x5f24;
0xffffffff813a0800: ret 0x5f28;
0xffffffff822e77ae: ret 0x5f29;
0xffffffff8243ebd2: ret 0x5f2d;
0xffffffff8267983b: ret 0x5f31;
0xffffffff82473be9: ret 0x5f34;
0xffffffff82473bea: ret 0x5f34;
0xffffffff8226c478: ret 0x5f37;
0xffffffff810490c5: ret 0x5f38;
0xffffffff823b69a6: ret 0x5f41;
0xffffffff82497f81: ret 0x5f42;
0xffffffff810cb5fa: ret 0x5f46;
0xffffffff8346d233: ret 0x5f48;
0xffffffff815c849d: ret 0x5f4c;
0xffffffff8235e47c: ret 0x5f4d;
0xffffffff825226b4: ret 0x5f50;
0xffffffff82267eee: ret 0x5f51;
0xffffffff825619af: ret 0x5f58;
0xffffffff8253a299: ret 0x5f5b;
0xffffffff83474002: ret 0x5f5c;
0xffffffff8241d71b: ret 0x5f63;
0xffffffff824b752c: ret 0x5f64;
0xffffffff824a4006: ret 0x5f67;
0xffffffff82476622: ret 0x5f68;
0xffffffff82460041: ret 0x5f6;
0xffffffff824eaac2: ret 0x5f72;
0xffffffff8249ded8: ret 0x5f75;
0xffffffff8196d9e7: ret 0x5f76;
0xffffffff822a0426: ret 0x5f82;
0xffffffff82552a60: ret 0x5f85;
0xffffffff824a687e: ret 0x5f89;
0xffffffff83474128: ret 0x5f94;
0xffffffff824599a2: ret 0x5f96;
0xffffffff8175e02e: ret 0x5f99;
0xffffffff8222da4f: ret 0x5f9a;
0xffffffff8347415a: ret 0x5f9d;
0xffffffff8175ddfe: ret 0x5f9f;
0xffffffff8167940c: ret 0x5f;
0xffffffff8224b74f: ret 0x5fa3;
0xffffffff822f7bcc: ret 0x5fa4;
0xffffffff8175e0c3: ret 0x5fa5;
0xffffffff8347418c: ret 0x5fa6;
0xffffffff82383fc6: ret 0x5faa;
0xffffffff82383fc7: ret 0x5faa;
0xffffffff8175e330: ret 0x5fac;
0xffffffff8344bdc5: ret 0x5faf;
0xffffffff819a4b86: ret 0x5fb0;
0xffffffff819a4c06: ret 0x5fb4;
0xffffffff82428bb3: ret 0x5fb5;
0xffffffff82452193: ret 0x5fb7;
0xffffffff819af57e: ret 0x5fb8;
0xffffffff8189a87b: ret 0x5fb;
0xffffffff834741f0: ret 0x5fba;
0xffffffff819aea25: ret 0x5fbc;
0xffffffff823cb56b: ret 0x5fbf;
0xffffffff819b0365: ret 0x5fc0;
0xffffffff819b077f: ret 0x5fc1;
0xffffffff8113a163: ret 0x5fc2;
0xffffffff82266520: ret 0x5fc3;
0xffffffff8270005c: ret 0x5fc8;
0xffffffff8224ceb1: ret 0x5fc9;
0xffffffff8252e5ce: ret 0x5fca;
0xffffffff8346d540: ret 0x5fcb;
0xffffffff82351008: ret 0x5fd1;
0xffffffff82466c8d: ret 0x5fd;
0xffffffff834742b4: ret 0x5fda;
0xffffffff8346d571: ret 0x5fdb;
0xffffffff8113a182: ret 0x5fde;
0xffffffff823edefa: ret 0x5fdf;
0xffffffff8104f0ad: ret 0x5fe0;
0xffffffff8255f828: ret 0x5fe4;
0xffffffff8231a03b: ret 0x5fe6;
0xffffffff8134d8fb: ret 0x5fe8;
0xffffffff8127ea49: ret 0x5fe9;
0xffffffff8113a19d: ret 0x5fea;
0xffffffff8237523c: ret 0x5feb;
0xffffffff811c601f: ret 0x5ff0;
0xffffffff823c9c40: ret 0x5ff1;
0xffffffff819b3994: ret 0x5ff2;
0xffffffff8113a1b9: ret 0x5ff4;
0xffffffff811c603c: ret 0x5ff8;
0xffffffff822d9458: ret 0x5ffa;
0xffffffff824dd36b: ret 0x5ffb;
0xffffffff824fa33a: ret 0x5ffc;
0xffffffff8113a1d5: ret 0x5fff;
0xffffffff814045ea: ret 0x6000;
0xffffffff81a4be6b: ret 0x6001;
0xffffffff82506a82: ret 0x6005;
0xffffffff8113a1f0: ret 0x6008;
0xffffffff822b5293: ret 0x6009;
0xffffffff812ce50b: ret 0x600;
0xffffffff82232bcf: ret 0x600f;
0xffffffff824b56cf: ret 0x6010;
0xffffffff8175e34f: ret 0x6011;
0xffffffff823f3f72: ret 0x6016;
0xffffffff8113a215: ret 0x6016;
0xffffffff8175e136: ret 0x6018;
0xffffffff82211dd0: ret 0x601;
0xffffffff8223e8e8: ret 0x601d;
0xffffffff8175dcea: ret 0x601f;
0xffffffff8105022b: ret 0x6020;
0xffffffff81673f56: ret 0x6021;
0xffffffff81050240: ret 0x6024;
0xffffffff8175e44f: ret 0x6026;
0xffffffff823aa396: ret 0x6028;
0xffffffff8240a4af: ret 0x602;
0xffffffff8240a4b0: ret 0x602;
0xffffffff8113a24e: ret 0x602a;
0xffffffff8245d2f7: ret 0x6030;
0xffffffff8233e76b: ret 0x6034;
0xffffffff8113a268: ret 0x6037;
0xffffffff82213d96: ret 0x603;
0xffffffff8226776f: ret 0x603d;
0xffffffff810efe9a: ret 0x6040;
0xffffffff822722ec: ret 0x6042;
0xffffffff8113a282: ret 0x6044;
0xffffffff82383889: ret 0x604b;
0xffffffff82383888: ret 0x604b;
0xffffffff8113a29c: ret 0x604f;
0xffffffff823288b4: ret 0x6056;
0xffffffff8173521e: ret 0x605;
0xffffffff822e3be0: ret 0x605a;
0xffffffff8113a2b6: ret 0x605b;
0xffffffff823a8da8: ret 0x605d;
0xffffffff8247f198: ret 0x605e;
0xffffffff8247f19a: ret 0x605e;
0xffffffff82459cf2: ret 0x6060;
0xffffffff82538f65: ret 0x6061;
0xffffffff8224ff7e: ret 0x606;
0xffffffff8113a2d3: ret 0x606a;
0xffffffff824fcd6c: ret 0x6070;
0xffffffff822e5b91: ret 0x6073;
0xffffffff819f9c3a: ret 0x6074;
0xffffffff8125d3b8: ret 0x6075;
0xffffffff824782aa: ret 0x6076;
0xffffffff8113a2f0: ret 0x6078;
0xffffffff8244a57f: ret 0x607a;
0xffffffff81b0f481: ret 0x6080;
0xffffffff8234e874: ret 0x6084;
0xffffffff8113a30d: ret 0x6086;
0xffffffff82425f13: ret 0x6092;
0xffffffff8113a32a: ret 0x6095;
0xffffffff8166bcda: ret 0x6099;
0xffffffff810162c1: ret 0x60;
0xffffffff81669437: ret 0x60;
0xffffffff814a940b: ret 0x60a0;
0xffffffff814a9425: ret 0x60a1;
0xffffffff814a945e: ret 0x60a2;
0xffffffff814a94a9: ret 0x60a3;
0xffffffff8198b50a: ret 0x60a4;
0xffffffff8113a347: ret 0x60a6;
0xffffffff822f6f90: ret 0x60aa;
0xffffffff82454052: ret 0x60ab;
0xffffffff8165fbca: ret 0x60ae;
0xffffffff8113a364: ret 0x60b3;
0xffffffff8253da8a: ret 0x60b9;
0xffffffff8246769d: ret 0x60b;
0xffffffff8113a381: ret 0x60be;
0xffffffff819bf198: ret 0x60c0;
0xffffffff819bd345: ret 0x60c1;
0xffffffff819bd369: ret 0x60c2;
0xffffffff819bd3af: ret 0x60c3;
0xffffffff819bf243: ret 0x60c4;
0xffffffff8234e7e5: ret 0x60c7;
0xffffffff8249b847: ret 0x60cb;
0xffffffff82524d0b: ret 0x60d0;
0xffffffff8191ea50: ret 0x60d1;
0xffffffff825296de: ret 0x60e1;
0xffffffff811dee7a: ret 0x60e8;
0xffffffff8122d464: ret 0x60e9;
0xffffffff8174b48f: ret 0x60eb;
0xffffffff8223466c: ret 0x60ec;
0xffffffff810e9789: ret 0x60f0;
0xffffffff82413746: ret 0x60f4;
0xffffffff82413745: ret 0x60f4;
0xffffffff8229bc79: ret 0x60f;
0xffffffff823801b7: ret 0x60fb;
0xffffffff8249c3fa: ret 0x60fd;
0xffffffff810bb1ba: ret 0x6102;
0xffffffff834743d7: ret 0x6105;
0xffffffff823cff26: ret 0x6106;
0xffffffff8223a41d: ret 0x6107;
0xffffffff82457770: ret 0x6108;
0xffffffff8226dad8: ret 0x610;
0xffffffff81551fbd: ret 0x610;
0xffffffff83474408: ret 0x610a;
0xffffffff83474439: ret 0x6113;
0xffffffff82316187: ret 0x6114;
0xffffffff8251b076: ret 0x611b;
0xffffffff822b42fd: ret 0x611f;
0xffffffff824292b8: ret 0x6123;
0xffffffff826f9743: ret 0x6124;
0xffffffff82522155: ret 0x6128;
0xffffffff82302898: ret 0x6129;
0xffffffff82474867: ret 0x6132;
0xffffffff8244c88c: ret 0x613a;
0xffffffff8175026e: ret 0x613b;
0xffffffff824de929: ret 0x6140;
0xffffffff8251a3b4: ret 0x6142;
0xffffffff824718f9: ret 0x6143;
0xffffffff82530032: ret 0x6145;
0xffffffff823f54ab: ret 0x6148;
0xffffffff8232da54: ret 0x614c;
0xffffffff834744ff: ret 0x6150;
0xffffffff83474595: ret 0x6157;
0xffffffff825052d2: ret 0x6158;
0xffffffff82435491: ret 0x6159;
0xffffffff811d47ae: ret 0x615b;
0xffffffff834745c7: ret 0x615c;
0xffffffff825cd920: ret 0x6161;
0xffffffff8254ae60: ret 0x6163;
0xffffffff824a12ca: ret 0x6164;
0xffffffff823ef64d: ret 0x6165;
0xffffffff823e9092: ret 0x6169;
0xffffffff82352138: ret 0x616b;
0xffffffff822bcec2: ret 0x616c;
0xffffffff8346dc0b: ret 0x616d;
0xffffffff8346d4dd: ret 0x6171;
0xffffffff8105b51c: ret 0x6172;
0xffffffff813f56b5: ret 0x6174;
0xffffffff8251e18d: ret 0x6177;
0xffffffff82497cd4: ret 0x6178;
0xffffffff8346dc3c: ret 0x617d;
0xffffffff813a11d6: ret 0x617e;
0xffffffff8245c0cb: ret 0x617f;
0xffffffff822db8e3: ret 0x6181;
0xffffffff834747c6: ret 0x6188;
0xffffffff82507602: ret 0x618b;
0xffffffff8165c8da: ret 0x618d;
0xffffffff824f93ce: ret 0x618e;
0xffffffff822ce0a5: ret 0x618f;
0xffffffff8227e548: ret 0x6190;
0xffffffff8240cb2e: ret 0x6191;
0xffffffff823ca99e: ret 0x6192;
0xffffffff8251f795: ret 0x6193;
0xffffffff82344c2e: ret 0x6196;
0xffffffff823c4be8: ret 0x6198;
0xffffffff822c8e3b: ret 0x619b;
0xffffffff82512682: ret 0x619c;
0xffffffff8107cc48: ret 0x61;
0xffffffff82297cae: ret 0x61a5;
0xffffffff8255b485: ret 0x61a7;
0xffffffff82007b7c: ret 0x61a9;
0xffffffff82485a93: ret 0x61a;
0xffffffff82379e2e: ret 0x61aa;
0xffffffff823f4c52: ret 0x61ae;
0xffffffff813a1261: ret 0x61af;
0xffffffff82007c48: ret 0x61b2;
0xffffffff8229c3d7: ret 0x61b3;
0xffffffff822432fd: ret 0x61b4;
0xffffffff825d9df4: ret 0x61b6;
0xffffffff8228e862: ret 0x61b;
0xffffffff8248f368: ret 0x61c6;
0xffffffff828d6d14: ret 0x61c;
0xffffffff82336913: ret 0x61ce;
0xffffffff816c094c: ret 0x61cf;
0xffffffff824c4bed: ret 0x61d2;
0xffffffff823ae7b2: ret 0x61d4;
0xffffffff822d0c12: ret 0x61d5;
0xffffffff8230f8b2: ret 0x61d7;
0xffffffff8246f2bc: ret 0x61df;
0xffffffff81c7dd1d: ret 0x61e0;
0xffffffff8229a436: ret 0x61e1;
0xffffffff823aed67: ret 0x61e3;
0xffffffff822a4b61: ret 0x61e5;
0xffffffff811105e9: ret 0x61e8;
0xffffffff824bf5a5: ret 0x61ef;
0xffffffff81476668: ret 0x61f0;
0xffffffff822550d5: ret 0x61f3;
0xffffffff816f2a14: ret 0x61f6;
0xffffffff824698a4: ret 0x61f7;
0xffffffff81715a44: ret 0x61f8;
0xffffffff817352d7: ret 0x61f;
0xffffffff8267e2ef: ret 0x61fa;
0xffffffff823f17a2: ret 0x61fe;
0xffffffff822ad8d4: ret 0x61ff;
0xffffffff82346e96: ret 0x6200;
0xffffffff83439808: ret 0x6201;
0xffffffff8251b319: ret 0x6204;
0xffffffff825254d3: ret 0x6207;
0xffffffff816c142c: ret 0x6208;
0xffffffff8223f994: ret 0x620a;
0xffffffff8246c11b: ret 0x620e;
0xffffffff82007f9c: ret 0x6211;
0xffffffff816c1505: ret 0x6214;
0xffffffff82396180: ret 0x621a;
0xffffffff816c149e: ret 0x621c;
0xffffffff82379c65: ret 0x621d;
0xffffffff81766201: ret 0x6220;
0xffffffff826e3890: ret 0x6229;
0xffffffff82302492: ret 0x6234;
0xffffffff8253ffb8: ret 0x6238;
0xffffffff8268f579: ret 0x623a;
0xffffffff823e361f: ret 0x6242;
0xffffffff822e285c: ret 0x6245;
0xffffffff824dcbfd: ret 0x6246;
0xffffffff81b27707: ret 0x6248;
0xffffffff822570c2: ret 0x6249;
0xffffffff822987b6: ret 0x624;
0xffffffff823b2064: ret 0x624b;
0xffffffff8222d9b1: ret 0x624e;
0xffffffff822cd2f6: ret 0x6251;
0xffffffff823a5e04: ret 0x6252;
0xffffffff823b4da0: ret 0x625c;
0xffffffff82411651: ret 0x625e;
0xffffffff82304ff4: ret 0x626e;
0xffffffff81766251: ret 0x6270;
0xffffffff81c690f0: ret 0x6274;
0xffffffff816c2f37: ret 0x6278;
0xffffffff823ba8c5: ret 0x627a;
0xffffffff822af4ec: ret 0x627d;
0xffffffff8244fdc8: ret 0x6280;
0xffffffff822c6e2d: ret 0x6288;
0xffffffff81c13856: ret 0x628;
0xffffffff823efc27: ret 0x628a;
0xffffffff824250d5: ret 0x628b;
0xffffffff823ae0e3: ret 0x6290;
0xffffffff8253f261: ret 0x6292;
0xffffffff825273b4: ret 0x6295;
0xffffffff8223f3af: ret 0x6297;
0xffffffff8347491d: ret 0x629d;
0xffffffff822dd9c2: ret 0x629e;
0xffffffff824e6dbc: ret 0x629f;
0xffffffff8156637a: ret 0x62;
0xffffffff8225838d: ret 0x62a1;
0xffffffff824d4c0e: ret 0x62a3;
0xffffffff8347494b: ret 0x62a5;
0xffffffff816c7d40: ret 0x62a7;
0xffffffff82331048: ret 0x62b4;
0xffffffff816c7da4: ret 0x62b8;
0xffffffff8225b5e6: ret 0x62ba;
0xffffffff822d31ba: ret 0x62bc;
0xffffffff8180baac: ret 0x62c2;
0xffffffff82495391: ret 0x62c4;
0xffffffff8175eed4: ret 0x62c8;
0xffffffff816c7e0c: ret 0x62c9;
0xffffffff823b5797: ret 0x62ca;
0xffffffff82284584: ret 0x62cb;
0xffffffff816380ea: ret 0x62ce;
0xffffffff811ba762: ret 0x62cf;
0xffffffff815562df: ret 0x62d5;
0xffffffff8228c058: ret 0x62d6;
0xffffffff824d15dd: ret 0x62d;
0xffffffff8346e0e6: ret 0x62df;
0xffffffff82442a0f: ret 0x62e0;
0xffffffff816c7e59: ret 0x62e3;
0xffffffff8346e145: ret 0x62e6;
0xffffffff811b52e8: ret 0x62e8;
0xffffffff8196353e: ret 0x62e9;
0xffffffff81b51975: ret 0x62eb;
0xffffffff82440d0b: ret 0x62f1;
0xffffffff82281445: ret 0x62f2;
0xffffffff816c7eb7: ret 0x62f4;
0xffffffff82695ab7: ret 0x62fa;
0xffffffff823d156f: ret 0x6301;
0xffffffff8175ef87: ret 0x6309;
0xffffffff82427fd5: ret 0x630b;
0xffffffff816c7f25: ret 0x630e;
0xffffffff8253106d: ret 0x6310;
0xffffffff824ab81a: ret 0x6311;
0xffffffff8242066b: ret 0x6311;
0xffffffff822ca063: ret 0x6313;
0xffffffff82323eb5: ret 0x6316;
0xffffffff8175f07b: ret 0x6318;
0xffffffff824374ba: ret 0x6319;
0xffffffff8246cf3d: ret 0x631;
0xffffffff8230c670: ret 0x631d;
0xffffffff823954f5: ret 0x631e;
0xffffffff82329293: ret 0x6323;
0xffffffff8267dfeb: ret 0x6324;
0xffffffff826e38fb: ret 0x6329;
0xffffffff816c7f95: ret 0x632c;
0xffffffff83474a48: ret 0x632d;
0xffffffff8248cf01: ret 0x632e;
0xffffffff82279e41: ret 0x6333;
0xffffffff824a9b4a: ret 0x633d;
0xffffffff8230859b: ret 0x633e;
0xffffffff824219f8: ret 0x6345;
0xffffffff8118d76f: ret 0x6348;
0xffffffff81001aeb: ret 0x6349;
0xffffffff816c800c: ret 0x634a;
0xffffffff8179aa47: ret 0x634c;
0xffffffff813f5113: ret 0x634d;
0xffffffff82268ccb: ret 0x6351;
0xffffffff819cba3a: ret 0x6356;
0xffffffff824e7356: ret 0x6359;
0xffffffff8249a280: ret 0x635c;
0xffffffff825194ae: ret 0x635e;
0xffffffff82447bc8: ret 0x6366;
0xffffffff82453e61: ret 0x6369;
0xffffffff816c8078: ret 0x636a;
0xffffffff82334626: ret 0x636f;
0xffffffff8149436e: ret 0x6373;
0xffffffff81566a1f: ret 0x6374;
0xffffffff81940caa: ret 0x6375;
0xffffffff8241cc51: ret 0x6377;
0xffffffff82289d84: ret 0x637e;
0xffffffff818e7446: ret 0x637f;
0xffffffff8194f409: ret 0x6380;
0xffffffff82327bcc: ret 0x6382;
0xffffffff82322ffa: ret 0x6383;
0xffffffff816c80c9: ret 0x638a;
0xffffffff81b1646a: ret 0x638b;
0xffffffff82480ace: ret 0x638d;
0xffffffff8175f2e7: ret 0x6396;
0xffffffff824679c0: ret 0x6397;
0xffffffff8222f068: ret 0x6398;
0xffffffff816c811a: ret 0x6399;
0xffffffff8234356a: ret 0x63;
0xffffffff823ff284: ret 0x63a1;
0xffffffff8344df8e: ret 0x63a3;
0xffffffff8102ef0e: ret 0x63a8;
0xffffffff822402bf: ret 0x63a9;
0xffffffff828e8140: ret 0x63a;
0xffffffff82484929: ret 0x63ac;
0xffffffff8255e928: ret 0x63b2;
0xffffffff823f3c71: ret 0x63b7;
0xffffffff822509d7: ret 0x63b9;
0xffffffff817358ae: ret 0x63b;
0xffffffff83474c68: ret 0x63ba;
0xffffffff83447ca5: ret 0x63be;
0xffffffff816c81b8: ret 0x63c0;
0xffffffff83474c99: ret 0x63c2;
0xffffffff82688d3d: ret 0x63c4;
0xffffffff8231cff4: ret 0x63c5;
0xffffffff819c4a3a: ret 0x63c6;
0xffffffff834831e1: ret 0x63c9;
0xffffffff816c820c: ret 0x63cf;
0xffffffff81366298: ret 0x63d0;
0xffffffff8233b210: ret 0x63d6;
0xffffffff8246d096: ret 0x63d;
0xffffffff834592f9: ret 0x63df;
0xffffffff8223f468: ret 0x63e1;
0xffffffff822aab82: ret 0x63e3;
0xffffffff822f6f35: ret 0x63e5;
0xffffffff816c8263: ret 0x63e7;
0xffffffff8102ef6c: ret 0x63e8;
0xffffffff81b839aa: ret 0x63e9;
0xffffffff8237ad63: ret 0x63ea;
0xffffffff8268d2d8: ret 0x63f0;
0xffffffff822aa74a: ret 0x63f2;
0xffffffff8345938b: ret 0x63f3;
0xffffffff82233883: ret 0x63f6;
0xffffffff826cefcf: ret 0x63fa;
0xffffffff81219bd4: ret 0x63fc;
0xffffffff822f9666: ret 0x63ff;
0xffffffff81219ba9: ret 0x6400;
0xffffffff816c82b6: ret 0x6404;
0xffffffff81a76d6a: ret 0x6405;
0xffffffff8129c727: ret 0x6408;
0xffffffff83474dc8: ret 0x640b;
0xffffffff83474df9: ret 0x640f;
0xffffffff8175ff7b: ret 0x6412;
0xffffffff8248e7a5: ret 0x6413;
0xffffffff8224b4eb: ret 0x6417;
0xffffffff83474e2a: ret 0x641a;
0xffffffff8250dd38: ret 0x641f;
0xffffffff816c831c: ret 0x6421;
0xffffffff826ced1d: ret 0x6424;
0xffffffff8224d665: ret 0x642;
0xffffffff834966c6: ret 0x6430;
0xffffffff8240c518: ret 0x6432;
0xffffffff82501ba4: ret 0x6438;
0xffffffff816c837b: ret 0x6440;
0xffffffff8232974e: ret 0x6447;
0xffffffff82227b89: ret 0x644a;
0xffffffff822e8d30: ret 0x644b;
0xffffffff8256e5c3: ret 0x644c;
0xffffffff824992ea: ret 0x644d;
0xffffffff823dddc3: ret 0x645d;
0xffffffff816c8401: ret 0x645f;
0xffffffff824d8ab3: ret 0x6462;
0xffffffff8239a94f: ret 0x6466;
0xffffffff824a5ec1: ret 0x6468;
0xffffffff822d3155: ret 0x6469;
0xffffffff816c8493: ret 0x6474;
0xffffffff826ad3a6: ret 0x6475;
0xffffffff822cbf0f: ret 0x6476;
0xffffffff816973e8: ret 0x6477;
0xffffffff83474e88: ret 0x6478;
0xffffffff8164c5e8: ret 0x647;
0xffffffff8240adaf: ret 0x647b;
0xffffffff8246d69c: ret 0x647f;
0xffffffff83474eb9: ret 0x6480;
0xffffffff816c851f: ret 0x6489;
0xffffffff828e9438: ret 0x648;
0xffffffff8224ed19: ret 0x648c;
0xffffffff824e6ae6: ret 0x6490;
0xffffffff82229611: ret 0x6492;
0xffffffff823579ef: ret 0x6495;
0xffffffff816c85b3: ret 0x649e;
0xffffffff8180e5aa: ret 0x649f;
0xffffffff8162cf56: ret 0x64;
0xffffffff82372823: ret 0x64a2;
0xffffffff82431602: ret 0x64a4;
0xffffffff8242e301: ret 0x64a5;
0xffffffff824f7f3c: ret 0x64a6;
0xffffffff82285250: ret 0x64a7;
0xffffffff82286805: ret 0x64ac;
0xffffffff8226e450: ret 0x64ae;
0xffffffff822c3abb: ret 0x64af;
0xffffffff822c3abd: ret 0x64af;
0xffffffff83474f81: ret 0x64b1;
0xffffffff81637fca: ret 0x64b2;
0xffffffff816c8643: ret 0x64b6;
0xffffffff8162da0f: ret 0x64b7;
0xffffffff8224231f: ret 0x64bc;
0xffffffff824d70ef: ret 0x64c4;
0xffffffff83450a47: ret 0x64c8;
0xffffffff822a4f9c: ret 0x64c9;
0xffffffff81bccd7b: ret 0x64c;
0xffffffff82529d81: ret 0x64ca;
0xffffffff824f11cf: ret 0x64cb;
0xffffffff816c86cf: ret 0x64ce;
0xffffffff82542f77: ret 0x64d9;
0xffffffff811867e0: ret 0x64e0;
0xffffffff82340c6b: ret 0x64e6;
0xffffffff813587e6: ret 0x64e8;
0xffffffff824d77a1: ret 0x64e9;
0xffffffff822b1d3e: ret 0x64fd;
0xffffffff8200d3aa: ret 0x64ff;
0xffffffff8105da47: ret 0x6500;
0xffffffff81235e14: ret 0x6501;
0xffffffff822e394c: ret 0x6503;
0xffffffff8227aba1: ret 0x650b;
0xffffffff81a6666a: ret 0x650c;
0xffffffff824d7711: ret 0x6513;
0xffffffff824d770f: ret 0x6513;
0xffffffff82534bf7: ret 0x6517;
0xffffffff823f7fa0: ret 0x651;
0xffffffff8225670e: ret 0x651a;
0xffffffff823e726e: ret 0x651e;
0xffffffff8118773f: ret 0x6520;
0xffffffff81187ed9: ret 0x6521;
0xffffffff81188055: ret 0x6522;
0xffffffff81189a41: ret 0x6523;
0xffffffff822a8a8a: ret 0x6526;
0xffffffff8232a5c0: ret 0x6528;
0xffffffff822ee762: ret 0x6529;
0xffffffff82273cef: ret 0x652b;
0xffffffff82273cf0: ret 0x652b;
0xffffffff8118b513: ret 0x6530;
0xffffffff82537b56: ret 0x6533;
0xffffffff8346ed6b: ret 0x6535;
0xffffffff8253ee0d: ret 0x6537;
0xffffffff8345113e: ret 0x6541;
0xffffffff82461a01: ret 0x6542;
0xffffffff828eac70: ret 0x654;
0xffffffff8247ab96: ret 0x6557;
0xffffffff8247ab95: ret 0x6557;
0xffffffff82241e35: ret 0x6558;
0xffffffff82371351: ret 0x655;
0xffffffff83475269: ret 0x655b;
0xffffffff8253f5de: ret 0x6560;
0xffffffff819aac3a: ret 0x6564;
0xffffffff828eb010: ret 0x656;
0xffffffff834597ee: ret 0x656b;
0xffffffff812e4975: ret 0x6573;
0xffffffff813e8930: ret 0x6575;
0xffffffff83459823: ret 0x6577;
0xffffffff824988ad: ret 0x657a;
0xffffffff83470ef9: ret 0x657d;
0xffffffff82335ee8: ret 0x657e;
0xffffffff8232f3b3: ret 0x657f;
0xffffffff81277916: ret 0x6580;
0xffffffff822293cc: ret 0x6582;
0xffffffff822fe0b2: ret 0x6586;
0xffffffff823be140: ret 0x6588;
0xffffffff83459674: ret 0x658c;
0xffffffff8246a675: ret 0x6590;
0xffffffff83459889: ret 0x6598;
0xffffffff822cf861: ret 0x6599;
0xffffffff8253151b: ret 0x659a;
0xffffffff815f0eed: ret 0x65;
0xffffffff824166d8: ret 0x65a2;
0xffffffff83475361: ret 0x65a6;
0xffffffff8244ecd6: ret 0x65aa;
0xffffffff83475393: ret 0x65ac;
0xffffffff834598ba: ret 0x65ad;
0xffffffff822f49db: ret 0x65af;
0xffffffff81b156ba: ret 0x65b0;
0xffffffff83475427: ret 0x65b2;
0xffffffff824d5c72: ret 0x65b3;
0xffffffff82454346: ret 0x65b6;
0xffffffff8226bae5: ret 0x65b8;
0xffffffff834966de: ret 0x65c0;
0xffffffff823aa49f: ret 0x65c8;
0xffffffff825151b9: ret 0x65ca;
0xffffffff825151ba: ret 0x65ca;
0xffffffff8222bc24: ret 0x65cb;
0xffffffff8256ed1d: ret 0x65cd;
0xffffffff81c2c82a: ret 0x65d1;
0xffffffff8346ec0f: ret 0x65d2;
0xffffffff8175fee7: ret 0x65d3;
0xffffffff822f993d: ret 0x65d4;
0xffffffff822fc24f: ret 0x65d7;
0xffffffff822e6d64: ret 0x65e4;
0xffffffff8175fb31: ret 0x65e6;
0xffffffff817130c5: ret 0x65e8;
0xffffffff816228fa: ret 0x65e9;
0xffffffff824985de: ret 0x65ea;
0xffffffff82461d15: ret 0x65eb;
0xffffffff82536b7b: ret 0x65ec;
0xffffffff82361c38: ret 0x65ef;
0xffffffff823ac940: ret 0x65f0;
0xffffffff8118dc3d: ret 0x65f4;
0xffffffff81195d42: ret 0x65f5;
0xffffffff81195de7: ret 0x65f6;
0xffffffff81195f0e: ret 0x65f7;
0xffffffff81195f9a: ret 0x65f8;
0xffffffff81195fb4: ret 0x65f9;
0xffffffff81195f6a: ret 0x65fa;
0xffffffff8251dec5: ret 0x65fb;
0xffffffff81235f86: ret 0x65ff;
0xffffffff8105159b: ret 0x6600;
0xffffffff811119aa: ret 0x6601;
0xffffffff813eeb57: ret 0x6602;
0xffffffff810b1293: ret 0x6603;
0xffffffff81706455: ret 0x6604;
0xffffffff818c5770: ret 0x6605;
0xffffffff818edaa0: ret 0x6606;
0xffffffff8145f1a9: ret 0x6608;
0xffffffff822e6e4b: ret 0x6609;
0xffffffff8179ce6e: ret 0x660e;
0xffffffff8106a9ad: ret 0x6610;
0xffffffff818edd1d: ret 0x6612;
0xffffffff819d0e7d: ret 0x6614;
0xffffffff8175fa2e: ret 0x6615;
0xffffffff822a8097: ret 0x6616;
0xffffffff81af1b24: ret 0x6618;
0xffffffff8179cc92: ret 0x6619;
0xffffffff822946c4: ret 0x661c;
0xffffffff823181ed: ret 0x6624;
0xffffffff816162c8: ret 0x6628;
0xffffffff82546c0e: ret 0x662c;
0xffffffff823df590: ret 0x662d;
0xffffffff8163658c: ret 0x6630;
0xffffffff81379963: ret 0x6633;
0xffffffff822d1b4c: ret 0x6637;
0xffffffff8253f775: ret 0x663;
0xffffffff8191efd6: ret 0x663c;
0xffffffff8159664a: ret 0x6640;
0xffffffff8175fcb6: ret 0x6642;
0xffffffff82365339: ret 0x6643;
0xffffffff824f5b3f: ret 0x6645;
0xffffffff818554d2: ret 0x6650;
0xffffffff8248d466: ret 0x6652;
0xffffffff8175ff5b: ret 0x6655;
0xffffffff8241a0cd: ret 0x6656;
0xffffffff82410fe5: ret 0x6657;
0xffffffff8119bbc5: ret 0x6658;
0xffffffff8119c0ab: ret 0x665c;
0xffffffff8230fa46: ret 0x665e;
0xffffffff8147e0e5: ret 0x6660;
0xffffffff8119e4c4: ret 0x6661;
0xffffffff815fcd06: ret 0x6662;
0xffffffff823e5f91: ret 0x6664;
0xffffffff81056393: ret 0x6666;
0xffffffff825da724: ret 0x6668;
0xffffffff83475695: ret 0x666b;
0xffffffff82416cc2: ret 0x666c;
0xffffffff8253129c: ret 0x666e;
0xffffffff823a941d: ret 0x666f;
0xffffffff81a1a83e: ret 0x6670;
0xffffffff834756fc: ret 0x6671;
0xffffffff822fd775: ret 0x6676;
0xffffffff8161f9a4: ret 0x6679;
0xffffffff818ae9bf: ret 0x6682;
0xffffffff8175feb5: ret 0x6686;
0xffffffff82543f56: ret 0x6689;
0xffffffff82543f55: ret 0x6689;
0xffffffff81914852: ret 0x668;
0xffffffff82274e1c: ret 0x668f;
0xffffffff814ae539: ret 0x6690;
0xffffffff824082d0: ret 0x6696;
0xffffffff81795382: ret 0x66;
0xffffffff82571e54: ret 0x66a0;
0xffffffff822bbc64: ret 0x66a5;
0xffffffff8175fd40: ret 0x66a6;
0xffffffff81854815: ret 0x66b1;
0xffffffff82564570: ret 0x66b2;
0xffffffff8167ced5: ret 0x66ba;
0xffffffff8175025d: ret 0x66c1;
0xffffffff81007754: ret 0x66c3;
0xffffffff8256ea76: ret 0x66c7;
0xffffffff83475974: ret 0x66cd;
0xffffffff824df5a2: ret 0x66ce;
0xffffffff822d1d78: ret 0x66cf;
0xffffffff8252a9ab: ret 0x66d0;
0xffffffff82698d44: ret 0x66d3;
0xffffffff8229caa4: ret 0x66d4;
0xffffffff8199393a: ret 0x66d7;
0xffffffff81b84aa0: ret 0x66d8;
0xffffffff826843c8: ret 0x66d9;
0xffffffff8256bf79: ret 0x66d;
0xffffffff822eeb80: ret 0x66da;
0xffffffff82500d60: ret 0x66db;
0xffffffff8241ebc6: ret 0x66de;
0xffffffff819d1ced: ret 0x66e0;
0xffffffff81369a44: ret 0x66e8;
0xffffffff819ac39e: ret 0x66e9;
0xffffffff8124a9f8: ret 0x66eb;
0xffffffff819d0f37: ret 0x66ec;
0xffffffff8252acec: ret 0x66f0;
0xffffffff8233679f: ret 0x66f5;
0xffffffff8155eefe: ret 0x66f8;
0xffffffff82298900: ret 0x66f9;
0xffffffff8173651e: ret 0x66f;
0xffffffff8249317c: ret 0x66fb;
0xffffffff81a61e6b: ret 0x66fc;
0xffffffff81370324: ret 0x66ff;
0xffffffff825d82a9: ret 0x6700;
0xffffffff8237f3a0: ret 0x6704;
0xffffffff8237f3a1: ret 0x6704;
0xffffffff825d16d7: ret 0x6709;
0xffffffff8155215c: ret 0x670;
0xffffffff8175fe12: ret 0x6715;
0xffffffff82343ebc: ret 0x671;
0xffffffff82491d61: ret 0x671b;
0xffffffff8345c513: ret 0x672;
0xffffffff823c880d: ret 0x672a;
0xffffffff8244f12a: ret 0x672d;
0xffffffff823067da: ret 0x672e;
0xffffffff810a903a: ret 0x6730;
0xffffffff82285219: ret 0x6731;
0xffffffff8113c86a: ret 0x6734;
0xffffffff81514041: ret 0x673;
0xffffffff824f6da3: ret 0x6740;
0xffffffff8175fd80: ret 0x6745;
0xffffffff818ca8ea: ret 0x6746;
0xffffffff81113e51: ret 0x674;
0xffffffff824c3417: ret 0x674e;
0xffffffff81866731: ret 0x6750;
0xffffffff81947ad8: ret 0x6755;
0xffffffff82437d9f: ret 0x6756;
0xffffffff8166874a: ret 0x675;
0xffffffff83496437: ret 0x675f;
0xffffffff819bd36a: ret 0x6760;
0xffffffff8175fa45: ret 0x6761;
0xffffffff82390b23: ret 0x6766;
0xffffffff810afa1a: ret 0x676;
0xffffffff8252d938: ret 0x676a;
0xffffffff8252d939: ret 0x676a;
0xffffffff810a4e6a: ret 0x6772;
0xffffffff819a964e: ret 0x6774;
0xffffffff81a499c8: ret 0x6775;
0xffffffff8198973a: ret 0x6779;
0xffffffff810a443a: ret 0x677c;
0xffffffff81874bc0: ret 0x677e;
0xffffffff8229c680: ret 0x6781;
0xffffffff82497468: ret 0x6782;
0xffffffff824f0186: ret 0x6786;
0xffffffff8171a90c: ret 0x6788;
0xffffffff817bd96f: ret 0x678;
0xffffffff8247c1c3: ret 0x678d;
0xffffffff828eda74: ret 0x679;
0xffffffff8228a417: ret 0x679c;
0xffffffff815f9e3c: ret 0x67;
0xffffffff824b38bf: ret 0x67a0;
0xffffffff82566156: ret 0x67a4;
0xffffffff810a1a3a: ret 0x67a6;
0xffffffff81a4fd48: ret 0x67a7;
0xffffffff82384b8b: ret 0x67ab;
0xffffffff81456f8f: ret 0x67ad;
0xffffffff8226e9d6: ret 0x67b;
0xffffffff82521ff1: ret 0x67bd;
0xffffffff82558cbf: ret 0x67be;
0xffffffff82467927: ret 0x67c0;
0xffffffff824ad9f1: ret 0x67c2;
0xffffffff824ba1a7: ret 0x67c4;
0xffffffff8233897d: ret 0x67c;
0xffffffff822f5151: ret 0x67d0;
0xffffffff8247ff7e: ret 0x67d6;
0xffffffff822a5ea6: ret 0x67db;
0xffffffff8224d144: ret 0x67de;
0xffffffff82424dd3: ret 0x67e0;
0xffffffff823529ea: ret 0x67e6;
0xffffffff81405d33: ret 0x67e8;
0xffffffff81036a29: ret 0x67f0;
0xffffffff8270295b: ret 0x67f2;
0xffffffff824b4dea: ret 0x67f3;
0xffffffff8171be9c: ret 0x67f8;
0xffffffff826bf78b: ret 0x67fa;
0xffffffff8238425a: ret 0x67fb;
0xffffffff81be56ba: ret 0x67fc;
0xffffffff82350401: ret 0x6804;
0xffffffff822d7ae9: ret 0x6806;
0xffffffff8248ef34: ret 0x6808;
0xffffffff81224e35: ret 0x680;
0xffffffff822cd246: ret 0x680;
0xffffffff81a3626a: ret 0x6810;
0xffffffff83454cd6: ret 0x6812;
0xffffffff8231e2d2: ret 0x6816;
0xffffffff822a9504: ret 0x681c;
0xffffffff8232056a: ret 0x6821;
0xffffffff818ff4da: ret 0x6823;
0xffffffff823c9d7b: ret 0x682;
0xffffffff824afc4c: ret 0x682f;
0xffffffff82376304: ret 0x6834;
0xffffffff81405f82: ret 0x6839;
0xffffffff82264c4f: ret 0x683;
0xffffffff824aa1ef: ret 0x683e;
0xffffffff82356f9e: ret 0x683f;
0xffffffff8171bf11: ret 0x6840;
0xffffffff8109793a: ret 0x6847;
0xffffffff81c4f910: ret 0x684a;
0xffffffff814ee9ea: ret 0x684b;
0xffffffff82442540: ret 0x684c;
0xffffffff823a7676: ret 0x684e;
0xffffffff824d5cbe: ret 0x6850;
0xffffffff82277fea: ret 0x6851;
0xffffffff8236f0bf: ret 0x6852;
0xffffffff82557cf8: ret 0x6853;
0xffffffff8224fa49: ret 0x6855;
0xffffffff8109683a: ret 0x6858;
0xffffffff824f04cc: ret 0x685;
0xffffffff819ddb49: ret 0x6860;
0xffffffff824b63b4: ret 0x6862;
0xffffffff81095d3a: ret 0x6863;
0xffffffff82444755: ret 0x6866;
0xffffffff82316ea3: ret 0x6869;
0xffffffff8113ca8a: ret 0x686a;
0xffffffff83459c9e: ret 0x686d;
0xffffffff83455d44: ret 0x6871;
0xffffffff81601d20: ret 0x6872;
0xffffffff81341050: ret 0x6874;
0xffffffff83464bb8: ret 0x6878;
0xffffffff82527c46: ret 0x687e;
0xffffffff8253537a: ret 0x6888;
0xffffffff81002fba: ret 0x688;
0xffffffff81029eea: ret 0x688a;
0xffffffff81c27e3e: ret 0x688b;
0xffffffff822d16ec: ret 0x688c;
0xffffffff8238e8f0: ret 0x688e;
0xffffffff828ef104: ret 0x689;
0xffffffff82399533: ret 0x689d;
0xffffffff82477390: ret 0x689e;
0xffffffff81775402: ret 0x68;
0xffffffff81508b59: ret 0x68a0;
0xffffffff82286094: ret 0x68a4;
0xffffffff81b2cb39: ret 0x68a6;
0xffffffff824a5c91: ret 0x68a8;
0xffffffff835b4c0c: ret 0x68a9;
0xffffffff81adb574: ret 0x68a;
0xffffffff8109113a: ret 0x68af;
0xffffffff81090c6a: ret 0x68b4;
0xffffffff81c37065: ret 0x68b6;
0xffffffff82238f4b: ret 0x68b7;
0xffffffff82238f4a: ret 0x68b7;
0xffffffff8247680d: ret 0x68b;
0xffffffff822dc0a9: ret 0x68ba;
0xffffffff8171b425: ret 0x68c0;
0xffffffff8250e11e: ret 0x68c6;
0xffffffff8239f158: ret 0x68c7;
0xffffffff81402e9a: ret 0x68c;
0xffffffff823ab8bd: ret 0x68cf;
0xffffffff824a2ae5: ret 0x68d1;
0xffffffff834764bf: ret 0x68d4;
0xffffffff83471bdf: ret 0x68d7;
0xffffffff82376f59: ret 0x68d8;
0xffffffff819e365f: ret 0x68d9;
0xffffffff819e36c9: ret 0x68da;
0xffffffff819e6547: ret 0x68db;
0xffffffff819ef1b0: ret 0x68dc;
0xffffffff819ef7f0: ret 0x68dd;
0xffffffff823580df: ret 0x68de;
0xffffffff8236ef11: ret 0x68df;
0xffffffff8236ef12: ret 0x68df;
0xffffffff819f1de8: ret 0x68e0;
0xffffffff819f228e: ret 0x68e1;
0xffffffff82309723: ret 0x68e2;
0xffffffff823cfd1c: ret 0x68e3;
0xffffffff823cfd1b: ret 0x68e3;
0xffffffff83471c11: ret 0x68e5;
0xffffffff8103beae: ret 0x68e8;
0xffffffff8137d232: ret 0x68e9;
0xffffffff81811714: ret 0x68ed;
0xffffffff8230238c: ret 0x68ee;
0xffffffff81bd3b1c: ret 0x68f0;
0xffffffff8248c554: ret 0x68f3;
0xffffffff83459de6: ret 0x68f4;
0xffffffff811f9c5c: ret 0x68f8;
0xffffffff824d08a9: ret 0x68f;
0xffffffff8270a826: ret 0x68fa;
0xffffffff83476555: ret 0x68fc;
0xffffffff83459e14: ret 0x68fd;
0xffffffff8200d4a6: ret 0x68ff;
0xffffffff812d68ea: ret 0x6900;
0xffffffff818119a5: ret 0x6905;
0xffffffff825d554d: ret 0x6906;
0xffffffff8171dd50: ret 0x6908;
0xffffffff83476583: ret 0x690a;
0xffffffff81ba090c: ret 0x6910;
0xffffffff819f6fdf: ret 0x6914;
0xffffffff819f705b: ret 0x6915;
0xffffffff819f7075: ret 0x6916;
0xffffffff819f68ce: ret 0x6917;
0xffffffff8145b91a: ret 0x6918;
0xffffffff824c2217: ret 0x691a;
0xffffffff822d0859: ret 0x691b;
0xffffffff8108a26a: ret 0x691e;
0xffffffff8234c241: ret 0x6920;
0xffffffff822a3ddc: ret 0x6922;
0xffffffff83476923: ret 0x6924;
0xffffffff810dbb92: ret 0x6927;
0xffffffff825172df: ret 0x692c;
0xffffffff83483816: ret 0x6930;
0xffffffff82455a11: ret 0x6931;
0xffffffff83476951: ret 0x6932;
0xffffffff81088a3a: ret 0x6936;
0xffffffff814c2791: ret 0x6938;
0xffffffff823de311: ret 0x693a;
0xffffffff824d0373: ret 0x693c;
0xffffffff82229050: ret 0x693e;
0xffffffff819fd9ce: ret 0x6940;
0xffffffff819fd9e8: ret 0x6941;
0xffffffff819fd9ff: ret 0x6942;
0xffffffff81a02913: ret 0x6943;
0xffffffff817e4917: ret 0x6944;
0xffffffff81a02f3c: ret 0x6945;
0xffffffff81a04254: ret 0x6946;
0xffffffff810192c6: ret 0x6948;
0xffffffff8123927a: ret 0x6949;
0xffffffff818ecbc0: ret 0x694c;
0xffffffff81a06c2c: ret 0x694d;
0xffffffff8108726a: ret 0x694e;
0xffffffff81a07842: ret 0x6954;
0xffffffff81a0785c: ret 0x6955;
0xffffffff822c1bd8: ret 0x695b;
0xffffffff81a086f2: ret 0x695c;
0xffffffff81a0870c: ret 0x695d;
0xffffffff814b7a5f: ret 0x6960;
0xffffffff814b7ab9: ret 0x6961;
0xffffffff81a1bc95: ret 0x6964;
0xffffffff822e8389: ret 0x6966;
0xffffffff8231e554: ret 0x6967;
0xffffffff8255df56: ret 0x696c;
0xffffffff8255df55: ret 0x696c;
0xffffffff82351245: ret 0x696e;
0xffffffff822cedc0: ret 0x6970;
0xffffffff8146caa1: ret 0x6972;
0xffffffff824e5fac: ret 0x697;
0xffffffff82298868: ret 0x697c;
0xffffffff823694c6: ret 0x697d;
0xffffffff83470f91: ret 0x6980;
0xffffffff83470fab: ret 0x6981;
0xffffffff814b8a45: ret 0x6982;
0xffffffff814bb004: ret 0x6983;
0xffffffff825729a4: ret 0x6984;
0xffffffff81083a3a: ret 0x6986;
0xffffffff815e71da: ret 0x6987;
0xffffffff811f39a2: ret 0x698;
0xffffffff814c5741: ret 0x6990;
0xffffffff814c8803: ret 0x6991;
0xffffffff81082e6a: ret 0x6992;
0xffffffff814c884c: ret 0x6993;
0xffffffff814c88c6: ret 0x6994;
0xffffffff814c8985: ret 0x6995;
0xffffffff814ce0a3: ret 0x6996;
0xffffffff814ce0bd: ret 0x6997;
0xffffffff814d111a: ret 0x6998;
0xffffffff814d3f8c: ret 0x6999;
0xffffffff814dee56: ret 0x699a;
0xffffffff814dee73: ret 0x699b;
0xffffffff814def93: ret 0x699c;
0xffffffff814defad: ret 0x699d;
0xffffffff814defca: ret 0x699e;
0xffffffff8108213a: ret 0x699f;
0xffffffff810476ca: ret 0x69;
0xffffffff814dfdbe: ret 0x69a0;
0xffffffff814e8724: ret 0x69a1;
0xffffffff82507fef: ret 0x69a2;
0xffffffff82506f2a: ret 0x69a8;
0xffffffff814f6212: ret 0x69a9;
0xffffffff815869b5: ret 0x69ab;
0xffffffff8196603a: ret 0x69b0;
0xffffffff81080c3a: ret 0x69b4;
0xffffffff8242b1b9: ret 0x69b;
0xffffffff822ff193: ret 0x69ba;
0xffffffff8225f25f: ret 0x69bb;
0xffffffff8181259d: ret 0x69bd;
0xffffffff815e37da: ret 0x69c1;
0xffffffff8225e9c3: ret 0x69c7;
0xffffffff8251b1eb: ret 0x69ca;
0xffffffff8237c88f: ret 0x69cb;
0xffffffff8240e0ce: ret 0x69cc;
0xffffffff81812e84: ret 0x69d4;
0xffffffff82358023: ret 0x69e0;
0xffffffff824fdcb1: ret 0x69e2;
0xffffffff83459fc2: ret 0x69e3;
0xffffffff8110f85a: ret 0x69e8;
0xffffffff81934dc1: ret 0x69e9;
0xffffffff8248428c: ret 0x69f1;
0xffffffff826aaad8: ret 0x69f4;
0xffffffff8247cc62: ret 0x69f7;
0xffffffff82254d2a: ret 0x69f9;
0xffffffff8224a27f: ret 0x69f;
0xffffffff81813347: ret 0x6a01;
0xffffffff8245d04c: ret 0x6a02;
0xffffffff811f9b12: ret 0x6a08;
0xffffffff8234b2a1: ret 0x6a09;
0xffffffff82531ec4: ret 0x6a0a;
0xffffffff8196033a: ret 0x6a0d;
0xffffffff824f7a4d: ret 0x6a0e;
0xffffffff82461cf4: ret 0x6a0f;
0xffffffff8107af3a: ret 0x6a11;
0xffffffff824b4798: ret 0x6a16;
0xffffffff8107a46a: ret 0x6a1c;
0xffffffff8107a03a: ret 0x6a20;
0xffffffff83454dfd: ret 0x6a21;
0xffffffff823b95e9: ret 0x6a23;
0xffffffff8238dbc0: ret 0x6a26;
0xffffffff824838ab: ret 0x6a30;
0xffffffff824fcefb: ret 0x6a32;
0xffffffff8227f4d9: ret 0x6a33;
0xffffffff8191bdd3: ret 0x6a35;
0xffffffff8223830d: ret 0x6a36;
0xffffffff82540d66: ret 0x6a38;
0xffffffff823d1601: ret 0x6a40;
0xffffffff82245805: ret 0x6a41;
0xffffffff81077d6a: ret 0x6a43;
0xffffffff824e1d6c: ret 0x6a44;
0xffffffff834481a9: ret 0x6a45;
0xffffffff811f9a36: ret 0x6a48;
0xffffffff8107753a: ret 0x6a4b;
0xffffffff824f753f: ret 0x6a4d;
0xffffffff81a2d304: ret 0x6a50;
0xffffffff818133ad: ret 0x6a51;
0xffffffff81a36700: ret 0x6a52;
0xffffffff825736cd: ret 0x6a54;
0xffffffff8107693a: ret 0x6a57;
0xffffffff83442c2d: ret 0x6a58;
0xffffffff822ed41b: ret 0x6a59;
0xffffffff8231ba18: ret 0x6a5b;
0xffffffff81a38ca8: ret 0x6a5c;
0xffffffff81a38cc5: ret 0x6a5d;
0xffffffff81a3c66a: ret 0x6a5e;
0xffffffff824177d0: ret 0x6a69;
0xffffffff82251afe: ret 0x6a6;
0xffffffff824d049a: ret 0x6a6e;
0xffffffff817d26ec: ret 0x6a73;
0xffffffff81813086: ret 0x6a79;
0xffffffff82413a3a: ret 0x6a7b;
0xffffffff8229fed8: ret 0x6a7e;
0xffffffff813a9aea: ret 0x6a7f;
0xffffffff824a5849: ret 0x6a82;
0xffffffff81346757: ret 0x6a88;
0xffffffff825ce641: ret 0x6a89;
0xffffffff81961609: ret 0x6a93;
0xffffffff8235a947: ret 0x6a9a;
0xffffffff824be520: ret 0x6a9c;
0xffffffff824be521: ret 0x6a9c;
0xffffffff8101029c: ret 0x6a;
0xffffffff82427dfb: ret 0x6aa6;
0xffffffff81346847: ret 0x6aa8;
0xffffffff822fb370: ret 0x6aad;
0xffffffff82271e63: ret 0x6ab1;
0xffffffff8235b138: ret 0x6ab3;
0xffffffff8234f3c9: ret 0x6aba;
0xffffffff82501f0d: ret 0x6ac2;
0xffffffff818526a9: ret 0x6ac4;
0xffffffff822a2242: ret 0x6ac5;
0xffffffff81346867: ret 0x6ac8;
0xffffffff818133fe: ret 0x6ad6;
0xffffffff82272ce2: ret 0x6adb;
0xffffffff818e26b2: ret 0x6adc;
0xffffffff8115de05: ret 0x6ae0;
0xffffffff811a4470: ret 0x6ae8;
0xffffffff8139ae76: ret 0x6ae9;
0xffffffff825710ef: ret 0x6ae;
0xffffffff823ecc2d: ret 0x6aed;
0xffffffff819d2909: ret 0x6af0;
0xffffffff823503d5: ret 0x6af1;
0xffffffff823b24a8: ret 0x6af2;
0xffffffff82453e29: ret 0x6af6;
0xffffffff83428966: ret 0x6aff;
0xffffffff8150a975: ret 0x6b00;
0xffffffff82437b46: ret 0x6b02;
0xffffffff8236cd32: ret 0x6b05;
0xffffffff81032a8a: ret 0x6b09;
0xffffffff82270edd: ret 0x6b09;
0xffffffff81750463: ret 0x6b0;
0xffffffff81509bb6: ret 0x6b18;
0xffffffff8229b00e: ret 0x6b19;
0xffffffff82261fee: ret 0x6b1e;
0xffffffff8174f1ba: ret 0x6b24;
0xffffffff81813392: ret 0x6b27;
0xffffffff8248b6b6: ret 0x6b2;
0xffffffff8249c507: ret 0x6b2a;
0xffffffff8194e53a: ret 0x6b2b;
0xffffffff8174e7ba: ret 0x6b2e;
0xffffffff81bd661f: ret 0x6b30;
0xffffffff82435237: ret 0x6b33;
0xffffffff82561246: ret 0x6b36;
0xffffffff8253cb15: ret 0x6b39;
0xffffffff83476bf0: ret 0x6b3d;
0xffffffff8240d536: ret 0x6b3f;
0xffffffff812d44b8: ret 0x6b40;
0xffffffff815c2fe5: ret 0x6b41;
0xffffffff82339e26: ret 0x6b42;
0xffffffff822d7c00: ret 0x6b43;
0xffffffff83476c22: ret 0x6b45;
0xffffffff822d10f5: ret 0x6b47;
0xffffffff812abfa4: ret 0x6b48;
0xffffffff8196b945: ret 0x6b49;
0xffffffff8230d736: ret 0x6b4a;
0xffffffff81540ca6: ret 0x6b4c;
0xffffffff8181372a: ret 0x6b4f;
0xffffffff83473ae6: ret 0x6b53;
0xffffffff82424ef2: ret 0x6b54;
0xffffffff8110e37a: ret 0x6b55;
0xffffffff83476c8c: ret 0x6b5a;
0xffffffff815cd20a: ret 0x6b5d;
0xffffffff82535281: ret 0x6b63;
0xffffffff83476cf3: ret 0x6b65;
0xffffffff822cfb55: ret 0x6b69;
0xffffffff83476d25: ret 0x6b6e;
0xffffffff81508d8c: ret 0x6b70;
0xffffffff8254e04b: ret 0x6b72;
0xffffffff8237d5c4: ret 0x6b73;
0xffffffff81813b6b: ret 0x6b74;
0xffffffff8155cfc6: ret 0x6b76;
0xffffffff8106493a: ret 0x6b77;
0xffffffff83476d56: ret 0x6b79;
0xffffffff817498ba: ret 0x6b7d;
0xffffffff8150b48b: ret 0x6b80;
0xffffffff8150b4a5: ret 0x6b81;
0xffffffff8150b4bf: ret 0x6b82;
0xffffffff8150b4e4: ret 0x6b83;
0xffffffff8150d5e8: ret 0x6b84;
0xffffffff8150e074: ret 0x6b85;
0xffffffff822f8a5c: ret 0x6b89;
0xffffffff8253cf00: ret 0x6b8;
0xffffffff8150f961: ret 0x6b90;
0xffffffff81515bbc: ret 0x6b91;
0xffffffff81518978: ret 0x6b92;
0xffffffff815189aa: ret 0x6b93;
0xffffffff8151ac73: ret 0x6b94;
0xffffffff82515267: ret 0x6b94;
0xffffffff8151ca77: ret 0x6b95;
0xffffffff824beecb: ret 0x6b96;
0xffffffff81bdef52: ret 0x6b9;
0xffffffff83476fcb: ret 0x6b9a;
0xffffffff818139ba: ret 0x6b9f;
0xffffffff81944e7b: ret 0x6b;
0xffffffff81520d5e: ret 0x6ba0;
0xffffffff81bd198a: ret 0x6ba4;
0xffffffff8226ffc3: ret 0x6ba6;
0xffffffff82522417: ret 0x6ba8;
0xffffffff8151fe10: ret 0x6bb0;
0xffffffff8151fe2a: ret 0x6bb1;
0xffffffff8151fe44: ret 0x6bb2;
0xffffffff8151fe6c: ret 0x6bb3;
0xffffffff8151fe93: ret 0x6bb4;
0xffffffff8151feaa: ret 0x6bb5;
0xffffffff81520654: ret 0x6bb6;
0xffffffff81745dba: ret 0x6bb8;
0xffffffff814f1042: ret 0x6bb9;
0xffffffff8230f93d: ret 0x6bbb;
0xffffffff818139a2: ret 0x6bbe;
0xffffffff8152102f: ret 0x6bc0;
0xffffffff8152104c: ret 0x6bc1;
0xffffffff8162f059: ret 0x6bc5;
0xffffffff822d5f69: ret 0x6bc7;
0xffffffff828f37b0: ret 0x6bc;
0xffffffff814f12fb: ret 0x6bce;
0xffffffff82404066: ret 0x6bd5;
0xffffffff8252a941: ret 0x6bd7;
0xffffffff8252a942: ret 0x6bd7;
0xffffffff81736e08: ret 0x6bd;
0xffffffff824ec88a: ret 0x6bdd;
0xffffffff817436ba: ret 0x6bdf;
0xffffffff81c16bd5: ret 0x6be0;
0xffffffff814f15a3: ret 0x6be2;
0xffffffff8229dad4: ret 0x6be7;
0xffffffff81525f34: ret 0x6be8;
0xffffffff812621e0: ret 0x6be9;
0xffffffff81968dde: ret 0x6beb;
0xffffffff82573ba9: ret 0x6bee;
0xffffffff823c90b1: ret 0x6bef;
0xffffffff8153dda8: ret 0x6bf0;
0xffffffff8153dea0: ret 0x6bf1;
0xffffffff8238dfbc: ret 0x6bf2;
0xffffffff818b6633: ret 0x6bf3;
0xffffffff8229d21f: ret 0x6bf5;
0xffffffff822b195f: ret 0x6bf9;
0xffffffff82251a44: ret 0x6bf;
0xffffffff826e4411: ret 0x6bfa;
0xffffffff818b66c6: ret 0x6bfe;
0xffffffff8153eff0: ret 0x6c00;
0xffffffff8153f015: ret 0x6c01;
0xffffffff8161f8e4: ret 0x6c02;
0xffffffff81813a49: ret 0x6c03;
0xffffffff822cf72b: ret 0x6c07;
0xffffffff8244a929: ret 0x6c09;
0xffffffff817bdfd0: ret 0x6c0;
0xffffffff8229faca: ret 0x6c0a;
0xffffffff8236ee97: ret 0x6c0e;
0xffffffff82397253: ret 0x6c13;
0xffffffff824fa082: ret 0x6c1d;
0xffffffff83477173: ret 0x6c28;
0xffffffff826e38a8: ret 0x6c29;
0xffffffff81813e5c: ret 0x6c2a;
0xffffffff823b81e5: ret 0x6c2f;
0xffffffff8230a2d2: ret 0x6c31;
0xffffffff814f2844: ret 0x6c38;
0xffffffff8227c3ad: ret 0x6c3;
0xffffffff82265de3: ret 0x6c3a;
0xffffffff8244fe1a: ret 0x6c3c;
0xffffffff8251ef6e: ret 0x6c3d;
0xffffffff82403c40: ret 0x6c3e;
0xffffffff81476bef: ret 0x6c40;
0xffffffff815a6460: ret 0x6c42;
0xffffffff815a6535: ret 0x6c43;
0xffffffff814f2ba2: ret 0x6c44;
0xffffffff82349f32: ret 0x6c46;
0xffffffff823b3832: ret 0x6c47;
0xffffffff816f7753: ret 0x6c4d;
0xffffffff8342e78c: ret 0x6c51;
0xffffffff8226d4bf: ret 0x6c53;
0xffffffff815b0c9b: ret 0x6c54;
0xffffffff815b19ac: ret 0x6c55;
0xffffffff822d09f2: ret 0x6c5b;
0xffffffff824f8c99: ret 0x6c5d;
0xffffffff8236c669: ret 0x6c60;
0xffffffff82313830: ret 0x6c64;
0xffffffff823f0d26: ret 0x6c6e;
0xffffffff815c33d5: ret 0x6c70;
0xffffffff815c33ef: ret 0x6c71;
0xffffffff815c3449: ret 0x6c72;
0xffffffff81028ca0: ret 0x6c73;
0xffffffff815c34e6: ret 0x6c74;
0xffffffff815c3409: ret 0x6c75;
0xffffffff815c3a8a: ret 0x6c76;
0xffffffff82283952: ret 0x6c79;
0xffffffff822a2115: ret 0x6c7a;
0xffffffff8254adaf: ret 0x6c7c;
0xffffffff823196d7: ret 0x6c7d;
0xffffffff815c4f29: ret 0x6c80;
0xffffffff815c4ef7: ret 0x6c81;
0xffffffff815c5725: ret 0x6c82;
0xffffffff8247803f: ret 0x6c86;
0xffffffff817e270f: ret 0x6c87;
0xffffffff815f9fec: ret 0x6c88;
0xffffffff8165ceb7: ret 0x6c8b;
0xffffffff8256ce3a: ret 0x6c8d;
0xffffffff82348fa0: ret 0x6c8f;
0xffffffff824a6aa4: ret 0x6c93;
0xffffffff8239182c: ret 0x6c94;
0xffffffff8247b2a4: ret 0x6c96;
0xffffffff822f77ba: ret 0x6c9e;
0xffffffff81735402: ret 0x6c;
0xffffffff8101975a: ret 0x6ca1;
0xffffffff83489a89: ret 0x6ca5;
0xffffffff8181446a: ret 0x6cab;
0xffffffff8193603a: ret 0x6cb0;
0xffffffff82301ca1: ret 0x6cb1;
0xffffffff824a9b03: ret 0x6cb2;
0xffffffff825d5b15: ret 0x6cb;
0xffffffff81017e5a: ret 0x6cba;
0xffffffff818140b9: ret 0x6cbc;
0xffffffff82312574: ret 0x6cbd;
0xffffffff81c1639a: ret 0x6cc;
0xffffffff82469b50: ret 0x6cca;
0xffffffff8242168c: ret 0x6cce;
0xffffffff818143e7: ret 0x6cd0;
0xffffffff826bce5b: ret 0x6cd3;
0xffffffff82312045: ret 0x6cd4;
0xffffffff82335c0b: ret 0x6cd5;
0xffffffff81bdbd0c: ret 0x6cd8;
0xffffffff8226db96: ret 0x6ce0;
0xffffffff813ad26d: ret 0x6ce5;
0xffffffff8100c3ae: ret 0x6ce8;
0xffffffff8150e31e: ret 0x6ce9;
0xffffffff81876e8c: ret 0x6ceb;
0xffffffff818140fa: ret 0x6cef;
0xffffffff819e826a: ret 0x6cf0;
0xffffffff826c88f6: ret 0x6cf4;
0xffffffff822e7b16: ret 0x6cf8;
0xffffffff8234ddef: ret 0x6cfa;
0xffffffff81731aba: ret 0x6cfb;
0xffffffff815a09f2: ret 0x6d00;
0xffffffff817be470: ret 0x6d0;
0xffffffff813ad2b3: ret 0x6d13;
0xffffffff822598e7: ret 0x6d14;
0xffffffff81814442: ret 0x6d15;
0xffffffff823ac3cf: ret 0x6d1f;
0xffffffff8250acb9: ret 0x6d20;
0xffffffff824299d3: ret 0x6d21;
0xffffffff8111e33e: ret 0x6d2b;
0xffffffff82256a81: ret 0x6d2f;
0xffffffff8344d612: ret 0x6d30;
0xffffffff822d9596: ret 0x6d31;
0xffffffff8230f9e2: ret 0x6d39;
0xffffffff8228ec7c: ret 0x6d43;
0xffffffff81814152: ret 0x6d45;
0xffffffff8226d50a: ret 0x6d46;
0xffffffff8236399f: ret 0x6d48;
0xffffffff824925fe: ret 0x6d4c;
0xffffffff82342439: ret 0x6d50;
0xffffffff82232157: ret 0x6d56;
0xffffffff8244e870: ret 0x6d57;
0xffffffff822d4d0a: ret 0x6d5;
0xffffffff8181475c: ret 0x6d5a;
0xffffffff824b0820: ret 0x6d60;
0xffffffff82539977: ret 0x6d68;
0xffffffff82466159: ret 0x6d69;
0xffffffff82472880: ret 0x6d6d;
0xffffffff824f5aa6: ret 0x6d6f;
0xffffffff819675f6: ret 0x6d77;
0xffffffff823d2337: ret 0x6d78;
0xffffffff828f5650: ret 0x6d7;
0xffffffff818bc82a: ret 0x6d7b;
0xffffffff82555905: ret 0x6d7f;
0xffffffff82365268: ret 0x6d80;
0xffffffff823f13f2: ret 0x6d81;
0xffffffff8234f7e5: ret 0x6d83;
0xffffffff82352cd4: ret 0x6d86;
0xffffffff82230da8: ret 0x6d8c;
0xffffffff8247dfe1: ret 0x6d94;
0xffffffff8223862f: ret 0x6d95;
0xffffffff82238630: ret 0x6d95;
0xffffffff8255a589: ret 0x6d99;
0xffffffff818142da: ret 0x6d9b;
0xffffffff81725422: ret 0x6d;
0xffffffff81814346: ret 0x6da4;
0xffffffff828f57b8: ret 0x6da;
0xffffffff8240205f: ret 0x6dac;
0xffffffff823f4f1d: ret 0x6db;
0xffffffff8250e3cc: ret 0x6dbf;
0xffffffff8181459b: ret 0x6dc1;
0xffffffff816e11d4: ret 0x6dca;
0xffffffff816e11fd: ret 0x6dcf;
0xffffffff822e9acc: ret 0x6dd1;
0xffffffff822e9acb: ret 0x6dd1;
0xffffffff8224a912: ret 0x6dd2;
0xffffffff8229dc72: ret 0x6dd3;
0xffffffff8230f6c6: ret 0x6dd4;
0xffffffff8224e546: ret 0x6dd6;
0xffffffff822cc346: ret 0x6dd8;
0xffffffff81814649: ret 0x6dd9;
0xffffffff8234ad58: ret 0x6dde;
0xffffffff8230330a: ret 0x6de2;
0xffffffff824d99c7: ret 0x6de3;
0xffffffff825da6c3: ret 0x6de4;
0xffffffff811ea0cd: ret 0x6de8;
0xffffffff81626ef4: ret 0x6de9;
0xffffffff822850c0: ret 0x6deb;
0xffffffff822850bf: ret 0x6deb;
0xffffffff823b7b99: ret 0x6dee;
0xffffffff823cd8a6: ret 0x6def;
0xffffffff8255e246: ret 0x6df0;
0xffffffff8222a7e9: ret 0x6df7;
0xffffffff823dabb0: ret 0x6df;
0xffffffff82408619: ret 0x6e00;
0xffffffff825d5b06: ret 0x6e01;
0xffffffff813ad66b: ret 0x6e06;
0xffffffff822ef4bc: ret 0x6e07;
0xffffffff822ef4ba: ret 0x6e07;
0xffffffff817bec77: ret 0x6e0;
0xffffffff823243b3: ret 0x6e0b;
0xffffffff823243b2: ret 0x6e0b;
0xffffffff8251941f: ret 0x6e0e;
0xffffffff8181465f: ret 0x6e17;
0xffffffff823b643f: ret 0x6e19;
0xffffffff824d51cc: ret 0x6e1;
0xffffffff8241e9d3: ret 0x6e1a;
0xffffffff824bcfcd: ret 0x6e1c;
0xffffffff822c3051: ret 0x6e21;
0xffffffff8234a98d: ret 0x6e24;
0xffffffff8248f984: ret 0x6e2d;
0xffffffff82255b25: ret 0x6e31;
0xffffffff83477602: ret 0x6e34;
0xffffffff819de9fa: ret 0x6e3c;
0xffffffff823532c7: ret 0x6e3d;
0xffffffff8344e837: ret 0x6e46;
0xffffffff822c61c8: ret 0x6e47;
0xffffffff822fa3d2: ret 0x6e48;
0xffffffff823d70c9: ret 0x6e4c;
0xffffffff824e6b1c: ret 0x6e4e;
0xffffffff824bc2e0: ret 0x6e54;
0xffffffff81814689: ret 0x6e5a;
0xffffffff82553f5e: ret 0x6e5d;
0xffffffff8234c9e4: ret 0x6e6e;
0xffffffff82480fe7: ret 0x6e70;
0xffffffff8232db2b: ret 0x6e72;
0xffffffff8132cd66: ret 0x6e73;
0xffffffff82292ecd: ret 0x6e74;
0xffffffff82542466: ret 0x6e78;
0xffffffff824526ef: ret 0x6e7c;
0xffffffff822daeab: ret 0x6e7e;
0xffffffff8196271f: ret 0x6e87;
0xffffffff8181b244: ret 0x6e8;
0xffffffff813adfc2: ret 0x6e8c;
0xffffffff815aa9b0: ret 0x6e8e;
0xffffffff8222c799: ret 0x6e95;
0xffffffff82280898: ret 0x6e96;
0xffffffff819626fb: ret 0x6e99;
0xffffffff814f3f54: ret 0x6e9a;
0xffffffff8181469f: ret 0x6e9b;
0xffffffff822adc11: ret 0x6e9f;
0xffffffff81914ec8: ret 0x6e;
0xffffffff8223e46e: ret 0x6ea6;
0xffffffff8229b06b: ret 0x6ea9;
0xffffffff81736db4: ret 0x6ea;
0xffffffff814f53a6: ret 0x6eaa;
0xffffffff82410b81: ret 0x6eab;
0xffffffff834777b0: ret 0x6ead;
0xffffffff8191623a: ret 0x6eae;
0xffffffff834777de: ret 0x6eb5;
0xffffffff811dfd85: ret 0x6eb;
0xffffffff814f58b9: ret 0x6eba;
0xffffffff82521e5a: ret 0x6ebd;
0xffffffff825cdc62: ret 0x6ec2;
0xffffffff82372213: ret 0x6ec3;
0xffffffff8256e6e6: ret 0x6ec6;
0xffffffff8256e6e7: ret 0x6ec6;
0xffffffff82425b64: ret 0x6ec7;
0xffffffff816b3ac2: ret 0x6ec8;
0xffffffff814f632c: ret 0x6ecd;
0xffffffff823d68d0: ret 0x6ece;
0xffffffff82255da6: ret 0x6ecf;
0xffffffff813ae71e: ret 0x6ed1;
0xffffffff825ce063: ret 0x6ed3;
0xffffffff822d50b2: ret 0x6ed7;
0xffffffff8247f8f2: ret 0x6ed;
0xffffffff810b9dda: ret 0x6edc;
0xffffffff810c7ffc: ret 0x6ee8;
0xffffffff811aecfc: ret 0x6ee9;
0xffffffff8238e7b1: ret 0x6ee;
0xffffffff81815982: ret 0x6eeb;
0xffffffff825618fb: ret 0x6eed;
0xffffffff8249db35: ret 0x6eef;
0xffffffff826c823d: ret 0x6ef0;
0xffffffff825d64e6: ret 0x6ef4;
0xffffffff823225cc: ret 0x6ef9;
0xffffffff815c8ca1: ret 0x6f08;
0xffffffff815c8cbb: ret 0x6f09;
0xffffffff8193f72c: ret 0x6f0;
0xffffffff815c8d04: ret 0x6f0a;
0xffffffff815c8d1e: ret 0x6f0b;
0xffffffff815c8cd5: ret 0x6f0c;
0xffffffff822c40c9: ret 0x6f0d;
0xffffffff81416e1f: ret 0x6f10;
0xffffffff815cb02b: ret 0x6f11;
0xffffffff815cb045: ret 0x6f12;
0xffffffff815cb05f: ret 0x6f13;
0xffffffff815cafba: ret 0x6f14;
0xffffffff82256710: ret 0x6f15;
0xffffffff82256711: ret 0x6f15;
0xffffffff814559a9: ret 0x6f20;
0xffffffff823d7949: ret 0x6f26;
0xffffffff8234fa74: ret 0x6f2;
0xffffffff816c3d71: ret 0x6f33;
0xffffffff815cfbfa: ret 0x6f38;
0xffffffff815cfda0: ret 0x6f39;
0xffffffff815cfdba: ret 0x6f3a;
0xffffffff815cff3d: ret 0x6f3b;
0xffffffff815cff7a: ret 0x6f3c;
0xffffffff815cff91: ret 0x6f3d;
0xffffffff815d2a48: ret 0x6f3e;
0xffffffff81962777: ret 0x6f44;
0xffffffff815d41c8: ret 0x6f48;
0xffffffff815d41e2: ret 0x6f49;
0xffffffff82686f9f: ret 0x6f4;
0xffffffff815d41f9: ret 0x6f4a;
0xffffffff815d4216: ret 0x6f4b;
0xffffffff823c5ae9: ret 0x6f4d;
0xffffffff81815b98: ret 0x6f4e;
0xffffffff817d6448: ret 0x6f50;
0xffffffff82351444: ret 0x6f53;
0xffffffff82281e92: ret 0x6f55;
0xffffffff81b8d800: ret 0x6f58;
0xffffffff81b8d83a: ret 0x6f59;
0xffffffff81b8d854: ret 0x6f5a;
0xffffffff81b8d86e: ret 0x6f5b;
0xffffffff81b920f0: ret 0x6f5d;
0xffffffff82568872: ret 0x6f62;
0xffffffff818171e4: ret 0x6f64;
0xffffffff8357958a: ret 0x6f65;
0xffffffff82235f8d: ret 0x6f6b;
0xffffffff822decd0: ret 0x6f6d;
0xffffffff8233f875: ret 0x6f6f;
0xffffffff81a088ef: ret 0x6f70;
0xffffffff817d61eb: ret 0x6f72;
0xffffffff8181735d: ret 0x6f74;
0xffffffff822dc178: ret 0x6f7;
0xffffffff826f3fb8: ret 0x6f7e;
0xffffffff8230591f: ret 0x6f80;
0xffffffff82364008: ret 0x6f8d;
0xffffffff82364009: ret 0x6f8d;
0xffffffff82364007: ret 0x6f8d;
0xffffffff8185feaa: ret 0x6f98;
0xffffffff8230be50: ret 0x6f9;
0xffffffff822b048e: ret 0x6f9f;
0xffffffff81705462: ret 0x6f;
0xffffffff82390c68: ret 0x6fa2;
0xffffffff822933fe: ret 0x6fa7;
0xffffffff81817a1b: ret 0x6fab;
0xffffffff82572372: ret 0x6fad;
0xffffffff822cabde: ret 0x6faf;
0xffffffff83477c05: ret 0x6fb5;
0xffffffff815e1217: ret 0x6fb8;
0xffffffff815e123d: ret 0x6fb9;
0xffffffff82340cab: ret 0x6fba;
0xffffffff822f7f32: ret 0x6fbf;
0xffffffff82278a67: ret 0x6fc2;
0xffffffff8253f2c5: ret 0x6fc3;
0xffffffff815e4181: ret 0x6fd0;
0xffffffff815e419b: ret 0x6fd1;
0xffffffff815e41f7: ret 0x6fd2;
0xffffffff815e7b08: ret 0x6fd3;
0xffffffff815e7b22: ret 0x6fd4;
0xffffffff815e7a96: ret 0x6fd5;
0xffffffff82327415: ret 0x6fd8;
0xffffffff815ec79b: ret 0x6fe0;
0xffffffff8237db6a: ret 0x6fe4;
0xffffffff8161f681: ret 0x6fe5;
0xffffffff823af7d3: ret 0x6fe6;
0xffffffff81c7c6a7: ret 0x6fe8;
0xffffffff810e370c: ret 0x6fe9;
0xffffffff823d0af7: ret 0x6fea;
0xffffffff824f5f32: ret 0x6fed;
0xffffffff823753c2: ret 0x6fee;
0xffffffff815f0ec3: ret 0x6ff0;
0xffffffff82417d0b: ret 0x6ff1;
0xffffffff826ff007: ret 0x6ff5;
0xffffffff824c2ba9: ret 0x6ff6;
0xffffffff81811236: ret 0x6ff8;
0xffffffff82234f30: ret 0x6ffa;
0xffffffff8264fffa: ret 0x6fff;
0xffffffff826501fd: ret 0x6fff;
0xffffffff83432172: ret 0x7000;
0xffffffff82230909: ret 0x7001;
0xffffffff81950365: ret 0x700;
0xffffffff822bdb08: ret 0x700a;
0xffffffff815f3431: ret 0x7010;
0xffffffff815f3456: ret 0x7011;
0xffffffff815f3473: ret 0x7012;
0xffffffff8245c7af: ret 0x7018;
0xffffffff824aa110: ret 0x701a;
0xffffffff82322baf: ret 0x7022;
0xffffffff825683b2: ret 0x7023;
0xffffffff81817fb8: ret 0x7024;
0xffffffff815f6748: ret 0x7028;
0xffffffff822c1437: ret 0x702a;
0xffffffff82465416: ret 0x7032;
0xffffffff824f7f33: ret 0x7036;
0xffffffff815faa65: ret 0x7038;
0xffffffff81b48dc0: ret 0x7039;
0xffffffff822576f0: ret 0x703;
0xffffffff815fb884: ret 0x703d;
0xffffffff8181886b: ret 0x7040;
0xffffffff8256245b: ret 0x7041;
0xffffffff8256245a: ret 0x7041;
0xffffffff8241b2ae: ret 0x7042;
0xffffffff824c803e: ret 0x7044;
0xffffffff8253a027: ret 0x7045;
0xffffffff815fcfde: ret 0x7048;
0xffffffff825153cc: ret 0x7049;
0xffffffff82527f4f: ret 0x704;
0xffffffff81707024: ret 0x7050;
0xffffffff8234fde6: ret 0x7051;
0xffffffff822a7391: ret 0x7055;
0xffffffff822a7390: ret 0x7055;
0xffffffff8223ec13: ret 0x7057;
0xffffffff818188fc: ret 0x7059;
0xffffffff82492329: ret 0x705f;
0xffffffff823db8a0: ret 0x7064;
0xffffffff815fe49e: ret 0x7068;
0xffffffff8186fa3a: ret 0x7069;
0xffffffff8228102e: ret 0x706d;
0xffffffff822af925: ret 0x7072;
0xffffffff81113db2: ret 0x7073;
0xffffffff82229415: ret 0x7075;
0xffffffff81554661: ret 0x7078;
0xffffffff81818934: ret 0x707a;
0xffffffff81535b03: ret 0x7080;
0xffffffff81c1af0f: ret 0x708;
0xffffffff816001a2: ret 0x708d;
0xffffffff8160025b: ret 0x708e;
0xffffffff816001cc: ret 0x708f;
0xffffffff81604033: ret 0x7090;
0xffffffff81604cb8: ret 0x7091;
0xffffffff82473991: ret 0x7095;
0xffffffff8160bec2: ret 0x7098;
0xffffffff8160bedc: ret 0x7099;
0xffffffff822718dc: ret 0x70;
0xffffffff82511299: ret 0x70a5;
0xffffffff823e5d8a: ret 0x70a7;
0xffffffff83478f3c: ret 0x70b0;
0xffffffff82294e8d: ret 0x70b1;
0xffffffff822a59f3: ret 0x70b2;
0xffffffff82539093: ret 0x70b3;
0xffffffff8231f5fb: ret 0x70b5;
0xffffffff82519c9d: ret 0x70b7;
0xffffffff81962568: ret 0x70b9;
0xffffffff817e70b1: ret 0x70c0;
0xffffffff824426d6: ret 0x70c2;
0xffffffff8181895d: ret 0x70c5;
0xffffffff822c6c1e: ret 0x70c7;
0xffffffff8227819d: ret 0x70c8;
0xffffffff8227118d: ret 0x70cd;
0xffffffff8268c246: ret 0x70d3;
0xffffffff82360da1: ret 0x70d5;
0xffffffff8196274b: ret 0x70d6;
0xffffffff81756e46: ret 0x70e0;
0xffffffff811c006a: ret 0x70e8;
0xffffffff8156e77a: ret 0x70e9;
0xffffffff8160ebac: ret 0x70ea;
0xffffffff834639a9: ret 0x70f6;
0xffffffff82233752: ret 0x70f8;
0xffffffff82691e58: ret 0x70fa;
0xffffffff8200d39e: ret 0x70ff;
0xffffffff81936b6a: ret 0x7100;
0xffffffff825306b2: ret 0x7102;
0xffffffff8252255e: ret 0x7106;
0xffffffff825b03da: ret 0x7108;
0xffffffff83499da1: ret 0x710;
0xffffffff824f87f8: ret 0x710c;
0xffffffff818188ba: ret 0x7113;
0xffffffff814f6df8: ret 0x7117;
0xffffffff8161ec3d: ret 0x7118;
0xffffffff828fba54: ret 0x711;
0xffffffff82261352: ret 0x7121;
0xffffffff824caa5e: ret 0x7124;
0xffffffff82492ef8: ret 0x7128;
0xffffffff81036014: ret 0x712e;
0xffffffff823a788f: ret 0x712f;
0xffffffff8103710d: ret 0x7130;
0xffffffff81818e0d: ret 0x7133;
0xffffffff819a3cba: ret 0x7135;
0xffffffff82207900: ret 0x7136;
0xffffffff82483e81: ret 0x713;
0xffffffff82282ddc: ret 0x713e;
0xffffffff81620e8d: ret 0x7140;
0xffffffff81963777: ret 0x7143;
0xffffffff82281359: ret 0x714b;
0xffffffff823d6e0e: ret 0x714e;
0xffffffff8226b851: ret 0x7150;
0xffffffff8244ecdc: ret 0x7153;
0xffffffff818be780: ret 0x7154;
0xffffffff8188e69b: ret 0x7155;
0xffffffff822963b6: ret 0x7157;
0xffffffff817dbcb2: ret 0x7158;
0xffffffff818be64c: ret 0x7159;
0xffffffff822630ac: ret 0x715a;
0xffffffff8256f4d2: ret 0x715b;
0xffffffff8252f1f3: ret 0x715d;
0xffffffff824676fa: ret 0x7169;
0xffffffff835aedd4: ret 0x716;
0xffffffff822a749e: ret 0x716b;
0xffffffff82278a68: ret 0x716f;
0xffffffff81b74b8a: ret 0x7172;
0xffffffff81b1d666: ret 0x7175;
0xffffffff83487989: ret 0x7177;
0xffffffff8176c9f5: ret 0x7178;
0xffffffff82426aa0: ret 0x7179;
0xffffffff823cebba: ret 0x717;
0xffffffff82256300: ret 0x717a;
0xffffffff82232791: ret 0x717b;
0xffffffff82561022: ret 0x717f;
0xffffffff822f8cb5: ret 0x7182;
0xffffffff8225c16d: ret 0x7188;
0xffffffff81a80683: ret 0x718b;
0xffffffff834320d6: ret 0x718d;
0xffffffff82473d3e: ret 0x718e;
0xffffffff81050ac1: ret 0x7190;
0xffffffff8163303a: ret 0x7194;
0xffffffff81635045: ret 0x7195;
0xffffffff8240c059: ret 0x7198;
0xffffffff824c0429: ret 0x719c;
0xffffffff8230fdf2: ret 0x719f;
0xffffffff810ab360: ret 0x71;
0xffffffff815e6fad: ret 0x71a0;
0xffffffff816370fe: ret 0x71a1;
0xffffffff8163add2: ret 0x71a2;
0xffffffff81b71a8a: ret 0x71a3;
0xffffffff823fcb1a: ret 0x71a5;
0xffffffff8122feea: ret 0x71a;
0xffffffff8176cd2e: ret 0x71aa;
0xffffffff8105902e: ret 0x71af;
0xffffffff824f832d: ret 0x71b2;
0xffffffff815621c7: ret 0x71b5;
0xffffffff824f865f: ret 0x71b6;
0xffffffff81746a01: ret 0x71b7;
0xffffffff81863132: ret 0x71b8;
0xffffffff824bc36d: ret 0x71be;
0xffffffff82488b4e: ret 0x71c9;
0xffffffff82509c77: ret 0x71d4;
0xffffffff822b40d9: ret 0x71d;
0xffffffff823b6692: ret 0x71de;
0xffffffff824ec74e: ret 0x71e0;
0xffffffff8242ef5c: ret 0x71e2;
0xffffffff82402ec9: ret 0x71e4;
0xffffffff82407623: ret 0x71e5;
0xffffffff824081ee: ret 0x71e5;
0xffffffff814a29e9: ret 0x71e8;
0xffffffff8166140e: ret 0x71e9;
0xffffffff82431a2e: ret 0x71e;
0xffffffff82551d4c: ret 0x71ec;
0xffffffff824318de: ret 0x71ed;
0xffffffff81936b80: ret 0x71f0;
0xffffffff8175bb2a: ret 0x71f2;
0xffffffff82505530: ret 0x71f3;
0xffffffff8226c70b: ret 0x71fa;
0xffffffff824731d4: ret 0x71fb;
0xffffffff824be75d: ret 0x71ff;
0xffffffff822a3507: ret 0x7200;
0xffffffff8252fab3: ret 0x7202;
0xffffffff8252fab1: ret 0x7202;
0xffffffff815621e8: ret 0x7205;
0xffffffff82306c54: ret 0x7208;
0xffffffff834a0dd1: ret 0x720;
0xffffffff824f3d5d: ret 0x720a;
0xffffffff8230c114: ret 0x7210;
0xffffffff8230c113: ret 0x7210;
0xffffffff822a9b94: ret 0x7213;
0xffffffff81736fb1: ret 0x721;
0xffffffff8199566a: ret 0x721c;
0xffffffff8189d1db: ret 0x7220;
0xffffffff82385680: ret 0x7226;
0xffffffff811131a6: ret 0x7229;
0xffffffff81118b99: ret 0x7233;
0xffffffff822f954c: ret 0x7234;
0xffffffff82285387: ret 0x7235;
0xffffffff81819db8: ret 0x7237;
0xffffffff822f8677: ret 0x723b;
0xffffffff8191f0db: ret 0x723c;
0xffffffff82493d90: ret 0x723e;
0xffffffff82493d92: ret 0x723e;
0xffffffff824da9e6: ret 0x723f;
0xffffffff81707211: ret 0x7240;
0xffffffff8246f8b9: ret 0x7245;
0xffffffff81819e8f: ret 0x7248;
0xffffffff82519eb6: ret 0x724a;
0xffffffff822f4116: ret 0x724b;
0xffffffff8223ced0: ret 0x724c;
0xffffffff8228a905: ret 0x724d;
0xffffffff81819fe5: ret 0x724f;
0xffffffff82378cbf: ret 0x7250;
0xffffffff82251225: ret 0x7252;
0xffffffff823df4b6: ret 0x7254;
0xffffffff8242bd7f: ret 0x7256;
0xffffffff8245011b: ret 0x7257;
0xffffffff8113a164: ret 0x725f;
0xffffffff822f090d: ret 0x7263;
0xffffffff824de4d2: ret 0x726d;
0xffffffff824de4d1: ret 0x726d;
0xffffffff8236ac18: ret 0x7271;
0xffffffff81c6de60: ret 0x7274;
0xffffffff81acd459: ret 0x7275;
0xffffffff82362070: ret 0x7279;
0xffffffff823fa83c: ret 0x727b;
0xffffffff824ba273: ret 0x7282;
0xffffffff82435f8b: ret 0x7283;
0xffffffff82435f8a: ret 0x7283;
0xffffffff8344ee76: ret 0x7285;
0xffffffff8233a059: ret 0x7286;
0xffffffff8188f45a: ret 0x728b;
0xffffffff811d6046: ret 0x728d;
0xffffffff822d9adf: ret 0x7295;
0xffffffff8256ad84: ret 0x729;
0xffffffff814b9f0a: ret 0x72;
0xffffffff8234fba9: ret 0x72a1;
0xffffffff8223d99b: ret 0x72a5;
0xffffffff824fa6a3: ret 0x72a9;
0xffffffff8242aa4d: ret 0x72a;
0xffffffff81866f9a: ret 0x72ab;
0xffffffff83487b7d: ret 0x72b5;
0xffffffff823ecff7: ret 0x72b7;
0xffffffff823ecff8: ret 0x72b7;
0xffffffff822381b4: ret 0x72b9;
0xffffffff83487baf: ret 0x72be;
0xffffffff823a6504: ret 0x72c0;
0xffffffff811a5b37: ret 0x72c2;
0xffffffff83487be1: ret 0x72c7;
0xffffffff83487ae7: ret 0x72cb;
0xffffffff822d28e3: ret 0x72cd;
0xffffffff81343bd5: ret 0x72ce;
0xffffffff8237e341: ret 0x72cf;
0xffffffff81656eeb: ret 0x72d0;
0xffffffff826f96c9: ret 0x72d3;
0xffffffff822ff5fe: ret 0x72d4;
0xffffffff822ff5fd: ret 0x72d4;
0xffffffff822c0212: ret 0x72d7;
0xffffffff8233210e: ret 0x72d9;
0xffffffff83487c45: ret 0x72da;
0xffffffff8116aeab: ret 0x72db;
0xffffffff824f67e7: ret 0x72df;
0xffffffff81647dfc: ret 0x72e0;
0xffffffff8342ea21: ret 0x72e5;
0xffffffff81455e94: ret 0x72e8;
0xffffffff81b61218: ret 0x72e9;
0xffffffff834a18d8: ret 0x72e;
0xffffffff81724c42: ret 0x72f0;
0xffffffff8227f184: ret 0x72f2;
0xffffffff82686c87: ret 0x72f4;
0xffffffff83545200: ret 0x72f7;
0xffffffff824fb3e7: ret 0x72fa;
0xffffffff82293f8a: ret 0x72fe;
0xffffffff8136ec7d: ret 0x7301;
0xffffffff8136b6f5: ret 0x7301;
0xffffffff81362ae3: ret 0x7301;
0xffffffff8195071a: ret 0x730;
0xffffffff82336520: ret 0x730a;
0xffffffff82467fd2: ret 0x730b;
0xffffffff8223df9b: ret 0x730e;
0xffffffff824ebea0: ret 0x7310;
0xffffffff824f6e72: ret 0x7317;
0xffffffff824d43cc: ret 0x731f;
0xffffffff81707304: ret 0x7320;
0xffffffff822f61c6: ret 0x7321;
0xffffffff811ea64b: ret 0x7328;
0xffffffff826e3843: ret 0x7329;
0xffffffff82523f19: ret 0x732f;
0xffffffff823265ea: ret 0x7332;
0xffffffff83455b49: ret 0x7337;
0xffffffff81936b96: ret 0x7340;
0xffffffff82226f99: ret 0x7341;
0xffffffff822282a4: ret 0x7345;
0xffffffff812a21cd: ret 0x734d;
0xffffffff8249cd43: ret 0x7356;
0xffffffff823a4941: ret 0x735;
0xffffffff8257176d: ret 0x7364;
0xffffffff82407c72: ret 0x7366;
0xffffffff82407c71: ret 0x7366;
0xffffffff8252abd5: ret 0x7368;
0xffffffff8248b245: ret 0x7369;
0xffffffff822fa2f7: ret 0x736a;
0xffffffff826c0070: ret 0x736b;
0xffffffff811b3f77: ret 0x736f;
0xffffffff82347bab: ret 0x7379;
0xffffffff8238a3f1: ret 0x737e;
0xffffffff822e04cd: ret 0x7386;
0xffffffff824e2b28: ret 0x7388;
0xffffffff82469da8: ret 0x7389;
0xffffffff8229a734: ret 0x738;
0xffffffff816cfea2: ret 0x738b;
0xffffffff8254eae3: ret 0x738c;
0xffffffff81a6ba76: ret 0x738d;
0xffffffff8254ef54: ret 0x7391;
0xffffffff823dc447: ret 0x739a;
0xffffffff824603d8: ret 0x73;
0xffffffff822f3f69: ret 0x73a0;
0xffffffff8345603c: ret 0x73a2;
0xffffffff824ebb13: ret 0x73a;
0xffffffff812a2353: ret 0x73aa;
0xffffffff82470148: ret 0x73b5;
0xffffffff828ffc38: ret 0x73b;
0xffffffff83476ad3: ret 0x73bc;
0xffffffff8145f2b5: ret 0x73c5;
0xffffffff81af80d6: ret 0x73c;
0xffffffff8252c666: ret 0x73cb;
0xffffffff828fff64: ret 0x73d;
0xffffffff8240a74c: ret 0x73de;
0xffffffff81656eb7: ret 0x73e0;
0xffffffff822e02bf: ret 0x73e2;
0xffffffff816f4f47: ret 0x73e8;
0xffffffff816b8fbb: ret 0x73e9;
0xffffffff82381ce3: ret 0x73e;
0xffffffff813088af: ret 0x73ea;
0xffffffff81770a04: ret 0x73ef;
0xffffffff826db8cd: ret 0x73f0;
0xffffffff8199b61a: ret 0x73f6;
0xffffffff824ba66c: ret 0x73f7;
0xffffffff8232c3aa: ret 0x73f;
0xffffffff8246cc4e: ret 0x73fa;
0xffffffff82329764: ret 0x7400;
0xffffffff810131e0: ret 0x7401;
0xffffffff811fd90e: ret 0x7402;
0xffffffff8155bc25: ret 0x7403;
0xffffffff81156ec1: ret 0x7404;
0xffffffff81188a40: ret 0x7405;
0xffffffff81bf690c: ret 0x7406;
0xffffffff81019e2a: ret 0x7407;
0xffffffff81003db7: ret 0x7408;
0xffffffff817c39fb: ret 0x740;
0xffffffff81339e92: ret 0x740a;
0xffffffff816902fa: ret 0x740c;
0xffffffff822bbde1: ret 0x740e;
0xffffffff8103d780: ret 0x740f;
0xffffffff8101412b: ret 0x7410;
0xffffffff81b3b1b8: ret 0x7411;
0xffffffff81a37830: ret 0x7412;
0xffffffff81343ee8: ret 0x7414;
0xffffffff81975d6a: ret 0x7415;
0xffffffff824f8e9c: ret 0x7416;
0xffffffff811d4458: ret 0x7418;
0xffffffff813ad8ba: ret 0x7419;
0xffffffff8100fd47: ret 0x741c;
0xffffffff8231f484: ret 0x741d;
0xffffffff8100fdb8: ret 0x741e;
0xffffffff81026a37: ret 0x741f;
0xffffffff814045b6: ret 0x7420;
0xffffffff816106bf: ret 0x7422;
0xffffffff8234f698: ret 0x7423;
0xffffffff82695e6e: ret 0x7424;
0xffffffff822d2670: ret 0x7427;
0xffffffff83545cf0: ret 0x7428;
0xffffffff8253212a: ret 0x742;
0xffffffff83545d00: ret 0x742a;
0xffffffff8169f05e: ret 0x7430;
0xffffffff8347da54: ret 0x7438;
0xffffffff81404055: ret 0x7439;
0xffffffff822a4289: ret 0x743;
0xffffffff823f1dcb: ret 0x743a;
0xffffffff823f1dca: ret 0x743a;
0xffffffff824ac58f: ret 0x743d;
0xffffffff8136e53a: ret 0x743e;
0xffffffff816b420a: ret 0x743f;
0xffffffff812b3f16: ret 0x7440;
0xffffffff81823ce8: ret 0x7441;
0xffffffff822ab869: ret 0x7446;
0xffffffff822ab867: ret 0x7446;
0xffffffff82387e91: ret 0x744a;
0xffffffff82387e90: ret 0x744a;
0xffffffff823431be: ret 0x744d;
0xffffffff824e07ba: ret 0x7454;
0xffffffff82397640: ret 0x7457;
0xffffffff824e38d7: ret 0x745a;
0xffffffff825588cd: ret 0x745b;
0xffffffff82373aef: ret 0x745c;
0xffffffff81b2505d: ret 0x7460;
0xffffffff82445810: ret 0x7464;
0xffffffff82700eae: ret 0x7465;
0xffffffff82316f1e: ret 0x7468;
0xffffffff816c3a4a: ret 0x746d;
0xffffffff825213e0: ret 0x746e;
0xffffffff81b0472a: ret 0x7470;
0xffffffff824ec4b4: ret 0x7471;
0xffffffff8235fc1b: ret 0x7475;
0xffffffff813bdd41: ret 0x7478;
0xffffffff822b6996: ret 0x747d;
0xffffffff8112bd0a: ret 0x747f;
0xffffffff812b3f25: ret 0x7480;
0xffffffff817a37f8: ret 0x7486;
0xffffffff82278c2c: ret 0x7487;
0xffffffff811d8020: ret 0x7489;
0xffffffff815d2e39: ret 0x748b;
0xffffffff8244e8fb: ret 0x748c;
0xffffffff824bd699: ret 0x748f;
0xffffffff825673ce: ret 0x7496;
0xffffffff81b1531d: ret 0x7498;
0xffffffff812deac3: ret 0x74a0;
0xffffffff823d2cb6: ret 0x74a1;
0xffffffff815788e4: ret 0x74a2;
0xffffffff813c4b6a: ret 0x74a4;
0xffffffff823400f4: ret 0x74ad;
0xffffffff8246de48: ret 0x74b5;
0xffffffff8115c233: ret 0x74b8;
0xffffffff81c232d2: ret 0x74c0;
0xffffffff823aaea3: ret 0x74c1;
0xffffffff8222e1a7: ret 0x74c2;
0xffffffff8196ae6a: ret 0x74c4;
0xffffffff81309b60: ret 0x74c8;
0xffffffff822ff8d3: ret 0x74c9;
0xffffffff824a747a: ret 0x74ca;
0xffffffff82334fe4: ret 0x74cc;
0xffffffff81b6410a: ret 0x74d1;
0xffffffff822e74d7: ret 0x74d6;
0xffffffff8227be3b: ret 0x74db;
0xffffffff8250bd65: ret 0x74dc;
0xffffffff824c98e6: ret 0x74e5;
0xffffffff81859def: ret 0x74e8;
0xffffffff8246ec69: ret 0x74ec;
0xffffffff824d24b9: ret 0x74ee;
0xffffffff8126419f: ret 0x74f0;
0xffffffff810c6c4a: ret 0x74f8;
0xffffffff8240bbfd: ret 0x74f9;
0xffffffff8163a80d: ret 0x74fd;
0xffffffff8158910a: ret 0x74fe;
0xffffffff81027e45: ret 0x74ff;
0xffffffff816ca55e: ret 0x7500;
0xffffffff8100fd42: ret 0x7501;
0xffffffff8105cf3f: ret 0x7502;
0xffffffff8101f56b: ret 0x7503;
0xffffffff8100554c: ret 0x7504;
0xffffffff81151cbe: ret 0x7506;
0xffffffff811b5181: ret 0x7507;
0xffffffff8105cf69: ret 0x7508;
0xffffffff829019e0: ret 0x750;
0xffffffff81579d12: ret 0x750b;
0xffffffff8148aa18: ret 0x750f;
0xffffffff81058b84: ret 0x7510;
0xffffffff8126580b: ret 0x7511;
0xffffffff8228103b: ret 0x7512;
0xffffffff81723ca3: ret 0x7514;
0xffffffff824207a9: ret 0x751a;
0xffffffff824207aa: ret 0x751a;
0xffffffff8139a68f: ret 0x751f;
0xffffffff8111be4a: ret 0x7520;
0xffffffff81a4530d: ret 0x7521;
0xffffffff81a455fe: ret 0x7522;
0xffffffff81a46b50: ret 0x7523;
0xffffffff81a471a1: ret 0x7524;
0xffffffff823dd306: ret 0x7528;
0xffffffff823dd307: ret 0x7528;
0xffffffff824fb14d: ret 0x752;
0xffffffff8223c95a: ret 0x752a;
0xffffffff825539c3: ret 0x752b;
0xffffffff825963e8: ret 0x752e;
0xffffffff8143e4a2: ret 0x7531;
0xffffffff823bd1b5: ret 0x7532;
0xffffffff8224eb90: ret 0x7536;
0xffffffff825081b4: ret 0x753;
0xffffffff81441564: ret 0x753b;
0xffffffff812c673a: ret 0x7540;
0xffffffff8191ac9b: ret 0x7544;
0xffffffff81965b06: ret 0x7546;
0xffffffff81838d02: ret 0x7548;
0xffffffff8144f3d6: ret 0x7550;
0xffffffff823e25c2: ret 0x7551;
0xffffffff81a4bdc3: ret 0x7558;
0xffffffff8350daa8: ret 0x7559;
0xffffffff8232632a: ret 0x755d;
0xffffffff81aded9d: ret 0x7560;
0xffffffff823bf951: ret 0x7562;
0xffffffff823bcd5c: ret 0x7563;
0xffffffff8145b156: ret 0x756b;
0xffffffff8223059c: ret 0x756c;
0xffffffff817d97c3: ret 0x7570;
0xffffffff818a9e3a: ret 0x7572;
0xffffffff822cdf5b: ret 0x7573;
0xffffffff823217d0: ret 0x7578;
0xffffffff824d8043: ret 0x7579;
0xffffffff81464815: ret 0x757e;
0xffffffff8112bae4: ret 0x757f;
0xffffffff8155d14c: ret 0x7580;
0xffffffff81056ff9: ret 0x7581;
0xffffffff8100c288: ret 0x7584;
0xffffffff82555127: ret 0x7587;
0xffffffff8146ee3f: ret 0x7589;
0xffffffff814c866c: ret 0x758;
0xffffffff8346f628: ret 0x758a;
0xffffffff8236723b: ret 0x7590;
0xffffffff813ea119: ret 0x7592;
0xffffffff824e3069: ret 0x7595;
0xffffffff83488738: ret 0x7598;
0xffffffff8238f43e: ret 0x759;
0xffffffff824ebdda: ret 0x759c;
0xffffffff822bf3bd: ret 0x759d;
0xffffffff823625c8: ret 0x759e;
0xffffffff816a5382: ret 0x75;
0xffffffff81707590: ret 0x75a0;
0xffffffff82425562: ret 0x75a1;
0xffffffff81b31b8a: ret 0x75a2;
0xffffffff8148736a: ret 0x75a3;
0xffffffff823e5836: ret 0x75b3;
0xffffffff822ffae4: ret 0x75bb;
0xffffffff817034aa: ret 0x75c0;
0xffffffff81a4bf9d: ret 0x75c1;
0xffffffff8254d8d6: ret 0x75c2;
0xffffffff81a4aa3c: ret 0x75c3;
0xffffffff8232ce29: ret 0x75c5;
0xffffffff81309c4b: ret 0x75c8;
0xffffffff82377671: ret 0x75cb;
0xffffffff8248d19f: ret 0x75cd;
0xffffffff81522b0a: ret 0x75ce;
0xffffffff82542553: ret 0x75cf;
0xffffffff81797552: ret 0x75d0;
0xffffffff826e41ce: ret 0x75d3;
0xffffffff81bf278a: ret 0x75d;
0xffffffff81771c5b: ret 0x75db;
0xffffffff8346fc4d: ret 0x75dc;
0xffffffff81b95069: ret 0x75e0;
0xffffffff823a84a1: ret 0x75e2;
0xffffffff82256f7c: ret 0x75e4;
0xffffffff81771cf5: ret 0x75e5;
0xffffffff812aec68: ret 0x75e8;
0xffffffff813ef196: ret 0x75e9;
0xffffffff82441b31: ret 0x75ec;
0xffffffff81b3bb33: ret 0x75f0;
0xffffffff83483a86: ret 0x75f3;
0xffffffff8226032d: ret 0x75f4;
0xffffffff8226032e: ret 0x75f4;
0xffffffff8230c6d7: ret 0x75f5;
0xffffffff8235bfa8: ret 0x75f7;
0xffffffff81391baf: ret 0x75f8;
0xffffffff81265929: ret 0x75fa;
0xffffffff81380655: ret 0x75fc;
0xffffffff8188c8e4: ret 0x75fe;
0xffffffff81000423: ret 0x75ff;
0xffffffff82411004: ret 0x7601;
0xffffffff8237c74b: ret 0x7605;
0xffffffff815523e4: ret 0x760;
0xffffffff81839c9c: ret 0x7610;
0xffffffff822a3d4e: ret 0x7611;
0xffffffff814e2aea: ret 0x761b;
0xffffffff822b5867: ret 0x761d;
0xffffffff82280305: ret 0x761e;
0xffffffff825b12d0: ret 0x7621;
0xffffffff82354ef1: ret 0x7623;
0xffffffff825d718e: ret 0x7624;
0xffffffff824d6158: ret 0x762c;
0xffffffff825b7008: ret 0x7632;
0xffffffff825b7138: ret 0x7634;
0xffffffff824a91bf: ret 0x7636;
0xffffffff825d75ae: ret 0x763b;
0xffffffff823c0af4: ret 0x763c;
0xffffffff823b989f: ret 0x7645;
0xffffffff822fd208: ret 0x7646;
0xffffffff8242e653: ret 0x764d;
0xffffffff8226f226: ret 0x764e;
0xffffffff817725b9: ret 0x7650;
0xffffffff822d0c35: ret 0x765;
0xffffffff8249ad0a: ret 0x765a;
0xffffffff8246c93c: ret 0x765b;
0xffffffff823dc4a5: ret 0x765e;
0xffffffff82477c1e: ret 0x765f;
0xffffffff824858f6: ret 0x7661;
0xffffffff825734bb: ret 0x7666;
0xffffffff81a60513: ret 0x7668;
0xffffffff8256057b: ret 0x766;
0xffffffff819a2e7a: ret 0x766a;
0xffffffff81a606a7: ret 0x7670;
0xffffffff82251f20: ret 0x7673;
0xffffffff8151ba9a: ret 0x7675;
0xffffffff822af622: ret 0x7676;
0xffffffff81727cf1: ret 0x7678;
0xffffffff81582f3c: ret 0x767b;
0xffffffff81a60bd5: ret 0x767c;
0xffffffff8117a87e: ret 0x767d;
0xffffffff823b3ad6: ret 0x767e;
0xffffffff825b8658: ret 0x7688;
0xffffffff813d0073: ret 0x768;
0xffffffff8245a710: ret 0x7699;
0xffffffff81c0c8fa: ret 0x769;
0xffffffff82560d94: ret 0x769c;
0xffffffff82539475: ret 0x769e;
0xffffffff814f8317: ret 0x76;
0xffffffff814f8318: ret 0x76;
0xffffffff8189d16f: ret 0x76a0;
0xffffffff81966319: ret 0x76a4;
0xffffffff82437d90: ret 0x76a;
0xffffffff82404658: ret 0x76ae;
0xffffffff81307632: ret 0x76b0;
0xffffffff823712d1: ret 0x76b2;
0xffffffff822c3640: ret 0x76b3;
0xffffffff822fc490: ret 0x76b7;
0xffffffff81bf198a: ret 0x76b;
0xffffffff825ba418: ret 0x76bd;
0xffffffff816aef4a: ret 0x76c0;
0xffffffff82438121: ret 0x76c1;
0xffffffff82438122: ret 0x76c1;
0xffffffff8150889a: ret 0x76ca;
0xffffffff8136739a: ret 0x76d0;
0xffffffff823d9bc8: ret 0x76d6;
0xffffffff823350d0: ret 0x76da;
0xffffffff81584494: ret 0x76dc;
0xffffffff822f11e4: ret 0x76e0;
0xffffffff817541a0: ret 0x76e8;
0xffffffff8189cf80: ret 0x76eb;
0xffffffff82321e06: ret 0x76ee;
0xffffffff822ff92c: ret 0x76f0;
0xffffffff814f52ba: ret 0x76f2;
0xffffffff82254c50: ret 0x76f3;
0xffffffff82468627: ret 0x76f7;
0xffffffff823bf739: ret 0x76f8;
0xffffffff8230f673: ret 0x76f9;
0xffffffff8290489c: ret 0x76f;
0xffffffff813bc192: ret 0x7702;
0xffffffff81772d5c: ret 0x7703;
0xffffffff82231024: ret 0x7705;
0xffffffff814f887c: ret 0x7710;
0xffffffff8227c85d: ret 0x7714;
0xffffffff817add12: ret 0x7715;
0xffffffff8223bf13: ret 0x7719;
0xffffffff819624aa: ret 0x771c;
0xffffffff82305938: ret 0x771f;
0xffffffff8184d10d: ret 0x7720;
0xffffffff823f73fb: ret 0x7723;
0xffffffff824160df: ret 0x7724;
0xffffffff824afb3f: ret 0x7725;
0xffffffff822d2918: ret 0x7726;
0xffffffff82343772: ret 0x7728;
0xffffffff810f670b: ret 0x772;
0xffffffff8150fe9a: ret 0x7731;
0xffffffff824aa455: ret 0x7732;
0xffffffff822982b4: ret 0x7736;
0xffffffff81529e0c: ret 0x7739;
0xffffffff81469568: ret 0x773;
0xffffffff824754d5: ret 0x773d;
0xffffffff81346b87: ret 0x7740;
0xffffffff81538925: ret 0x7742;
0xffffffff8153e2de: ret 0x7745;
0xffffffff81586aba: ret 0x7747;
0xffffffff810c6932: ret 0x774;
0xffffffff81541099: ret 0x774c;
0xffffffff823bcd82: ret 0x774f;
0xffffffff82401bc7: ret 0x7756;
0xffffffff823c81e8: ret 0x775c;
0xffffffff8346fcda: ret 0x775d;
0xffffffff83474223: ret 0x775f;
0xffffffff81586bb5: ret 0x7760;
0xffffffff83474c9a: ret 0x7763;
0xffffffff82543ed7: ret 0x7764;
0xffffffff822c1c51: ret 0x7767;
0xffffffff81927ac2: ret 0x776;
0xffffffff81a6110e: ret 0x776c;
0xffffffff814fe8da: ret 0x776d;
0xffffffff823330a7: ret 0x7773;
0xffffffff8226c05a: ret 0x7778;
0xffffffff8235b3c0: ret 0x777;
0xffffffff822e0631: ret 0x777e;
0xffffffff823761e3: ret 0x777f;
0xffffffff81a6164b: ret 0x7780;
0xffffffff8159d3ef: ret 0x7782;
0xffffffff815aa809: ret 0x7787;
0xffffffff8226a656: ret 0x778b;
0xffffffff81a61346: ret 0x778c;
0xffffffff817288ed: ret 0x7790;
0xffffffff825d8b71: ret 0x7796;
0xffffffff81a613e9: ret 0x7798;
0xffffffff8242219c: ret 0x779a;
0xffffffff825c2588: ret 0x779b;
0xffffffff824b0444: ret 0x779e;
0xffffffff814f9eb0: ret 0x77;
0xffffffff822f4367: ret 0x77a7;
0xffffffff829059a0: ret 0x77a;
0xffffffff82253233: ret 0x77ab;
0xffffffff815d9996: ret 0x77ac;
0xffffffff8226e776: ret 0x77ae;
0xffffffff81586da8: ret 0x77ae;
0xffffffff8250bde5: ret 0x77b8;
0xffffffff815df253: ret 0x77ba;
0xffffffff82700724: ret 0x77bb;
0xffffffff834543af: ret 0x77bc;
0xffffffff82341f08: ret 0x77bd;
0xffffffff824fc0f6: ret 0x77bf;
0xffffffff82420871: ret 0x77c3;
0xffffffff823c4aa5: ret 0x77c4;
0xffffffff823c234b: ret 0x77cb;
0xffffffff82232f2d: ret 0x77d4;
0xffffffff815faaef: ret 0x77d7;
0xffffffff82269ca4: ret 0x77d8;
0xffffffff823dae9f: ret 0x77d;
0xffffffff824b981d: ret 0x77db;
0xffffffff8256e372: ret 0x77dd;
0xffffffff8247b01f: ret 0x77e2;
0xffffffff8247ebbe: ret 0x77e5;
0xffffffff822a1455: ret 0x77e7;
0xffffffff810c89f3: ret 0x77e8;
0xffffffff8150e313: ret 0x77e9;
0xffffffff8347a331: ret 0x77e;
0xffffffff8253292b: ret 0x77ef;
0xffffffff81773b54: ret 0x77f2;
0xffffffff82674de4: ret 0x77fa;
0xffffffff82554558: ret 0x77fe;
0xffffffff815fd4ff: ret 0x7800;
0xffffffff8222f24b: ret 0x7803;
0xffffffff8239fc7e: ret 0x7808;
0xffffffff8225a42c: ret 0x780a;
0xffffffff8163f160: ret 0x780b;
0xffffffff824c4258: ret 0x780e;
0xffffffff8253760a: ret 0x7814;
0xffffffff82537609: ret 0x7814;
0xffffffff82495ad0: ret 0x7815;
0xffffffff8349fc6d: ret 0x7817;
0xffffffff823753b0: ret 0x7818;
0xffffffff82906524: ret 0x781;
0xffffffff8164ca06: ret 0x781d;
0xffffffff81455a38: ret 0x7820;
0xffffffff823ccd2e: ret 0x7823;
0xffffffff823bfea9: ret 0x7824;
0xffffffff8158814a: ret 0x7826;
0xffffffff824aceaf: ret 0x782;
0xffffffff8250aa6b: ret 0x782f;
0xffffffff823f66bb: ret 0x7830;
0xffffffff82405c02: ret 0x7831;
0xffffffff82375ced: ret 0x7837;
0xffffffff82396819: ret 0x783a;
0xffffffff81932afa: ret 0x783b;
0xffffffff8252b717: ret 0x783c;
0xffffffff81c3b705: ret 0x784;
0xffffffff82491b39: ret 0x784f;
0xffffffff8233bc8d: ret 0x7850;
0xffffffff8243543b: ret 0x7854;
0xffffffff816da9c4: ret 0x786a;
0xffffffff82498e18: ret 0x786b;
0xffffffff825dccf8: ret 0x786d;
0xffffffff823537a0: ret 0x7871;
0xffffffff81053b83: ret 0x7872;
0xffffffff81ba1717: ret 0x7873;
0xffffffff81776b27: ret 0x7876;
0xffffffff82563da4: ret 0x7879;
0xffffffff823bea2b: ret 0x787;
0xffffffff823a1413: ret 0x787a;
0xffffffff817780ac: ret 0x787b;
0xffffffff81116b47: ret 0x7880;
0xffffffff81a02daf: ret 0x7883;
0xffffffff8105b98a: ret 0x7885;
0xffffffff822e59a3: ret 0x7885;
0xffffffff82406639: ret 0x7887;
0xffffffff8115524a: ret 0x7888;
0xffffffff825cea42: ret 0x7889;
0xffffffff8110b9e8: ret 0x788b;
0xffffffff82392897: ret 0x788c;
0xffffffff8192072e: ret 0x788d;
0xffffffff813bdcec: ret 0x7895;
0xffffffff82490e98: ret 0x7898;
0xffffffff8105a59a: ret 0x7899;
0xffffffff814e9e95: ret 0x78;
0xffffffff824a499c: ret 0x78a1;
0xffffffff8254442a: ret 0x78a2;
0xffffffff816e964a: ret 0x78a4;
0xffffffff8238cdec: ret 0x78a6;
0xffffffff822c518c: ret 0x78aa;
0xffffffff818bc68b: ret 0x78ac;
0xffffffff8255bbaf: ret 0x78af;
0xffffffff822c99a8: ret 0x78b0;
0xffffffff8170c219: ret 0x78b2;
0xffffffff82226d82: ret 0x78b3;
0xffffffff823f0b47: ret 0x78b6;
0xffffffff82468a37: ret 0x78b7;
0xffffffff82250554: ret 0x78b9;
0xffffffff815e67f3: ret 0x78b;
0xffffffff823b148c: ret 0x78ba;
0xffffffff8250502b: ret 0x78c0;
0xffffffff813bdd40: ret 0x78c2;
0xffffffff8357ba68: ret 0x78c4;
0xffffffff8247efc3: ret 0x78c7;
0xffffffff826aa702: ret 0x78cd;
0xffffffff82556488: ret 0x78cf;
0xffffffff817161d8: ret 0x78d0;
0xffffffff8247713c: ret 0x78d7;
0xffffffff8171cabe: ret 0x78d9;
0xffffffff8248c3c9: ret 0x78d;
0xffffffff810f850b: ret 0x78e0;
0xffffffff81382b15: ret 0x78e1;
0xffffffff8248a6c6: ret 0x78e2;
0xffffffff813be7af: ret 0x78e7;
0xffffffff81632622: ret 0x78e8;
0xffffffff81219ab3: ret 0x78e9;
0xffffffff824a932d: ret 0x78ec;
0xffffffff810eef9a: ret 0x78f6;
0xffffffff83460502: ret 0x78f8;
0xffffffff8172f1e3: ret 0x78f9;
0xffffffff829080ec: ret 0x78f;
0xffffffff824d545e: ret 0x78fa;
0xffffffff8239c257: ret 0x78fb;
0xffffffff815889b0: ret 0x78fc;
0xffffffff812e484b: ret 0x78fe;
0xffffffff810e475c: ret 0x78ff;
0xffffffff83496774: ret 0x7900;
0xffffffff822fd64b: ret 0x7908;
0xffffffff822636de: ret 0x7909;
0xffffffff823fd08f: ret 0x790b;
0xffffffff822d3102: ret 0x7912;
0xffffffff8240386f: ret 0x7914;
0xffffffff824808cf: ret 0x7917;
0xffffffff8237df45: ret 0x7918;
0xffffffff82497726: ret 0x7922;
0xffffffff8254a97d: ret 0x7924;
0xffffffff8229a548: ret 0x7929;
0xffffffff82544d9b: ret 0x792;
0xffffffff82483b42: ret 0x7931;
0xffffffff82452f47: ret 0x7933;
0xffffffff8239ff4a: ret 0x7934;
0xffffffff8256eb57: ret 0x7937;
0xffffffff82382ce7: ret 0x793;
0xffffffff82434add: ret 0x793c;
0xffffffff824d59e1: ret 0x7940;
0xffffffff82567a00: ret 0x7946;
0xffffffff825679ff: ret 0x7946;
0xffffffff81587a7f: ret 0x794c;
0xffffffff82523ee1: ret 0x7953;
0xffffffff8196d04a: ret 0x7957;
0xffffffff8223a05c: ret 0x7959;
0xffffffff8175d1bc: ret 0x795d;
0xffffffff8175dd4a: ret 0x795e;
0xffffffff82251aa8: ret 0x795f;
0xffffffff82395796: ret 0x7966;
0xffffffff81b4cf7a: ret 0x796e;
0xffffffff82350f45: ret 0x796f;
0xffffffff818bfa54: ret 0x7971;
0xffffffff823ccb38: ret 0x7972;
0xffffffff829092e0: ret 0x797;
0xffffffff82299a05: ret 0x797a;
0xffffffff8245ac34: ret 0x797b;
0xffffffff818bfa5f: ret 0x7980;
0xffffffff816a7ecb: ret 0x7983;
0xffffffff82433f90: ret 0x7988;
0xffffffff81a4f8fe: ret 0x798;
0xffffffff8251c662: ret 0x798f;
0xffffffff81607962: ret 0x7990;
0xffffffff8158845f: ret 0x7991;
0xffffffff814cb1ba: ret 0x7993;
0xffffffff8165c45b: ret 0x7999;
0xffffffff81778b0b: ret 0x799e;
0xffffffff814920ed: ret 0x79;
0xffffffff822dc9bb: ret 0x79a0;
0xffffffff8224891d: ret 0x79a1;
0xffffffff818bfa75: ret 0x79a2;
0xffffffff823e57ce: ret 0x79ae;
0xffffffff818bfa89: ret 0x79af;
0xffffffff82279303: ret 0x79b1;
0xffffffff8178602c: ret 0x79b7;
0xffffffff81518f4c: ret 0x79b9;
0xffffffff81967f85: ret 0x79ba;
0xffffffff816eec33: ret 0x79bc;
0xffffffff81968012: ret 0x79bf;
0xffffffff8108d804: ret 0x79c5;
0xffffffff82388952: ret 0x79c6;
0xffffffff822841d8: ret 0x79c9;
0xffffffff824910e1: ret 0x79ce;
0xffffffff82311e25: ret 0x79d7;
0xffffffff818bfb6a: ret 0x79d9;
0xffffffff8232e107: ret 0x79dd;
0xffffffff824d1c68: ret 0x79de;
0xffffffff8244b141: ret 0x79e1;
0xffffffff81862e3a: ret 0x79e2;
0xffffffff816eeb91: ret 0x79e3;
0xffffffff8247284f: ret 0x79e5;
0xffffffff825f3058: ret 0x79e6;
0xffffffff8134ae61: ret 0x79e8;
0xffffffff8103003e: ret 0x79e9;
0xffffffff8228bf5a: ret 0x79ed;
0xffffffff82411713: ret 0x79f0;
0xffffffff82411712: ret 0x79f0;
0xffffffff82405c2e: ret 0x79f2;
0xffffffff824c1407: ret 0x79f4;
0xffffffff82419806: ret 0x79f5;
0xffffffff82511ac8: ret 0x79f7;
0xffffffff82686658: ret 0x79fa;
0xffffffff824236fd: ret 0x79fd;
0xffffffff8146a7f6: ret 0x79ff;
0xffffffff82286b93: ret 0x7a02;
0xffffffff823280a7: ret 0x7a03;
0xffffffff824f8a3e: ret 0x7a07;
0xffffffff822bc76f: ret 0x7a08;
0xffffffff811f2a38: ret 0x7a0;
0xffffffff82564bbb: ret 0x7a0d;
0xffffffff825fb280: ret 0x7a0f;
0xffffffff83464f26: ret 0x7a1c;
0xffffffff824a690a: ret 0x7a20;
0xffffffff824862f6: ret 0x7a22;
0xffffffff8225290b: ret 0x7a23;
0xffffffff81873302: ret 0x7a29;
0xffffffff822dc2b8: ret 0x7a2c;
0xffffffff824fb540: ret 0x7a2e;
0xffffffff824a6b2b: ret 0x7a30;
0xffffffff817f4ac3: ret 0x7a3b;
0xffffffff8223e19c: ret 0x7a3c;
0xffffffff823ad84f: ret 0x7a3d;
0xffffffff817f9193: ret 0x7a3e;
0xffffffff8229c39e: ret 0x7a40;
0xffffffff82511a2c: ret 0x7a43;
0xffffffff817fab40: ret 0x7a45;
0xffffffff8148c04a: ret 0x7a49;
0xffffffff8227dc1d: ret 0x7a4a;
0xffffffff824b2a2a: ret 0x7a4f;
0xffffffff81588a63: ret 0x7a52;
0xffffffff8230d335: ret 0x7a57;
0xffffffff81807754: ret 0x7a58;
0xffffffff8180baad: ret 0x7a62;
0xffffffff82354555: ret 0x7a6c;
0xffffffff81489a4a: ret 0x7a6f;
0xffffffff822588ff: ret 0x7a71;
0xffffffff83465109: ret 0x7a72;
0xffffffff82432ac9: ret 0x7a74;
0xffffffff81813c9d: ret 0x7a7d;
0xffffffff8250e907: ret 0x7a7e;
0xffffffff8342a38f: ret 0x7a80;
0xffffffff82484840: ret 0x7a81;
0xffffffff8192bbaa: ret 0x7a85;
0xffffffff81650bba: ret 0x7a8;
0xffffffff83580238: ret 0x7a8b;
0xffffffff82482cc3: ret 0x7a91;
0xffffffff818c07e5: ret 0x7a94;
0xffffffff8263cff8: ret 0x7a96;
0xffffffff810ef39f: ret 0x7a98;
0xffffffff81824cf3: ret 0x7a9d;
0xffffffff82341c73: ret 0x7a9e;
0xffffffff825fec98: ret 0x7a9f;
0xffffffff814c90bf: ret 0x7a;
0xffffffff823f4433: ret 0x7aa2;
0xffffffff8251c5e2: ret 0x7aa4;
0xffffffff823c9151: ret 0x7aa6;
0xffffffff824cd6ce: ret 0x7aa7;
0xffffffff82601ea8: ret 0x7aab;
0xffffffff8230bb4f: ret 0x7ab1;
0xffffffff8183227a: ret 0x7ab2;
0xffffffff8228552d: ret 0x7ab4;
0xffffffff814cab56: ret 0x7ab5;
0xffffffff824cdedc: ret 0x7abc;
0xffffffff834571c6: ret 0x7abe;
0xffffffff8158dc6a: ret 0x7abf;
0xffffffff822bc04d: ret 0x7ac1;
0xffffffff82533d2c: ret 0x7ac6;
0xffffffff82403fdb: ret 0x7ac8;
0xffffffff8255cccd: ret 0x7ad1;
0xffffffff823643bc: ret 0x7ad4;
0xffffffff8223e836: ret 0x7ad6;
0xffffffff81ade18a: ret 0x7adc;
0xffffffff824b02c1: ret 0x7ade;
0xffffffff8256b3b8: ret 0x7ae3;
0xffffffff824e5baf: ret 0x7ae5;
0xffffffff823cc894: ret 0x7ae6;
0xffffffff8122b720: ret 0x7ae8;
0xffffffff81a81a59: ret 0x7ae9;
0xffffffff822ed77d: ret 0x7ae;
0xffffffff82541ef9: ret 0x7aea;
0xffffffff823f2c17: ret 0x7aeb;
0xffffffff8223635a: ret 0x7aee;
0xffffffff8253d13b: ret 0x7aef;
0xffffffff8158df78: ret 0x7af6;
0xffffffff81968729: ret 0x7afc;
0xffffffff835a8eb2: ret 0x7afd;
0xffffffff82336890: ret 0x7afe;
0xffffffff824e1c19: ret 0x7b05;
0xffffffff82547418: ret 0x7b0;
0xffffffff8158df1f: ret 0x7b0d;
0xffffffff824d3b2f: ret 0x7b0e;
0xffffffff824ce58a: ret 0x7b12;
0xffffffff8184f83a: ret 0x7b18;
0xffffffff8224959d: ret 0x7b20;
0xffffffff82249719: ret 0x7b21;
0xffffffff824c19ee: ret 0x7b2c;
0xffffffff8243fb80: ret 0x7b2f;
0xffffffff8240d485: ret 0x7b30;
0xffffffff82419ca4: ret 0x7b3;
0xffffffff82450b01: ret 0x7b3a;
0xffffffff822903e4: ret 0x7b3b;
0xffffffff81874583: ret 0x7b3c;
0xffffffff8158e140: ret 0x7b3f;
0xffffffff8349cdd3: ret 0x7b40;
0xffffffff8233ada3: ret 0x7b43;
0xffffffff824800b6: ret 0x7b47;
0xffffffff8237d94a: ret 0x7b48;
0xffffffff824d3ba4: ret 0x7b4b;
0xffffffff8234a12a: ret 0x7b4c;
0xffffffff824bebb6: ret 0x7b4e;
0xffffffff824b1348: ret 0x7b5c;
0xffffffff82405242: ret 0x7b63;
0xffffffff823bbb89: ret 0x7b63;
0xffffffff817e0f47: ret 0x7b68;
0xffffffff82417f5f: ret 0x7b69;
0xffffffff8225d59b: ret 0x7b6d;
0xffffffff81b43974: ret 0x7b72;
0xffffffff818be73e: ret 0x7b73;
0xffffffff81b6337d: ret 0x7b74;
0xffffffff8250dab5: ret 0x7b78;
0xffffffff818bfa95: ret 0x7b79;
0xffffffff82424825: ret 0x7b7d;
0xffffffff8242c6c6: ret 0x7b7e;
0xffffffff816f7c7f: ret 0x7b80;
0xffffffff82231a65: ret 0x7b81;
0xffffffff81355fed: ret 0x7b83;
0xffffffff822775d4: ret 0x7b87;
0xffffffff816f7c93: ret 0x7b88;
0xffffffff82420154: ret 0x7b8a;
0xffffffff81757db1: ret 0x7b8b;
0xffffffff8236e9a9: ret 0x7b8e;
0xffffffff81c53e05: ret 0x7b90;
0xffffffff816f7ca7: ret 0x7b91;
0xffffffff8158ec78: ret 0x7b94;
0xffffffff816f7b62: ret 0x7b98;
0xffffffff8225675c: ret 0x7b9b;
0xffffffff8285558c: ret 0x7b;
0xffffffff82379c6d: ret 0x7ba0;
0xffffffff8158fba1: ret 0x7ba3;
0xffffffff813aed4b: ret 0x7ba;
0xffffffff8158fd98: ret 0x7baa;
0xffffffff822e4c88: ret 0x7bad;
0xffffffff818fc36a: ret 0x7baf;
0xffffffff82545647: ret 0x7bb1;
0xffffffff834655ab: ret 0x7bb2;
0xffffffff823fe0fb: ret 0x7bb6;
0xffffffff82475ab4: ret 0x7bbf;
0xffffffff8199d01e: ret 0x7bc0;
0xffffffff81c53dbe: ret 0x7bc8;
0xffffffff81909614: ret 0x7bcd;
0xffffffff817d4a9a: ret 0x7bd0;
0xffffffff822e4a42: ret 0x7bd1;
0xffffffff824cd672: ret 0x7bd2;
0xffffffff824cf9b0: ret 0x7bd3;
0xffffffff8254dcef: ret 0x7bd6;
0xffffffff8254dcf0: ret 0x7bd6;
0xffffffff82483929: ret 0x7bd7;
0xffffffff823ec1ed: ret 0x7bda;
0xffffffff822f4722: ret 0x7bdc;
0xffffffff82324ad4: ret 0x7bdf;
0xffffffff81247022: ret 0x7be0;
0xffffffff824c98b2: ret 0x7be3;
0xffffffff824043ba: ret 0x7be7;
0xffffffff8104639b: ret 0x7be8;
0xffffffff8157337f: ret 0x7be9;
0xffffffff814b7656: ret 0x7bea;
0xffffffff822d8585: ret 0x7bfb;
0xffffffff82363089: ret 0x7bfc;
0xffffffff81697b68: ret 0x7c00;
0xffffffff81c4d5cc: ret 0x7c02;
0xffffffff822ec978: ret 0x7c04;
0xffffffff822f1f73: ret 0x7c05;
0xffffffff822546ce: ret 0x7c08;
0xffffffff824c7312: ret 0x7c0d;
0xffffffff822429b0: ret 0x7c0e;
0xffffffff83488192: ret 0x7c0f;
0xffffffff82297d43: ret 0x7c11;
0xffffffff824ce989: ret 0x7c1a;
0xffffffff823d5aa5: ret 0x7c1d;
0xffffffff818f546a: ret 0x7c1e;
0xffffffff823dbf91: ret 0x7c22;
0xffffffff824d32b9: ret 0x7c25;
0xffffffff810dc2a3: ret 0x7c27;
0xffffffff824ede95: ret 0x7c29;
0xffffffff8237c413: ret 0x7c2a;
0xffffffff8233cefc: ret 0x7c2f;
0xffffffff81947e32: ret 0x7c30;
0xffffffff82393b65: ret 0x7c36;
0xffffffff823ea857: ret 0x7c38;
0xffffffff824112df: ret 0x7c3;
0xffffffff81a4bb96: ret 0x7c40;
0xffffffff82421fcf: ret 0x7c47;
0xffffffff82495cf8: ret 0x7c49;
0xffffffff8349678f: ret 0x7c50;
0xffffffff818138f2: ret 0x7c51;
0xffffffff82481052: ret 0x7c5b;
0xffffffff824a7e03: ret 0x7c5c;
0xffffffff8248eb09: ret 0x7c66;
0xffffffff81813bd0: ret 0x7c6f;
0xffffffff82355e9e: ret 0x7c74;
0xffffffff8254320b: ret 0x7c75;
0xffffffff8122ee76: ret 0x7c77;
0xffffffff823486a3: ret 0x7c79;
0xffffffff8235b288: ret 0x7c7a;
0xffffffff810174ee: ret 0x7c7d;
0xffffffff81868361: ret 0x7c80;
0xffffffff8120e4d7: ret 0x7c83;
0xffffffff834915e2: ret 0x7c87;
0xffffffff82506833: ret 0x7c88;
0xffffffff8129452d: ret 0x7c89;
0xffffffff82456ca5: ret 0x7c8;
0xffffffff815fe0e0: ret 0x7c8b;
0xffffffff82280a0e: ret 0x7c8c;
0xffffffff8240bf08: ret 0x7c8f;
0xffffffff81506ef7: ret 0x7c90;
0xffffffff834658d2: ret 0x7c95;
0xffffffff81813deb: ret 0x7c98;
0xffffffff81977bf4: ret 0x7c9b;
0xffffffff8242184d: ret 0x7c9d;
0xffffffff83465900: ret 0x7c9f;
0xffffffff8149c668: ret 0x7c;
0xffffffff8246a4c1: ret 0x7ca3;
0xffffffff82571dac: ret 0x7ca5;
0xffffffff818c2563: ret 0x7ca7;
0xffffffff8346592e: ret 0x7ca9;
0xffffffff824553a9: ret 0x7cab;
0xffffffff8247b5b3: ret 0x7cb2;
0xffffffff8238c8d5: ret 0x7cb4;
0xffffffff8246fb5a: ret 0x7cb7;
0xffffffff818eb86a: ret 0x7cba;
0xffffffff8253c98e: ret 0x7cc0;
0xffffffff8243fa7b: ret 0x7cc5;
0xffffffff81813dc8: ret 0x7cc9;
0xffffffff824d8f9b: ret 0x7cc;
0xffffffff814abc3b: ret 0x7cca;
0xffffffff825685b5: ret 0x7cd1;
0xffffffff8242e792: ret 0x7cd7;
0xffffffff8346a9b4: ret 0x7cda;
0xffffffff8254e91f: ret 0x7cdc;
0xffffffff8230b04e: ret 0x7cdf;
0xffffffff8254127d: ret 0x7ce0;
0xffffffff82481e4e: ret 0x7ce1;
0xffffffff82354164: ret 0x7ce7;
0xffffffff8102959a: ret 0x7ce8;
0xffffffff8128aa55: ret 0x7ceb;
0xffffffff8184d13f: ret 0x7cf0;
0xffffffff818147be: ret 0x7cf2;
0xffffffff822ae7cf: ret 0x7cfb;
0xffffffff8229ec82: ret 0x7cfe;
0xffffffff8200d392: ret 0x7cff;
0xffffffff81a81249: ret 0x7d00;
0xffffffff82355ddc: ret 0x7d02;
0xffffffff822de3a8: ret 0x7d0c;
0xffffffff822bc342: ret 0x7d13;
0xffffffff8234768a: ret 0x7d16;
0xffffffff82566b82: ret 0x7d1e;
0xffffffff81a74bf0: ret 0x7d24;
0xffffffff82447821: ret 0x7d25;
0xffffffff817bf49a: ret 0x7d26;
0xffffffff83465b28: ret 0x7d27;
0xffffffff81813d93: ret 0x7d28;
0xffffffff82305382: ret 0x7d31;
0xffffffff8346ef2a: ret 0x7d33;
0xffffffff8184d1f1: ret 0x7d40;
0xffffffff8197a38a: ret 0x7d42;
0xffffffff83465c20: ret 0x7d43;
0xffffffff816ec28a: ret 0x7d47;
0xffffffff83465c52: ret 0x7d49;
0xffffffff82341a73: ret 0x7d4e;
0xffffffff8182c13a: ret 0x7d4f;
0xffffffff83465cb6: ret 0x7d50;
0xffffffff82277845: ret 0x7d56;
0xffffffff822b4b62: ret 0x7d57;
0xffffffff823690b1: ret 0x7d5a;
0xffffffff816ec2a4: ret 0x7d5b;
0xffffffff822381bc: ret 0x7d5e;
0xffffffff82454b8f: ret 0x7d64;
0xffffffff818147a2: ret 0x7d65;
0xffffffff82387303: ret 0x7d6;
0xffffffff822ec5d1: ret 0x7d6a;
0xffffffff823b31b3: ret 0x7d6f;
0xffffffff8252ad5f: ret 0x7d73;
0xffffffff81b08c16: ret 0x7d75;
0xffffffff824a85dd: ret 0x7d78;
0xffffffff822d20f8: ret 0x7d7b;
0xffffffff8262fc60: ret 0x7d7d;
0xffffffff81a671b0: ret 0x7d80;
0xffffffff822daf41: ret 0x7d81;
0xffffffff819dda58: ret 0x7d83;
0xffffffff8349cfb5: ret 0x7d85;
0xffffffff82234815: ret 0x7d88;
0xffffffff823d09cf: ret 0x7d8e;
0xffffffff823d09ce: ret 0x7d8e;
0xffffffff82249c2f: ret 0x7d91;
0xffffffff82568dfe: ret 0x7d97;
0xffffffff82472706: ret 0x7d97;
0xffffffff818147f7: ret 0x7d99;
0xffffffff8236e631: ret 0x7d9d;
0xffffffff824816e5: ret 0x7d9f;
0xffffffff8149c2fc: ret 0x7d;
0xffffffff8254d0e6: ret 0x7da2;
0xffffffff8348e15a: ret 0x7da3;
0xffffffff823aec83: ret 0x7da4;
0xffffffff81bbdfb8: ret 0x7da9;
0xffffffff823bc519: ret 0x7dac;
0xffffffff82411b4a: ret 0x7dad;
0xffffffff8236efd5: ret 0x7dae;
0xffffffff8343bed0: ret 0x7db3;
0xffffffff8237168e: ret 0x7dba;
0xffffffff824695c5: ret 0x7dbd;
0xffffffff824acd14: ret 0x7dbf;
0xffffffff824acd13: ret 0x7dbf;
0xffffffff817a7da1: ret 0x7dc0;
0xffffffff81813c9c: ret 0x7dc2;
0xffffffff81499d56: ret 0x7dc3;
0xffffffff825691da: ret 0x7dc6;
0xffffffff8238d53f: ret 0x7dc7;
0xffffffff81c03190: ret 0x7dc8;
0xffffffff82533e05: ret 0x7dca;
0xffffffff82391955: ret 0x7dd0;
0xffffffff82396610: ret 0x7dd7;
0xffffffff82554488: ret 0x7dd9;
0xffffffff8254243c: ret 0x7ddb;
0xffffffff8245fd24: ret 0x7dde;
0xffffffff82542a6b: ret 0x7de0;
0xffffffff822e3503: ret 0x7de5;
0xffffffff823c7f0a: ret 0x7de5;
0xffffffff8147a5cd: ret 0x7de8;
0xffffffff835af168: ret 0x7de;
0xffffffff82491833: ret 0x7dea;
0xffffffff823264a2: ret 0x7def;
0xffffffff8192cf5a: ret 0x7df3;
0xffffffff8181acb2: ret 0x7df5;
0xffffffff817e5144: ret 0x7df8;
0xffffffff81c2c781: ret 0x7df9;
0xffffffff8251f367: ret 0x7dfd;
0xffffffff8128132c: ret 0x7dfe;
0xffffffff8184d23c: ret 0x7e00;
0xffffffff8248ccb2: ret 0x7e03;
0xffffffff8238358d: ret 0x7e04;
0xffffffff81552883: ret 0x7e0;
0xffffffff823ca2a0: ret 0x7e0e;
0xffffffff82292ac0: ret 0x7e18;
0xffffffff8263bfd8: ret 0x7e19;
0xffffffff8224ca49: ret 0x7e1d;
0xffffffff824ec47c: ret 0x7e22;
0xffffffff824284f7: ret 0x7e28;
0xffffffff829105c8: ret 0x7e2;
0xffffffff825565d4: ret 0x7e2a;
0xffffffff81814c1f: ret 0x7e2f;
0xffffffff8343befa: ret 0x7e33;
0xffffffff82264873: ret 0x7e3;
0xffffffff81c63f4d: ret 0x7e3a;
0xffffffff824b4caf: ret 0x7e3e;
0xffffffff81045cdc: ret 0x7e3f;
0xffffffff82337960: ret 0x7e48;
0xffffffff8240eb3a: ret 0x7e4b;
0xffffffff822ce036: ret 0x7e4f;
0xffffffff817e7e3d: ret 0x7e50;
0xffffffff81aa9a77: ret 0x7e56;
0xffffffff8148843b: ret 0x7e58;
0xffffffff81814c9b: ret 0x7e5b;
0xffffffff81a49a2b: ret 0x7e5c;
0xffffffff81264605: ret 0x7e60;
0xffffffff822505f9: ret 0x7e67;
0xffffffff823084f5: ret 0x7e68;
0xffffffff823faf0f: ret 0x7e69;
0xffffffff81814c84: ret 0x7e6c;
0xffffffff81969345: ret 0x7e77;
0xffffffff81883f52: ret 0x7e78;
0xffffffff823b816f: ret 0x7e79;
0xffffffff8149b49a: ret 0x7e7b;
0xffffffff824177d8: ret 0x7e7c;
0xffffffff81803f0f: ret 0x7e80;
0xffffffff823fbdbc: ret 0x7e83;
0xffffffff82484c7a: ret 0x7e86;
0xffffffff823b8e9a: ret 0x7e88;
0xffffffff8231477e: ret 0x7e89;
0xffffffff814c9a53: ret 0x7e8;
0xffffffff82508114: ret 0x7e8b;
0xffffffff822e0f9a: ret 0x7e90;
0xffffffff822e0f99: ret 0x7e90;
0xffffffff822a4d56: ret 0x7e94;
0xffffffff816b3f0e: ret 0x7e95;
0xffffffff823f85ed: ret 0x7e96;
0xffffffff8180d03f: ret 0x7e9;
0xffffffff822b79c4: ret 0x7e9e;
0xffffffff8235ab26: ret 0x7e9f;
0xffffffff81496d08: ret 0x7e;
0xffffffff81746444: ret 0x7ea0;
0xffffffff81814df7: ret 0x7ea1;
0xffffffff815e3eb3: ret 0x7ea2;
0xffffffff8229f545: ret 0x7ea6;
0xffffffff824dea18: ret 0x7eaa;
0xffffffff81543f1d: ret 0x7eac;
0xffffffff8240f3e9: ret 0x7eaf;
0xffffffff81503ecc: ret 0x7eb0;
0xffffffff814f3f2d: ret 0x7eb1;
0xffffffff8348ad56: ret 0x7eb3;
0xffffffff814b3eea: ret 0x7eb5;
0xffffffff823badc1: ret 0x7eb6;
0xffffffff8102e6cb: ret 0x7eb;
0xffffffff81413f26: ret 0x7ebf;
0xffffffff81746462: ret 0x7ec0;
0xffffffff8345554f: ret 0x7eca;
0xffffffff81814ed8: ret 0x7ecd;
0xffffffff81777de1: ret 0x7ed0;
0xffffffff822c8b8a: ret 0x7ed1;
0xffffffff819147ba: ret 0x7ed5;
0xffffffff824b8e46: ret 0x7ed;
0xffffffff81263f50: ret 0x7eda;
0xffffffff8126a4e2: ret 0x7edb;
0xffffffff822327db: ret 0x7edc;
0xffffffff81223f2a: ret 0x7ede;
0xffffffff81203ef3: ret 0x7ee0;
0xffffffff811f3efe: ret 0x7ee1;
0xffffffff810041bc: ret 0x7ee8;
0xffffffff81814e42: ret 0x7eec;
0xffffffff81133f40: ret 0x7eed;
0xffffffff81123eb8: ret 0x7eee;
0xffffffff81113f70: ret 0x7eef;
0xffffffff8103730f: ret 0x7ef0;
0xffffffff824c76db: ret 0x7ef2;
0xffffffff810e3e94: ret 0x7ef2;
0xffffffff822b8ca5: ret 0x7ef3;
0xffffffff822d103f: ret 0x7efa;
0xffffffff824fb43f: ret 0x7efc;
0xffffffff813740ec: ret 0x7eff;
0xffffffff81003f5a: ret 0x7f00;
0xffffffff823956bf: ret 0x7f03;
0xffffffff814407ba: ret 0x7f08;
0xffffffff825028a7: ret 0x7f0a;
0xffffffff81814dac: ret 0x7f17;
0xffffffff814831da: ret 0x7f24;
0xffffffff814f7299: ret 0x7f2;
0xffffffff8141f17a: ret 0x7f2c;
0xffffffff8227f8b7: ret 0x7f2d;
0xffffffff825592e2: ret 0x7f2e;
0xffffffff8348ffac: ret 0x7f33;
0xffffffff82439c8d: ret 0x7f34;
0xffffffff82439f8b: ret 0x7f42;
0xffffffff8344ebe0: ret 0x7f44;
0xffffffff824b0962: ret 0x7f45;
0xffffffff83481a56: ret 0x7f46;
0xffffffff81814e76: ret 0x7f47;
0xffffffff822bf644: ret 0x7f48;
0xffffffff8244bca2: ret 0x7f4c;
0xffffffff8143bc4a: ret 0x7f4d;
0xffffffff822551de: ret 0x7f57;
0xffffffff8223e408: ret 0x7f58;
0xffffffff822385d1: ret 0x7f5c;
0xffffffff8180af3a: ret 0x7f61;
0xffffffff82302d30: ret 0x7f62;
0xffffffff815edfcc: ret 0x7f6;
0xffffffff81815010: ret 0x7f6c;
0xffffffff81a9508a: ret 0x7f6d;
0xffffffff823f06f9: ret 0x7f6e;
0xffffffff81159a1b: ret 0x7f6f;
0xffffffff81439eba: ret 0x7f71;
0xffffffff823cc1c4: ret 0x7f74;
0xffffffff823b085e: ret 0x7f75;
0xffffffff824206d7: ret 0x7f77;
0xffffffff819a1096: ret 0x7f78;
0xffffffff8223aae0: ret 0x7f7;
0xffffffff8147d6da: ret 0x7f7f;
0xffffffff81befb9e: ret 0x7f83;
0xffffffff8240186b: ret 0x7f84;
0xffffffff8163e5d5: ret 0x7f88;
0xffffffff82369e49: ret 0x7f89;
0xffffffff822780d7: ret 0x7f8f;
0xffffffff822fb8ad: ret 0x7f91;
0xffffffff8147cd56: ret 0x7f93;
0xffffffff82244745: ret 0x7f9d;
0xffffffff8181512e: ret 0x7f9f;
0xffffffff81433eda: ret 0x7f;
0xffffffff8347adda: ret 0x7fa8;
0xffffffff824d1bed: ret 0x7fad;
0xffffffff81aa3acf: ret 0x7fba;
0xffffffff82274771: ret 0x7fbc;
0xffffffff8234fea0: ret 0x7fc4;
0xffffffff8181ad40: ret 0x7fc8;
0xffffffff83465bee: ret 0x7fc9;
0xffffffff83466341: ret 0x7fd1;
0xffffffff835a8e8e: ret 0x7fd;
0xffffffff83466376: ret 0x7fdc;
0xffffffff823e3614: ret 0x7fdf;
0xffffffff81432dba: ret 0x7fe2;
0xffffffff822faa94: ret 0x7fe6;
0xffffffff834663a8: ret 0x7fe7;
0xffffffff8103641b: ret 0x7fe8;
0xffffffff8181ad85: ret 0x7fef;
0xffffffff834663dd: ret 0x7ff0;
0xffffffff834a1527: ret 0x7ff3;
0xffffffff82248334: ret 0x7ff6;
0xffffffff81588bc3: ret 0x7ff;
0xffffffff818f7d26: ret 0x7ffc;
0xffffffff8346640f: ret 0x7ffd;
0xffffffff8136f0ef: ret 0x7fff;
0xffffffff81000273: ret 0x8000;
0xffffffff8100a4e8: ret 0x8001;
0xffffffff810b16c3: ret 0x8003;
0xffffffff81aedf72: ret 0x8005;
0xffffffff814c29af: ret 0x8008;
0xffffffff8100eb69: ret 0x800;
0xffffffff822cf9b5: ret 0x800a;
0xffffffff8230df5e: ret 0x800c;
0xffffffff81a6b3fb: ret 0x8010;
0xffffffff8238eeb2: ret 0x8011;
0xffffffff8229f074: ret 0x8012;
0xffffffff82349945: ret 0x8013;
0xffffffff83475c22: ret 0x8016;
0xffffffff8348ce0a: ret 0x8017;
0xffffffff818f1d67: ret 0x8018;
0xffffffff82326ff8: ret 0x8019;
0xffffffff834664ab: ret 0x801c;
0xffffffff818151d0: ret 0x801d;
0xffffffff8253c96b: ret 0x801e;
0xffffffff822783bc: ret 0x8020;
0xffffffff823afec8: ret 0x8023;
0xffffffff823afec7: ret 0x8023;
0xffffffff82280031: ret 0x8024;
0xffffffff814207ba: ret 0x8025;
0xffffffff834664dd: ret 0x802b;
0xffffffff82345bc4: ret 0x802c;
0xffffffff81050512: ret 0x8030;
0xffffffff8105071e: ret 0x8031;
0xffffffff8126e7dd: ret 0x8036;
0xffffffff81b9c2bf: ret 0x8038;
0xffffffff818151b5: ret 0x8039;
0xffffffff82426381: ret 0x803;
0xffffffff8343df6f: ret 0x803d;
0xffffffff8158eb84: ret 0x8040;
0xffffffff811da94b: ret 0x8041;
0xffffffff82250f05: ret 0x8043;
0xffffffff83466544: ret 0x8045;
0xffffffff8343e1c4: ret 0x8048;
0xffffffff8104c769: ret 0x804;
0xffffffff8241854a: ret 0x804c;
0xffffffff82301114: ret 0x8053;
0xffffffff824c09e3: ret 0x8055;
0xffffffff8242630b: ret 0x805b;
0xffffffff82350585: ret 0x805c;
0xffffffff81b9c031: ret 0x8060;
0xffffffff818151f5: ret 0x8062;
0xffffffff824cb189: ret 0x8068;
0xffffffff82379885: ret 0x8069;
0xffffffff82914b7c: ret 0x806;
0xffffffff8250674a: ret 0x806c;
0xffffffff8253f995: ret 0x8071;
0xffffffff83469b1b: ret 0x8076;
0xffffffff822fb639: ret 0x8077;
0xffffffff8183bf14: ret 0x8078;
0xffffffff82914cec: ret 0x807;
0xffffffff8230de54: ret 0x807a;
0xffffffff822286e8: ret 0x807e;
0xffffffff8250d1e4: ret 0x807f;
0xffffffff81175018: ret 0x8081;
0xffffffff8162bcc8: ret 0x808b;
0xffffffff822463ed: ret 0x808c;
0xffffffff82303ab7: ret 0x808f;
0xffffffff81816a33: ret 0x8091;
0xffffffff824016b2: ret 0x8092;
0xffffffff8234c62c: ret 0x8097;
0xffffffff82315534: ret 0x8099;
0xffffffff8229f74e: ret 0x809c;
0xffffffff822df34c: ret 0x809d;
0xffffffff822df34b: ret 0x809d;
0xffffffff81130ef8: ret 0x80;
0xffffffff817e808e: ret 0x80a0;
0xffffffff822371bf: ret 0x80a4;
0xffffffff822d6b78: ret 0x80a6;
0xffffffff8248c309: ret 0x80a7;
0xffffffff8125037e: ret 0x80a8;
0xffffffff8225dd9a: ret 0x80a9;
0xffffffff8222babb: ret 0x80ac;
0xffffffff823b4126: ret 0x80ae;
0xffffffff825480d9: ret 0x80b4;
0xffffffff82352213: ret 0x80b5;
0xffffffff82451001: ret 0x80b6;
0xffffffff812463bc: ret 0x80be;
0xffffffff811cef22: ret 0x80c3;
0xffffffff81816e2b: ret 0x80c5;
0xffffffff82312431: ret 0x80c9;
0xffffffff82326c74: ret 0x80c;
0xffffffff82295452: ret 0x80ca;
0xffffffff822af734: ret 0x80ce;
0xffffffff81154e47: ret 0x80cf;
0xffffffff81673417: ret 0x80d0;
0xffffffff8222bfcb: ret 0x80d2;
0xffffffff826fa5c0: ret 0x80d3;
0xffffffff8240eca7: ret 0x80d4;
0xffffffff818c6f70: ret 0x80dc;
0xffffffff81b9e157: ret 0x80e0;
0xffffffff81ba6ba0: ret 0x80e1;
0xffffffff8349e8f1: ret 0x80e2;
0xffffffff81052dc8: ret 0x80e4;
0xffffffff81bb1f36: ret 0x80e5;
0xffffffff81bb4ae8: ret 0x80e6;
0xffffffff8196e8b7: ret 0x80e7;
0xffffffff81052e48: ret 0x80e8;
0xffffffff811df473: ret 0x80e9;
0xffffffff827e546c: ret 0x80e;
0xffffffff81bc90e2: ret 0x80eb;
0xffffffff82430ae2: ret 0x80ee;
0xffffffff81918b7c: ret 0x80f0;
0xffffffff8119a299: ret 0x80f6;
0xffffffff8250c2d9: ret 0x80f8;
0xffffffff835a8e72: ret 0x80fd;
0xffffffff811750ff: ret 0x80ff;
0xffffffff82551f11: ret 0x8100;
0xffffffff811cab26: ret 0x8101;
0xffffffff83517ad1: ret 0x8102;
0xffffffff81bbb916: ret 0x8104;
0xffffffff81b0dcca: ret 0x8105;
0xffffffff8351a6b1: ret 0x8106;
0xffffffff8186260e: ret 0x8108;
0xffffffff81bb9595: ret 0x8109;
0xffffffff811e0502: ret 0x810;
0xffffffff81bc5987: ret 0x810a;
0xffffffff81bc2d30: ret 0x810b;
0xffffffff81bc443c: ret 0x810c;
0xffffffff81bc46cf: ret 0x810d;
0xffffffff8351d861: ret 0x810e;
0xffffffff82223f69: ret 0x810f;
0xffffffff8351eb39: ret 0x8110;
0xffffffff818a616a: ret 0x8111;
0xffffffff8113b810: ret 0x8113;
0xffffffff822b77cb: ret 0x8117;
0xffffffff8176659a: ret 0x811;
0xffffffff811abc93: ret 0x811a;
0xffffffff82394ae1: ret 0x811c;
0xffffffff83523a51: ret 0x811d;
0xffffffff8257d011: ret 0x811e;
0xffffffff82200b41: ret 0x811f;
0xffffffff8123e2b4: ret 0x8120;
0xffffffff82591b31: ret 0x8121;
0xffffffff8181711f: ret 0x8122;
0xffffffff81ad197a: ret 0x8124;
0xffffffff82372c43: ret 0x8126;
0xffffffff835270f1: ret 0x8127;
0xffffffff812aa78a: ret 0x812a;
0xffffffff83528ed1: ret 0x812b;
0xffffffff823438f8: ret 0x812c;
0xffffffff8352a139: ret 0x812d;
0xffffffff83466a10: ret 0x812f;
0xffffffff82201a69: ret 0x8130;
0xffffffff8352bf69: ret 0x8131;
0xffffffff8352c339: ret 0x8132;
0xffffffff8352c971: ret 0x8133;
0xffffffff8352d1b1: ret 0x8134;
0xffffffff8352e189: ret 0x8136;
0xffffffff81817207: ret 0x8137;
0xffffffff823e3959: ret 0x8138;
0xffffffff823e3958: ret 0x8138;
0xffffffff8352ea41: ret 0x8139;
0xffffffff824f0735: ret 0x813a;
0xffffffff82378392: ret 0x813c;
0xffffffff82590531: ret 0x813e;
0xffffffff811efcbb: ret 0x813f;
0xffffffff81333662: ret 0x8141;
0xffffffff825965e1: ret 0x8143;
0xffffffff83532221: ret 0x8145;
0xffffffff810128fc: ret 0x8148;
0xffffffff8127676a: ret 0x8149;
0xffffffff83534279: ret 0x814a;
0xffffffff83534d19: ret 0x814c;
0xffffffff817ec03a: ret 0x8150;
0xffffffff83536b81: ret 0x8152;
0xffffffff817ebd3a: ret 0x8153;
0xffffffff8105f29f: ret 0x8156;
0xffffffff83538151: ret 0x8157;
0xffffffff835399d9: ret 0x815b;
0xffffffff811550e7: ret 0x815c;
0xffffffff8353a889: ret 0x815d;
0xffffffff81811422: ret 0x815f;
0xffffffff8353cad1: ret 0x8161;
0xffffffff814620dc: ret 0x8162;
0xffffffff822b8c2e: ret 0x8163;
0xffffffff8353e239: ret 0x8164;
0xffffffff8353ef19: ret 0x8165;
0xffffffff825d1c41: ret 0x8166;
0xffffffff83540b41: ret 0x8168;
0xffffffff822ca7f5: ret 0x8169;
0xffffffff82480ff9: ret 0x816a;
0xffffffff83542479: ret 0x816e;
0xffffffff823c0e62: ret 0x816f;
0xffffffff83466ad2: ret 0x8171;
0xffffffff83545049: ret 0x8172;
0xffffffff83545869: ret 0x8173;
0xffffffff83546331: ret 0x8174;
0xffffffff823baf3a: ret 0x8175;
0xffffffff825e9fe1: ret 0x8176;
0xffffffff83549019: ret 0x8179;
0xffffffff83466b04: ret 0x817a;
0xffffffff8229f150: ret 0x817c;
0xffffffff8354b8f9: ret 0x817d;
0xffffffff823d6785: ret 0x817e;
0xffffffff8354cdd9: ret 0x817f;
0xffffffff8354e0a9: ret 0x8182;
0xffffffff822cad84: ret 0x8184;
0xffffffff823fdf32: ret 0x8185;
0xffffffff8260a7f9: ret 0x8186;
0xffffffff8187b90a: ret 0x8187;
0xffffffff816016fa: ret 0x8188;
0xffffffff81811443: ret 0x8189;
0xffffffff835518f1: ret 0x818a;
0xffffffff818bac2b: ret 0x818b;
0xffffffff835535f9: ret 0x818e;
0xffffffff81c827cd: ret 0x818f;
0xffffffff823cff3a: ret 0x8192;
0xffffffff83555a11: ret 0x8194;
0xffffffff8195bf61: ret 0x8195;
0xffffffff835579e1: ret 0x8197;
0xffffffff835584e9: ret 0x8198;
0xffffffff83558c31: ret 0x8199;
0xffffffff82342680: ret 0x819;
0xffffffff819bc272: ret 0x819b;
0xffffffff83559f69: ret 0x819c;
0xffffffff8355a6c1: ret 0x819d;
0xffffffff8117775e: ret 0x81;
0xffffffff81603eff: ret 0x81a0;
0xffffffff822867dd: ret 0x81a1;
0xffffffff8343ca21: ret 0x81a3;
0xffffffff82358899: ret 0x81a4;
0xffffffff81a5af88: ret 0x81a5;
0xffffffff822fbd17: ret 0x81a6;
0xffffffff8355eaf9: ret 0x81a7;
0xffffffff8124e14a: ret 0x81a9;
0xffffffff822aa5c7: ret 0x81a;
0xffffffff8355fd79: ret 0x81ab;
0xffffffff823f2871: ret 0x81ae;
0xffffffff81bd166f: ret 0x81b0;
0xffffffff835619d9: ret 0x81b1;
0xffffffff818187a5: ret 0x81b2;
0xffffffff82427801: ret 0x81b3;
0xffffffff8228e5a6: ret 0x81b4;
0xffffffff81b5cf26: ret 0x81b5;
0xffffffff83563691: ret 0x81b6;
0xffffffff83563b89: ret 0x81b7;
0xffffffff816093fc: ret 0x81b8;
0xffffffff82553f7c: ret 0x81b9;
0xffffffff822305cf: ret 0x81b;
0xffffffff83564b29: ret 0x81ba;
0xffffffff835650d1: ret 0x81bb;
0xffffffff8189b5ba: ret 0x81bc;
0xffffffff82248e76: ret 0x81bd;
0xffffffff82636e69: ret 0x81be;
0xffffffff83566bd9: ret 0x81bf;
0xffffffff81345997: ret 0x81c0;
0xffffffff81c2a0da: ret 0x81c2;
0xffffffff822d2ba5: ret 0x81c3;
0xffffffff82293652: ret 0x81c4;
0xffffffff825448b8: ret 0x81c7;
0xffffffff8253e3b3: ret 0x81c8;
0xffffffff8116604c: ret 0x81ca;
0xffffffff8181878f: ret 0x81cb;
0xffffffff82350ee3: ret 0x81cf;
0xffffffff822834c3: ret 0x81d2;
0xffffffff8349116a: ret 0x81d3;
0xffffffff834911a3: ret 0x81d9;
0xffffffff823722b3: ret 0x81d;
0xffffffff8232596f: ret 0x81da;
0xffffffff82336825: ret 0x81dc;
0xffffffff81455b19: ret 0x81e0;
0xffffffff82312590: ret 0x81e2;
0xffffffff822dbaf1: ret 0x81e3;
0xffffffff823e3a44: ret 0x81e4;
0xffffffff811b53c9: ret 0x81e8;
0xffffffff82526653: ret 0x81e9;
0xffffffff82238610: ret 0x81ea;
0xffffffff8241ad87: ret 0x81ee;
0xffffffff818187d3: ret 0x81ef;
0xffffffff813a5771: ret 0x81f4;
0xffffffff814ee751: ret 0x81f6;
0xffffffff823ca21f: ret 0x81f8;
0xffffffff822cec9e: ret 0x81fd;
0xffffffff8254d74c: ret 0x8206;
0xffffffff822db04c: ret 0x820d;
0xffffffff810225d7: ret 0x820f;
0xffffffff8120941a: ret 0x821;
0xffffffff822b1616: ret 0x821b;
0xffffffff824e890e: ret 0x821c;
0xffffffff8117352d: ret 0x8222;
0xffffffff822991fd: ret 0x8226;
0xffffffff8227f331: ret 0x822b;
0xffffffff813901a3: ret 0x8230;
0xffffffff824a3a17: ret 0x8231;
0xffffffff8233835b: ret 0x8237;
0xffffffff83452656: ret 0x823a;
0xffffffff82569137: ret 0x823b;
0xffffffff816edc92: ret 0x8247;
0xffffffff83466d4e: ret 0x8249;
0xffffffff8343cd6f: ret 0x824e;
0xffffffff8229109b: ret 0x8253;
0xffffffff83450b56: ret 0x8255;
0xffffffff811e6e50: ret 0x8257;
0xffffffff813594d2: ret 0x8258;
0xffffffff8145610d: ret 0x8259;
0xffffffff8155fe9a: ret 0x825;
0xffffffff8347ac0a: ret 0x825c;
0xffffffff818775ec: ret 0x8260;
0xffffffff819c61d8: ret 0x8261;
0xffffffff81aa0317: ret 0x8262;
0xffffffff81c5082b: ret 0x8263;
0xffffffff818db63a: ret 0x8266;
0xffffffff81c0de65: ret 0x8268;
0xffffffff82463b07: ret 0x826e;
0xffffffff81001969: ret 0x8270;
0xffffffff810af6c0: ret 0x8271;
0xffffffff811a54da: ret 0x8272;
0xffffffff812c18de: ret 0x8273;
0xffffffff813d23f7: ret 0x8274;
0xffffffff814a66d8: ret 0x8275;
0xffffffff823ae8af: ret 0x8276;
0xffffffff825ba698: ret 0x8276;
0xffffffff825c4108: ret 0x8277;
0xffffffff815f114a: ret 0x8277;
0xffffffff8347f7ed: ret 0x8278;
0xffffffff81722f3a: ret 0x8278;
0xffffffff817c329a: ret 0x8279;
0xffffffff824243d2: ret 0x827;
0xffffffff81835d2f: ret 0x827a;
0xffffffff8190623f: ret 0x827b;
0xffffffff8198dd4d: ret 0x827c;
0xffffffff81bf57b7: ret 0x827d;
0xffffffff8261de61: ret 0x827e;
0xffffffff82233b7e: ret 0x8286;
0xffffffff824bdd90: ret 0x8287;
0xffffffff81971da1: ret 0x828;
0xffffffff82234dc3: ret 0x828a;
0xffffffff825d88b9: ret 0x828f;
0xffffffff82473e8f: ret 0x829b;
0xffffffff824d947a: ret 0x829d;
0xffffffff814490fe: ret 0x82;
0xffffffff815a81c5: ret 0x82a0;
0xffffffff822f38f0: ret 0x82ab;
0xffffffff8222e908: ret 0x82b7;
0xffffffff81607f36: ret 0x82b8;
0xffffffff82919f4c: ret 0x82b;
0xffffffff822e433e: ret 0x82c2;
0xffffffff823a9043: ret 0x82c7;
0xffffffff82283136: ret 0x82cd;
0xffffffff8222a224: ret 0x82ce;
0xffffffff81609785: ret 0x82d0;
0xffffffff824f02a3: ret 0x82db;
0xffffffff822d423c: ret 0x82e2;
0xffffffff8228d88b: ret 0x82e4;
0xffffffff81173be7: ret 0x82e6;
0xffffffff81219562: ret 0x82e7;
0xffffffff810c62e8: ret 0x82e8;
0xffffffff81bda628: ret 0x82e9;
0xffffffff81c0019a: ret 0x82e;
0xffffffff83592cf1: ret 0x82ec;
0xffffffff814aa597: ret 0x82ed;
0xffffffff83593459: ret 0x82ee;
0xffffffff81698284: ret 0x82f0;
0xffffffff83484930: ret 0x82f1;
0xffffffff82615e71: ret 0x82f3;
0xffffffff81bd6479: ret 0x82f5;
0xffffffff82491c0a: ret 0x82f;
0xffffffff835a8e4a: ret 0x82fd;
0xffffffff8104c5ff: ret 0x8300;
0xffffffff811b569c: ret 0x8301;
0xffffffff812668ec: ret 0x8302;
0xffffffff811f22ef: ret 0x8303;
0xffffffff8137d01d: ret 0x8304;
0xffffffff816cccc2: ret 0x8306;
0xffffffff81240376: ret 0x8307;
0xffffffff816522f5: ret 0x8308;
0xffffffff811e04eb: ret 0x830;
0xffffffff813a35f8: ret 0x830b;
0xffffffff8176e4f0: ret 0x830e;
0xffffffff8104fd9a: ret 0x830f;
0xffffffff81014a36: ret 0x8310;
0xffffffff8233ad0f: ret 0x8312;
0xffffffff81382b5b: ret 0x8313;
0xffffffff8199ea31: ret 0x8314;
0xffffffff82453ee3: ret 0x8316;
0xffffffff8167e702: ret 0x8318;
0xffffffff8232af2f: ret 0x831a;
0xffffffff819c1dd0: ret 0x831c;
0xffffffff8137d0d0: ret 0x8320;
0xffffffff81472ba7: ret 0x8322;
0xffffffff8225872a: ret 0x8323;
0xffffffff82367b7f: ret 0x8324;
0xffffffff8223c5fc: ret 0x8327;
0xffffffff8229ab61: ret 0x8328;
0xffffffff822bda9c: ret 0x8329;
0xffffffff82476b79: ret 0x832a;
0xffffffff822f612f: ret 0x832b;
0xffffffff8229a82f: ret 0x8333;
0xffffffff81327fc6: ret 0x8338;
0xffffffff823720ba: ret 0x8339;
0xffffffff8245d245: ret 0x833a;
0xffffffff818cdb5a: ret 0x833b;
0xffffffff816dd93d: ret 0x8340;
0xffffffff8112d2bd: ret 0x8341;
0xffffffff822e1f22: ret 0x8342;
0xffffffff83519151: ret 0x8343;
0xffffffff81957100: ret 0x8344;
0xffffffff83526d89: ret 0x8345;
0xffffffff8104d234: ret 0x8348;
0xffffffff8102587d: ret 0x8349;
0xffffffff81876a55: ret 0x834b;
0xffffffff83595161: ret 0x8350;
0xffffffff8342d5c7: ret 0x8356;
0xffffffff8359c319: ret 0x8357;
0xffffffff81449e0a: ret 0x835b;
0xffffffff81586e92: ret 0x8366;
0xffffffff824f9074: ret 0x836a;
0xffffffff823c6558: ret 0x836b;
0xffffffff82519e0c: ret 0x836f;
0xffffffff81b3c197: ret 0x8370;
0xffffffff8237b17b: ret 0x8371;
0xffffffff8343ed56: ret 0x8373;
0xffffffff824c73d4: ret 0x8375;
0xffffffff824c73d5: ret 0x8375;
0xffffffff81c1547a: ret 0x8381;
0xffffffff823af9e2: ret 0x8386;
0xffffffff810fdbb5: ret 0x8389;
0xffffffff81a1297f: ret 0x838b;
0xffffffff82470854: ret 0x838e;
0xffffffff81978371: ret 0x8390;
0xffffffff824f83d8: ret 0x8393;
0xffffffff824f83d9: ret 0x8393;
0xffffffff822fad27: ret 0x8395;
0xffffffff824f21ec: ret 0x8396;
0xffffffff8343c756: ret 0x8399;
0xffffffff822e841a: ret 0x839;
0xffffffff814450bc: ret 0x83;
0xffffffff82335b8c: ret 0x83a2;
0xffffffff8245b6a9: ret 0x83a8;
0xffffffff8220d34c: ret 0x83a9;
0xffffffff8232df03: ret 0x83aa;
0xffffffff825123d2: ret 0x83ac;
0xffffffff8234cd3c: ret 0x83b1;
0xffffffff834380ba: ret 0x83b3;
0xffffffff8246ca7b: ret 0x83b4;
0xffffffff82533eb9: ret 0x83b5;
0xffffffff8249b46c: ret 0x83b9;
0xffffffff824775c0: ret 0x83bc;
0xffffffff8220d246: ret 0x83bf;
0xffffffff825464a2: ret 0x83c0;
0xffffffff822dcd53: ret 0x83c1;
0xffffffff81c6bb29: ret 0x83c6;
0xffffffff823a6b65: ret 0x83c8;
0xffffffff824fecdc: ret 0x83c9;
0xffffffff82382b02: ret 0x83c;
0xffffffff81b4cec4: ret 0x83cc;
0xffffffff823744a2: ret 0x83cd;
0xffffffff82281763: ret 0x83ce;
0xffffffff811c1438: ret 0x83d0;
0xffffffff817a1bd2: ret 0x83d2;
0xffffffff81b4ceda: ret 0x83d8;
0xffffffff8251eecb: ret 0x83d9;
0xffffffff81438656: ret 0x83da;
0xffffffff822ba2a2: ret 0x83dc;
0xffffffff814dfc3a: ret 0x83de;
0xffffffff818df3c2: ret 0x83e0;
0xffffffff8241b5d2: ret 0x83e2;
0xffffffff81b4cfe2: ret 0x83e5;
0xffffffff811de857: ret 0x83e8;
0xffffffff8197fdd7: ret 0x83e9;
0xffffffff823b3852: ret 0x83ee;
0xffffffff81c0e0c5: ret 0x83f0;
0xffffffff824ffa8f: ret 0x83f3;
0xffffffff81c5d366: ret 0x83f4;
0xffffffff81c4a424: ret 0x83f6;
0xffffffff817db724: ret 0x83f8;
0xffffffff816fbb76: ret 0x83f9;
0xffffffff823201a1: ret 0x83f;
0xffffffff81178f49: ret 0x83fb;
0xffffffff8187f4f2: ret 0x83fc;
0xffffffff8126a9e7: ret 0x83fd;
0xffffffff811dc30f: ret 0x83fe;
0xffffffff8101f853: ret 0x83ff;
0xffffffff811ec8b2: ret 0x8401;
0xffffffff811475dc: ret 0x8403;
0xffffffff8146732c: ret 0x8404;
0xffffffff824d78b4: ret 0x8406;
0xffffffff8112ba26: ret 0x840;
0xffffffff8100fbaa: ret 0x840f;
0xffffffff822f342a: ret 0x8412;
0xffffffff8241a688: ret 0x8415;
0xffffffff8243c0dd: ret 0x8416;
0xffffffff8351298f: ret 0x8417;
0xffffffff82429783: ret 0x8418;
0xffffffff81269c22: ret 0x841;
0xffffffff82437ea3: ret 0x841c;
0xffffffff8249818d: ret 0x841d;
0xffffffff82358436: ret 0x841e;
0xffffffff823be848: ret 0x8422;
0xffffffff8226ca6d: ret 0x8424;
0xffffffff823715a9: ret 0x842a;
0xffffffff8346752e: ret 0x842b;
0xffffffff8239d8d9: ret 0x842c;
0xffffffff81b4cf74: ret 0x842f;
0xffffffff83467560: ret 0x8431;
0xffffffff81351f36: ret 0x8432;
0xffffffff82560d78: ret 0x8434;
0xffffffff8346758e: ret 0x8438;
0xffffffff81255bd4: ret 0x8440;
0xffffffff818c4815: ret 0x8441;
0xffffffff824ff27c: ret 0x8442;
0xffffffff811de766: ret 0x8445;
0xffffffff8103308e: ret 0x844;
0xffffffff834675bc: ret 0x844b;
0xffffffff82298038: ret 0x8452;
0xffffffff816c4986: ret 0x845;
0xffffffff823a7e96: ret 0x845e;
0xffffffff824e1b4e: ret 0x8464;
0xffffffff81b4d551: ret 0x846f;
0xffffffff81308237: ret 0x8470;
0xffffffff824c6e34: ret 0x8473;
0xffffffff8222e1a9: ret 0x8474;
0xffffffff8230e390: ret 0x847a;
0xffffffff8252435d: ret 0x847b;
0xffffffff81b4d567: ret 0x847c;
0xffffffff823eb0b0: ret 0x8480;
0xffffffff822dc3ce: ret 0x8481;
0xffffffff81b4d57d: ret 0x8486;
0xffffffff822dc303: ret 0x8487;
0xffffffff8229918f: ret 0x8488;
0xffffffff82505464: ret 0x848a;
0xffffffff8156d1c4: ret 0x848b;
0xffffffff823c848d: ret 0x848e;
0xffffffff81b4d593: ret 0x8490;
0xffffffff81830505: ret 0x8492;
0xffffffff83467747: ret 0x8497;
0xffffffff8251136d: ret 0x8498;
0xffffffff8291dc74: ret 0x849;
0xffffffff81b4d5a9: ret 0x849b;
0xffffffff83467775: ret 0x849e;
0xffffffff813ca916: ret 0x84;
0xffffffff834677a3: ret 0x84a4;
0xffffffff81b4d5bf: ret 0x84a5;
0xffffffff824fb759: ret 0x84a7;
0xffffffff8246254d: ret 0x84a8;
0xffffffff81b4d5d5: ret 0x84ab;
0xffffffff823d7904: ret 0x84ad;
0xffffffff82526c4d: ret 0x84ae;
0xffffffff82394885: ret 0x84b1;
0xffffffff81b4d5eb: ret 0x84b4;
0xffffffff8142a756: ret 0x84b9;
0xffffffff822601f3: ret 0x84bd;
0xffffffff81b4d601: ret 0x84bf;
0xffffffff81696136: ret 0x84c7;
0xffffffff834a5f9a: ret 0x84ca;
0xffffffff81b4d617: ret 0x84cd;
0xffffffff824816a0: ret 0x84d0;
0xffffffff822575e6: ret 0x84d5;
0xffffffff81b4d62d: ret 0x84d7;
0xffffffff8251042b: ret 0x84d8;
0xffffffff824bb80e: ret 0x84e0;
0xffffffff8247d778: ret 0x84e5;
0xffffffff815f6a16: ret 0x84e8;
0xffffffff82392762: ret 0x84ea;
0xffffffff82392761: ret 0x84ea;
0xffffffff815a49fa: ret 0x84f2;
0xffffffff8225040b: ret 0x84f3;
0xffffffff8253d3c6: ret 0x84f4;
0xffffffff8244fc43: ret 0x84f7;
0xffffffff824f6e47: ret 0x84f;
0xffffffff824cc3e1: ret 0x84fb;
0xffffffff8342f7ce: ret 0x84fd;
0xffffffff8342f7cf: ret 0x84fd;
0xffffffff814d5928: ret 0x84ff;
0xffffffff81aa4e5f: ret 0x84ff;
0xffffffff81a9c0c9: ret 0x84ff;
0xffffffff8103ab96: ret 0x8500;
0xffffffff81031a9a: ret 0x8501;
0xffffffff812ae32b: ret 0x8503;
0xffffffff823e6f7f: ret 0x8505;
0xffffffff8344eb13: ret 0x8506;
0xffffffff816dd124: ret 0x8508;
0xffffffff8248be0d: ret 0x8509;
0xffffffff81320087: ret 0x850;
0xffffffff81b4e095: ret 0x850e;
0xffffffff8102d001: ret 0x850f;
0xffffffff817c7d48: ret 0x8510;
0xffffffff817aff3a: ret 0x8511;
0xffffffff811d9cc4: ret 0x8514;
0xffffffff8291eb5c: ret 0x851;
0xffffffff81b4e0ab: ret 0x851b;
0xffffffff8223cf73: ret 0x851c;
0xffffffff82301905: ret 0x851d;
0xffffffff822abaec: ret 0x851e;
0xffffffff81937479: ret 0x851f;
0xffffffff81017f61: ret 0x8520;
0xffffffff8141678a: ret 0x8521;
0xffffffff81b4e0c1: ret 0x8522;
0xffffffff822693e2: ret 0x8523;
0xffffffff81b4e0d7: ret 0x8529;
0xffffffff81b4daf8: ret 0x852a;
0xffffffff823e9af3: ret 0x852b;
0xffffffff81b4e0ed: ret 0x8531;
0xffffffff823bd933: ret 0x8533;
0xffffffff8244ea29: ret 0x8536;
0xffffffff8344ec3d: ret 0x8537;
0xffffffff824f0a90: ret 0x853;
0xffffffff81b4e103: ret 0x853d;
0xffffffff82548eab: ret 0x8540;
0xffffffff82358b48: ret 0x8541;
0xffffffff822f70f6: ret 0x8542;
0xffffffff81539d0c: ret 0x8544;
0xffffffff810efdd1: ret 0x8545;
0xffffffff8103cc98: ret 0x8548;
0xffffffff824beda5: ret 0x8549;
0xffffffff8121c81a: ret 0x854;
0xffffffff81b4e119: ret 0x854a;
0xffffffff81378d43: ret 0x854c;
0xffffffff810f0c3d: ret 0x854d;
0xffffffff8344ec9a: ret 0x854f;
0xffffffff815a6365: ret 0x8550;
0xffffffff81b4e12f: ret 0x8557;
0xffffffff825d9ddd: ret 0x855c;
0xffffffff8344ecb9: ret 0x855e;
0xffffffff81b4e145: ret 0x8563;
0xffffffff824b376d: ret 0x8565;
0xffffffff815730b8: ret 0x8566;
0xffffffff8344ecd3: ret 0x856c;
0xffffffff81b4e15b: ret 0x856d;
0xffffffff834679e5: ret 0x856f;
0xffffffff811a8e86: ret 0x8570;
0xffffffff8247a28e: ret 0x8573;
0xffffffff81b4e171: ret 0x8574;
0xffffffff81598ed1: ret 0x8577;
0xffffffff815a70d8: ret 0x8578;
0xffffffff82450525: ret 0x857b;
0xffffffff81b4e187: ret 0x857c;
0xffffffff8344ed13: ret 0x8580;
0xffffffff8247be2a: ret 0x8585;
0xffffffff81b4e19d: ret 0x8588;
0xffffffff810f2999: ret 0x8589;
0xffffffff82476c02: ret 0x858c;
0xffffffff81b4e1b3: ret 0x858f;
0xffffffff824d0b1e: ret 0x858f;
0xffffffff8344edae: ret 0x8594;
0xffffffff817484ad: ret 0x8599;
0xffffffff81419ec6: ret 0x85;
0xffffffff8171851c: ret 0x85a0;
0xffffffff82301864: ret 0x85a2;
0xffffffff822cae8b: ret 0x85a5;
0xffffffff82416653: ret 0x85a8;
0xffffffff8223b511: ret 0x85a9;
0xffffffff823ee17e: ret 0x85aa;
0xffffffff824bb3bb: ret 0x85b4;
0xffffffff8236774a: ret 0x85b5;
0xffffffff824e13df: ret 0x85b8;
0xffffffff824e13e0: ret 0x85b8;
0xffffffff82510258: ret 0x85b9;
0xffffffff81728478: ret 0x85c0;
0xffffffff8226d6a9: ret 0x85c1;
0xffffffff8185b06a: ret 0x85c2;
0xffffffff8236855e: ret 0x85c3;
0xffffffff823fdd61: ret 0x85c6;
0xffffffff815a79c6: ret 0x85c8;
0xffffffff8344edc8: ret 0x85cc;
0xffffffff8251ca55: ret 0x85ce;
0xffffffff82410399: ret 0x85d5;
0xffffffff824b78ff: ret 0x85d7;
0xffffffff824b7900: ret 0x85d7;
0xffffffff8252a8dc: ret 0x85d9;
0xffffffff8253970e: ret 0x85dd;
0xffffffff8185946a: ret 0x85de;
0xffffffff8344ec1e: ret 0x85e7;
0xffffffff812ac0f5: ret 0x85e8;
0xffffffff81161684: ret 0x85e9;
0xffffffff817a243a: ret 0x85ec;
0xffffffff8236872a: ret 0x85ef;
0xffffffff811d7fdb: ret 0x85f0;
0xffffffff83467bea: ret 0x85f4;
0xffffffff811d7fe7: ret 0x85f8;
0xffffffff8247826e: ret 0x85fb;
0xffffffff83495d0f: ret 0x85fd;
0xffffffff818ede35: ret 0x85fe;
0xffffffff813eb8cf: ret 0x85ff;
0xffffffff825ce6a6: ret 0x8603;
0xffffffff823837ab: ret 0x8605;
0xffffffff82478637: ret 0x860;
0xffffffff818b6aca: ret 0x860a;
0xffffffff822b01bb: ret 0x860d;
0xffffffff810225c1: ret 0x860f;
0xffffffff8224f816: ret 0x8612;
0xffffffff81855e6a: ret 0x8614;
0xffffffff82459b98: ret 0x8616;
0xffffffff823a3f07: ret 0x861;
0xffffffff8239bac7: ret 0x861d;
0xffffffff8255942e: ret 0x861e;
0xffffffff8255d1fd: ret 0x8623;
0xffffffff82242e92: ret 0x8626;
0xffffffff8225ea9a: ret 0x8632;
0xffffffff822d6adf: ret 0x8633;
0xffffffff8359dea1: ret 0x8635;
0xffffffff82322243: ret 0x8639;
0xffffffff819d39e4: ret 0x863d;
0xffffffff8115ddf9: ret 0x8640;
0xffffffff8222c577: ret 0x8641;
0xffffffff822e913a: ret 0x8644;
0xffffffff8132c2dc: ret 0x8647;
0xffffffff823cfda5: ret 0x864b;
0xffffffff8234c0cc: ret 0x864e;
0xffffffff83467ca6: ret 0x8650;
0xffffffff8238e75b: ret 0x8651;
0xffffffff82450e1c: ret 0x8653;
0xffffffff8252ac56: ret 0x865a;
0xffffffff824bf2fc: ret 0x865c;
0xffffffff822df866: ret 0x8662;
0xffffffff8140b6f7: ret 0x866;
0xffffffff822dbce1: ret 0x866a;
0xffffffff823c5c8f: ret 0x866b;
0xffffffff8185204f: ret 0x8670;
0xffffffff8146a5ca: ret 0x8674;
0xffffffff818df9fe: ret 0x8675;
0xffffffff82384a60: ret 0x867d;
0xffffffff8226aa56: ret 0x867e;
0xffffffff824dfdf7: ret 0x8680;
0xffffffff812bbc2b: ret 0x8683;
0xffffffff822eff27: ret 0x8689;
0xffffffff8247810b: ret 0x868a;
0xffffffff823a6957: ret 0x868c;
0xffffffff822fdce7: ret 0x8691;
0xffffffff82436fd8: ret 0x8692;
0xffffffff8240fab6: ret 0x8694;
0xffffffff82435fc3: ret 0x8697;
0xffffffff818520a9: ret 0x8698;
0xffffffff82920e94: ret 0x869;
0xffffffff825ceaa7: ret 0x869a;
0xffffffff83449f9f: ret 0x869f;
0xffffffff81794e22: ret 0x86;
0xffffffff822e4504: ret 0x86a2;
0xffffffff8226accb: ret 0x86a8;
0xffffffff8184c86a: ret 0x86aa;
0xffffffff8225de2d: ret 0x86ab;
0xffffffff8225de2b: ret 0x86ab;
0xffffffff823397f3: ret 0x86b7;
0xffffffff8179573a: ret 0x86b9;
0xffffffff815a5c06: ret 0x86ba;
0xffffffff823c60fd: ret 0x86bc;
0xffffffff8140c2d8: ret 0x86be;
0xffffffff818520fc: ret 0x86c0;
0xffffffff82417c2f: ret 0x86c6;
0xffffffff82373400: ret 0x86c8;
0xffffffff82280780: ret 0x86c9;
0xffffffff82322f77: ret 0x86cf;
0xffffffff823d461e: ret 0x86d6;
0xffffffff826e3ff2: ret 0x86d9;
0xffffffff8241c23a: ret 0x86da;
0xffffffff8237ebc5: ret 0x86dd;
0xffffffff82330252: ret 0x86e5;
0xffffffff8127b590: ret 0x86e8;
0xffffffff82457ee0: ret 0x86ee;
0xffffffff82265f37: ret 0x86f0;
0xffffffff824a3fb9: ret 0x86f3;
0xffffffff81c4a0c9: ret 0x86f6;
0xffffffff825d81d4: ret 0x86f7;
0xffffffff8226d636: ret 0x86fc;
0xffffffff824adef6: ret 0x86fe;
0xffffffff824adef7: ret 0x86fe;
0xffffffff812bde59: ret 0x86ff;
0xffffffff825432dd: ret 0x8706;
0xffffffff8185d5e5: ret 0x870;
0xffffffff823b36b5: ret 0x870b;
0xffffffff81150ce6: ret 0x870f;
0xffffffff818521c9: ret 0x8710;
0xffffffff8241ecdf: ret 0x8712;
0xffffffff8178f43a: ret 0x871c;
0xffffffff82256cce: ret 0x871f;
0xffffffff8225005c: ret 0x8726;
0xffffffff819d4047: ret 0x872;
0xffffffff822eec56: ret 0x872b;
0xffffffff823c4547: ret 0x872e;
0xffffffff81497575: ret 0x8730;
0xffffffff818b6cca: ret 0x8735;
0xffffffff8185221c: ret 0x8738;
0xffffffff8157e635: ret 0x873;
0xffffffff82457825: ret 0x873c;
0xffffffff823962dd: ret 0x8740;
0xffffffff823a14d4: ret 0x8741;
0xffffffff8178ce3a: ret 0x8742;
0xffffffff82226e52: ret 0x8744;
0xffffffff812a0b00: ret 0x8748;
0xffffffff812ecb72: ret 0x874;
0xffffffff824fb77b: ret 0x874c;
0xffffffff81720261: ret 0x874d;
0xffffffff81308287: ret 0x8750;
0xffffffff823dc108: ret 0x8755;
0xffffffff8166d0c1: ret 0x875;
0xffffffff8119f762: ret 0x8760;
0xffffffff822fb71a: ret 0x8764;
0xffffffff815a7ecb: ret 0x8767;
0xffffffff822ab2e1: ret 0x8768;
0xffffffff82537957: ret 0x8769;
0xffffffff823aabec: ret 0x876c;
0xffffffff82481706: ret 0x876e;
0xffffffff8246b272: ret 0x876f;
0xffffffff834682ba: ret 0x8772;
0xffffffff822c6d3d: ret 0x8773;
0xffffffff8119f7e2: ret 0x8778;
0xffffffff8346831c: ret 0x877a;
0xffffffff8178943a: ret 0x877c;
0xffffffff811f9b80: ret 0x8780;
0xffffffff818522e9: ret 0x8788;
0xffffffff815c4383: ret 0x8789;
0xffffffff82456cb0: ret 0x878;
0xffffffff82456cb1: ret 0x878;
0xffffffff819a729e: ret 0x878b;
0xffffffff8249d5fe: ret 0x878c;
0xffffffff815aa7a1: ret 0x878d;
0xffffffff8149a9cf: ret 0x8790;
0xffffffff82366aa1: ret 0x8796;
0xffffffff8236123d: ret 0x879;
0xffffffff810f0462: ret 0x87;
0xffffffff822729c2: ret 0x87a4;
0xffffffff8119e6de: ret 0x87a8;
0xffffffff811a0c51: ret 0x87a9;
0xffffffff82922abc: ret 0x87a;
0xffffffff811a1a81: ret 0x87aa;
0xffffffff83451d1c: ret 0x87ab;
0xffffffff83451d5d: ret 0x87ac;
0xffffffff83451fb5: ret 0x87ad;
0xffffffff822a7a42: ret 0x87ae;
0xffffffff811a74b4: ret 0x87b0;
0xffffffff82391e78: ret 0x87b1;
0xffffffff8234f0cc: ret 0x87b9;
0xffffffff8226c846: ret 0x87c2;
0xffffffff812e0829: ret 0x87c7;
0xffffffff82254e22: ret 0x87c9;
0xffffffff82416fc5: ret 0x87cd;
0xffffffff82230e81: ret 0x87d2;
0xffffffff81792cca: ret 0x87d4;
0xffffffff824d8346: ret 0x87d7;
0xffffffff82922c60: ret 0x87d;
0xffffffff81c2e82a: ret 0x87db;
0xffffffff8146b7f7: ret 0x87de;
0xffffffff823f0fd5: ret 0x87e0;
0xffffffff8223f98e: ret 0x87e2;
0xffffffff81635383: ret 0x87e8;
0xffffffff8225c68a: ret 0x87e9;
0xffffffff81c08dbe: ret 0x87eb;
0xffffffff815aa8b7: ret 0x87f2;
0xffffffff8247887e: ret 0x87f3;
0xffffffff82514fa1: ret 0x87f4;
0xffffffff8224492f: ret 0x87f;
0xffffffff82556c44: ret 0x87fa;
0xffffffff816b20e5: ret 0x8800;
0xffffffff8120f884: ret 0x8801;
0xffffffff82446076: ret 0x8802;
0xffffffff82327cff: ret 0x8805;
0xffffffff81863a2a: ret 0x8809;
0xffffffff82923160: ret 0x880;
0xffffffff8178616d: ret 0x880c;
0xffffffff823c0362: ret 0x880d;
0xffffffff81376ad9: ret 0x880f;
0xffffffff81728760: ret 0x8810;
0xffffffff82289438: ret 0x8812;
0xffffffff81736e4b: ret 0x8815;
0xffffffff81786191: ret 0x8816;
0xffffffff822c1e33: ret 0x881a;
0xffffffff823a48de: ret 0x881e;
0xffffffff81798811: ret 0x8820;
0xffffffff8346861d: ret 0x8822;
0xffffffff83454554: ret 0x8826;
0xffffffff81a46981: ret 0x8828;
0xffffffff8346864f: ret 0x8829;
0xffffffff824d7077: ret 0x882b;
0xffffffff824d7078: ret 0x882b;
0xffffffff81785f5c: ret 0x882c;
0xffffffff814a4835: ret 0x8830;
0xffffffff8346867d: ret 0x8831;
0xffffffff822473ba: ret 0x8832;
0xffffffff83465489: ret 0x8834;
0xffffffff82441ae0: ret 0x8837;
0xffffffff813e4c8a: ret 0x8838;
0xffffffff834686ab: ret 0x8839;
0xffffffff823bdd29: ret 0x883;
0xffffffff823059d7: ret 0x883b;
0xffffffff823059d9: ret 0x883b;
0xffffffff819d39cd: ret 0x883d;
0xffffffff814c34fd: ret 0x8841;
0xffffffff81786644: ret 0x8844;
0xffffffff823f0ed4: ret 0x8847;
0xffffffff823cf403: ret 0x8848;
0xffffffff82303b43: ret 0x884b;
0xffffffff8246e5c2: ret 0x8865;
0xffffffff8177a93a: ret 0x8867;
0xffffffff811631f3: ret 0x8868;
0xffffffff82271c0a: ret 0x886b;
0xffffffff81789840: ret 0x8875;
0xffffffff82448757: ret 0x8876;
0xffffffff8246a4ea: ret 0x887c;
0xffffffff82272566: ret 0x8880;
0xffffffff822fc8a9: ret 0x8885;
0xffffffff824e14e2: ret 0x8886;
0xffffffff8137208c: ret 0x888d;
0xffffffff8240e2ee: ret 0x888e;
0xffffffff823e6eab: ret 0x8890;
0xffffffff823c7cd6: ret 0x8897;
0xffffffff8188a71b: ret 0x889;
0xffffffff82540434: ret 0x889f;
0xffffffff813f6d9e: ret 0x88;
0xffffffff813f6d9f: ret 0x88;
0xffffffff8254a557: ret 0x88a3;
0xffffffff823dc624: ret 0x88a6;
0xffffffff82533529: ret 0x88a9;
0xffffffff81c4da34: ret 0x88aa;
0xffffffff823cd54e: ret 0x88ac;
0xffffffff823f97b9: ret 0x88ae;
0xffffffff8256fbae: ret 0x88b7;
0xffffffff823d8823: ret 0x88bf;
0xffffffff834967ca: ret 0x88c0;
0xffffffff81b59631: ret 0x88c5;
0xffffffff823e661d: ret 0x88c8;
0xffffffff8247058d: ret 0x88ca;
0xffffffff8244f4fe: ret 0x88cc;
0xffffffff822a2c28: ret 0x88d5;
0xffffffff8347290f: ret 0x88d8;
0xffffffff824c9627: ret 0x88d9;
0xffffffff82310acd: ret 0x88e2;
0xffffffff8245f368: ret 0x88e5;
0xffffffff822eaf68: ret 0x88e7;
0xffffffff8101cb02: ret 0x88e8;
0xffffffff812f57e2: ret 0x88e9;
0xffffffff81219aa6: ret 0x88eb;
0xffffffff816f6ddd: ret 0x88ec;
0xffffffff811c5a98: ret 0x88f0;
0xffffffff822d3485: ret 0x88f1;
0xffffffff82295f59: ret 0x88f3;
0xffffffff824124f0: ret 0x88f;
0xffffffff81aeccbe: ret 0x88fc;
0xffffffff822a14d2: ret 0x88fd;
0xffffffff81211592: ret 0x88ff;
0xffffffff810326af: ret 0x8900;
0xffffffff81061d33: ret 0x8901;
0xffffffff81235b0a: ret 0x8902;
0xffffffff816ccc80: ret 0x8903;
0xffffffff811955a3: ret 0x8904;
0xffffffff81728e6c: ret 0x8905;
0xffffffff8138848f: ret 0x8906;
0xffffffff81485be1: ret 0x8908;
0xffffffff8111e166: ret 0x8909;
0xffffffff813e58c1: ret 0x890a;
0xffffffff8165c2a1: ret 0x890b;
0xffffffff82416e13: ret 0x890c;
0xffffffff813e4a2a: ret 0x890d;
0xffffffff81781bca: ret 0x890f;
0xffffffff81187ef1: ret 0x8910;
0xffffffff819e28f1: ret 0x8912;
0xffffffff813cd432: ret 0x8913;
0xffffffff81aef0d2: ret 0x8914;
0xffffffff816c69e2: ret 0x8915;
0xffffffff81162230: ret 0x8918;
0xffffffff816c6268: ret 0x891a;
0xffffffff814888e9: ret 0x8920;
0xffffffff824ab6ae: ret 0x8922;
0xffffffff815afce7: ret 0x8923;
0xffffffff811e1d1f: ret 0x8928;
0xffffffff811e5112: ret 0x8929;
0xffffffff811e5f53: ret 0x892a;
0xffffffff811e5ff4: ret 0x892b;
0xffffffff811e6565: ret 0x892c;
0xffffffff811e7452: ret 0x892d;
0xffffffff811e7f39: ret 0x892e;
0xffffffff811eb26b: ret 0x8930;
0xffffffff8243cbae: ret 0x8933;
0xffffffff815afd3b: ret 0x8939;
0xffffffff811ee1cc: ret 0x893c;
0xffffffff811ef2ed: ret 0x893d;
0xffffffff811ef307: ret 0x893e;
0xffffffff8233bcc5: ret 0x893f;
0xffffffff822f7c28: ret 0x8940;
0xffffffff810192a6: ret 0x8941;
0xffffffff81138497: ret 0x8944;
0xffffffff811d857a: ret 0x8945;
0xffffffff82534274: ret 0x8946;
0xffffffff81b2ff0b: ret 0x8948;
0xffffffff81000d48: ret 0x8948;
0xffffffff81014a1c: ret 0x8949;
0xffffffff811d9690: ret 0x894a;
0xffffffff81151798: ret 0x894b;
0xffffffff81024387: ret 0x894c;
0xffffffff810670d9: ret 0x894d;
0xffffffff816dcea1: ret 0x894e;
0xffffffff82332df9: ret 0x8950;
0xffffffff822b97cc: ret 0x8953;
0xffffffff81a62988: ret 0x8954;
0xffffffff82424742: ret 0x8956;
0xffffffff823b56d2: ret 0x8958;
0xffffffff822eeae0: ret 0x895c;
0xffffffff81b0769a: ret 0x8960;
0xffffffff823871ff: ret 0x8963;
0xffffffff82482fb1: ret 0x8964;
0xffffffff81204a44: ret 0x8966;
0xffffffff8238d8be: ret 0x896a;
0xffffffff82405102: ret 0x896b;
0xffffffff823a08f1: ret 0x896f;
0xffffffff817ef56e: ret 0x8970;
0xffffffff810c69b0: ret 0x8974;
0xffffffff8155bcad: ret 0x8977;
0xffffffff814fc8be: ret 0x8978;
0xffffffff8224b55b: ret 0x8979;
0xffffffff815afd66: ret 0x897a;
0xffffffff822397cb: ret 0x897d;
0xffffffff815afd25: ret 0x897e;
0xffffffff824f1ff0: ret 0x897f;
0xffffffff811f10ce: ret 0x8980;
0xffffffff82338836: ret 0x8987;
0xffffffff815b82a3: ret 0x898a;
0xffffffff8168c0a0: ret 0x898b;
0xffffffff8270080c: ret 0x8993;
0xffffffff813cc6fe: ret 0x89;
0xffffffff81c15ac5: ret 0x89a0;
0xffffffff8226a558: ret 0x89a9;
0xffffffff825db691: ret 0x89a;
0xffffffff815afd77: ret 0x89ab;
0xffffffff8346f266: ret 0x89b7;
0xffffffff82924e50: ret 0x89b;
0xffffffff824b13a2: ret 0x89bc;
0xffffffff824882a1: ret 0x89c3;
0xffffffff81bd2d0b: ret 0x89c4;
0xffffffff819ef78a: ret 0x89c6;
0xffffffff82340977: ret 0x89cb;
0xffffffff82426c5e: ret 0x89cf;
0xffffffff816e39ba: ret 0x89d1;
0xffffffff82523498: ret 0x89d3;
0xffffffff8346f2c5: ret 0x89d7;
0xffffffff81bdea83: ret 0x89d8;
0xffffffff8232c87b: ret 0x89db;
0xffffffff824497ee: ret 0x89dc;
0xffffffff8239eb27: ret 0x89e0;
0xffffffff824c6ec5: ret 0x89e2;
0xffffffff824d7f89: ret 0x89e4;
0xffffffff81750566: ret 0x89e8;
0xffffffff822bc34c: ret 0x89eb;
0xffffffff8250e4e4: ret 0x89ec;
0xffffffff816f6de9: ret 0x89ed;
0xffffffff8230067b: ret 0x89f3;
0xffffffff823910dc: ret 0x89f4;
0xffffffff812f748b: ret 0x89f5;
0xffffffff81a62bda: ret 0x89f8;
0xffffffff82389aa9: ret 0x89f9;
0xffffffff822a81f7: ret 0x89fa;
0xffffffff822a81f8: ret 0x89fa;
0xffffffff8104c5b8: ret 0x89fb;
0xffffffff811f3151: ret 0x89fc;
0xffffffff83489891: ret 0x89fd;
0xffffffff81603d1d: ret 0x89fe;
0xffffffff815f0321: ret 0x89ff;
0xffffffff8103b4ae: ret 0x89ff;
0xffffffff8104c4c7: ret 0x8a00;
0xffffffff82385855: ret 0x8a01;
0xffffffff822d7fa1: ret 0x8a05;
0xffffffff81c0fa63: ret 0x8a08;
0xffffffff823d98e5: ret 0x8a0;
0xffffffff82401ea1: ret 0x8a0a;
0xffffffff8246e690: ret 0x8a0e;
0xffffffff8120214a: ret 0x8a10;
0xffffffff816483a1: ret 0x8a18;
0xffffffff8225a40f: ret 0x8a19;
0xffffffff822ad211: ret 0x8a1a;
0xffffffff817e9fc4: ret 0x8a20;
0xffffffff81816720: ret 0x8a2b;
0xffffffff82523832: ret 0x8a2d;
0xffffffff8197097d: ret 0x8a30;
0xffffffff8347a4a8: ret 0x8a3;
0xffffffff8171ed15: ret 0x8a40;
0xffffffff8122b1eb: ret 0x8a41;
0xffffffff8171f02f: ret 0x8a44;
0xffffffff817a11ed: ret 0x8a46;
0xffffffff8239f468: ret 0x8a48;
0xffffffff82442692: ret 0x8a4d;
0xffffffff83469166: ret 0x8a4f;
0xffffffff822f664e: ret 0x8a50;
0xffffffff824b2162: ret 0x8a52;
0xffffffff82359ebe: ret 0x8a53;
0xffffffff81816755: ret 0x8a56;
0xffffffff82288eda: ret 0x8a5;
0xffffffff83469197: ret 0x8a5a;
0xffffffff834967e5: ret 0x8a60;
0xffffffff8346f4d3: ret 0x8a61;
0xffffffff82515157: ret 0x8a64;
0xffffffff8346f505: ret 0x8a69;
0xffffffff8242c935: ret 0x8a6a;
0xffffffff8346f533: ret 0x8a6f;
0xffffffff81be0969: ret 0x8a72;
0xffffffff81be0c64: ret 0x8a73;
0xffffffff81be0c7e: ret 0x8a74;
0xffffffff81be677e: ret 0x8a75;
0xffffffff823213a0: ret 0x8a76;
0xffffffff81be0bf1: ret 0x8a78;
0xffffffff8121736a: ret 0x8a7;
0xffffffff81bead46: ret 0x8a80;
0xffffffff81bee466: ret 0x8a81;
0xffffffff81bee4a0: ret 0x8a82;
0xffffffff81bff895: ret 0x8a84;
0xffffffff81c09a99: ret 0x8a85;
0xffffffff823fc277: ret 0x8a87;
0xffffffff81824e39: ret 0x8a8;
0xffffffff834691f5: ret 0x8a8a;
0xffffffff81c1353f: ret 0x8a8c;
0xffffffff818168e7: ret 0x8a8d;
0xffffffff81c17ce4: ret 0x8a8e;
0xffffffff81c17cfe: ret 0x8a8f;
0xffffffff81c17d4d: ret 0x8a90;
0xffffffff8247deb5: ret 0x8a93;
0xffffffff8237cf44: ret 0x8a98;
0xffffffff824f7a8e: ret 0x8a9d;
0xffffffff82460c76: ret 0x8a9f;
0xffffffff813d6f3f: ret 0x8a;
0xffffffff81c19134: ret 0x8aa0;
0xffffffff8346f58e: ret 0x8aa7;
0xffffffff83471579: ret 0x8aaa;
0xffffffff82563c0e: ret 0x8aac;
0xffffffff8241d9bc: ret 0x8aaf;
0xffffffff813d80ba: ret 0x8ab1;
0xffffffff8346f5c0: ret 0x8ab2;
0xffffffff822f9612: ret 0x8ab3;
0xffffffff82405d8e: ret 0x8ab5;
0xffffffff81819166: ret 0x8ab6;
0xffffffff8346f5f2: ret 0x8abb;
0xffffffff822f3256: ret 0x8abc;
0xffffffff8346f627: ret 0x8ac2;
0xffffffff8164c3e3: ret 0x8ac8;
0xffffffff8246a84a: ret 0x8aca;
0xffffffff8344f486: ret 0x8acb;
0xffffffff81b55eee: ret 0x8ad0;
0xffffffff825d5726: ret 0x8ad1;
0xffffffff8346f683: ret 0x8ad2;
0xffffffff8249c6b5: ret 0x8ad3;
0xffffffff82500e2a: ret 0x8ad5;
0xffffffff818191a8: ret 0x8ad6;
0xffffffff8164c133: ret 0x8ad8;
0xffffffff82249ade: ret 0x8ad;
0xffffffff82509838: ret 0x8adc;
0xffffffff8124807f: ret 0x8ae0;
0xffffffff8226f1c8: ret 0x8ae1;
0xffffffff824a034d: ret 0x8ae3;
0xffffffff811534c0: ret 0x8ae8;
0xffffffff818e61a9: ret 0x8ae9;
0xffffffff823e994a: ret 0x8ae;
0xffffffff8346949e: ret 0x8aeb;
0xffffffff82345bd5: ret 0x8af0;
0xffffffff8245c6ca: ret 0x8af3;
0xffffffff8127d5b3: ret 0x8af4;
0xffffffff823ad880: ret 0x8af7;
0xffffffff81c5d3d9: ret 0x8af8;
0xffffffff82926480: ret 0x8af;
0xffffffff8238be03: ret 0x8afa;
0xffffffff8239785b: ret 0x8afb;
0xffffffff81664beb: ret 0x8afd;
0xffffffff8105cebf: ret 0x8aff;
0xffffffff8104639f: ret 0x8b00;
0xffffffff8104ecd6: ret 0x8b01;
0xffffffff81005792: ret 0x8b02;
0xffffffff8127d614: ret 0x8b04;
0xffffffff822289cd: ret 0x8b06;
0xffffffff814a101a: ret 0x8b08;
0xffffffff813347c9: ret 0x8b0;
0xffffffff818d5077: ret 0x8b0c;
0xffffffff823a5661: ret 0x8b0d;
0xffffffff8234a709: ret 0x8b0f;
0xffffffff81046c65: ret 0x8b10;
0xffffffff823356d0: ret 0x8b11;
0xffffffff81a29958: ret 0x8b14;
0xffffffff82292689: ret 0x8b16;
0xffffffff8241b437: ret 0x8b18;
0xffffffff8265cdf0: ret 0x8b19;
0xffffffff824199b5: ret 0x8b1;
0xffffffff8253726a: ret 0x8b1c;
0xffffffff81c656d8: ret 0x8b1e;
0xffffffff82344b62: ret 0x8b20;
0xffffffff815d6c45: ret 0x8b20;
0xffffffff8242ca99: ret 0x8b25;
0xffffffff81a299bc: ret 0x8b28;
0xffffffff822a22a6: ret 0x8b2;
0xffffffff8344f680: ret 0x8b2a;
0xffffffff822f8cc1: ret 0x8b2e;
0xffffffff825377a2: ret 0x8b35;
0xffffffff81803b6a: ret 0x8b37;
0xffffffff8185cb42: ret 0x8b38;
0xffffffff8346f746: ret 0x8b3d;
0xffffffff8101bdfa: ret 0x8b40;
0xffffffff810b1cce: ret 0x8b41;
0xffffffff81a6023b: ret 0x8b42;
0xffffffff81626b0e: ret 0x8b43;
0xffffffff813aa972: ret 0x8b44;
0xffffffff8158040c: ret 0x8b45;
0xffffffff822cded9: ret 0x8b46;
0xffffffff8100c8a6: ret 0x8b48;
0xffffffff810607d3: ret 0x8b49;
0xffffffff810dd692: ret 0x8b4a;
0xffffffff810f33f7: ret 0x8b4c;
0xffffffff813ff31c: ret 0x8b4d;
0xffffffff81695112: ret 0x8b4e;
0xffffffff8250aac2: ret 0x8b56;
0xffffffff822ba851: ret 0x8b59;
0xffffffff822a4da8: ret 0x8b5;
0xffffffff82554ccf: ret 0x8b60;
0xffffffff8243a90e: ret 0x8b61;
0xffffffff815b7ed4: ret 0x8b62;
0xffffffff813ae845: ret 0x8b64;
0xffffffff82353f9d: ret 0x8b67;
0xffffffff8229a4b7: ret 0x8b69;
0xffffffff8347afb0: ret 0x8b6;
0xffffffff8237a817: ret 0x8b71;
0xffffffff83469654: ret 0x8b75;
0xffffffff82569024: ret 0x8b77;
0xffffffff822bf924: ret 0x8b7a;
0xffffffff8251380a: ret 0x8b7c;
0xffffffff8229256a: ret 0x8b7d;
0xffffffff81c22bc9: ret 0x8b80;
0xffffffff81c26306: ret 0x8b88;
0xffffffff8155c13f: ret 0x8b8b;
0xffffffff817ea0bd: ret 0x8b90;
0xffffffff822578cc: ret 0x8b96;
0xffffffff81340100: ret 0x8b9;
0xffffffff822d61a8: ret 0x8b9f;
0xffffffff81171c85: ret 0x8b;
0xffffffff816f9008: ret 0x8ba0;
0xffffffff8250b8cc: ret 0x8ba2;
0xffffffff823c2dd5: ret 0x8ba3;
0xffffffff823b5e71: ret 0x8ba6;
0xffffffff823165f2: ret 0x8ba;
0xffffffff8247bbaa: ret 0x8bb1;
0xffffffff816f8f5e: ret 0x8bb5;
0xffffffff822c0c87: ret 0x8bb7;
0xffffffff818e26da: ret 0x8bb;
0xffffffff8345d5ca: ret 0x8bba;
0xffffffff8265ca3c: ret 0x8bbf;
0xffffffff816c8b9d: ret 0x8bc0;
0xffffffff81c27d3c: ret 0x8bc1;
0xffffffff81c27e3d: ret 0x8bc2;
0xffffffff8132312d: ret 0x8bc3;
0xffffffff81c27d88: ret 0x8bc4;
0xffffffff822d91fd: ret 0x8bc7;
0xffffffff816f8fb3: ret 0x8bc9;
0xffffffff82361198: ret 0x8bcf;
0xffffffff8227cbca: ret 0x8bd5;
0xffffffff82280476: ret 0x8bd6;
0xffffffff8229c1fd: ret 0x8bd;
0xffffffff8229c1fc: ret 0x8bd;
0xffffffff82402235: ret 0x8bdd;
0xffffffff823b3315: ret 0x8be6;
0xffffffff811da6df: ret 0x8be8;
0xffffffff823143a2: ret 0x8be9;
0xffffffff818a2baf: ret 0x8be;
0xffffffff823be38c: ret 0x8bed;
0xffffffff82414af6: ret 0x8bee;
0xffffffff823f7434: ret 0x8bf3;
0xffffffff822d87ba: ret 0x8bf4;
0xffffffff81c6253b: ret 0x8bf8;
0xffffffff8265c920: ret 0x8bfa;
0xffffffff8157fd69: ret 0x8bfc;
0xffffffff824754ef: ret 0x8bfd;
0xffffffff8249a734: ret 0x8bfe;
0xffffffff8136d554: ret 0x8bff;
0xffffffff816f8ef5: ret 0x8c01;
0xffffffff82388120: ret 0x8c09;
0xffffffff822d8954: ret 0x8c0;
0xffffffff81162c1a: ret 0x8c0a;
0xffffffff8227ef83: ret 0x8c0b;
0xffffffff83457dc4: ret 0x8c0f;
0xffffffff834967fd: ret 0x8c10;
0xffffffff815b93c9: ret 0x8c13;
0xffffffff822f0713: ret 0x8c18;
0xffffffff8231da41: ret 0x8c1c;
0xffffffff824172ba: ret 0x8c1e;
0xffffffff8248304a: ret 0x8c20;
0xffffffff824bee0d: ret 0x8c21;
0xffffffff82557bc2: ret 0x8c27;
0xffffffff824114ea: ret 0x8c29;
0xffffffff822a0de1: ret 0x8c2;
0xffffffff815be5cf: ret 0x8c2f;
0xffffffff823a8de0: ret 0x8c32;
0xffffffff822a61b8: ret 0x8c36;
0xffffffff82402936: ret 0x8c3a;
0xffffffff822c2020: ret 0x8c3c;
0xffffffff815c0247: ret 0x8c42;
0xffffffff81c6c19b: ret 0x8c48;
0xffffffff815c032f: ret 0x8c4c;
0xffffffff8224e242: ret 0x8c4f;
0xffffffff8138d5f3: ret 0x8c60;
0xffffffff822afad7: ret 0x8c63;
0xffffffff8238f70e: ret 0x8c66;
0xffffffff824ad7b7: ret 0x8c67;
0xffffffff823e1c76: ret 0x8c68;
0xffffffff8250ba31: ret 0x8c6;
0xffffffff8250ba32: ret 0x8c6;
0xffffffff8244d949: ret 0x8c6f;
0xffffffff81c6c1be: ret 0x8c70;
0xffffffff8127b4ec: ret 0x8c71;
0xffffffff82355863: ret 0x8c73;
0xffffffff82261b3a: ret 0x8c77;
0xffffffff825477c2: ret 0x8c78;
0xffffffff8237acf1: ret 0x8c7a;
0xffffffff815be5b9: ret 0x8c7d;
0xffffffff8252c709: ret 0x8c7e;
0xffffffff83469b81: ret 0x8c82;
0xffffffff824fde6d: ret 0x8c83;
0xffffffff822debeb: ret 0x8c85;
0xffffffff82399578: ret 0x8c88;
0xffffffff822366fa: ret 0x8c8c;
0xffffffff81c4875a: ret 0x8c90;
0xffffffff8247adae: ret 0x8c95;
0xffffffff824c1462: ret 0x8c97;
0xffffffff815353d2: ret 0x8c;
0xffffffff8239ee50: ret 0x8ca0;
0xffffffff824db087: ret 0x8ca1;
0xffffffff824db086: ret 0x8ca1;
0xffffffff823dec81: ret 0x8ca2;
0xffffffff82383ae3: ret 0x8ca7;
0xffffffff823e5a2c: ret 0x8cac;
0xffffffff81b28607: ret 0x8cb0;
0xffffffff82442361: ret 0x8cb9;
0xffffffff82355647: ret 0x8cbe;
0xffffffff82557bee: ret 0x8ccf;
0xffffffff824db097: ret 0x8cd1;
0xffffffff8224dc34: ret 0x8cd3;
0xffffffff8245d651: ret 0x8cd8;
0xffffffff82928bbc: ret 0x8cd;
0xffffffff8265c4e4: ret 0x8ce0;
0xffffffff83469c3c: ret 0x8ce5;
0xffffffff811c014e: ret 0x8ce8;
0xffffffff8140468b: ret 0x8ce9;
0xffffffff83469ca6: ret 0x8ceb;
0xffffffff82531c99: ret 0x8cec;
0xffffffff824edc4a: ret 0x8cee;
0xffffffff824690b8: ret 0x8cf0;
0xffffffff83469cd7: ret 0x8cf2;
0xffffffff8251f71b: ret 0x8cf3;
0xffffffff81588cff: ret 0x8cf5;
0xffffffff82416c3a: ret 0x8cf9;
0xffffffff823e7ed3: ret 0x8cfc;
0xffffffff835a8e0a: ret 0x8cfd;
0xffffffff8200d482: ret 0x8cff;
0xffffffff81c2505e: ret 0x8d00;
0xffffffff8120740d: ret 0x8d01;
0xffffffff811fc9b0: ret 0x8d02;
0xffffffff8130b2fe: ret 0x8d04;
0xffffffff822ef5de: ret 0x8d05;
0xffffffff8124c659: ret 0x8d08;
0xffffffff81c3f46d: ret 0x8d0;
0xffffffff818aaab0: ret 0x8d0c;
0xffffffff823416c7: ret 0x8d0d;
0xffffffff811bc359: ret 0x8d0f;
0xffffffff816c3cba: ret 0x8d10;
0xffffffff824f61c8: ret 0x8d11;
0xffffffff818c5138: ret 0x8d14;
0xffffffff824293c8: ret 0x8d16;
0xffffffff8292933c: ret 0x8d1;
0xffffffff82329338: ret 0x8d1a;
0xffffffff824e3e2a: ret 0x8d1f;
0xffffffff8251770b: ret 0x8d20;
0xffffffff823dbf1c: ret 0x8d21;
0xffffffff8236b3bd: ret 0x8d26;
0xffffffff82227e6b: ret 0x8d2b;
0xffffffff8238054b: ret 0x8d2c;
0xffffffff8251ea2c: ret 0x8d2e;
0xffffffff81b982f9: ret 0x8d30;
0xffffffff8172dc3a: ret 0x8d34;
0xffffffff8223e273: ret 0x8d38;
0xffffffff8157c24e: ret 0x8d41;
0xffffffff8157c7e2: ret 0x8d42;
0xffffffff81585124: ret 0x8d43;
0xffffffff810bfa5d: ret 0x8d44;
0xffffffff816d0bf5: ret 0x8d45;
0xffffffff81042343: ret 0x8d48;
0xffffffff81026de3: ret 0x8d49;
0xffffffff811c6776: ret 0x8d4a;
0xffffffff810eee93: ret 0x8d4b;
0xffffffff81011b4c: ret 0x8d4c;
0xffffffff811f77dc: ret 0x8d4d;
0xffffffff81382193: ret 0x8d4e;
0xffffffff81c18afd: ret 0x8d50;
0xffffffff82465e5c: ret 0x8d56;
0xffffffff8256a05d: ret 0x8d5b;
0xffffffff823e27bd: ret 0x8d5c;
0xffffffff81c25078: ret 0x8d60;
0xffffffff82386bd8: ret 0x8d6a;
0xffffffff8181e210: ret 0x8d6e;
0xffffffff83469d66: ret 0x8d6f;
0xffffffff8244805c: ret 0x8d71;
0xffffffff81ae76f1: ret 0x8d72;
0xffffffff824ce299: ret 0x8d73;
0xffffffff8344ee05: ret 0x8d75;
0xffffffff8240f4aa: ret 0x8d79;
0xffffffff8243485f: ret 0x8d81;
0xffffffff8236714a: ret 0x8d8;
0xffffffff8236f874: ret 0x8d8a;
0xffffffff8246fc1d: ret 0x8d8c;
0xffffffff822894ab: ret 0x8d94;
0xffffffff815c15b0: ret 0x8d9a;
0xffffffff8229ee31: ret 0x8d9b;
0xffffffff824b7b2b: ret 0x8d9e;
0xffffffff813a2986: ret 0x8d;
0xffffffff82291693: ret 0x8db3;
0xffffffff822e41f2: ret 0x8db4;
0xffffffff81c18aba: ret 0x8dc0;
0xffffffff823e3bf2: ret 0x8dc4;
0xffffffff8239b723: ret 0x8dc;
0xffffffff82277474: ret 0x8dcc;
0xffffffff8348b57e: ret 0x8dd0;
0xffffffff822b401b: ret 0x8dd1;
0xffffffff815c012c: ret 0x8dd4;
0xffffffff82482432: ret 0x8dd5;
0xffffffff8242efff: ret 0x8dd6;
0xffffffff82429f59: ret 0x8dd8;
0xffffffff824917b9: ret 0x8dd9;
0xffffffff82553d8e: ret 0x8dd;
0xffffffff82553d8f: ret 0x8dd;
0xffffffff824df957: ret 0x8ddb;
0xffffffff8348b59a: ret 0x8de1;
0xffffffff8117fecd: ret 0x8de8;
0xffffffff822dd5b2: ret 0x8def;
0xffffffff83484a46: ret 0x8df0;
0xffffffff822612b4: ret 0x8df3;
0xffffffff8193561a: ret 0x8df6;
0xffffffff817375c3: ret 0x8df;
0xffffffff819a6333: ret 0x8dfc;
0xffffffff81270ae7: ret 0x8dfe;
0xffffffff815bf459: ret 0x8dff;
0xffffffff823d4b20: ret 0x8e01;
0xffffffff8226d985: ret 0x8e09;
0xffffffff82420309: ret 0x8e0;
0xffffffff8256725a: ret 0x8e0b;
0xffffffff811d86b9: ret 0x8e0f;
0xffffffff822e4767: ret 0x8e10;
0xffffffff8181c700: ret 0x8e17;
0xffffffff823be269: ret 0x8e18;
0xffffffff822ad863: ret 0x8e1;
0xffffffff816c8dfd: ret 0x8e20;
0xffffffff8237fe16: ret 0x8e2a;
0xffffffff815c01ed: ret 0x8e31;
0xffffffff81c32c2d: ret 0x8e34;
0xffffffff81c32c4a: ret 0x8e35;
0xffffffff8181c669: ret 0x8e37;
0xffffffff8227ca87: ret 0x8e38;
0xffffffff82244be4: ret 0x8e39;
0xffffffff8292b72c: ret 0x8e3;
0xffffffff8199caec: ret 0x8e40;
0xffffffff81c33ca5: ret 0x8e48;
0xffffffff835af4dc: ret 0x8e4;
0xffffffff822fc9ce: ret 0x8e4c;
0xffffffff82506be1: ret 0x8e4f;
0xffffffff817d226a: ret 0x8e50;
0xffffffff822b03e9: ret 0x8e52;
0xffffffff83484bc1: ret 0x8e54;
0xffffffff815c0189: ret 0x8e55;
0xffffffff8292ba28: ret 0x8e5;
0xffffffff81b5d92e: ret 0x8e5c;
0xffffffff83484bf2: ret 0x8e5e;
0xffffffff8252bdd8: ret 0x8e62;
0xffffffff8236cbbb: ret 0x8e64;
0xffffffff825db3c8: ret 0x8e6a;
0xffffffff822cae94: ret 0x8e6d;
0xffffffff812f2143: ret 0x8e74;
0xffffffff8243975f: ret 0x8e75;
0xffffffff8242ad75: ret 0x8e76;
0xffffffff81b5d9dd: ret 0x8e77;
0xffffffff8240548a: ret 0x8e7b;
0xffffffff81c25160: ret 0x8e80;
0xffffffff823173c4: ret 0x8e81;
0xffffffff8181f8b9: ret 0x8e82;
0xffffffff811b5342: ret 0x8e8;
0xffffffff8157290d: ret 0x8e8a;
0xffffffff81a525b1: ret 0x8e8b;
0xffffffff83484c50: ret 0x8e8e;
0xffffffff8230f30a: ret 0x8e90;
0xffffffff824f6aec: ret 0x8e97;
0xffffffff81378d26: ret 0x8e;
0xffffffff8181ffda: ret 0x8ea2;
0xffffffff815c01cd: ret 0x8ea6;
0xffffffff8256aad8: ret 0x8ea;
0xffffffff82306c75: ret 0x8eaa;
0xffffffff82280b8f: ret 0x8eac;
0xffffffff8236e077: ret 0x8eb3;
0xffffffff8181fe6d: ret 0x8eb9;
0xffffffff8146881a: ret 0x8eb;
0xffffffff82231598: ret 0x8ebc;
0xffffffff8255a82d: ret 0x8ebe;
0xffffffff823277fe: ret 0x8ec1;
0xffffffff82411772: ret 0x8ec2;
0xffffffff825479f0: ret 0x8ec6;
0xffffffff818ba5fb: ret 0x8ec8;
0xffffffff823a235a: ret 0x8ec9;
0xffffffff8292c510: ret 0x8ec;
0xffffffff83484d3b: ret 0x8eca;
0xffffffff8147205f: ret 0x8ed3;
0xffffffff83484d70: ret 0x8ed4;
0xffffffff81c2e40e: ret 0x8ed5;
0xffffffff814721fb: ret 0x8eda;
0xffffffff8181fdf2: ret 0x8ede;
0xffffffff83484da1: ret 0x8ee1;
0xffffffff8245b5aa: ret 0x8ee4;
0xffffffff811a464c: ret 0x8ee8;
0xffffffff824f94fe: ret 0x8eec;
0xffffffff823e1c37: ret 0x8eed;
0xffffffff83484dd2: ret 0x8eee;
0xffffffff8242016f: ret 0x8eef;
0xffffffff82238fb8: ret 0x8ef0;
0xffffffff824220bb: ret 0x8ef2;
0xffffffff8181ff3a: ret 0x8ef9;
0xffffffff823ab593: ret 0x8efe;
0xffffffff8228e399: ret 0x8f00;
0xffffffff82538038: ret 0x8f05;
0xffffffff8255c9b4: ret 0x8f06;
0xffffffff8245a874: ret 0x8f08;
0xffffffff8222c568: ret 0x8f09;
0xffffffff8222c569: ret 0x8f09;
0xffffffff81939897: ret 0x8f0;
0xffffffff816d1d4d: ret 0x8f0f;
0xffffffff82539bea: ret 0x8f12;
0xffffffff82514a35: ret 0x8f16;
0xffffffff818cc281: ret 0x8f17;
0xffffffff822ecc26: ret 0x8f1f;
0xffffffff82523a2d: ret 0x8f29;
0xffffffff82348090: ret 0x8f2d;
0xffffffff823d14cc: ret 0x8f39;
0xffffffff815c08fd: ret 0x8f3;
0xffffffff82565317: ret 0x8f3a;
0xffffffff822665f5: ret 0x8f3c;
0xffffffff8251e4bf: ret 0x8f3e;
0xffffffff81476c47: ret 0x8f40;
0xffffffff822e70b0: ret 0x8f43;
0xffffffff8250fa13: ret 0x8f4a;
0xffffffff824205cb: ret 0x8f4f;
0xffffffff82434043: ret 0x8f52;
0xffffffff82488f10: ret 0x8f55;
0xffffffff818cc72c: ret 0x8f59;
0xffffffff8232f755: ret 0x8f5c;
0xffffffff82319ce8: ret 0x8f5d;
0xffffffff81820c15: ret 0x8f65;
0xffffffff824abeec: ret 0x8f72;
0xffffffff824abeeb: ret 0x8f72;
0xffffffff8246a56d: ret 0x8f73;
0xffffffff8160e21a: ret 0x8f77;
0xffffffff82541d57: ret 0x8f78;
0xffffffff823c0f84: ret 0x8f83;
0xffffffff8232163c: ret 0x8f87;
0xffffffff83484f21: ret 0x8f89;
0xffffffff8239d516: ret 0x8f8;
0xffffffff818f6353: ret 0x8f8a;
0xffffffff81b02e0f: ret 0x8f8b;
0xffffffff8344811c: ret 0x8f8c;
0xffffffff82337344: ret 0x8f8f;
0xffffffff822ed4b7: ret 0x8f90;
0xffffffff83484f56: ret 0x8f92;
0xffffffff82520ec2: ret 0x8f95;
0xffffffff823dac98: ret 0x8f9b;
0xffffffff83484f87: ret 0x8f9c;
0xffffffff813677e9: ret 0x8f;
0xffffffff822d0943: ret 0x8f;
0xffffffff823d5864: ret 0x8fa2;
0xffffffff824e74b0: ret 0x8fa4;
0xffffffff823b09f2: ret 0x8fa5;
0xffffffff83484fb8: ret 0x8fa6;
0xffffffff822a79cf: ret 0x8fa9;
0xffffffff83496136: ret 0x8fb0;
0xffffffff81385efa: ret 0x8fb3;
0xffffffff82251e1e: ret 0x8fb4;
0xffffffff8292e2c4: ret 0x8fb;
0xffffffff822efa3e: ret 0x8fbc;
0xffffffff82299d42: ret 0x8fc4;
0xffffffff824f7bdf: ret 0x8fc6;
0xffffffff824d85fc: ret 0x8fc;
0xffffffff815c3ff8: ret 0x8fca;
0xffffffff825605b9: ret 0x8fcc;
0xffffffff824f7381: ret 0x8fd7;
0xffffffff82508ba7: ret 0x8fda;
0xffffffff82328b6c: ret 0x8fdc;
0xffffffff8348cf06: ret 0x8fdd;
0xffffffff823b3e54: ret 0x8fde;
0xffffffff824c7eb4: ret 0x8fe0;
0xffffffff8348ba74: ret 0x8fe3;
0xffffffff8103468b: ret 0x8fe8;
0xffffffff81bb91a2: ret 0x8fe9;
0xffffffff823c1722: ret 0x8ff1;
0xffffffff822f0184: ret 0x8ff6;
0xffffffff822aa0b2: ret 0x8ff8;
0xffffffff8200d506: ret 0x8ff;
0xffffffff812b11e5: ret 0x8ffb;
0xffffffff8233c21d: ret 0x8ffc;
0xffffffff835a8e92: ret 0x8ffd;
0xffffffff8228c57d: ret 0x8ffe;
0xffffffff8264ffea: ret 0x8fff;
0xffffffff81005557: ret 0x9000;
0xffffffff823b3c8a: ret 0x9003;
0xffffffff8344dc15: ret 0x900;
0xffffffff82328738: ret 0x900d;
0xffffffff8254ac1a: ret 0x900e;
0xffffffff822628d1: ret 0x900f;
0xffffffff82469a4e: ret 0x9013;
0xffffffff822bc45d: ret 0x9014;
0xffffffff822d81da: ret 0x9017;
0xffffffff823df3fc: ret 0x901f;
0xffffffff823b8064: ret 0x9025;
0xffffffff82212daf: ret 0x902;
0xffffffff822ce58d: ret 0x9031;
0xffffffff82264084: ret 0x9033;
0xffffffff8191492f: ret 0x9039;
0xffffffff82346370: ret 0x903c;
0xffffffff82300f76: ret 0x9044;
0xffffffff814a11b4: ret 0x904;
0xffffffff822640e1: ret 0x904d;
0xffffffff82476eac: ret 0x9050;
0xffffffff822fd75f: ret 0x9051;
0xffffffff823de8eb: ret 0x9053;
0xffffffff818cdc4c: ret 0x9057;
0xffffffff8241fa35: ret 0x9058;
0xffffffff8106aba5: ret 0x9066;
0xffffffff82381059: ret 0x9068;
0xffffffff823ba237: ret 0x906;
0xffffffff8227d9c6: ret 0x906e;
0xffffffff824d0e67: ret 0x9071;
0xffffffff823ac12d: ret 0x9073;
0xffffffff82418adc: ret 0x9074;
0xffffffff81bd5d43: ret 0x9075;
0xffffffff82542cc6: ret 0x907c;
0xffffffff81a6b418: ret 0x9085;
0xffffffff823c9c28: ret 0x9086;
0xffffffff8188f12b: ret 0x908;
0xffffffff8102cbef: ret 0x9090;
0xffffffff816fe2ce: ret 0x909b;
0xffffffff8135e4fa: ret 0x909d;
0xffffffff8117220f: ret 0x90;
0xffffffff816fe30c: ret 0x90a0;
0xffffffff8244d925: ret 0x90a;
0xffffffff82460df8: ret 0x90aa;
0xffffffff823723c4: ret 0x90ae;
0xffffffff8181cc4d: ret 0x90b4;
0xffffffff8241cbcb: ret 0x90b5;
0xffffffff81737922: ret 0x90b;
0xffffffff8237796f: ret 0x90bc;
0xffffffff82572fe0: ret 0x90bf;
0xffffffff8106157c: ret 0x90c3;
0xffffffff8236d9a1: ret 0x90c5;
0xffffffff82284326: ret 0x90ce;
0xffffffff8346a556: ret 0x90d1;
0xffffffff813c3d97: ret 0x90d5;
0xffffffff82431597: ret 0x90d6;
0xffffffff82363bd9: ret 0x90d7;
0xffffffff8231fe64: ret 0x90d9;
0xffffffff81971f63: ret 0x90dc;
0xffffffff8225216f: ret 0x90de;
0xffffffff8225216e: ret 0x90de;
0xffffffff82525cff: ret 0x90df;
0xffffffff82326ead: ret 0x90e0;
0xffffffff824510a9: ret 0x90e1;
0xffffffff817a906a: ret 0x90e2;
0xffffffff8248d883: ret 0x90e3;
0xffffffff813f1caa: ret 0x90e8;
0xffffffff818ceaae: ret 0x90ea;
0xffffffff811685de: ret 0x90ec;
0xffffffff811101b1: ret 0x90f0;
0xffffffff81168671: ret 0x90f3;
0xffffffff8115cf49: ret 0x90f4;
0xffffffff819720d3: ret 0x90f6;
0xffffffff81287987: ret 0x90fd;
0xffffffff823e5635: ret 0x90fe;
0xffffffff81487e5d: ret 0x90ff;
0xffffffff824e9536: ret 0x9102;
0xffffffff812879d0: ret 0x9104;
0xffffffff817b0db6: ret 0x9105;
0xffffffff82289dfa: ret 0x9107;
0xffffffff81972191: ret 0x910d;
0xffffffff8181d20b: ret 0x910e;
0xffffffff82333932: ret 0x910f;
0xffffffff823dd340: ret 0x9110;
0xffffffff823dd33f: ret 0x9110;
0xffffffff82357268: ret 0x9111;
0xffffffff82283511: ret 0x9112;
0xffffffff81364d56: ret 0x9113;
0xffffffff824e3847: ret 0x9119;
0xffffffff822fc13c: ret 0x911a;
0xffffffff8241b6a6: ret 0x911c;
0xffffffff822d7960: ret 0x911e;
0xffffffff822d795f: ret 0x911e;
0xffffffff818cf0dc: ret 0x911f;
0xffffffff813bdb15: ret 0x9123;
0xffffffff8233e9dc: ret 0x9124;
0xffffffff81363856: ret 0x9128;
0xffffffff8181e43e: ret 0x9129;
0xffffffff8245ddf4: ret 0x912;
0xffffffff8227ab36: ret 0x912a;
0xffffffff813bdb31: ret 0x9130;
0xffffffff82444bb1: ret 0x9136;
0xffffffff824a6f80: ret 0x9137;
0xffffffff813548fa: ret 0x9139;
0xffffffff813bdb28: ret 0x913c;
0xffffffff82442878: ret 0x913e;
0xffffffff82250778: ret 0x9140;
0xffffffff823b4b9b: ret 0x9141;
0xffffffff82446cb8: ret 0x9142;
0xffffffff8246328d: ret 0x9143;
0xffffffff8225c1b7: ret 0x914b;
0xffffffff8242bf38: ret 0x914e;
0xffffffff8224a31f: ret 0x9151;
0xffffffff822d9c03: ret 0x9153;
0xffffffff8227fa7e: ret 0x9154;
0xffffffff8239e862: ret 0x9157;
0xffffffff82434652: ret 0x915e;
0xffffffff818d1a95: ret 0x9161;
0xffffffff82382d15: ret 0x9164;
0xffffffff815a9171: ret 0x916a;
0xffffffff8100fbbc: ret 0x9175;
0xffffffff824a2cc2: ret 0x9178;
0xffffffff818223b1: ret 0x9179;
0xffffffff8236fd07: ret 0x9181;
0xffffffff8244c54d: ret 0x9186;
0xffffffff823ace31: ret 0x9187;
0xffffffff810d177d: ret 0x9188;
0xffffffff82233cf8: ret 0x918e;
0xffffffff822e27ed: ret 0x9191;
0xffffffff82411bbf: ret 0x919e;
0xffffffff81169c5e: ret 0x919f;
0xffffffff814e53d2: ret 0x91;
0xffffffff82242d73: ret 0x91a0;
0xffffffff8223c994: ret 0x91a6;
0xffffffff824a6d1c: ret 0x91a;
0xffffffff8243a238: ret 0x91ab;
0xffffffff81823854: ret 0x91ac;
0xffffffff83437864: ret 0x91b1;
0xffffffff8136759a: ret 0x91ba;
0xffffffff8242998e: ret 0x91bd;
0xffffffff8234bf4e: ret 0x91c5;
0xffffffff817ea403: ret 0x91c8;
0xffffffff8254b4cf: ret 0x91c9;
0xffffffff822fee27: ret 0x91cc;
0xffffffff822e1571: ret 0x91d1;
0xffffffff824685e2: ret 0x91d3;
0xffffffff8182387b: ret 0x91d4;
0xffffffff8232c15d: ret 0x91d5;
0xffffffff8135759a: ret 0x91dd;
0xffffffff8128fa0b: ret 0x91e5;
0xffffffff822b8872: ret 0x91e6;
0xffffffff8241e7cb: ret 0x91e7;
0xffffffff815087c9: ret 0x91e8;
0xffffffff817f7679: ret 0x91e9;
0xffffffff8344d52a: ret 0x91eb;
0xffffffff822654e1: ret 0x91ec;
0xffffffff82343281: ret 0x91f5;
0xffffffff8233fb05: ret 0x91f7;
0xffffffff8136369a: ret 0x91f9;
0xffffffff8249be3e: ret 0x91fa;
0xffffffff822840bd: ret 0x91fd;
0xffffffff81b53d38: ret 0x9200;
0xffffffff817ea423: ret 0x9208;
0xffffffff8243c4dc: ret 0x9209;
0xffffffff822fad72: ret 0x920;
0xffffffff822fad73: ret 0x920;
0xffffffff825d4782: ret 0x920e;
0xffffffff81055c99: ret 0x920f;
0xffffffff8171917b: ret 0x9210;
0xffffffff8238fc32: ret 0x9219;
0xffffffff8223f6f7: ret 0x921e;
0xffffffff8223aad5: ret 0x9223;
0xffffffff8225888d: ret 0x9225;
0xffffffff834a640a: ret 0x9226;
0xffffffff817ea433: ret 0x9228;
0xffffffff822617ab: ret 0x9229;
0xffffffff822f066b: ret 0x922c;
0xffffffff82514a3f: ret 0x9236;
0xffffffff82548b5c: ret 0x9238;
0xffffffff824cd88a: ret 0x923a;
0xffffffff81110e35: ret 0x9240;
0xffffffff818d02a7: ret 0x9241;
0xffffffff8237c892: ret 0x9243;
0xffffffff81110e4f: ret 0x9248;
0xffffffff8252a283: ret 0x924d;
0xffffffff818d1131: ret 0x9253;
0xffffffff824640f4: ret 0x9256;
0xffffffff8135b4fa: ret 0x925d;
0xffffffff8134fb56: ret 0x9265;
0xffffffff8253f4b7: ret 0x9267;
0xffffffff817ea453: ret 0x9268;
0xffffffff8252847c: ret 0x9269;
0xffffffff823e2239: ret 0x926a;
0xffffffff82546ec5: ret 0x926e;
0xffffffff818d11b5: ret 0x926f;
0xffffffff8137d06f: ret 0x9274;
0xffffffff818fee6f: ret 0x9276;
0xffffffff825477e8: ret 0x9278;
0xffffffff825477e7: ret 0x9278;
0xffffffff8345eea3: ret 0x9283;
0xffffffff8229fd42: ret 0x9287;
0xffffffff817ea463: ret 0x9288;
0xffffffff823f596a: ret 0x928b;
0xffffffff822bc9bb: ret 0x9290;
0xffffffff8235007f: ret 0x9294;
0xffffffff822d0bab: ret 0x9296;
0xffffffff824b824d: ret 0x929e;
0xffffffff81353717: ret 0x92;
0xffffffff82322693: ret 0x92a1;
0xffffffff823e159a: ret 0x92a3;
0xffffffff834409ad: ret 0x92a6;
0xffffffff8240ea67: ret 0x92a7;
0xffffffff817ea473: ret 0x92a8;
0xffffffff824fa531: ret 0x92a9;
0xffffffff81354a0a: ret 0x92af;
0xffffffff824cd4be: ret 0x92b1;
0xffffffff82407755: ret 0x92b3;
0xffffffff810da385: ret 0x92b5;
0xffffffff822fbbee: ret 0x92bc;
0xffffffff81353c0a: ret 0x92bd;
0xffffffff8224c6c0: ret 0x92be;
0xffffffff8224c6c1: ret 0x92be;
0xffffffff823f6509: ret 0x92bf;
0xffffffff815a8951: ret 0x92c0;
0xffffffff818d0d13: ret 0x92c4;
0xffffffff817ea483: ret 0x92c8;
0xffffffff818d0d8d: ret 0x92ca;
0xffffffff813564ca: ret 0x92cb;
0xffffffff817b0efc: ret 0x92ce;
0xffffffff824dbba1: ret 0x92d1;
0xffffffff817379a8: ret 0x92d;
0xffffffff82334acb: ret 0x92dc;
0xffffffff824d0977: ret 0x92e0;
0xffffffff8228b2c2: ret 0x92e6;
0xffffffff825646f4: ret 0x92e7;
0xffffffff811105b8: ret 0x92e8;
0xffffffff81010b88: ret 0x92e9;
0xffffffff8148631a: ret 0x92e;
0xffffffff8112125f: ret 0x92eb;
0xffffffff822e6307: ret 0x92f2;
0xffffffff82485c2c: ret 0x92f3;
0xffffffff823b1fbd: ret 0x92f7;
0xffffffff825230b0: ret 0x92fc;
0xffffffff81991a79: ret 0x9303;
0xffffffff817ea4a3: ret 0x9308;
0xffffffff82482364: ret 0x9309;
0xffffffff8250578f: ret 0x930a;
0xffffffff83463f9d: ret 0x930b;
0xffffffff8226ea22: ret 0x930d;
0xffffffff8226ea23: ret 0x930d;
0xffffffff8235e878: ret 0x930f;
0xffffffff822d7844: ret 0x931b;
0xffffffff823d663b: ret 0x9323;
0xffffffff817ea4b3: ret 0x9328;
0xffffffff8223f4c1: ret 0x932;
0xffffffff8232e2d4: ret 0x932e;
0xffffffff823e4f43: ret 0x9337;
0xffffffff822d1a46: ret 0x933b;
0xffffffff8348baeb: ret 0x933f;
0xffffffff817c93dc: ret 0x9340;
0xffffffff8134ed9a: ret 0x9342;
0xffffffff822fa00e: ret 0x9346;
0xffffffff817ea4c3: ret 0x9348;
0xffffffff814aa5a1: ret 0x9350;
0xffffffff813be7f8: ret 0x9355;
0xffffffff82266834: ret 0x9356;
0xffffffff823d37a0: ret 0x935b;
0xffffffff82401da3: ret 0x9363;
0xffffffff813be853: ret 0x9366;
0xffffffff82498d98: ret 0x936;
0xffffffff817be144: ret 0x936c;
0xffffffff8256bb08: ret 0x9370;
0xffffffff8252b324: ret 0x9371;
0xffffffff81b2d985: ret 0x9372;
0xffffffff8251c674: ret 0x9375;
0xffffffff81967663: ret 0x9376;
0xffffffff8146c7e9: ret 0x9377;
0xffffffff82498220: ret 0x937a;
0xffffffff8249e4d5: ret 0x937b;
0xffffffff813be823: ret 0x937f;
0xffffffff8164a00c: ret 0x9380;
0xffffffff814a93f4: ret 0x9388;
0xffffffff812e26b2: ret 0x9389;
0xffffffff8246a983: ret 0x9390;
0xffffffff813bd39c: ret 0x9395;
0xffffffff8164ef1e: ret 0x9398;
0xffffffff8165042c: ret 0x9399;
0xffffffff81652cee: ret 0x939a;
0xffffffff82310bc8: ret 0x939b;
0xffffffff822e8894: ret 0x939e;
0xffffffff814c53d2: ret 0x93;
0xffffffff82290ccb: ret 0x93a8;
0xffffffff813486ba: ret 0x93ab;
0xffffffff8122f83e: ret 0x93ac;
0xffffffff82350e0f: ret 0x93b0;
0xffffffff822e9991: ret 0x93b2;
0xffffffff817ce07a: ret 0x93b8;
0xffffffff825da360: ret 0x93b;
0xffffffff82269c87: ret 0x93ba;
0xffffffff813bd401: ret 0x93bf;
0xffffffff815593ca: ret 0x93c0;
0xffffffff8223f705: ret 0x93c7;
0xffffffff8256ffc4: ret 0x93c9;
0xffffffff82537b27: ret 0x93ca;
0xffffffff823acb11: ret 0x93ce;
0xffffffff811ff065: ret 0x93d0;
0xffffffff811fbcf9: ret 0x93d8;
0xffffffff811fbd14: ret 0x93d9;
0xffffffff82378c1e: ret 0x93d;
0xffffffff811fbc93: ret 0x93da;
0xffffffff811fd64d: ret 0x93db;
0xffffffff811fd6f1: ret 0x93dc;
0xffffffff811fd72b: ret 0x93dd;
0xffffffff811fd745: ret 0x93de;
0xffffffff83454326: ret 0x93df;
0xffffffff81455c9c: ret 0x93e0;
0xffffffff81172c5e: ret 0x93e1;
0xffffffff813c20c5: ret 0x93e2;
0xffffffff825162fb: ret 0x93e7;
0xffffffff817b37d7: ret 0x93e8;
0xffffffff83455832: ret 0x93e9;
0xffffffff8345587c: ret 0x93ea;
0xffffffff81209577: ret 0x93eb;
0xffffffff82288f72: ret 0x93f8;
0xffffffff813c2232: ret 0x93fa;
0xffffffff82281a2d: ret 0x93fb;
0xffffffff82408364: ret 0x93fd;
0xffffffff82466b51: ret 0x9404;
0xffffffff822afb88: ret 0x940a;
0xffffffff82309ef8: ret 0x940e;
0xffffffff8103a040: ret 0x940f;
0xffffffff8226ffc8: ret 0x9412;
0xffffffff811c1f72: ret 0x9416;
0xffffffff8177596a: ret 0x9419;
0xffffffff816e4013: ret 0x941;
0xffffffff824b126f: ret 0x941a;
0xffffffff824b126e: ret 0x941a;
0xffffffff82359c32: ret 0x941c;
0xffffffff823ba6af: ret 0x941e;
0xffffffff823ae71d: ret 0x9420;
0xffffffff824334f6: ret 0x9425;
0xffffffff824a07d3: ret 0x9440;
0xffffffff811ab7d8: ret 0x944;
0xffffffff823abc6e: ret 0x944a;
0xffffffff824148dd: ret 0x945b;
0xffffffff822df11b: ret 0x945c;
0xffffffff82269542: ret 0x945f;
0xffffffff814ac742: ret 0x9460;
0xffffffff82250c39: ret 0x9461;
0xffffffff813c230e: ret 0x9466;
0xffffffff8236fab6: ret 0x946;
0xffffffff8229913f: ret 0x946b;
0xffffffff818d381c: ret 0x946d;
0xffffffff82522f12: ret 0x946f;
0xffffffff825191e5: ret 0x9470;
0xffffffff82501e9e: ret 0x9472;
0xffffffff8226a343: ret 0x9473;
0xffffffff8242ed1c: ret 0x9474;
0xffffffff82537a8e: ret 0x947b;
0xffffffff82288946: ret 0x9483;
0xffffffff811133e2: ret 0x9488;
0xffffffff8126b331: ret 0x9489;
0xffffffff8101a8bb: ret 0x948;
0xffffffff8196d4dd: ret 0x948b;
0xffffffff8252c6b5: ret 0x948c;
0xffffffff82301f7e: ret 0x948d;
0xffffffff81468a6a: ret 0x9490;
0xffffffff82311228: ret 0x9494;
0xffffffff8347462b: ret 0x9496;
0xffffffff813296d4: ret 0x94;
0xffffffff8244578c: ret 0x94a2;
0xffffffff8239d574: ret 0x94a8;
0xffffffff813c2206: ret 0x94a9;
0xffffffff824b2521: ret 0x94a;
0xffffffff824bc2b7: ret 0x94aa;
0xffffffff817b7c4a: ret 0x94ab;
0xffffffff8176c66a: ret 0x94ac;
0xffffffff8132b356: ret 0x94ad;
0xffffffff82478fd1: ret 0x94b1;
0xffffffff822892c8: ret 0x94b2;
0xffffffff8222a902: ret 0x94b8;
0xffffffff82373b8f: ret 0x94bd;
0xffffffff823a2c19: ret 0x94be;
0xffffffff82496b1f: ret 0x94c0;
0xffffffff824183ea: ret 0x94c2;
0xffffffff813c23f0: ret 0x94c4;
0xffffffff8254e79e: ret 0x94c6;
0xffffffff81132a5a: ret 0x94c;
0xffffffff8235d927: ret 0x94ca;
0xffffffff82560b32: ret 0x94cb;
0xffffffff834969a4: ret 0x94d4;
0xffffffff83479439: ret 0x94d;
0xffffffff813249ea: ret 0x94e2;
0xffffffff823b1ddb: ret 0x94e8;
0xffffffff81737b7a: ret 0x94e;
0xffffffff8132487a: ret 0x94ec;
0xffffffff824c6f93: ret 0x94f4;
0xffffffff823fbf49: ret 0x94f5;
0xffffffff835a8e1a: ret 0x94fd;
0xffffffff8200d37a: ret 0x94ff;
0xffffffff82278139: ret 0x9502;
0xffffffff8227813a: ret 0x9502;
0xffffffff813c2536: ret 0x950e;
0xffffffff81031ab7: ret 0x950f;
0xffffffff823dd25f: ret 0x951a;
0xffffffff81957c41: ret 0x9520;
0xffffffff82506e37: ret 0x9522;
0xffffffff810fd27a: ret 0x9529;
0xffffffff814f7741: ret 0x952;
0xffffffff81af8144: ret 0x952b;
0xffffffff824a85ff: ret 0x952c;
0xffffffff822ff4ae: ret 0x9531;
0xffffffff8235c3f6: ret 0x9535;
0xffffffff822db9b4: ret 0x9538;
0xffffffff8247a40b: ret 0x953b;
0xffffffff82414990: ret 0x9543;
0xffffffff82506128: ret 0x9544;
0xffffffff813c257d: ret 0x9546;
0xffffffff822ca793: ret 0x9549;
0xffffffff8245202b: ret 0x954;
0xffffffff822ef782: ret 0x954a;
0xffffffff824b6ff4: ret 0x9551;
0xffffffff813c26ed: ret 0x955c;
0xffffffff8227acad: ret 0x9566;
0xffffffff810e8a9f: ret 0x9568;
0xffffffff8247f646: ret 0x9571;
0xffffffff824887ca: ret 0x9572;
0xffffffff8256ebee: ret 0x9574;
0xffffffff816dcccf: ret 0x9575;
0xffffffff813c2703: ret 0x9577;
0xffffffff813c27b6: ret 0x9585;
0xffffffff8151b2a4: ret 0x9589;
0xffffffff822ae104: ret 0x958;
0xffffffff8229f4a5: ret 0x958a;
0xffffffff81586f93: ret 0x958b;
0xffffffff824c50a5: ret 0x958c;
0xffffffff823848c4: ret 0x958e;
0xffffffff8232c984: ret 0x958f;
0xffffffff8226d9cb: ret 0x9594;
0xffffffff823b6595: ret 0x9598;
0xffffffff82511696: ret 0x959e;
0xffffffff814a5422: ret 0x95;
0xffffffff813c2a11: ret 0x95a0;
0xffffffff823f9481: ret 0x95a6;
0xffffffff8197642f: ret 0x95ab;
0xffffffff82501cd4: ret 0x95ac;
0xffffffff82248aff: ret 0x95ad;
0xffffffff82415a68: ret 0x95b0;
0xffffffff822467ca: ret 0x95b7;
0xffffffff817593e3: ret 0x95b8;
0xffffffff82471206: ret 0x95b9;
0xffffffff813c25f5: ret 0x95ba;
0xffffffff8110a797: ret 0x95c0;
0xffffffff822534cc: ret 0x95c3;
0xffffffff82509c1b: ret 0x95c6;
0xffffffff823f0e0a: ret 0x95c8;
0xffffffff822f798c: ret 0x95ca;
0xffffffff82449316: ret 0x95d9;
0xffffffff82933e94: ret 0x95d;
0xffffffff824e433f: ret 0x95dd;
0xffffffff8128e2ab: ret 0x95e6;
0xffffffff825326ff: ret 0x95e7;
0xffffffff811aece5: ret 0x95e8;
0xffffffff8141ac75: ret 0x95e9;
0xffffffff82273200: ret 0x95ea;
0xffffffff811e1adf: ret 0x95eb;
0xffffffff8227ffc4: ret 0x95ef;
0xffffffff8225d52a: ret 0x95f5;
0xffffffff823f4c32: ret 0x95f;
0xffffffff8224eb6e: ret 0x95fd;
0xffffffff81759046: ret 0x9600;
0xffffffff8255d1ca: ret 0x9601;
0xffffffff823895ab: ret 0x9605;
0xffffffff82393c1f: ret 0x960;
0xffffffff814694ed: ret 0x960f;
0xffffffff81759948: ret 0x9610;
0xffffffff8252a982: ret 0x9611;
0xffffffff822ec605: ret 0x9618;
0xffffffff8250c894: ret 0x961a;
0xffffffff8346ae72: ret 0x961e;
0xffffffff8175a1eb: ret 0x9620;
0xffffffff823b649a: ret 0x9621;
0xffffffff8256f7b7: ret 0x9623;
0xffffffff8128e4ec: ret 0x9624;
0xffffffff82279d2f: ret 0x9625;
0xffffffff823a6837: ret 0x9627;
0xffffffff82371ab6: ret 0x962f;
0xffffffff8105e5b4: ret 0x9630;
0xffffffff824d84ae: ret 0x9632;
0xffffffff823da25a: ret 0x963;
0xffffffff8128e53f: ret 0x963a;
0xffffffff8239029d: ret 0x9642;
0xffffffff82003dc8: ret 0x9644;
0xffffffff822d4dfe: ret 0x9645;
0xffffffff8349ccba: ret 0x9649;
0xffffffff822acd93: ret 0x964;
0xffffffff815c8595: ret 0x964a;
0xffffffff824da002: ret 0x964d;
0xffffffff8128e55b: ret 0x964e;
0xffffffff8227c9fa: ret 0x9652;
0xffffffff813c28e8: ret 0x9653;
0xffffffff815c85bb: ret 0x965b;
0xffffffff82003e4c: ret 0x965d;
0xffffffff8147a1ec: ret 0x965e;
0xffffffff8128e875: ret 0x9660;
0xffffffff823f4aeb: ret 0x9669;
0xffffffff818d724f: ret 0x966;
0xffffffff8243464d: ret 0x9678;
0xffffffff8243464e: ret 0x9678;
0xffffffff8112404d: ret 0x9680;
0xffffffff824195f8: ret 0x9681;
0xffffffff813c2961: ret 0x9683;
0xffffffff8343edd2: ret 0x9685;
0xffffffff8233448b: ret 0x9686;
0xffffffff824f26f1: ret 0x9688;
0xffffffff82559be5: ret 0x9689;
0xffffffff815c8679: ret 0x968a;
0xffffffff8256f864: ret 0x968d;
0xffffffff823e3fee: ret 0x968e;
0xffffffff8247a20b: ret 0x968f;
0xffffffff81976dc2: ret 0x9693;
0xffffffff81b7bfa3: ret 0x9698;
0xffffffff8128e258: ret 0x9699;
0xffffffff817acc68: ret 0x969a;
0xffffffff8348bbe9: ret 0x96a1;
0xffffffff81b783b3: ret 0x96a8;
0xffffffff811bcab1: ret 0x96b0;
0xffffffff81c3374a: ret 0x96b4;
0xffffffff8128e27b: ret 0x96b5;
0xffffffff8237e2ec: ret 0x96b6;
0xffffffff813c26a3: ret 0x96b9;
0xffffffff8229761b: ret 0x96ba;
0xffffffff8236bee9: ret 0x96bf;
0xffffffff8128e16b: ret 0x96c4;
0xffffffff824d3707: ret 0x96c5;
0xffffffff8128e323: ret 0x96c9;
0xffffffff82490a18: ret 0x96d0;
0xffffffff823c3870: ret 0x96d2;
0xffffffff81737d7b: ret 0x96d;
0xffffffff81632534: ret 0x96e8;
0xffffffff81472a24: ret 0x96e9;
0xffffffff8255abf9: ret 0x96e;
0xffffffff823ea085: ret 0x96ea;
0xffffffff823f2335: ret 0x96eb;
0xffffffff823e43f1: ret 0x96ec;
0xffffffff824c3b78: ret 0x96f4;
0xffffffff83455a2f: ret 0x96f8;
0xffffffff8120b6d9: ret 0x96f9;
0xffffffff8120b6f3: ret 0x96fa;
0xffffffff8120db13: ret 0x96fb;
0xffffffff813c280e: ret 0x96ff;
0xffffffff818d92ee: ret 0x9705;
0xffffffff823e2253: ret 0x9708;
0xffffffff8250da79: ret 0x970c;
0xffffffff81a7ff2a: ret 0x970f;
0xffffffff83455f80: ret 0x9710;
0xffffffff81214dba: ret 0x9711;
0xffffffff81214de1: ret 0x9712;
0xffffffff815ca859: ret 0x9719;
0xffffffff8128e36d: ret 0x971f;
0xffffffff826816f5: ret 0x9726;
0xffffffff81b6a50c: ret 0x972b;
0xffffffff823ce19a: ret 0x9731;
0xffffffff8241b0f6: ret 0x9734;
0xffffffff823ac6dd: ret 0x9735;
0xffffffff818d94b8: ret 0x9736;
0xffffffff81514752: ret 0x973;
0xffffffff8128e9f3: ret 0x973a;
0xffffffff813c28fe: ret 0x973c;
0xffffffff82412e82: ret 0x973f;
0xffffffff8231924e: ret 0x9742;
0xffffffff82231a26: ret 0x9745;
0xffffffff8246c7b5: ret 0x9749;
0xffffffff8238a564: ret 0x974;
0xffffffff81173266: ret 0x974;
0xffffffff82436872: ret 0x974b;
0xffffffff8128eb24: ret 0x974c;
0xffffffff823b46df: ret 0x974d;
0xffffffff822b9e92: ret 0x974e;
0xffffffff817018c3: ret 0x9751;
0xffffffff81bfa2a7: ret 0x975c;
0xffffffff82460ed5: ret 0x9763;
0xffffffff82543b95: ret 0x9766;
0xffffffff813c2977: ret 0x9767;
0xffffffff816f0fba: ret 0x9769;
0xffffffff81053eb8: ret 0x976;
0xffffffff8128ea6a: ret 0x9771;
0xffffffff8252e7fc: ret 0x9776;
0xffffffff823ad117: ret 0x9777;
0xffffffff82935124: ret 0x977;
0xffffffff8249b83d: ret 0x977a;
0xffffffff82521b9c: ret 0x977e;
0xffffffff8248f01a: ret 0x9781;
0xffffffff82488e8d: ret 0x9784;
0xffffffff81011f69: ret 0x9789;
0xffffffff834981c5: ret 0x978;
0xffffffff818912a3: ret 0x978b;
0xffffffff813c29c5: ret 0x9792;
0xffffffff8223d39b: ret 0x9795;
0xffffffff8250e69f: ret 0x9796;
0xffffffff824990f4: ret 0x9797;
0xffffffff82477671: ret 0x9799;
0xffffffff82543835: ret 0x979b;
0xffffffff8247bc77: ret 0x979f;
0xffffffff812ec15b: ret 0x97;
0xffffffff81799520: ret 0x97a0;
0xffffffff8224c31f: ret 0x97a1;
0xffffffff82411329: ret 0x97a3;
0xffffffff824d6f18: ret 0x97a;
0xffffffff815e7e92: ret 0x97b0;
0xffffffff824a4287: ret 0x97b5;
0xffffffff82365a9a: ret 0x97b7;
0xffffffff82365a9b: ret 0x97b7;
0xffffffff82236600: ret 0x97b8;
0xffffffff82485a90: ret 0x97b;
0xffffffff817a87e9: ret 0x97bb;
0xffffffff8128eac6: ret 0x97c0;
0xffffffff813c294b: ret 0x97c5;
0xffffffff82529158: ret 0x97c6;
0xffffffff822cc75d: ret 0x97c8;
0xffffffff81201147: ret 0x97c;
0xffffffff82348b19: ret 0x97cc;
0xffffffff823c2597: ret 0x97d0;
0xffffffff8256cbc7: ret 0x97d2;
0xffffffff8147ba9f: ret 0x97d6;
0xffffffff819296a9: ret 0x97d7;
0xffffffff810da64b: ret 0x97d9;
0xffffffff82935d68: ret 0x97d;
0xffffffff82250b16: ret 0x97de;
0xffffffff823a12b0: ret 0x97df;
0xffffffff818ca107: ret 0x97e0;
0xffffffff8223905c: ret 0x97e1;
0xffffffff825233f9: ret 0x97e3;
0xffffffff812b5193: ret 0x97e8;
0xffffffff8199424c: ret 0x97e9;
0xffffffff8347a521: ret 0x97e;
0xffffffff81b831d3: ret 0x97eb;
0xffffffff81219454: ret 0x97f0;
0xffffffff823ce871: ret 0x97f1;
0xffffffff81b7f013: ret 0x97f3;
0xffffffff81799e38: ret 0x97f4;
0xffffffff813c288f: ret 0x97fd;
0xffffffff81b8334d: ret 0x97fe;
0xffffffff818c8aae: ret 0x9800;
0xffffffff822c5889: ret 0x9807;
0xffffffff82491d5a: ret 0x9809;
0xffffffff822e0888: ret 0x980;
0xffffffff823b5bed: ret 0x980f;
0xffffffff8115cdc1: ret 0x9810;
0xffffffff82360c02: ret 0x9811;
0xffffffff824ae956: ret 0x9813;
0xffffffff823a3366: ret 0x9814;
0xffffffff8231ce00: ret 0x9819;
0xffffffff823dd6e5: ret 0x981b;
0xffffffff81b83471: ret 0x981f;
0xffffffff82448037: ret 0x9820;
0xffffffff824bc45c: ret 0x9821;
0xffffffff822db446: ret 0x9824;
0xffffffff824497f3: ret 0x982d;
0xffffffff813c2a45: ret 0x9830;
0xffffffff82358edb: ret 0x9831;
0xffffffff82419e4e: ret 0x9832;
0xffffffff81232052: ret 0x9838;
0xffffffff822a5e0e: ret 0x9839;
0xffffffff812320cb: ret 0x983a;
0xffffffff8244a874: ret 0x9840;
0xffffffff82352df5: ret 0x9842;
0xffffffff82446323: ret 0x9845;
0xffffffff81b8359b: ret 0x9846;
0xffffffff81017949: ret 0x9848;
0xffffffff812322e0: ret 0x9849;
0xffffffff8236bb32: ret 0x984e;
0xffffffff818251d2: ret 0x9850;
0xffffffff824eeb31: ret 0x9851;
0xffffffff81b837f6: ret 0x9852;
0xffffffff824a8348: ret 0x985;
0xffffffff823bacbe: ret 0x985c;
0xffffffff818da56c: ret 0x985e;
0xffffffff834378cc: ret 0x9860;
0xffffffff822f7dba: ret 0x9862;
0xffffffff824d54b7: ret 0x9865;
0xffffffff813c28cd: ret 0x9868;
0xffffffff81825b86: ret 0x9869;
0xffffffff8254bcbb: ret 0x9871;
0xffffffff811913cb: ret 0x9872;
0xffffffff82268a9a: ret 0x9873;
0xffffffff816883ca: ret 0x987d;
0xffffffff8167923a: ret 0x987e;
0xffffffff822ac3dc: ret 0x987f;
0xffffffff8114c8ce: ret 0x9880;
0xffffffff8149d124: ret 0x9881;
0xffffffff813c2999: ret 0x9883;
0xffffffff8101ed0e: ret 0x9885;
0xffffffff823b9e1b: ret 0x9887;
0xffffffff82564f62: ret 0x9888;
0xffffffff824af053: ret 0x988c;
0xffffffff82354222: ret 0x988d;
0xffffffff822af858: ret 0x9892;
0xffffffff8182541c: ret 0x9898;
0xffffffff81120281: ret 0x98;
0xffffffff81674ece: ret 0x98;
0xffffffff813c2a79: ret 0x98a0;
0xffffffff823090da: ret 0x98a4;
0xffffffff822d8f2b: ret 0x98a6;
0xffffffff82387842: ret 0x98a9;
0xffffffff81825b37: ret 0x98ad;
0xffffffff81701dc2: ret 0x98af;
0xffffffff8177e57a: ret 0x98b3;
0xffffffff824445de: ret 0x98b6;
0xffffffff83453430: ret 0x98bb;
0xffffffff8142da8e: ret 0x98be;
0xffffffff82509a8f: ret 0x98bf;
0xffffffff822901ae: ret 0x98c8;
0xffffffff8347cc78: ret 0x98c9;
0xffffffff81701edb: ret 0x98cd;
0xffffffff813c2af2: ret 0x98d1;
0xffffffff8223771e: ret 0x98da;
0xffffffff81701f1f: ret 0x98dc;
0xffffffff82531259: ret 0x98df;
0xffffffff8225e586: ret 0x98e4;
0xffffffff824fdace: ret 0x98e5;
0xffffffff81825475: ret 0x98e6;
0xffffffff81101e52: ret 0x98e8;
0xffffffff82308b52: ret 0x98e9;
0xffffffff81701f69: ret 0x98eb;
0xffffffff813c2d3f: ret 0x98f1;
0xffffffff8123aa3b: ret 0x98f8;
0xffffffff8123aa8f: ret 0x98f9;
0xffffffff81701e06: ret 0x98fa;
0xffffffff8200d476: ret 0x98ff;
0xffffffff814ae2d3: ret 0x9900;
0xffffffff813c2d92: ret 0x9903;
0xffffffff834711ba: ret 0x9904;
0xffffffff81239c61: ret 0x9908;
0xffffffff81239cb5: ret 0x9909;
0xffffffff81870d99: ret 0x990;
0xffffffff81239ccf: ret 0x990a;
0xffffffff81239c7b: ret 0x990b;
0xffffffff8249f471: ret 0x9910;
0xffffffff81825914: ret 0x9911;
0xffffffff8179ab50: ret 0x9912;
0xffffffff8240eafe: ret 0x9915;
0xffffffff8240eafd: ret 0x9915;
0xffffffff8242b4bc: ret 0x9919;
0xffffffff813c2db7: ret 0x9924;
0xffffffff824d7ac9: ret 0x9926;
0xffffffff8250329a: ret 0x9928;
0xffffffff823e0319: ret 0x992a;
0xffffffff825d79e0: ret 0x992b;
0xffffffff823096e7: ret 0x992f;
0xffffffff82322e39: ret 0x9930;
0xffffffff825497be: ret 0x9932;
0xffffffff815e9279: ret 0x9937;
0xffffffff824585b0: ret 0x9939;
0xffffffff8167c6d2: ret 0x993a;
0xffffffff813c2d5d: ret 0x9940;
0xffffffff825419f9: ret 0x9941;
0xffffffff824a116b: ret 0x9944;
0xffffffff822713d5: ret 0x9949;
0xffffffff82250462: ret 0x994a;
0xffffffff82292095: ret 0x994f;
0xffffffff823f2311: ret 0x9950;
0xffffffff825552e0: ret 0x9951;
0xffffffff8246e404: ret 0x9954;
0xffffffff823fa5d6: ret 0x9957;
0xffffffff82521325: ret 0x9959;
0xffffffff82442b12: ret 0x995c;
0xffffffff813c2d0b: ret 0x9960;
0xffffffff82459bc6: ret 0x9968;
0xffffffff82546dab: ret 0x996d;
0xffffffff8239790e: ret 0x996f;
0xffffffff8252d3be: ret 0x9972;
0xffffffff810532c8: ret 0x9977;
0xffffffff82536780: ret 0x9979;
0xffffffff8256e701: ret 0x997;
0xffffffff823a230f: ret 0x997b;
0xffffffff817022cf: ret 0x997d;
0xffffffff813c2f40: ret 0x997f;
0xffffffff8241f8cc: ret 0x9980;
0xffffffff81702131: ret 0x9982;
0xffffffff823dbc5f: ret 0x9986;
0xffffffff822dfe5f: ret 0x9987;
0xffffffff8236db96: ret 0x9989;
0xffffffff8180af96: ret 0x998;
0xffffffff82382a29: ret 0x998b;
0xffffffff82382a28: ret 0x998b;
0xffffffff825d712b: ret 0x998c;
0xffffffff81825966: ret 0x998f;
0xffffffff8176a6aa: ret 0x9990;
0xffffffff822dc637: ret 0x9991;
0xffffffff823c0a1d: ret 0x9995;
0xffffffff81702300: ret 0x999a;
0xffffffff823adcd6: ret 0x999b;
0xffffffff823b3485: ret 0x999e;
0xffffffff8170215a: ret 0x999f;
0xffffffff8294264c: ret 0x99;
0xffffffff813e998b: ret 0x99a0;
0xffffffff8222b0f3: ret 0x99a1;
0xffffffff8222b0f4: ret 0x99a1;
0xffffffff8241945d: ret 0x99a6;
0xffffffff815f749a: ret 0x99a6;
0xffffffff810532e7: ret 0x99a7;
0xffffffff82430ba0: ret 0x99a;
0xffffffff8225fd0e: ret 0x99ad;
0xffffffff813c2f93: ret 0x99ae;
0xffffffff815f679a: ret 0x99b3;
0xffffffff81702331: ret 0x99b7;
0xffffffff824644e0: ret 0x99be;
0xffffffff81968afc: ret 0x99c0;
0xffffffff81825bc8: ret 0x99c3;
0xffffffff823133fb: ret 0x99c9;
0xffffffff8224927a: ret 0x99cd;
0xffffffff813c31aa: ret 0x99cf;
0xffffffff8233e6e7: ret 0x99d2;
0xffffffff82358bdc: ret 0x99d3;
0xffffffff81702365: ret 0x99d4;
0xffffffff823d536a: ret 0x99db;
0xffffffff8246a2c4: ret 0x99df;
0xffffffff8236feb0: ret 0x99e1;
0xffffffff81662c3a: ret 0x99e4;
0xffffffff82496972: ret 0x99e5;
0xffffffff8114f6b1: ret 0x99e8;
0xffffffff82938178: ret 0x99e;
0xffffffff824f32ae: ret 0x99ea;
0xffffffff82358b99: ret 0x99f2;
0xffffffff8255ccab: ret 0x99f8;
0xffffffff8173794f: ret 0x99f;
0xffffffff8171fcfa: ret 0x99fb;
0xffffffff835a8ea5: ret 0x99fd;
0xffffffff812e310a: ret 0x99fe;
0xffffffff82409fe2: ret 0x99ff;
0xffffffff823673c7: ret 0x9a02;
0xffffffff822dd335: ret 0x9a03;
0xffffffff823e47c2: ret 0x9a07;
0xffffffff818259d5: ret 0x9a0a;
0xffffffff81053669: ret 0x9a10;
0xffffffff822b8b78: ret 0x9a11;
0xffffffff82297a3f: ret 0x9a12;
0xffffffff82346429: ret 0x9a13;
0xffffffff82346428: ret 0x9a13;
0xffffffff8236a100: ret 0x9a1;
0xffffffff8236a101: ret 0x9a1;
0xffffffff8237e956: ret 0x9a1a;
0xffffffff823c44da: ret 0x9a1d;
0xffffffff8254512f: ret 0x9a26;
0xffffffff82455277: ret 0x9a2c;
0xffffffff824d1453: ret 0x9a30;
0xffffffff8245f980: ret 0x9a31;
0xffffffff82314a71: ret 0x9a33;
0xffffffff818272ea: ret 0x9a38;
0xffffffff813c2f28: ret 0x9a3e;
0xffffffff81b6c380: ret 0x9a40;
0xffffffff82491f75: ret 0x9a44;
0xffffffff824453ab: ret 0x9a46;
0xffffffff8227084f: ret 0x9a4;
0xffffffff8128f907: ret 0x9a4b;
0xffffffff824332d4: ret 0x9a4e;
0xffffffff81823675: ret 0x9a51;
0xffffffff8197766f: ret 0x9a53;
0xffffffff81832a29: ret 0x9a57;
0xffffffff824751f6: ret 0x9a5a;
0xffffffff82492ea4: ret 0x9a5a;
0xffffffff8249ff0f: ret 0x9a5b;
0xffffffff813c302d: ret 0x9a5d;
0xffffffff824b66ca: ret 0x9a5e;
0xffffffff8345b1ba: ret 0x9a64;
0xffffffff8165a93a: ret 0x9a67;
0xffffffff8128b318: ret 0x9a68;
0xffffffff82938b50: ret 0x9a6;
0xffffffff8225a85a: ret 0x9a6a;
0xffffffff8345a2ba: ret 0x9a73;
0xffffffff818f03cb: ret 0x9a74;
0xffffffff81823ccf: ret 0x9a78;
0xffffffff8245d9e4: ret 0x9a7b;
0xffffffff8231f6ee: ret 0x9a7c;
0xffffffff822a50e1: ret 0x9a7e;
0xffffffff823e9503: ret 0x9a82;
0xffffffff825675c9: ret 0x9a89;
0xffffffff822964ac: ret 0x9a8a;
0xffffffff813c3097: ret 0x9a91;
0xffffffff81249891: ret 0x9a94;
0xffffffff822d6e41: ret 0x9a96;
0xffffffff81823c5a: ret 0x9a9e;
0xffffffff829443b0: ret 0x9a;
0xffffffff818436cf: ret 0x9aa;
0xffffffff823ae247: ret 0x9aaa;
0xffffffff824e60c4: ret 0x9aaf;
0xffffffff82446c32: ret 0x9ab0;
0xffffffff8225dbba: ret 0x9ab3;
0xffffffff8345a3a9: ret 0x9ab8;
0xffffffff8223952f: ret 0x9ab9;
0xffffffff811eee2a: ret 0x9ab;
0xffffffff81823eed: ret 0x9abd;
0xffffffff8170254c: ret 0x9ac5;
0xffffffff819b09ae: ret 0x9ac8;
0xffffffff824a44a2: ret 0x9ac9;
0xffffffff82390eed: ret 0x9ace;
0xffffffff813c321b: ret 0x9ad5;
0xffffffff825301f8: ret 0x9ad8;
0xffffffff824f215d: ret 0x9ad9;
0xffffffff815cf371: ret 0x9ad9;
0xffffffff822c73a9: ret 0x9ae5;
0xffffffff818242a1: ret 0x9ae6;
0xffffffff812536a2: ret 0x9ae8;
0xffffffff8252cc4c: ret 0x9ae;
0xffffffff822b9155: ret 0x9aea;
0xffffffff823e6197: ret 0x9aec;
0xffffffff8242a1df: ret 0x9af9;
0xffffffff835a8e3e: ret 0x9afd;
0xffffffff812d310a: ret 0x9afe;
0xffffffff8224815d: ret 0x9b00;
0xffffffff81138252: ret 0x9b00;
0xffffffff822dd7cb: ret 0x9b0;
0xffffffff82232899: ret 0x9b0a;
0xffffffff81824695: ret 0x9b0c;
0xffffffff824323b3: ret 0x9b10;
0xffffffff812c237a: ret 0x9b11;
0xffffffff823f29ab: ret 0x9b14;
0xffffffff8223fcc8: ret 0x9b15;
0xffffffff8103e4b6: ret 0x9b1;
0xffffffff813c3205: ret 0x9b1a;
0xffffffff81757d3a: ret 0x9b1c;
0xffffffff823fa16e: ret 0x9b1e;
0xffffffff823dc6e3: ret 0x9b1f;
0xffffffff8345a677: ret 0x9b20;
0xffffffff8229d1e9: ret 0x9b28;
0xffffffff8245624e: ret 0x9b2d;
0xffffffff823ce7c4: ret 0x9b2f;
0xffffffff81267ded: ret 0x9b30;
0xffffffff823fe4ab: ret 0x9b31;
0xffffffff825153f6: ret 0x9b38;
0xffffffff8243e6de: ret 0x9b3a;
0xffffffff81263ea2: ret 0x9b40;
0xffffffff82514819: ret 0x9b41;
0xffffffff8236c37b: ret 0x9b42;
0xffffffff82541d75: ret 0x9b45;
0xffffffff82272b5c: ret 0x9b49;
0xffffffff825497ad: ret 0x9b4a;
0xffffffff818248b7: ret 0x9b4b;
0xffffffff814d8add: ret 0x9b50;
0xffffffff8232d032: ret 0x9b54;
0xffffffff822f4d12: ret 0x9b58;
0xffffffff824be210: ret 0x9b5a;
0xffffffff813c3276: ret 0x9b5f;
0xffffffff825d5601: ret 0x9b64;
0xffffffff823eaab9: ret 0x9b65;
0xffffffff823999cb: ret 0x9b6;
0xffffffff82466927: ret 0x9b6a;
0xffffffff824945da: ret 0x9b6b;
0xffffffff818905fc: ret 0x9b75;
0xffffffff822a6a51: ret 0x9b76;
0xffffffff81797fcd: ret 0x9b7;
0xffffffff824fd62b: ret 0x9b7d;
0xffffffff8223b634: ret 0x9b7e;
0xffffffff81b6d73c: ret 0x9b88;
0xffffffff823bcaec: ret 0x9b89;
0xffffffff8293ab04: ret 0x9b8;
0xffffffff8247ee57: ret 0x9b8c;
0xffffffff824646cf: ret 0x9b8d;
0xffffffff822f4904: ret 0x9b90;
0xffffffff82539453: ret 0x9b94;
0xffffffff823eaa31: ret 0x9b99;
0xffffffff812ac098: ret 0x9b;
0xffffffff822b0cd6: ret 0x9ba3;
0xffffffff817778aa: ret 0x9ba4;
0xffffffff8231eb8b: ret 0x9ba7;
0xffffffff822998d1: ret 0x9ba;
0xffffffff824f7b4e: ret 0x9bab;
0xffffffff8235d5e6: ret 0x9bb6;
0xffffffff8293b204: ret 0x9bb;
0xffffffff813c32fb: ret 0x9bba;
0xffffffff823d6075: ret 0x9bbd;
0xffffffff8224c5b5: ret 0x9bc4;
0xffffffff824a88a7: ret 0x9bc;
0xffffffff822d5ef7: ret 0x9bce;
0xffffffff82270938: ret 0x9bcf;
0xffffffff8240a851: ret 0x9bd6;
0xffffffff822ca068: ret 0x9bd9;
0xffffffff81639cad: ret 0x9bd;
0xffffffff813c3335: ret 0x9bdd;
0xffffffff815be3d1: ret 0x9bde;
0xffffffff824ae931: ret 0x9bdf;
0xffffffff823135af: ret 0x9be1;
0xffffffff82498ef8: ret 0x9be2;
0xffffffff822bf522: ret 0x9be3;
0xffffffff822bf521: ret 0x9be3;
0xffffffff82406d95: ret 0x9be7;
0xffffffff813574bf: ret 0x9be8;
0xffffffff814eef3f: ret 0x9be9;
0xffffffff81bba663: ret 0x9bed;
0xffffffff817be0e4: ret 0x9bef;
0xffffffff82523e51: ret 0x9bf2;
0xffffffff815c0b82: ret 0x9bf6;
0xffffffff822b3fe9: ret 0x9bfd;
0xffffffff8226f490: ret 0x9bfe;
0xffffffff81824891: ret 0x9bff;
0xffffffff81977e84: ret 0x9c05;
0xffffffff824d86f8: ret 0x9c07;
0xffffffff822b5ec5: ret 0x9c0;
0xffffffff8226d2c3: ret 0x9c0c;
0xffffffff822bfc50: ret 0x9c1;
0xffffffff81654106: ret 0x9c1b;
0xffffffff8229efcf: ret 0x9c23;
0xffffffff813c36ee: ret 0x9c24;
0xffffffff81824a21: ret 0x9c2a;
0xffffffff81824b07: ret 0x9c34;
0xffffffff822bad62: ret 0x9c35;
0xffffffff813c3734: ret 0x9c36;
0xffffffff819c3a1f: ret 0x9c38;
0xffffffff81737a32: ret 0x9c3;
0xffffffff823f2cfc: ret 0x9c3c;
0xffffffff82532352: ret 0x9c40;
0xffffffff82374470: ret 0x9c43;
0xffffffff82315a33: ret 0x9c44;
0xffffffff81824d48: ret 0x9c48;
0xffffffff822aa38a: ret 0x9c49;
0xffffffff8239fe30: ret 0x9c51;
0xffffffff8249aa0f: ret 0x9c52;
0xffffffff813c3711: ret 0x9c55;
0xffffffff8254aa0d: ret 0x9c59;
0xffffffff824b367e: ret 0x9c5f;
0xffffffff81024c7a: ret 0x9c60;
0xffffffff822b06f7: ret 0x9c65;
0xffffffff82569304: ret 0x9c6a;
0xffffffff82532142: ret 0x9c6c;
0xffffffff823fc738: ret 0x9c7d;
0xffffffff82308cd4: ret 0x9c7e;
0xffffffff822717ca: ret 0x9c87;
0xffffffff82549b9c: ret 0x9c89;
0xffffffff823fa14b: ret 0x9c91;
0xffffffff8239a88b: ret 0x9c92;
0xffffffff823eecb1: ret 0x9c94;
0xffffffff823cfd95: ret 0x9c9b;
0xffffffff812a9eca: ret 0x9c;
0xffffffff813c3830: ret 0x9ca0;
0xffffffff8245e1cb: ret 0x9ca2;
0xffffffff8227779d: ret 0x9ca9;
0xffffffff82255174: ret 0x9caa;
0xffffffff824a9627: ret 0x9cac;
0xffffffff82562c8e: ret 0x9cb1;
0xffffffff834360ba: ret 0x9cb5;
0xffffffff822c5a82: ret 0x9cb6;
0xffffffff822c5a81: ret 0x9cb6;
0xffffffff8228b826: ret 0x9cba;
0xffffffff82281795: ret 0x9ccc;
0xffffffff82281796: ret 0x9ccc;
0xffffffff81037166: ret 0x9cce;
0xffffffff823f9172: ret 0x9ccf;
0xffffffff81129bf7: ret 0x9cd0;
0xffffffff826bc08d: ret 0x9cd3;
0xffffffff8237648c: ret 0x9cd8;
0xffffffff82477663: ret 0x9cd;
0xffffffff8252f414: ret 0x9cda;
0xffffffff82572e26: ret 0x9cdc;
0xffffffff813c380a: ret 0x9cdf;
0xffffffff81455d47: ret 0x9ce0;
0xffffffff822ff6b2: ret 0x9ce5;
0xffffffff813254be: ret 0x9ce8;
0xffffffff82460e98: ret 0x9cf1;
0xffffffff82403dc1: ret 0x9cf3;
0xffffffff81824e87: ret 0x9cf4;
0xffffffff82249836: ret 0x9cf6;
0xffffffff82305d81: ret 0x9cff;
0xffffffff819cd935: ret 0x9d00;
0xffffffff8226312b: ret 0x9d03;
0xffffffff81824e6b: ret 0x9d06;
0xffffffff823d33b5: ret 0x9d07;
0xffffffff81b747b0: ret 0x9d08;
0xffffffff834992aa: ret 0x9d0;
0xffffffff819cd9f1: ret 0x9d10;
0xffffffff8237666d: ret 0x9d11;
0xffffffff81b74c9b: ret 0x9d18;
0xffffffff813c381d: ret 0x9d19;
0xffffffff81292027: ret 0x9d1e;
0xffffffff8248aded: ret 0x9d1f;
0xffffffff81824e4c: ret 0x9d2c;
0xffffffff82309a21: ret 0x9d35;
0xffffffff81824f0d: ret 0x9d38;
0xffffffff8224def8: ret 0x9d46;
0xffffffff8293e260: ret 0x9d4;
0xffffffff8179f0ce: ret 0x9d50;
0xffffffff813c39fc: ret 0x9d57;
0xffffffff8346c7e2: ret 0x9d59;
0xffffffff824285b5: ret 0x9d5;
0xffffffff823dc193: ret 0x9d5c;
0xffffffff8228e321: ret 0x9d5e;
0xffffffff81824eee: ret 0x9d5f;
0xffffffff8117aa08: ret 0x9d65;
0xffffffff8117ab94: ret 0x9d69;
0xffffffff8117aa6b: ret 0x9d6c;
0xffffffff8117abf7: ret 0x9d70;
0xffffffff8117aace: ret 0x9d73;
0xffffffff8249b40a: ret 0x9d74;
0xffffffff8117ac5a: ret 0x9d77;
0xffffffff822f9b4e: ret 0x9d79;
0xffffffff8117ab31: ret 0x9d7a;
0xffffffff82529aca: ret 0x9d7f;
0xffffffff825473f7: ret 0x9d82;
0xffffffff824452df: ret 0x9d8a;
0xffffffff813c37f7: ret 0x9d8b;
0xffffffff822a5700: ret 0x9d8c;
0xffffffff81a84c0a: ret 0x9d8e;
0xffffffff81972814: ret 0x9d8f;
0xffffffff8150d5b2: ret 0x9d93;
0xffffffff82514b66: ret 0x9d9;
0xffffffff812a393d: ret 0x9d;
0xffffffff834a44fe: ret 0x9da8;
0xffffffff834a4518: ret 0x9da9;
0xffffffff834a4532: ret 0x9daa;
0xffffffff834a44aa: ret 0x9dab;
0xffffffff834a44e4: ret 0x9dac;
0xffffffff822fd508: ret 0x9dad;
0xffffffff82481d4d: ret 0x9dae;
0xffffffff834a46b3: ret 0x9db0;
0xffffffff82259d11: ret 0x9db3;
0xffffffff82259688: ret 0x9db;
0xffffffff813c3aba: ret 0x9dba;
0xffffffff81b43255: ret 0x9dbb;
0xffffffff824b7c76: ret 0x9dc2;
0xffffffff8248f6da: ret 0x9dc4;
0xffffffff8179f2c7: ret 0x9dc5;
0xffffffff82293a62: ret 0x9dc9;
0xffffffff82288ecf: ret 0x9dcb;
0xffffffff811bfd8a: ret 0x9dd0;
0xffffffff815a0062: ret 0x9dd1;
0xffffffff824c8580: ret 0x9dd8;
0xffffffff823f4232: ret 0x9dd9;
0xffffffff823d69ff: ret 0x9ddb;
0xffffffff8128704a: ret 0x9dde;
0xffffffff813c3a52: ret 0x9ddf;
0xffffffff8228ca1d: ret 0x9de0;
0xffffffff823a8745: ret 0x9de2;
0xffffffff822602dc: ret 0x9de3;
0xffffffff82571943: ret 0x9de5;
0xffffffff8100f39d: ret 0x9de8;
0xffffffff824c4b60: ret 0x9de9;
0xffffffff81805bcd: ret 0x9deb;
0xffffffff8128978a: ret 0x9ded;
0xffffffff81824d1d: ret 0x9df1;
0xffffffff8239f6eb: ret 0x9df3;
0xffffffff81529873: ret 0x9dff;
0xffffffff82312191: ret 0x9e08;
0xffffffff82312190: ret 0x9e08;
0xffffffff813c3ba8: ret 0x9e0a;
0xffffffff8246fb95: ret 0x9e0b;
0xffffffff823794e8: ret 0x9e0d;
0xffffffff8176b869: ret 0x9e10;
0xffffffff81276441: ret 0x9e14;
0xffffffff8179ed3a: ret 0x9e16;
0xffffffff822f095e: ret 0x9e1a;
0xffffffff823e2357: ret 0x9e1b;
0xffffffff81b7ead6: ret 0x9e20;
0xffffffff823a4023: ret 0x9e22;
0xffffffff822c2306: ret 0x9e24;
0xffffffff8234c046: ret 0x9e26;
0xffffffff8224ff33: ret 0x9e28;
0xffffffff8225104b: ret 0x9e29;
0xffffffff824db0e8: ret 0x9e32;
0xffffffff824db0e7: ret 0x9e32;
0xffffffff8247fbac: ret 0x9e33;
0xffffffff813c3c6b: ret 0x9e34;
0xffffffff822dce2d: ret 0x9e38;
0xffffffff8250f85c: ret 0x9e3a;
0xffffffff8250f85d: ret 0x9e3a;
0xffffffff81291ada: ret 0x9e3b;
0xffffffff81826b7c: ret 0x9e3c;
0xffffffff8238fd25: ret 0x9e3e;
0xffffffff81b824c6: ret 0x9e40;
0xffffffff823fac4d: ret 0x9e47;
0xffffffff825db986: ret 0x9e4a;
0xffffffff82528178: ret 0x9e4b;
0xffffffff8179f450: ret 0x9e4c;
0xffffffff834434e2: ret 0x9e50;
0xffffffff8251a7f4: ret 0x9e52;
0xffffffff822b0992: ret 0x9e55;
0xffffffff823283d2: ret 0x9e5a;
0xffffffff811c0050: ret 0x9e60;
0xffffffff812849da: ret 0x9e61;
0xffffffff82386439: ret 0x9e66;
0xffffffff82482f56: ret 0x9e6a;
0xffffffff82482f54: ret 0x9e6a;
0xffffffff813c3aa4: ret 0x9e6c;
0xffffffff82293a13: ret 0x9e6e;
0xffffffff82496c05: ret 0x9e74;
0xffffffff816dcc28: ret 0x9e75;
0xffffffff825d9041: ret 0x9e76;
0xffffffff822511a0: ret 0x9e7b;
0xffffffff811c00c0: ret 0x9e80;
0xffffffff834930c1: ret 0x9e81;
0xffffffff82489f60: ret 0x9e82;
0xffffffff82409aeb: ret 0x9e85;
0xffffffff8129a60a: ret 0x9e89;
0xffffffff81725551: ret 0x9e8;
0xffffffff8349312b: ret 0x9e8d;
0xffffffff81826c94: ret 0x9e94;
0xffffffff83493159: ret 0x9e98;
0xffffffff8224de40: ret 0x9e9;
0xffffffff8228c740: ret 0x9e9a;
0xffffffff81296d73: ret 0x9e;
0xffffffff811c0130: ret 0x9ea0;
0xffffffff8349318a: ret 0x9ea1;
0xffffffff813c3c55: ret 0x9ea7;
0xffffffff822d955e: ret 0x9ea;
0xffffffff8253dc64: ret 0x9eaa;
0xffffffff82301582: ret 0x9eab;
0xffffffff817609da: ret 0x9eb0;
0xffffffff8243ab74: ret 0x9eb1;
0xffffffff81826cd5: ret 0x9eb4;
0xffffffff810be51c: ret 0x9eb;
0xffffffff8225dd62: ret 0x9ec3;
0xffffffff813c3d5b: ret 0x9ec7;
0xffffffff81826e89: ret 0x9ecd;
0xffffffff82293d9c: ret 0x9ed1;
0xffffffff82696cf2: ret 0x9ed9;
0xffffffff82350957: ret 0x9edc;
0xffffffff8238bf12: ret 0x9edf;
0xffffffff811c01c5: ret 0x9ee0;
0xffffffff813c3b6b: ret 0x9ee7;
0xffffffff8119339c: ret 0x9ee8;
0xffffffff814f80d5: ret 0x9ee;
0xffffffff822fecf5: ret 0x9eeb;
0xffffffff8182726a: ret 0x9ef1;
0xffffffff822505d9: ret 0x9ef2;
0xffffffff8252db38: ret 0x9ef8;
0xffffffff824772d3: ret 0x9f03;
0xffffffff82433377: ret 0x9f0a;
0xffffffff823623f9: ret 0x9f0c;
0xffffffff83475014: ret 0x9f0e;
0xffffffff813c3b8e: ret 0x9f0f;
0xffffffff8117b422: ret 0x9f13;
0xffffffff8182715e: ret 0x9f14;
0xffffffff82426336: ret 0x9f15;
0xffffffff8225f7ef: ret 0x9f16;
0xffffffff8117b4b2: ret 0x9f1a;
0xffffffff811c023c: ret 0x9f20;
0xffffffff8117b520: ret 0x9f21;
0xffffffff822dd3f6: ret 0x9f24;
0xffffffff82348c91: ret 0x9f25;
0xffffffff8117b58e: ret 0x9f28;
0xffffffff823bffb6: ret 0x9f29;
0xffffffff824abea1: ret 0x9f2a;
0xffffffff834931bc: ret 0x9f2c;
0xffffffff834931ee: ret 0x9f32;
0xffffffff83461287: ret 0x9f37;
0xffffffff8127ab98: ret 0x9f38;
0xffffffff8127a45f: ret 0x9f39;
0xffffffff8127a479: ret 0x9f3a;
0xffffffff8127c9fe: ret 0x9f3e;
0xffffffff8127ca15: ret 0x9f3f;
0xffffffff8127cf77: ret 0x9f40;
0xffffffff8349324e: ret 0x9f45;
0xffffffff8342d102: ret 0x9f46;
0xffffffff822d4824: ret 0x9f50;
0xffffffff83444b7c: ret 0x9f54;
0xffffffff8236b677: ret 0x9f55;
0xffffffff8237e4a8: ret 0x9f57;
0xffffffff819de1cc: ret 0x9f58;
0xffffffff8237339c: ret 0x9f59;
0xffffffff822718f4: ret 0x9f5;
0xffffffff8225b5cf: ret 0x9f5b;
0xffffffff825ce060: ret 0x9f5d;
0xffffffff8344557b: ret 0x9f60;
0xffffffff8234d0ae: ret 0x9f64;
0xffffffff8117b251: ret 0x9f66;
0xffffffff82388d4b: ret 0x9f6;
0xffffffff823bca7c: ret 0x9f6d;
0xffffffff813c3c3a: ret 0x9f6e;
0xffffffff8344555d: ret 0x9f70;
0xffffffff8117b282: ret 0x9f73;
0xffffffff810d6a01: ret 0x9f75;
0xffffffff824ef88e: ret 0x9f76;
0xffffffff8251a951: ret 0x9f7;
0xffffffff8117b222: ret 0x9f7d;
0xffffffff81284dc9: ret 0x9f80;
0xffffffff8241ba46: ret 0x9f82;
0xffffffff8249361d: ret 0x9f83;
0xffffffff813c3d71: ret 0x9f84;
0xffffffff822ecdf5: ret 0x9f88;
0xffffffff82337aa1: ret 0x9f89;
0xffffffff82386956: ret 0x9f8d;
0xffffffff822b729a: ret 0x9f8f;
0xffffffff825d73b5: ret 0x9f95;
0xffffffff81c4fe74: ret 0x9f9;
0xffffffff82393344: ret 0x9f9d;
0xffffffff81267d0f: ret 0x9f;
0xffffffff8240792b: ret 0x9fa1;
0xffffffff813c3ddc: ret 0x9fa3;
0xffffffff8247eda1: ret 0x9fa4;
0xffffffff834932ab: ret 0x9fa6;
0xffffffff818c9dee: ret 0x9fa9;
0xffffffff834932e0: ret 0x9faf;
0xffffffff81485d07: ret 0x9fb0;
0xffffffff824a91c4: ret 0x9fb4;
0xffffffff83493318: ret 0x9fb6;
0xffffffff82943b08: ret 0x9fb;
0xffffffff813c3d3e: ret 0x9fba;
0xffffffff814864fc: ret 0x9fbc;
0xffffffff834472d1: ret 0x9fc0;
0xffffffff83447324: ret 0x9fc1;
0xffffffff8223863c: ret 0x9fc2;
0xffffffff814a558b: ret 0x9fc5;
0xffffffff8163cedd: ret 0x9fc;
0xffffffff82256ac6: ret 0x9fce;
0xffffffff823c59d7: ret 0x9fd1;
0xffffffff8234794c: ret 0x9fd2;
0xffffffff8227460d: ret 0x9fd3;
0xffffffff823c3687: ret 0x9fd7;
0xffffffff823c3688: ret 0x9fd7;
0xffffffff817193ea: ret 0x9fd;
0xffffffff82557a6e: ret 0x9fdc;
0xffffffff813c3e18: ret 0x9fe0;
0xffffffff822982bc: ret 0x9fe1;
0xffffffff82375167: ret 0x9fe3;
0xffffffff82548ea7: ret 0x9fe4;
0xffffffff82548ea6: ret 0x9fe4;
0xffffffff8113c23b: ret 0x9fe8;
0xffffffff8253f45b: ret 0x9fe9;
0xffffffff81592c9a: ret 0x9fee;
0xffffffff82556ae9: ret 0x9ff5;
0xffffffff823a3c6b: ret 0x9ff;
0xffffffff8257028e: ret 0x9ffc;
0xffffffff834448c2: ret 0x9ffd;
0xffffffff82650052: ret 0x9fff;
0xffffffff834271e4: ret 0xa000;
0xffffffff81a4be81: ret 0xa001;
0xffffffff823d16ff: ret 0xa007;
0xffffffff824c62b4: ret 0xa00d;
0xffffffff82385b9f: ret 0xa011;
0xffffffff83493434: ret 0xa012;
0xffffffff8228e628: ret 0xa017;
0xffffffff823c0c8b: ret 0xa018;
0xffffffff810b2d08: ret 0xa018;
0xffffffff810b2d90: ret 0xa019;
0xffffffff810b2daa: ret 0xa01a;
0xffffffff810b2df0: ret 0xa01b;
0xffffffff810b2ea6: ret 0xa01c;
0xffffffff810b2efe: ret 0xa01d;
0xffffffff810b3a2c: ret 0xa01e;
0xffffffff810b38f3: ret 0xa01f;
0xffffffff810b3a9d: ret 0xa020;
0xffffffff810b61f3: ret 0xa021;
0xffffffff810b6237: ret 0xa022;
0xffffffff810b6345: ret 0xa023;
0xffffffff810b6362: ret 0xa024;
0xffffffff810b3e88: ret 0xa025;
0xffffffff810b4899: ret 0xa026;
0xffffffff810b5092: ret 0xa027;
0xffffffff810b50ac: ret 0xa028;
0xffffffff82346f54: ret 0xa02;
0xffffffff82348d96: ret 0xa02e;
0xffffffff813c413e: ret 0xa02f;
0xffffffff822569e7: ret 0xa030;
0xffffffff83493490: ret 0xa033;
0xffffffff8249270c: ret 0xa03a;
0xffffffff824a5070: ret 0xa03b;
0xffffffff823b286b: ret 0xa04a;
0xffffffff82260b89: ret 0xa04b;
0xffffffff82260b8b: ret 0xa04b;
0xffffffff817da039: ret 0xa050;
0xffffffff8255f938: ret 0xa051;
0xffffffff825668de: ret 0xa052;
0xffffffff8251a187: ret 0xa053;
0xffffffff822c68ea: ret 0xa054;
0xffffffff813c40f4: ret 0xa057;
0xffffffff8164ce08: ret 0xa05c;
0xffffffff822aef55: ret 0xa05e;
0xffffffff8240d26b: ret 0xa05f;
0xffffffff8231e385: ret 0xa06b;
0xffffffff823b2c2f: ret 0xa06d;
0xffffffff815cb438: ret 0xa06f;
0xffffffff8248a18d: ret 0xa070;
0xffffffff819798d9: ret 0xa072;
0xffffffff823d091d: ret 0xa073;
0xffffffff823c4c0e: ret 0xa075;
0xffffffff82320676: ret 0xa07;
0xffffffff8171102a: ret 0xa083;
0xffffffff82511585: ret 0xa088;
0xffffffff817dffc3: ret 0xa08;
0xffffffff8117bae2: ret 0xa08b;
0xffffffff824649e4: ret 0xa08d;
0xffffffff82484489: ret 0xa08e;
0xffffffff8117a930: ret 0xa08f;
0xffffffff8117bb66: ret 0xa092;
0xffffffff822e88c5: ret 0xa095;
0xffffffff823f7336: ret 0xa096;
0xffffffff8117a993: ret 0xa096;
0xffffffff816ad96a: ret 0xa099;
0xffffffff824bc0bf: ret 0xa09b;
0xffffffff8344916a: ret 0xa09d;
0xffffffff8112029b: ret 0xa0;
0xffffffff818cdd30: ret 0xa0a0;
0xffffffff82464995: ret 0xa0a1;
0xffffffff815cbd43: ret 0xa0a7;
0xffffffff8251f1c1: ret 0xa0a8;
0xffffffff8251f1c0: ret 0xa0a8;
0xffffffff813c41cf: ret 0xa0b3;
0xffffffff824aba3b: ret 0xa0ba;
0xffffffff8228ab57: ret 0xa0bf;
0xffffffff823ae2a9: ret 0xa0c5;
0xffffffff824cfb39: ret 0xa0c7;
0xffffffff824b0bda: ret 0xa0cd;
0xffffffff8222cb26: ret 0xa0d5;
0xffffffff81053b88: ret 0xa0d8;
0xffffffff822ebe42: ret 0xa0d9;
0xffffffff822b6513: ret 0xa0dc;
0xffffffff824237f1: ret 0xa0e5;
0xffffffff82274b92: ret 0xa0e6;
0xffffffff813e605a: ret 0xa0e8;
0xffffffff8241ec18: ret 0xa0ea;
0xffffffff8249a29a: ret 0xa0ee;
0xffffffff814a5c47: ret 0xa0f0;
0xffffffff82472a14: ret 0xa0f6;
0xffffffff826ce0a7: ret 0xa0fa;
0xffffffff8235cdce: ret 0xa0fd;
0xffffffff8200d36e: ret 0xa0ff;
0xffffffff822455db: ret 0xa100;
0xffffffff822a4472: ret 0xa104;
0xffffffff822d86ff: ret 0xa108;
0xffffffff813c4224: ret 0xa109;
0xffffffff813f02f2: ret 0xa10;
0xffffffff823f3b85: ret 0xa10a;
0xffffffff823f3b86: ret 0xa10a;
0xffffffff822897cc: ret 0xa113;
0xffffffff824f6d60: ret 0xa11a;
0xffffffff82570b04: ret 0xa122;
0xffffffff8346b83f: ret 0xa126;
0xffffffff815cce0f: ret 0xa127;
0xffffffff81737a79: ret 0xa12;
0xffffffff81ba2dd3: ret 0xa130;
0xffffffff813c30c2: ret 0xa133;
0xffffffff823b813d: ret 0xa135;
0xffffffff8122f7f0: ret 0xa138;
0xffffffff82524943: ret 0xa13e;
0xffffffff81829348: ret 0xa140;
0xffffffff8232a72e: ret 0xa148;
0xffffffff82406da1: ret 0xa14;
0xffffffff8253824d: ret 0xa14c;
0xffffffff8246b2b4: ret 0xa154;
0xffffffff824829f2: ret 0xa158;
0xffffffff82327c28: ret 0xa15;
0xffffffff82325ddb: ret 0xa15e;
0xffffffff816bdfaa: ret 0xa161;
0xffffffff818d02fa: ret 0xa168;
0xffffffff8125f356: ret 0xa16d;
0xffffffff81a7f947: ret 0xa170;
0xffffffff8124872e: ret 0xa175;
0xffffffff8225f39b: ret 0xa176;
0xffffffff81967758: ret 0xa177;
0xffffffff818d0806: ret 0xa178;
0xffffffff822b1a6c: ret 0xa17;
0xffffffff81a1cc79: ret 0xa17c;
0xffffffff82416a81: ret 0xa17e;
0xffffffff813c4bff: ret 0xa180;
0xffffffff824f2b33: ret 0xa181;
0xffffffff8228bfd8: ret 0xa183;
0xffffffff824ecd28: ret 0xa188;
0xffffffff818286f1: ret 0xa18b;
0xffffffff81828770: ret 0xa197;
0xffffffff8254f135: ret 0xa19a;
0xffffffff824ade9b: ret 0xa19b;
0xffffffff81266d94: ret 0xa1;
0xffffffff814ba682: ret 0xa1a0;
0xffffffff82464c67: ret 0xa1a8;
0xffffffff822f05a7: ret 0xa1a;
0xffffffff8103716f: ret 0xa1aa;
0xffffffff817da18d: ret 0xa1b0;
0xffffffff82336c6c: ret 0xa1b7;
0xffffffff824008fe: ret 0xa1b8;
0xffffffff82292443: ret 0xa1b9;
0xffffffff82524d36: ret 0xa1bb;
0xffffffff814b2678: ret 0xa1c0;
0xffffffff8118093d: ret 0xa1c8;
0xffffffff819572df: ret 0xa1cb;
0xffffffff81176ce0: ret 0xa1cc;
0xffffffff81806c96: ret 0xa1d0;
0xffffffff824c20d9: ret 0xa1d4;
0xffffffff817a050b: ret 0xa1d5;
0xffffffff8249c654: ret 0xa1d7;
0xffffffff82482554: ret 0xa1d8;
0xffffffff8249c4b8: ret 0xa1d9;
0xffffffff8345291a: ret 0xa1db;
0xffffffff823b07ca: ret 0xa1de;
0xffffffff823b303a: ret 0xa1e3;
0xffffffff813f03b9: ret 0xa1e8;
0xffffffff8156f6b9: ret 0xa1e9;
0xffffffff813c4cc9: ret 0xa1ec;
0xffffffff82488f29: ret 0xa1ef;
0xffffffff822299b2: ret 0xa1f0;
0xffffffff82493c99: ret 0xa1f3;
0xffffffff824ca855: ret 0xa1f7;
0xffffffff823bfbb2: ret 0xa1f;
0xffffffff8245a5ef: ret 0xa1fe;
0xffffffff822cbcde: ret 0xa1ff;
0xffffffff82243301: ret 0xa201;
0xffffffff82284cbb: ret 0xa205;
0xffffffff8245c18b: ret 0xa20e;
0xffffffff822e5ceb: ret 0xa213;
0xffffffff8228f8ba: ret 0xa214;
0xffffffff813c4667: ret 0xa215;
0xffffffff82512dc5: ret 0xa217;
0xffffffff823f7166: ret 0xa218;
0xffffffff82390992: ret 0xa21a;
0xffffffff825d49d2: ret 0xa222;
0xffffffff823a7dd9: ret 0xa22;
0xffffffff825553f4: ret 0xa22e;
0xffffffff813c4cdc: ret 0xa230;
0xffffffff825d57d5: ret 0xa231;
0xffffffff82321136: ret 0xa234;
0xffffffff815cf4bd: ret 0xa237;
0xffffffff818e5131: ret 0xa239;
0xffffffff82348ce9: ret 0xa23a;
0xffffffff822368af: ret 0xa240;
0xffffffff82337ecc: ret 0xa245;
0xffffffff823d18f0: ret 0xa24c;
0xffffffff82385a96: ret 0xa255;
0xffffffff8253bfd3: ret 0xa256;
0xffffffff82480bd4: ret 0xa259;
0xffffffff8235651e: ret 0xa25b;
0xffffffff813c4d02: ret 0xa260;
0xffffffff8227e633: ret 0xa266;
0xffffffff83463a41: ret 0xa269;
0xffffffff824a8f83: ret 0xa26;
0xffffffff815e91ca: ret 0xa26f;
0xffffffff818efa43: ret 0xa273;
0xffffffff812c554a: ret 0xa275;
0xffffffff824c20fb: ret 0xa276;
0xffffffff824c1599: ret 0xa27c;
0xffffffff817da19f: ret 0xa280;
0xffffffff8239d3de: ret 0xa282;
0xffffffff8228ac61: ret 0xa284;
0xffffffff8245f612: ret 0xa286;
0xffffffff82465658: ret 0xa288;
0xffffffff813c4d15: ret 0xa289;
0xffffffff8232cbf0: ret 0xa28d;
0xffffffff8200aa74: ret 0xa293;
0xffffffff8225441a: ret 0xa298;
0xffffffff824435bf: ret 0xa29f;
0xffffffff813d53a2: ret 0xa2;
0xffffffff81b0f193: ret 0xa2a0;
0xffffffff82404288: ret 0xa2a1;
0xffffffff82294b05: ret 0xa2a9;
0xffffffff82278683: ret 0xa2aa;
0xffffffff823ef627: ret 0xa2ad;
0xffffffff813c4d33: ret 0xa2b2;
0xffffffff8254e0b9: ret 0xa2bc;
0xffffffff8250bc64: ret 0xa2c2;
0xffffffff823c2938: ret 0xa2ca;
0xffffffff82509068: ret 0xa2cd;
0xffffffff8242fd34: ret 0xa2d0;
0xffffffff823c27ef: ret 0xa2d2;
0xffffffff822ea581: ret 0xa2e2;
0xffffffff813c4398: ret 0xa2e3;
0xffffffff8184f6b8: ret 0xa2e8;
0xffffffff8156fcb8: ret 0xa2e9;
0xffffffff814e53bf: ret 0xa2eb;
0xffffffff823e1921: ret 0xa2ed;
0xffffffff8252e816: ret 0xa2f6;
0xffffffff826bf71c: ret 0xa2fa;
0xffffffff813c4e2e: ret 0xa2fb;
0xffffffff8227fe9c: ret 0xa2fe;
0xffffffff810519e3: ret 0xa2ff;
0xffffffff82330de8: ret 0xa300;
0xffffffff8240c489: ret 0xa301;
0xffffffff81051a02: ret 0xa302;
0xffffffff823cc638: ret 0xa303;
0xffffffff824f17bc: ret 0xa308;
0xffffffff824bb602: ret 0xa30a;
0xffffffff8253c445: ret 0xa30c;
0xffffffff83499187: ret 0xa310;
0xffffffff8228a154: ret 0xa31a;
0xffffffff817a7518: ret 0xa320;
0xffffffff8230f2ff: ret 0xa326;
0xffffffff822fc57c: ret 0xa32;
0xffffffff82413605: ret 0xa32a;
0xffffffff813c4d5f: ret 0xa32f;
0xffffffff817da2e6: ret 0xa330;
0xffffffff817e2263: ret 0xa333;
0xffffffff82246ddc: ret 0xa33f;
0xffffffff8155da9a: ret 0xa340;
0xffffffff8232f8b8: ret 0xa346;
0xffffffff82451b3e: ret 0xa348;
0xffffffff823618ff: ret 0xa348;
0xffffffff813c4e4f: ret 0xa34b;
0xffffffff818e6ed5: ret 0xa34c;
0xffffffff8223469e: ret 0xa355;
0xffffffff82571efd: ret 0xa35c;
0xffffffff824f1884: ret 0xa35e;
0xffffffff81855d8a: ret 0xa360;
0xffffffff824b80d4: ret 0xa365;
0xffffffff824a068b: ret 0xa366;
0xffffffff82321e49: ret 0xa367;
0xffffffff8197b7b9: ret 0xa36e;
0xffffffff81b0725e: ret 0xa375;
0xffffffff82535691: ret 0xa378;
0xffffffff824a4a5d: ret 0xa37b;
0xffffffff824975ca: ret 0xa38;
0xffffffff8227c1f2: ret 0xa392;
0xffffffff81829fd4: ret 0xa392;
0xffffffff813c4d7e: ret 0xa395;
0xffffffff82456a48: ret 0xa398;
0xffffffff82456a47: ret 0xa398;
0xffffffff8294923c: ret 0xa39;
0xffffffff81224f7a: ret 0xa39b;
0xffffffff8236a1f8: ret 0xa39f;
0xffffffff814241ba: ret 0xa3;
0xffffffff81248c0a: ret 0xa3a3;
0xffffffff824a8990: ret 0xa3a9;
0xffffffff813c4db3: ret 0xa3aa;
0xffffffff811f9aa4: ret 0xa3b0;
0xffffffff825278b0: ret 0xa3b5;
0xffffffff825d87fd: ret 0xa3b7;
0xffffffff829495cc: ret 0xa3b;
0xffffffff825508d6: ret 0xa3ba;
0xffffffff813c4d49: ret 0xa3bf;
0xffffffff824a861c: ret 0xa3c9;
0xffffffff822a617a: ret 0xa3cb;
0xffffffff8182a0ef: ret 0xa3cc;
0xffffffff824c1627: ret 0xa3ce;
0xffffffff823b4b7d: ret 0xa3cf;
0xffffffff82406137: ret 0xa3d2;
0xffffffff8267fc17: ret 0xa3d3;
0xffffffff817a1260: ret 0xa3d4;
0xffffffff82478f12: ret 0xa3d7;
0xffffffff817a120f: ret 0xa3d9;
0xffffffff824c0d49: ret 0xa3da;
0xffffffff824c0d48: ret 0xa3da;
0xffffffff823600f9: ret 0xa3df;
0xffffffff8251b796: ret 0xa3e0;
0xffffffff813c4dce: ret 0xa3e1;
0xffffffff817281b7: ret 0xa3e8;
0xffffffff81ace6f7: ret 0xa3e9;
0xffffffff823db36d: ret 0xa3ef;
0xffffffff8236e283: ret 0xa3f0;
0xffffffff8231299d: ret 0xa3f1;
0xffffffff8240419d: ret 0xa3f4;
0xffffffff822e8a62: ret 0xa3f7;
0xffffffff822e8a61: ret 0xa3f7;
0xffffffff8240e574: ret 0xa3fb;
0xffffffff835a8e96: ret 0xa3fd;
0xffffffff81009ae7: ret 0xa404;
0xffffffff82228747: ret 0xa406;
0xffffffff8236461a: ret 0xa40a;
0xffffffff823402a6: ret 0xa40b;
0xffffffff813c4de4: ret 0xa40c;
0xffffffff8345ef07: ret 0xa412;
0xffffffff81185de8: ret 0xa414;
0xffffffff8238e02a: ret 0xa417;
0xffffffff82432386: ret 0xa418;
0xffffffff82314b82: ret 0xa419;
0xffffffff8345ef6e: ret 0xa41b;
0xffffffff8225be3e: ret 0xa420;
0xffffffff824bc2a6: ret 0xa421;
0xffffffff82483e8a: ret 0xa422;
0xffffffff8250a2f9: ret 0xa428;
0xffffffff822cfb62: ret 0xa42;
0xffffffff822ee491: ret 0xa433;
0xffffffff82467032: ret 0xa435;
0xffffffff8235c3f1: ret 0xa43;
0xffffffff813c4dfe: ret 0xa440;
0xffffffff8230a7ad: ret 0xa443;
0xffffffff83437898: ret 0xa448;
0xffffffff8227e654: ret 0xa44c;
0xffffffff8256d926: ret 0xa44d;
0xffffffff81055f28: ret 0xa450;
0xffffffff822ec179: ret 0xa451;
0xffffffff82290512: ret 0xa45c;
0xffffffff824789ee: ret 0xa45e;
0xffffffff81ba4b46: ret 0xa460;
0xffffffff8244c011: ret 0xa464;
0xffffffff8238a258: ret 0xa466;
0xffffffff82360d94: ret 0xa468;
0xffffffff813c4d99: ret 0xa46d;
0xffffffff82359a28: ret 0xa47b;
0xffffffff824d13d4: ret 0xa47c;
0xffffffff81bea35a: ret 0xa480;
0xffffffff8243e63a: ret 0xa481;
0xffffffff8229541f: ret 0xa483;
0xffffffff82350788: ret 0xa48;
0xffffffff82234828: ret 0xa48c;
0xffffffff822992f2: ret 0xa490;
0xffffffff8228af82: ret 0xa492;
0xffffffff824abed8: ret 0xa493;
0xffffffff813c49b6: ret 0xa497;
0xffffffff8349e658: ret 0xa49a;
0xffffffff8229ed02: ret 0xa49d;
0xffffffff8241f1ae: ret 0xa49e;
0xffffffff81232852: ret 0xa4;
0xffffffff8249dd8b: ret 0xa4a1;
0xffffffff817a155f: ret 0xa4a4;
0xffffffff82402973: ret 0xa4ac;
0xffffffff822874d5: ret 0xa4af;
0xffffffff82429055: ret 0xa4ba;
0xffffffff81485baa: ret 0xa4bf;
0xffffffff813c4b69: ret 0xa4c2;
0xffffffff825444eb: ret 0xa4c6;
0xffffffff824c91d3: ret 0xa4c9;
0xffffffff822a421f: ret 0xa4cc;
0xffffffff823a7d5b: ret 0xa4d3;
0xffffffff8239ef6b: ret 0xa4da;
0xffffffff819b496b: ret 0xa4db;
0xffffffff823497e3: ret 0xa4df;
0xffffffff810b981a: ret 0xa4e0;
0xffffffff82277c65: ret 0xa4e1;
0xffffffff82454b82: ret 0xa4e3;
0xffffffff814ef756: ret 0xa4e8;
0xffffffff8237699b: ret 0xa4e9;
0xffffffff8239b965: ret 0xa4ea;
0xffffffff8223a148: ret 0xa4ef;
0xffffffff82457717: ret 0xa4f5;
0xffffffff823a4e4b: ret 0xa4fa;
0xffffffff82284a4d: ret 0xa4fb;
0xffffffff835a8e1e: ret 0xa4fd;
0xffffffff8200d46a: ret 0xa4ff;
0xffffffff813f0b07: ret 0xa50;
0xffffffff813c4e65: ret 0xa50c;
0xffffffff8182ae43: ret 0xa50d;
0xffffffff8242557f: ret 0xa511;
0xffffffff815becca: ret 0xa514;
0xffffffff82460236: ret 0xa519;
0xffffffff824287e4: ret 0xa51c;
0xffffffff822ca7ca: ret 0xa51e;
0xffffffff822c0df5: ret 0xa525;
0xffffffff8229d5a8: ret 0xa52c;
0xffffffff81829a12: ret 0xa52e;
0xffffffff813c4cef: ret 0xa52f;
0xffffffff823ebe3b: ret 0xa535;
0xffffffff824f045c: ret 0xa539;
0xffffffff8244638a: ret 0xa541;
0xffffffff8234d3dc: ret 0xa544;
0xffffffff8234d3dd: ret 0xa544;
0xffffffff82288f42: ret 0xa545;
0xffffffff824b877a: ret 0xa547;
0xffffffff825202c0: ret 0xa54;
0xffffffff822e255a: ret 0xa54a;
0xffffffff8229d1b2: ret 0xa54b;
0xffffffff81829367: ret 0xa54c;
0xffffffff81c340da: ret 0xa54d;
0xffffffff824956c5: ret 0xa54e;
0xffffffff8255cb1a: ret 0xa552;
0xffffffff8228c42b: ret 0xa553;
0xffffffff823ea105: ret 0xa55e;
0xffffffff8235ac69: ret 0xa560;
0xffffffff82334b05: ret 0xa562;
0xffffffff8152626d: ret 0xa567;
0xffffffff813c4b53: ret 0xa56a;
0xffffffff82562be1: ret 0xa56f;
0xffffffff8185b932: ret 0xa570;
0xffffffff824214b7: ret 0xa572;
0xffffffff81977d6a: ret 0xa574;
0xffffffff82492fe9: ret 0xa57b;
0xffffffff8182949c: ret 0xa57c;
0xffffffff8243c612: ret 0xa57d;
0xffffffff824c4002: ret 0xa57e;
0xffffffff8184efd6: ret 0xa58;
0xffffffff823afadd: ret 0xa58a;
0xffffffff823afadc: ret 0xa58a;
0xffffffff82507183: ret 0xa58b;
0xffffffff823a0139: ret 0xa58d;
0xffffffff8225f954: ret 0xa591;
0xffffffff82388515: ret 0xa593;
0xffffffff81829ebe: ret 0xa594;
0xffffffff818d1b76: ret 0xa595;
0xffffffff824c1572: ret 0xa597;
0xffffffff81219445: ret 0xa5;
0xffffffff823689d4: ret 0xa5a1;
0xffffffff813c4e7b: ret 0xa5ab;
0xffffffff8238afc4: ret 0xa5b0;
0xffffffff822aa7bb: ret 0xa5b3;
0xffffffff822281d8: ret 0xa5b4;
0xffffffff8230a973: ret 0xa5c0;
0xffffffff8223d99a: ret 0xa5c2;
0xffffffff813c4e91: ret 0xa5c4;
0xffffffff8224f5db: ret 0xa5c5;
0xffffffff8255cf45: ret 0xa5cc;
0xffffffff8228bca3: ret 0xa5d0;
0xffffffff8228bca4: ret 0xa5d0;
0xffffffff82399ade: ret 0xa5d1;
0xffffffff823ba607: ret 0xa5d6;
0xffffffff824a7b70: ret 0xa5d8;
0xffffffff82290ebf: ret 0xa5dc;
0xffffffff8197c2e2: ret 0xa5de;
0xffffffff813c6d75: ret 0xa5e0;
0xffffffff822d5d3b: ret 0xa5e1;
0xffffffff822e885a: ret 0xa5e6;
0xffffffff8103b495: ret 0xa5e8;
0xffffffff823230d0: ret 0xa5ed;
0xffffffff825482a0: ret 0xa5ee;
0xffffffff8348d101: ret 0xa5ef;
0xffffffff815a1f3a: ret 0xa5f1;
0xffffffff823ef1a2: ret 0xa5f6;
0xffffffff823ef1a4: ret 0xa5f6;
0xffffffff823ef1a3: ret 0xa5f6;
0xffffffff824357e6: ret 0xa5f8;
0xffffffff8163ebf3: ret 0xa5f;
0xffffffff822caa8a: ret 0xa5fc;
0xffffffff82344c45: ret 0xa606;
0xffffffff82408a70: ret 0xa60c;
0xffffffff825038e9: ret 0xa610;
0xffffffff822b0803: ret 0xa617;
0xffffffff823bd830: ret 0xa61;
0xffffffff823be766: ret 0xa61c;
0xffffffff813c6d92: ret 0xa61e;
0xffffffff82266345: ret 0xa621;
0xffffffff82549e80: ret 0xa622;
0xffffffff822bba79: ret 0xa624;
0xffffffff8294b88c: ret 0xa62;
0xffffffff823ea551: ret 0xa62a;
0xffffffff8244bdd7: ret 0xa62b;
0xffffffff8228d951: ret 0xa630;
0xffffffff811ba3a2: ret 0xa638;
0xffffffff824f5110: ret 0xa639;
0xffffffff82240622: ret 0xa63d;
0xffffffff8182c6f5: ret 0xa645;
0xffffffff8252d27d: ret 0xa64a;
0xffffffff813c6d5d: ret 0xa64b;
0xffffffff8182c709: ret 0xa652;
0xffffffff823a033a: ret 0xa653;
0xffffffff823df7fb: ret 0xa658;
0xffffffff8345f1b7: ret 0xa65b;
0xffffffff823c9981: ret 0xa65c;
0xffffffff82367eec: ret 0xa660;
0xffffffff822fdb8d: ret 0xa663;
0xffffffff8164d337: ret 0xa664;
0xffffffff82511bf9: ret 0xa665;
0xffffffff8182c769: ret 0xa669;
0xffffffff8294c6d4: ret 0xa66;
0xffffffff813c6dba: ret 0xa66b;
0xffffffff8232eadf: ret 0xa670;
0xffffffff822a824f: ret 0xa674;
0xffffffff822bc2b1: ret 0xa676;
0xffffffff81b4ec8f: ret 0xa677;
0xffffffff81737c78: ret 0xa67;
0xffffffff822a4114: ret 0xa67d;
0xffffffff811ba3ae: ret 0xa680;
0xffffffff817a2d4c: ret 0xa681;
0xffffffff824b41c5: ret 0xa689;
0xffffffff824399ff: ret 0xa694;
0xffffffff822b5adb: ret 0xa695;
0xffffffff82528081: ret 0xa699;
0xffffffff822b6c73: ret 0xa69;
0xffffffff813c4ede: ret 0xa69a;
0xffffffff81470202: ret 0xa69b;
0xffffffff8348c393: ret 0xa69c;
0xffffffff8120b82c: ret 0xa6;
0xffffffff8197a681: ret 0xa6a0;
0xffffffff82312326: ret 0xa6a3;
0xffffffff822cc8df: ret 0xa6a7;
0xffffffff823acd0a: ret 0xa6a;
0xffffffff82556d65: ret 0xa6ad;
0xffffffff824045c9: ret 0xa6ae;
0xffffffff82532bd1: ret 0xa6af;
0xffffffff81455f1a: ret 0xa6b0;
0xffffffff82420b82: ret 0xa6b1;
0xffffffff823b97e3: ret 0xa6be;
0xffffffff8112849b: ret 0xa6c0;
0xffffffff82540311: ret 0xa6c6;
0xffffffff82431654: ret 0xa6c9;
0xffffffff82557906: ret 0xa6cf;
0xffffffff81625c03: ret 0xa6d0;
0xffffffff823db2ae: ret 0xa6d3;
0xffffffff813c4f33: ret 0xa6d7;
0xffffffff82677e2a: ret 0xa6d9;
0xffffffff81339c33: ret 0xa6d;
0xffffffff8250d726: ret 0xa6db;
0xffffffff81665baa: ret 0xa6e5;
0xffffffff8101cec4: ret 0xa6e8;
0xffffffff810b1d0f: ret 0xa6e9;
0xffffffff814f82f2: ret 0xa6e;
0xffffffff82542be9: ret 0xa6f0;
0xffffffff8230123d: ret 0xa6f3;
0xffffffff83454dcc: ret 0xa6f;
0xffffffff818444ba: ret 0xa6fa;
0xffffffff82531aa2: ret 0xa6fd;
0xffffffff823468c6: ret 0xa6ff;
0xffffffff8182ae84: ret 0xa702;
0xffffffff82443927: ret 0xa703;
0xffffffff823f7899: ret 0xa707;
0xffffffff8163ec98: ret 0xa70;
0xffffffff822de6bb: ret 0xa70a;
0xffffffff8245d42e: ret 0xa70e;
0xffffffff824846c6: ret 0xa70f;
0xffffffff82534156: ret 0xa71b;
0xffffffff81c19a47: ret 0xa71c;
0xffffffff823021f8: ret 0xa71d;
0xffffffff813c4f50: ret 0xa721;
0xffffffff8251d5d4: ret 0xa724;
0xffffffff82276268: ret 0xa728;
0xffffffff824ad530: ret 0xa733;
0xffffffff823e91ec: ret 0xa737;
0xffffffff813c4f1b: ret 0xa739;
0xffffffff815dd1d2: ret 0xa73;
0xffffffff8242197a: ret 0xa73a;
0xffffffff82413215: ret 0xa73f;
0xffffffff82462ddf: ret 0xa741;
0xffffffff8230bab4: ret 0xa744;
0xffffffff815d1451: ret 0xa748;
0xffffffff81b54260: ret 0xa74;
0xffffffff822d86ce: ret 0xa74a;
0xffffffff822298fa: ret 0xa74b;
0xffffffff8171a660: ret 0xa750;
0xffffffff822d134c: ret 0xa759;
0xffffffff8197c347: ret 0xa75;
0xffffffff82378f59: ret 0xa764;
0xffffffff8255cd25: ret 0xa766;
0xffffffff81183c51: ret 0xa76;
0xffffffff8182cdab: ret 0xa76b;
0xffffffff822ae6b9: ret 0xa76e;
0xffffffff823a445a: ret 0xa76f;
0xffffffff8146a653: ret 0xa774;
0xffffffff81171d2f: ret 0xa77;
0xffffffff813c4f79: ret 0xa77b;
0xffffffff813ca792: ret 0xa77d;
0xffffffff8239856c: ret 0xa780;
0xffffffff82256c87: ret 0xa783;
0xffffffff8116a989: ret 0xa788;
0xffffffff8163edc5: ret 0xa78;
0xffffffff8238fbb1: ret 0xa78f;
0xffffffff8182cdf1: ret 0xa792;
0xffffffff825530ba: ret 0xa798;
0xffffffff81584e8d: ret 0xa7;
0xffffffff824f3471: ret 0xa7a9;
0xffffffff8236f975: ret 0xa7ad;
0xffffffff82482e28: ret 0xa7ae;
0xffffffff8228a4c6: ret 0xa7b3;
0xffffffff822a6373: ret 0xa7b4;
0xffffffff824193db: ret 0xa7b6;
0xffffffff82572ae3: ret 0xa7b9;
0xffffffff8182ce04: ret 0xa7bd;
0xffffffff824aa30f: ret 0xa7be;
0xffffffff819b8f0a: ret 0xa7c0;
0xffffffff82424341: ret 0xa7c5;
0xffffffff811fabc3: ret 0xa7c6;
0xffffffff822848f8: ret 0xa7ca;
0xffffffff813c5218: ret 0xa7d1;
0xffffffff822d84fc: ret 0xa7dd;
0xffffffff8182d2e8: ret 0xa7de;
0xffffffff834806bf: ret 0xa7e0;
0xffffffff82308f3a: ret 0xa7e3;
0xffffffff8252d2ec: ret 0xa7e7;
0xffffffff8155aad3: ret 0xa7e8;
0xffffffff815c412f: ret 0xa7eb;
0xffffffff8101a747: ret 0xa7f0;
0xffffffff82437d1c: ret 0xa7f2;
0xffffffff82320829: ret 0xa7f5;
0xffffffff8294f300: ret 0xa7f;
0xffffffff82279008: ret 0xa7fa;
0xffffffff835a8e7a: ret 0xa7fd;
0xffffffff822dd1ae: ret 0xa800;
0xffffffff810e9607: ret 0xa804;
0xffffffff811ff40a: ret 0xa805;
0xffffffff8228ac19: ret 0xa807;
0xffffffff8182e125: ret 0xa809;
0xffffffff81030a92: ret 0xa80;
0xffffffff823dfb32: ret 0xa80a;
0xffffffff817ffda0: ret 0xa80c;
0xffffffff8225f15e: ret 0xa80d;
0xffffffff81201e1a: ret 0xa811;
0xffffffff8227111f: ret 0xa814;
0xffffffff824763af: ret 0xa816;
0xffffffff813c5249: ret 0xa817;
0xffffffff82267ad4: ret 0xa822;
0xffffffff814713d3: ret 0xa824;
0xffffffff81b43bf6: ret 0xa828;
0xffffffff823e050b: ret 0xa82;
0xffffffff82403f51: ret 0xa82a;
0xffffffff815d08f8: ret 0xa82e;
0xffffffff8182e15d: ret 0xa831;
0xffffffff824266ae: ret 0xa832;
0xffffffff82270721: ret 0xa837;
0xffffffff8240c975: ret 0xa841;
0xffffffff8254f207: ret 0xa84d;
0xffffffff8235aac3: ret 0xa84e;
0xffffffff82301b98: ret 0xa858;
0xffffffff825db8a3: ret 0xa85;
0xffffffff82496a43: ret 0xa85e;
0xffffffff8182ced1: ret 0xa864;
0xffffffff813c5508: ret 0xa86a;
0xffffffff824c3aae: ret 0xa86d;
0xffffffff8227af79: ret 0xa870;
0xffffffff8182d6f5: ret 0xa871;
0xffffffff811ea955: ret 0xa874;
0xffffffff822d44e8: ret 0xa876;
0xffffffff8238925c: ret 0xa877;
0xffffffff8238925d: ret 0xa877;
0xffffffff82373712: ret 0xa878;
0xffffffff82376034: ret 0xa87a;
0xffffffff824eb3c8: ret 0xa87b;
0xffffffff822e8103: ret 0xa881;
0xffffffff82373210: ret 0xa882;
0xffffffff81ba33ef: ret 0xa889;
0xffffffff8163ec7e: ret 0xa88;
0xffffffff8247138e: ret 0xa88b;
0xffffffff82377685: ret 0xa88c;
0xffffffff825ccf60: ret 0xa88f;
0xffffffff8225ff88: ret 0xa891;
0xffffffff8230e183: ret 0xa893;
0xffffffff8225fffe: ret 0xa896;
0xffffffff8182d769: ret 0xa897;
0xffffffff811f600a: ret 0xa899;
0xffffffff81738299: ret 0xa89;
0xffffffff81022642: ret 0xa8;
0xffffffff8245b4b8: ret 0xa8a2;
0xffffffff8245b4d8: ret 0xa8a7;
0xffffffff81b91f9b: ret 0xa8a8;
0xffffffff8251be36: ret 0xa8ac;
0xffffffff824bc22a: ret 0xa8ad;
0xffffffff813c52a5: ret 0xa8b7;
0xffffffff8182d7cd: ret 0xa8b9;
0xffffffff824c7b26: ret 0xa8b;
0xffffffff8222ba55: ret 0xa8c3;
0xffffffff823f00a3: ret 0xa8c9;
0xffffffff82477640: ret 0xa8c;
0xffffffff82521867: ret 0xa8d0;
0xffffffff811f5d6a: ret 0xa8d2;
0xffffffff824116f7: ret 0xa8d5;
0xffffffff822fded8: ret 0xa8e0;
0xffffffff822c3e21: ret 0xa8e2;
0xffffffff824f65ba: ret 0xa8e4;
0xffffffff822eee4a: ret 0xa8e7;
0xffffffff81012672: ret 0xa8e8;
0xffffffff82253b19: ret 0xa8e9;
0xffffffff8100e3ba: ret 0xa8e;
0xffffffff8246c165: ret 0xa8ea;
0xffffffff81191994: ret 0xa8eb;
0xffffffff8182d7ec: ret 0xa8ed;
0xffffffff813f737b: ret 0xa8f0;
0xffffffff8222e968: ret 0xa8f2;
0xffffffff8229a9ca: ret 0xa8f3;
0xffffffff8267d25f: ret 0xa8f4;
0xffffffff82250629: ret 0xa8f8;
0xffffffff813c52d6: ret 0xa8fd;
0xffffffff8159dfda: ret 0xa8fe;
0xffffffff8225e5a0: ret 0xa8ff;
0xffffffff822fd4eb: ret 0xa901;
0xffffffff811abb55: ret 0xa901;
0xffffffff817cd366: ret 0xa908;
0xffffffff818ea5ca: ret 0xa909;
0xffffffff8232272f: ret 0xa90c;
0xffffffff82288319: ret 0xa90e;
0xffffffff8182d7a9: ret 0xa90f;
0xffffffff823c7968: ret 0xa910;
0xffffffff8234558d: ret 0xa913;
0xffffffff82455d6a: ret 0xa916;
0xffffffff823b866c: ret 0xa91a;
0xffffffff818ea62b: ret 0xa91c;
0xffffffff825173ba: ret 0xa91e;
0xffffffff8248f0a0: ret 0xa922;
0xffffffff8348c29d: ret 0xa92a;
0xffffffff8182d6ba: ret 0xa92c;
0xffffffff823763d6: ret 0xa92e;
0xffffffff823763d5: ret 0xa92e;
0xffffffff818ea6aa: ret 0xa92f;
0xffffffff822b963f: ret 0xa933;
0xffffffff8238c332: ret 0xa938;
0xffffffff82493f33: ret 0xa93b;
0xffffffff82498a08: ret 0xa93c;
0xffffffff81b92179: ret 0xa940;
0xffffffff8243f553: ret 0xa947;
0xffffffff8246249f: ret 0xa948;
0xffffffff822fdb98: ret 0xa94f;
0xffffffff813c551b: ret 0xa950;
0xffffffff817f6c8a: ret 0xa951;
0xffffffff8245262f: ret 0xa953;
0xffffffff82355f3a: ret 0xa954;
0xffffffff82554a48: ret 0xa957;
0xffffffff823bbcfa: ret 0xa961;
0xffffffff823944e9: ret 0xa962;
0xffffffff8226ca28: ret 0xa966;
0xffffffff8158a97a: ret 0xa970;
0xffffffff82280cdb: ret 0xa978;
0xffffffff8182e0b0: ret 0xa979;
0xffffffff8163edae: ret 0xa97;
0xffffffff824a538d: ret 0xa97b;
0xffffffff822f4074: ret 0xa97d;
0xffffffff817ba91c: ret 0xa980;
0xffffffff82259ce6: ret 0xa98a;
0xffffffff82411773: ret 0xa98e;
0xffffffff8182e00f: ret 0xa995;
0xffffffff82546262: ret 0xa99a;
0xffffffff813c5332: ret 0xa99d;
0xffffffff8344197c: ret 0xa99e;
0xffffffff8237e117: ret 0xa99f;
0xffffffff8119328b: ret 0xa9;
0xffffffff834991bc: ret 0xa9a0;
0xffffffff82479e48: ret 0xa9a4;
0xffffffff822d12dc: ret 0xa9b0;
0xffffffff8223d157: ret 0xa9b3;
0xffffffff8253e631: ret 0xa9b4;
0xffffffff8253d4b5: ret 0xa9b8;
0xffffffff8347e9c6: ret 0xa9bf;
0xffffffff8182e039: ret 0xa9c1;
0xffffffff811e6b1a: ret 0xa9c4;
0xffffffff823586d3: ret 0xa9c9;
0xffffffff82563f3a: ret 0xa9c;
0xffffffff82445b00: ret 0xa9ca;
0xffffffff811cbb0a: ret 0xa9cf;
0xffffffff811e589a: ret 0xa9d7;
0xffffffff82571930: ret 0xa9d;
0xffffffff824e3def: ret 0xa9dd;
0xffffffff823cda06: ret 0xa9e1;
0xffffffff813c5363: ret 0xa9e2;
0xffffffff823dd1ed: ret 0xa9e3;
0xffffffff81193491: ret 0xa9e8;
0xffffffff8235e43c: ret 0xa9ea;
0xffffffff822bc508: ret 0xa9ec;
0xffffffff8240e392: ret 0xa9ee;
0xffffffff8226d63d: ret 0xa9f7;
0xffffffff815708ca: ret 0xa9f8;
0xffffffff8182de47: ret 0xa9f9;
0xffffffff835a8e52: ret 0xa9fd;
0xffffffff82287592: ret 0xa9fe;
0xffffffff810402ca: ret 0xa;
0xffffffff8235b4ae: ret 0xaa05;
0xffffffff8226ee0d: ret 0xaa06;
0xffffffff8228a6e8: ret 0xaa07;
0xffffffff823caa4f: ret 0xaa0;
0xffffffff8231323a: ret 0xaa16;
0xffffffff8253ccdc: ret 0xaa17;
0xffffffff8250d9c2: ret 0xaa1e;
0xffffffff825239c3: ret 0xaa21;
0xffffffff8223a232: ret 0xaa24;
0xffffffff8223a231: ret 0xaa24;
0xffffffff8233f24c: ret 0xaa25;
0xffffffff8247ab6e: ret 0xaa28;
0xffffffff8182e526: ret 0xaa2e;
0xffffffff824562eb: ret 0xaa30;
0xffffffff813c54f5: ret 0xaa34;
0xffffffff822aaa59: ret 0xaa35;
0xffffffff8222a21c: ret 0xaa36;
0xffffffff811c99b4: ret 0xaa40;
0xffffffff8118e33e: ret 0xaa45;
0xffffffff81c4e24f: ret 0xaa46;
0xffffffff8226ab07: ret 0xaa47;
0xffffffff824182d3: ret 0xaa4;
0xffffffff817076e7: ret 0xaa59;
0xffffffff822cff0b: ret 0xaa5a;
0xffffffff8159aa6a: ret 0xaa60;
0xffffffff824a3e0f: ret 0xaa62;
0xffffffff8238be63: ret 0xaa6;
0xffffffff823af33d: ret 0xaa6b;
0xffffffff8349c840: ret 0xaa70;
0xffffffff824c3958: ret 0xaa74;
0xffffffff81185ae6: ret 0xaa77;
0xffffffff8253d50d: ret 0xaa79;
0xffffffff824262a8: ret 0xaa7;
0xffffffff822a479d: ret 0xaa7a;
0xffffffff8245a60b: ret 0xaa7a;
0xffffffff823cad49: ret 0xaa7e;
0xffffffff813c5464: ret 0xaa80;
0xffffffff815d25b7: ret 0xaa81;
0xffffffff82309616: ret 0xaa82;
0xffffffff82387363: ret 0xaa85;
0xffffffff817077f5: ret 0xaa86;
0xffffffff81339f19: ret 0xaa8;
0xffffffff8222831d: ret 0xaa8a;
0xffffffff823887d2: ret 0xaa8b;
0xffffffff823887d1: ret 0xaa8b;
0xffffffff81b9c8dc: ret 0xaa90;
0xffffffff823d4acd: ret 0xaa91;
0xffffffff810c5053: ret 0xaa98;
0xffffffff8240a70f: ret 0xaa9d;
0xffffffff811bc2bb: ret 0xaa;
0xffffffff8242d549: ret 0xaaaa;
0xffffffff824188ed: ret 0xaaac;
0xffffffff82307be4: ret 0xaaad;
0xffffffff8254a8fd: ret 0xaaae;
0xffffffff8155613a: ret 0xaaaf;
0xffffffff811c9a24: ret 0xaab0;
0xffffffff810d5d07: ret 0xaab4;
0xffffffff822fcf7f: ret 0xaab6;
0xffffffff82566c51: ret 0xaaba;
0xffffffff810d884a: ret 0xaac0;
0xffffffff813c5591: ret 0xaac1;
0xffffffff822e7c45: ret 0xaac5;
0xffffffff82487649: ret 0xaade;
0xffffffff824324c4: ret 0xaae1;
0xffffffff824161a4: ret 0xaae2;
0xffffffff8146d4b0: ret 0xaae8;
0xffffffff8234662d: ret 0xaae;
0xffffffff826e60e6: ret 0xaaf0;
0xffffffff822ff7ac: ret 0xaaf9;
0xffffffff822c879b: ret 0xaafb;
0xffffffff82343335: ret 0xab04;
0xffffffff8222e3dc: ret 0xab05;
0xffffffff8155f3ca: ret 0xab0d;
0xffffffff823579ab: ret 0xab17;
0xffffffff817a6c44: ret 0xab18;
0xffffffff8224b9ee: ret 0xab1d;
0xffffffff8224b9ed: ret 0xab1d;
0xffffffff811c9aa4: ret 0xab20;
0xffffffff82306ae0: ret 0xab24;
0xffffffff823ac929: ret 0xab28;
0xffffffff813bc759: ret 0xab2f;
0xffffffff82402040: ret 0xab32;
0xffffffff8242bfe0: ret 0xab33;
0xffffffff823625b6: ret 0xab35;
0xffffffff815d3c6a: ret 0xab38;
0xffffffff82349d33: ret 0xab39;
0xffffffff817a6ca5: ret 0xab3b;
0xffffffff822e9072: ret 0xab4f;
0xffffffff824d9ff5: ret 0xab50;
0xffffffff824040e9: ret 0xab5d;
0xffffffff8106c8a8: ret 0xab60;
0xffffffff82538685: ret 0xab64;
0xffffffff8237d1e0: ret 0xab65;
0xffffffff82356603: ret 0xab69;
0xffffffff824dbed3: ret 0xab6b;
0xffffffff8250b4fd: ret 0xab6c;
0xffffffff822d89a9: ret 0xab71;
0xffffffff81248174: ret 0xab75;
0xffffffff819676a1: ret 0xab76;
0xffffffff82479f10: ret 0xab7e;
0xffffffff8256d35a: ret 0xab80;
0xffffffff8250f074: ret 0xab81;
0xffffffff8247ccf6: ret 0xab85;
0xffffffff82334f44: ret 0xab86;
0xffffffff822c308e: ret 0xab89;
0xffffffff8243dfc0: ret 0xab8;
0xffffffff818b90c4: ret 0xab8b;
0xffffffff8182f395: ret 0xab8d;
0xffffffff823c904e: ret 0xab8e;
0xffffffff811c9b4f: ret 0xab90;
0xffffffff8228c1ec: ret 0xab93;
0xffffffff82473934: ret 0xab99;
0xffffffff817babf5: ret 0xab9a;
0xffffffff82463c67: ret 0xab9b;
0xffffffff816a200a: ret 0xab9c;
0xffffffff810055d2: ret 0xab;
0xffffffff811bbf56: ret 0xaba1;
0xffffffff8237190d: ret 0xaba3;
0xffffffff8242b11d: ret 0xaba7;
0xffffffff823252f5: ret 0xabaa;
0xffffffff82244089: ret 0xabad;
0xffffffff8224408a: ret 0xabad;
0xffffffff81057d67: ret 0xabb7;
0xffffffff8347c069: ret 0xabb8;
0xffffffff822dd7d3: ret 0xabb9;
0xffffffff82283c75: ret 0xabbd;
0xffffffff83479ac5: ret 0xabc0;
0xffffffff817083ae: ret 0xabc3;
0xffffffff824dd51d: ret 0xabc4;
0xffffffff824dd51e: ret 0xabc4;
0xffffffff822d7f65: ret 0xabc5;
0xffffffff823633d1: ret 0xabcc;
0xffffffff8247c579: ret 0xabcd;
0xffffffff835a2f42: ret 0xabce;
0xffffffff815fa16a: ret 0xabd1;
0xffffffff82432b20: ret 0xabd2;
0xffffffff8237a575: ret 0xabd7;
0xffffffff8123807a: ret 0xabd;
0xffffffff822b7b22: ret 0xabda;
0xffffffff822b7b23: ret 0xabda;
0xffffffff8255e6d2: ret 0xabdf;
0xffffffff816cab55: ret 0xabe0;
0xffffffff8241a5db: ret 0xabe1;
0xffffffff8242d677: ret 0xabe3;
0xffffffff824dc1e2: ret 0xabe8;
0xffffffff8116aecf: ret 0xabe8;
0xffffffff814d309a: ret 0xabea;
0xffffffff822ac02f: ret 0xabed;
0xffffffff82395a8b: ret 0xabee;
0xffffffff82446a65: ret 0xabf1;
0xffffffff817ca62a: ret 0xabf3;
0xffffffff824c04ca: ret 0xabf5;
0xffffffff81057d92: ret 0xabf6;
0xffffffff819156a1: ret 0xabf;
0xffffffff8236d2d2: ret 0xabfa;
0xffffffff8228ff84: ret 0xabfb;
0xffffffff8182e809: ret 0xabfd;
0xffffffff82253923: ret 0xabff;
0xffffffff811c9c0f: ret 0xac00;
0xffffffff813c7036: ret 0xac06;
0xffffffff81057d9f: ret 0xac07;
0xffffffff8240d957: ret 0xac09;
0xffffffff814cafc7: ret 0xac0;
0xffffffff82260490: ret 0xac0;
0xffffffff82309eb1: ret 0xac0c;
0xffffffff816c49ec: ret 0xac0f;
0xffffffff825195aa: ret 0xac14;
0xffffffff82300ba9: ret 0xac18;
0xffffffff81057db7: ret 0xac1e;
0xffffffff824650ff: ret 0xac24;
0xffffffff81339e91: ret 0xac2;
0xffffffff822d7a59: ret 0xac39;
0xffffffff822c5325: ret 0xac3;
0xffffffff82387696: ret 0xac3b;
0xffffffff8223e660: ret 0xac43;
0xffffffff823cb191: ret 0xac44;
0xffffffff8223afc8: ret 0xac45;
0xffffffff814647f6: ret 0xac46;
0xffffffff8232619c: ret 0xac47;
0xffffffff82560d14: ret 0xac4;
0xffffffff8160f4aa: ret 0xac4c;
0xffffffff8235a306: ret 0xac55;
0xffffffff82572323: ret 0xac57;
0xffffffff82505453: ret 0xac5b;
0xffffffff823b92dd: ret 0xac5d;
0xffffffff82548996: ret 0xac62;
0xffffffff82483fa3: ret 0xac63;
0xffffffff834943f9: ret 0xac67;
0xffffffff834943e2: ret 0xac6d;
0xffffffff822f8db6: ret 0xac6f;
0xffffffff811c9caa: ret 0xac70;
0xffffffff814592b4: ret 0xac74;
0xffffffff8249127a: ret 0xac77;
0xffffffff82227ea8: ret 0xac79;
0xffffffff82954d34: ret 0xac7;
0xffffffff8247142a: ret 0xac7a;
0xffffffff822d2d0b: ret 0xac7b;
0xffffffff825d15fa: ret 0xac82;
0xffffffff81bbfae9: ret 0xac86;
0xffffffff823e621e: ret 0xac8a;
0xffffffff823f10a8: ret 0xac90;
0xffffffff8235ae9b: ret 0xac92;
0xffffffff8240876d: ret 0xac97;
0xffffffff81ab74f1: ret 0xac;
0xffffffff815cc63e: ret 0xaca1;
0xffffffff813c7467: ret 0xaca5;
0xffffffff815d5c60: ret 0xacac;
0xffffffff8223b0d3: ret 0xacb7;
0xffffffff82275957: ret 0xacb;
0xffffffff82447c41: ret 0xacbb;
0xffffffff824a39ac: ret 0xacbd;
0xffffffff8249e0ad: ret 0xacc2;
0xffffffff822c6ddb: ret 0xacc4;
0xffffffff822e7035: ret 0xaccb;
0xffffffff82489e98: ret 0xacce;
0xffffffff82530ee4: ret 0xacd8;
0xffffffff82520810: ret 0xacd;
0xffffffff82389a15: ret 0xacdf;
0xffffffff811c9d3a: ret 0xace0;
0xffffffff824e7487: ret 0xace1;
0xffffffff8115c76a: ret 0xace8;
0xffffffff8188df07: ret 0xace9;
0xffffffff823e6e65: ret 0xace;
0xffffffff82680f2c: ret 0xacf0;
0xffffffff823b1539: ret 0xacf2;
0xffffffff8232446b: ret 0xacf5;
0xffffffff82449784: ret 0xacf7;
0xffffffff8244c0e2: ret 0xacfb;
0xffffffff823251da: ret 0xad03;
0xffffffff8232365a: ret 0xad04;
0xffffffff813c7c45: ret 0xad06;
0xffffffff810d4a88: ret 0xad12;
0xffffffff8240a0ae: ret 0xad15;
0xffffffff8240d0fd: ret 0xad16;
0xffffffff82324ecc: ret 0xad17;
0xffffffff8247956e: ret 0xad1f;
0xffffffff82384572: ret 0xad20;
0xffffffff822d5a44: ret 0xad21;
0xffffffff825013e5: ret 0xad22;
0xffffffff824e86da: ret 0xad26;
0xffffffff822bda68: ret 0xad2c;
0xffffffff823b6282: ret 0xad2f;
0xffffffff818d1a37: ret 0xad34;
0xffffffff823c4ba6: ret 0xad35;
0xffffffff82380adb: ret 0xad38;
0xffffffff824b08a4: ret 0xad3c;
0xffffffff8246b99c: ret 0xad3f;
0xffffffff813c7e97: ret 0xad47;
0xffffffff810d8114: ret 0xad48;
0xffffffff810d81c3: ret 0xad49;
0xffffffff810daf62: ret 0xad4a;
0xffffffff834491b9: ret 0xad4b;
0xffffffff811c9dca: ret 0xad50;
0xffffffff8251b497: ret 0xad53;
0xffffffff824e6c11: ret 0xad57;
0xffffffff822d518a: ret 0xad5;
0xffffffff824360e3: ret 0xad5c;
0xffffffff822e7fa5: ret 0xad63;
0xffffffff82300fa8: ret 0xad69;
0xffffffff8230d2b6: ret 0xad6d;
0xffffffff8256aba1: ret 0xad6e;
0xffffffff810ddbf1: ret 0xad78;
0xffffffff810de466: ret 0xad79;
0xffffffff82524a44: ret 0xad7b;
0xffffffff82520d6e: ret 0xad82;
0xffffffff822b4d8b: ret 0xad87;
0xffffffff810e1182: ret 0xad88;
0xffffffff813c82a6: ret 0xad8f;
0xffffffff824e606f: ret 0xad93;
0xffffffff822ec4c5: ret 0xad94;
0xffffffff810e15f0: ret 0xad98;
0xffffffff822f8325: ret 0xad9a;
0xffffffff810e1640: ret 0xad9c;
0xffffffff81c022ba: ret 0xad9e;
0xffffffff82542f11: ret 0xad9f;
0xffffffff811993b8: ret 0xad;
0xffffffff82259911: ret 0xada1;
0xffffffff825171fb: ret 0xada3;
0xffffffff822d9366: ret 0xada5;
0xffffffff82496c3b: ret 0xada;
0xffffffff823a8721: ret 0xadb4;
0xffffffff822a28fa: ret 0xadb8;
0xffffffff8250a98a: ret 0xadbb;
0xffffffff8225cad2: ret 0xadbc;
0xffffffff82549b65: ret 0xadbe;
0xffffffff811c9e64: ret 0xadc0;
0xffffffff813c81f6: ret 0xadc3;
0xffffffff823ce633: ret 0xadc6;
0xffffffff82259b38: ret 0xadc7;
0xffffffff8170a0f4: ret 0xadc8;
0xffffffff8253142f: ret 0xadcb;
0xffffffff822e5472: ret 0xadcc;
0xffffffff8242502c: ret 0xadcf;
0xffffffff8224fe36: ret 0xadd1;
0xffffffff82552780: ret 0xadd4;
0xffffffff824f195a: ret 0xadd5;
0xffffffff8222b892: ret 0xadd7;
0xffffffff81738332: ret 0xadd;
0xffffffff8242403a: ret 0xadda;
0xffffffff81b71aea: ret 0xaddd;
0xffffffff81be1dfa: ret 0xadde;
0xffffffff824f7bcd: ret 0xade2;
0xffffffff82538731: ret 0xade5;
0xffffffff8133f34d: ret 0xade8;
0xffffffff817f735d: ret 0xade9;
0xffffffff82256834: ret 0xadec;
0xffffffff825009c4: ret 0xaded;
0xffffffff824c23ab: ret 0xadf0;
0xffffffff824ee749: ret 0xadf9;
0xffffffff826c115a: ret 0xadfa;
0xffffffff81c76603: ret 0xae01;
0xffffffff822d5102: ret 0xae03;
0xffffffff823897a8: ret 0xae05;
0xffffffff82379d84: ret 0xae0c;
0xffffffff81c766c0: ret 0xae0e;
0xffffffff82533fc3: ret 0xae11;
0xffffffff824e133b: ret 0xae12;
0xffffffff822b433f: ret 0xae13;
0xffffffff8255bb57: ret 0xae15;
0xffffffff81c766ed: ret 0xae1d;
0xffffffff811c9ed4: ret 0xae20;
0xffffffff813c81c2: ret 0xae22;
0xffffffff824fbd2a: ret 0xae24;
0xffffffff824fbd2b: ret 0xae24;
0xffffffff81c76672: ret 0xae28;
0xffffffff822ec084: ret 0xae29;
0xffffffff811939cf: ret 0xae30;
0xffffffff81bf8cba: ret 0xae34;
0xffffffff815d9c49: ret 0xae38;
0xffffffff82249597: ret 0xae3;
0xffffffff813479bb: ret 0xae3d;
0xffffffff822bc58d: ret 0xae3e;
0xffffffff8237a3e6: ret 0xae43;
0xffffffff82484c6c: ret 0xae44;
0xffffffff82274243: ret 0xae45;
0xffffffff82434e74: ret 0xae49;
0xffffffff8185912e: ret 0xae4d;
0xffffffff822fb261: ret 0xae5b;
0xffffffff817aa15f: ret 0xae5c;
0xffffffff824096e5: ret 0xae5f;
0xffffffff8242e9c8: ret 0xae62;
0xffffffff82323db9: ret 0xae69;
0xffffffff819da418: ret 0xae72;
0xffffffff816fcd10: ret 0xae76;
0xffffffff8232579c: ret 0xae7;
0xffffffff8245def9: ret 0xae7a;
0xffffffff8197d7dc: ret 0xae7b;
0xffffffff823ebdf8: ret 0xae7e;
0xffffffff8113aeb8: ret 0xae80;
0xffffffff8345f669: ret 0xae84;
0xffffffff815ced6a: ret 0xae85;
0xffffffff8243995a: ret 0xae88;
0xffffffff824b1c4c: ret 0xae89;
0xffffffff81030520: ret 0xae8;
0xffffffff8225e348: ret 0xae8a;
0xffffffff823d5f7b: ret 0xae8d;
0xffffffff822bcf6e: ret 0xae8e;
0xffffffff8245c95b: ret 0xae90;
0xffffffff8197d805: ret 0xae91;
0xffffffff834a6fd7: ret 0xae93;
0xffffffff8345f6ac: ret 0xae96;
0xffffffff8254c063: ret 0xae9a;
0xffffffff82236ab0: ret 0xae9c;
0xffffffff823d6716: ret 0xae9d;
0xffffffff8346a64b: ret 0xae9e;
0xffffffff8224057b: ret 0xaea0;
0xffffffff8223eabb: ret 0xaea7;
0xffffffff8345f6dd: ret 0xaea8;
0xffffffff82501f06: ret 0xaea9;
0xffffffff824496f7: ret 0xaea;
0xffffffff8244a5e5: ret 0xaeaa;
0xffffffff824bd7d2: ret 0xaeae;
0xffffffff822c4868: ret 0xaeb3;
0xffffffff823816e7: ret 0xaeb5;
0xffffffff82518ac4: ret 0xaeb9;
0xffffffff811563c6: ret 0xaeb;
0xffffffff825dbb2b: ret 0xaebc;
0xffffffff823d1806: ret 0xaebd;
0xffffffff8345f71c: ret 0xaebe;
0xffffffff82436a2c: ret 0xaebf;
0xffffffff8234019b: ret 0xaec0;
0xffffffff822e313f: ret 0xaec2;
0xffffffff822f2ff1: ret 0xaec4;
0xffffffff8255ffd7: ret 0xaec5;
0xffffffff8239527f: ret 0xaec9;
0xffffffff825dbba2: ret 0xaed0;
0xffffffff823037c2: ret 0xaed5;
0xffffffff813c8493: ret 0xaed6;
0xffffffff8184a416: ret 0xaed;
0xffffffff81780c8a: ret 0xaedb;
0xffffffff8345f629: ret 0xaedd;
0xffffffff824ef891: ret 0xaee4;
0xffffffff8240f6df: ret 0xaee5;
0xffffffff811b539c: ret 0xaee8;
0xffffffff82303331: ret 0xaee;
0xffffffff823c847b: ret 0xaeea;
0xffffffff811796fa: ret 0xaeeb;
0xffffffff81190d0a: ret 0xaeec;
0xffffffff822bdae6: ret 0xaeee;
0xffffffff8152ae8a: ret 0xaef0;
0xffffffff825500ff: ret 0xaef1;
0xffffffff8170a27a: ret 0xaef6;
0xffffffff825307db: ret 0xaefc;
0xffffffff82497f4b: ret 0xaefe;
0xffffffff82251e9c: ret 0xaf03;
0xffffffff823e9a43: ret 0xaf08;
0xffffffff817c914a: ret 0xaf0d;
0xffffffff810f9693: ret 0xaf0f;
0xffffffff8233c46c: ret 0xaf11;
0xffffffff823ddaaa: ret 0xaf12;
0xffffffff817be132: ret 0xaf14;
0xffffffff82352f93: ret 0xaf17;
0xffffffff824f3356: ret 0xaf1a;
0xffffffff823efe08: ret 0xaf1c;
0xffffffff824c8350: ret 0xaf1f;
0xffffffff822d1064: ret 0xaf21;
0xffffffff813c84b6: ret 0xaf24;
0xffffffff8242fde1: ret 0xaf29;
0xffffffff824c92c4: ret 0xaf2;
0xffffffff8233284b: ret 0xaf2c;
0xffffffff822f81f2: ret 0xaf31;
0xffffffff8249c879: ret 0xaf32;
0xffffffff822b2a7c: ret 0xaf33;
0xffffffff815dfd6f: ret 0xaf34;
0xffffffff8197d8c5: ret 0xaf39;
0xffffffff823df560: ret 0xaf3a;
0xffffffff8233c8d9: ret 0xaf3f;
0xffffffff822a22c2: ret 0xaf45;
0xffffffff82274f5e: ret 0xaf4a;
0xffffffff822bf447: ret 0xaf4b;
0xffffffff82386034: ret 0xaf4e;
0xffffffff822e1ea5: ret 0xaf52;
0xffffffff824ffb85: ret 0xaf55;
0xffffffff81181d4c: ret 0xaf5a;
0xffffffff8118d5aa: ret 0xaf5b;
0xffffffff822bba1e: ret 0xaf65;
0xffffffff8254d378: ret 0xaf6a;
0xffffffff8256b430: ret 0xaf6e;
0xffffffff82672a5d: ret 0xaf74;
0xffffffff823e9a96: ret 0xaf75;
0xffffffff81967740: ret 0xaf76;
0xffffffff82235321: ret 0xaf7c;
0xffffffff823a2c21: ret 0xaf7f;
0xffffffff8246ad5a: ret 0xaf83;
0xffffffff824f5aee: ret 0xaf85;
0xffffffff823e96a3: ret 0xaf86;
0xffffffff816d2cbf: ret 0xaf8b;
0xffffffff82520b4e: ret 0xaf8c;
0xffffffff8103f302: ret 0xaf8d;
0xffffffff8239cd9a: ret 0xaf8e;
0xffffffff8244ccf9: ret 0xaf92;
0xffffffff81507c3a: ret 0xaf94;
0xffffffff823eb06e: ret 0xaf99;
0xffffffff8118286c: ret 0xaf;
0xffffffff8349c85b: ret 0xafa0;
0xffffffff8344da33: ret 0xafa1;
0xffffffff81738456: ret 0xafa;
0xffffffff8232bd53: ret 0xafae;
0xffffffff82321e2a: ret 0xafaf;
0xffffffff8246f14b: ret 0xafb1;
0xffffffff823c4435: ret 0xafb;
0xffffffff8247cef7: ret 0xafc0;
0xffffffff8233788c: ret 0xafc5;
0xffffffff824f4690: ret 0xafc6;
0xffffffff813c8fdc: ret 0xafd4;
0xffffffff823dccc4: ret 0xafd8;
0xffffffff816f500b: ret 0xafe8;
0xffffffff81339f62: ret 0xafe;
0xffffffff825404ae: ret 0xafea;
0xffffffff81455ff3: ret 0xaff0;
0xffffffff822ae21a: ret 0xaffc;
0xffffffff82541794: ret 0xaffe;
0xffffffff8264ffd9: ret 0xafff;
0xffffffff826501a5: ret 0xafff;
0xffffffff8264ffda: ret 0xafff;
0xffffffff82650185: ret 0xafff;
0xffffffff81002d08: ret 0xb000;
0xffffffff811d8023: ret 0xb004;
0xffffffff810b0abc: ret 0xb009;
0xffffffff823534b3: ret 0xb01b;
0xffffffff815d29da: ret 0xb01c;
0xffffffff813c5779: ret 0xb023;
0xffffffff819a0ee1: ret 0xb026;
0xffffffff824a53ec: ret 0xb02b;
0xffffffff82500835: ret 0xb032;
0xffffffff8224f7ba: ret 0xb033;
0xffffffff823d542d: ret 0xb037;
0xffffffff82411516: ret 0xb03d;
0xffffffff8229e177: ret 0xb03e;
0xffffffff83427ff1: ret 0xb040;
0xffffffff822bccf6: ret 0xb044;
0xffffffff8232e0f8: ret 0xb04;
0xffffffff8230d81e: ret 0xb04b;
0xffffffff8241904a: ret 0xb050;
0xffffffff822fc30f: ret 0xb052;
0xffffffff813c57b6: ret 0xb05c;
0xffffffff8250640a: ret 0xb061;
0xffffffff82397d69: ret 0xb065;
0xffffffff8140afae: ret 0xb070;
0xffffffff822886dd: ret 0xb074;
0xffffffff8170a8c6: ret 0xb078;
0xffffffff8230f4de: ret 0xb07a;
0xffffffff822ae369: ret 0xb07b;
0xffffffff824ea8d0: ret 0xb07c;
0xffffffff822aed9a: ret 0xb07d;
0xffffffff8111db35: ret 0xb084;
0xffffffff81c506d0: ret 0xb085;
0xffffffff823af1b5: ret 0xb086;
0xffffffff81006931: ret 0xb088;
0xffffffff82519c8a: ret 0xb090;
0xffffffff813c58fe: ret 0xb092;
0xffffffff822e5dc2: ret 0xb094;
0xffffffff823339fb: ret 0xb099;
0xffffffff8222c38d: ret 0xb09d;
0xffffffff815351e2: ret 0xb0;
0xffffffff8235e998: ret 0xb0a1;
0xffffffff82322f1c: ret 0xb0a5;
0xffffffff8235a0bc: ret 0xb0ab;
0xffffffff81778e23: ret 0xb0b0;
0xffffffff824ee23a: ret 0xb0b8;
0xffffffff814f543a: ret 0xb0bc;
0xffffffff8189cee6: ret 0xb0bf;
0xffffffff82299d69: ret 0xb0c5;
0xffffffff813c5a13: ret 0xb0c6;
0xffffffff822a187b: ret 0xb0c8;
0xffffffff8239bda4: ret 0xb0c;
0xffffffff815dbf88: ret 0xb0cb;
0xffffffff824130fb: ret 0xb0cf;
0xffffffff8255a302: ret 0xb0d0;
0xffffffff824e384f: ret 0xb0d7;
0xffffffff82285b15: ret 0xb0dd;
0xffffffff82438aa2: ret 0xb0e3;
0xffffffff823d3558: ret 0xb0e5;
0xffffffff82267b0d: ret 0xb0e6;
0xffffffff816f530a: ret 0xb0e8;
0xffffffff812088a9: ret 0xb0e9;
0xffffffff8227b5b6: ret 0xb0e;
0xffffffff834f01aa: ret 0xb0ea;
0xffffffff8229e7a7: ret 0xb0f4;
0xffffffff813c5a2e: ret 0xb0f5;
0xffffffff8191eaed: ret 0xb0f6;
0xffffffff810d476d: ret 0xb0f;
0xffffffff8342e2f7: ret 0xb0fd;
0xffffffff8200d45e: ret 0xb0ff;
0xffffffff810520b5: ret 0xb100;
0xffffffff81378fe0: ret 0xb101;
0xffffffff811506ca: ret 0xb102;
0xffffffff8237d406: ret 0xb103;
0xffffffff81007175: ret 0xb108;
0xffffffff822376c1: ret 0xb10;
0xffffffff824d0ee8: ret 0xb10a;
0xffffffff82284144: ret 0xb10e;
0xffffffff814a55bc: ret 0xb110;
0xffffffff824c87a8: ret 0xb111;
0xffffffff82465928: ret 0xb122;
0xffffffff814fdaca: ret 0xb126;
0xffffffff82230e68: ret 0xb12c;
0xffffffff82230e69: ret 0xb12c;
0xffffffff82494999: ret 0xb12d;
0xffffffff81006c1c: ret 0xb130;
0xffffffff813c5b2d: ret 0xb139;
0xffffffff8184a424: ret 0xb13;
0xffffffff818ba7e1: ret 0xb140;
0xffffffff8235cfa8: ret 0xb141;
0xffffffff82499c3a: ret 0xb143;
0xffffffff8116a9da: ret 0xb14f;
0xffffffff82358701: ret 0xb150;
0xffffffff823b5fcd: ret 0xb152;
0xffffffff8244e67a: ret 0xb15c;
0xffffffff82509014: ret 0xb164;
0xffffffff813c5b4a: ret 0xb166;
0xffffffff8116c61a: ret 0xb169;
0xffffffff8295b8d0: ret 0xb16;
0xffffffff82242f68: ret 0xb171;
0xffffffff813c5b80: ret 0xb178;
0xffffffff825d9289: ret 0xb179;
0xffffffff822abcfc: ret 0xb17e;
0xffffffff822ef544: ret 0xb182;
0xffffffff8244832b: ret 0xb186;
0xffffffff822dad64: ret 0xb189;
0xffffffff81831aa6: ret 0xb18b;
0xffffffff813c5a44: ret 0xb18e;
0xffffffff824db89c: ret 0xb18f;
0xffffffff824b5415: ret 0xb191;
0xffffffff8116971a: ret 0xb198;
0xffffffff822d5f76: ret 0xb19a;
0xffffffff8170b99a: ret 0xb19d;
0xffffffff81163703: ret 0xb1;
0xffffffff82331840: ret 0xb1a0;
0xffffffff81168e1a: ret 0xb1a1;
0xffffffff82432536: ret 0xb1a2;
0xffffffff813c59d1: ret 0xb1ab;
0xffffffff8243148f: ret 0xb1b1;
0xffffffff824c67a7: ret 0xb1b2;
0xffffffff81b00e1d: ret 0xb1b6;
0xffffffff8105bcda: ret 0xb1b8;
0xffffffff81831ce7: ret 0xb1bd;
0xffffffff8105bd5f: ret 0xb1c0;
0xffffffff82301ca0: ret 0xb1c2;
0xffffffff82270866: ret 0xb1c6;
0xffffffff8105bd33: ret 0xb1c8;
0xffffffff811665ca: ret 0xb1ca;
0xffffffff8251c2bc: ret 0xb1cd;
0xffffffff813c5aff: ret 0xb1d2;
0xffffffff81738547: ret 0xb1d;
0xffffffff82480d74: ret 0xb1da;
0xffffffff82456df9: ret 0xb1db;
0xffffffff8232fad7: ret 0xb1df;
0xffffffff823f19ec: ret 0xb1e2;
0xffffffff823528c1: ret 0xb1e4;
0xffffffff8256b64a: ret 0xb1e7;
0xffffffff8134d8a9: ret 0xb1e8;
0xffffffff8192824e: ret 0xb1e9;
0xffffffff82471d49: ret 0xb1ed;
0xffffffff8176ce8a: ret 0xb1ef;
0xffffffff81bd5de6: ret 0xb1f1;
0xffffffff822f7b8c: ret 0xb1f3;
0xffffffff81831bb6: ret 0xb1f5;
0xffffffff8170bc17: ret 0xb1f8;
0xffffffff824068e8: ret 0xb1f;
0xffffffff816c663c: ret 0xb1fe;
0xffffffff813c5adf: ret 0xb1ff;
0xffffffff815dc4f5: ret 0xb204;
0xffffffff81b4d0bc: ret 0xb208;
0xffffffff83498c37: ret 0xb20d;
0xffffffff8231084f: ret 0xb210;
0xffffffff8251fc64: ret 0xb215;
0xffffffff81b4d0d2: ret 0xb216;
0xffffffff8170bd8b: ret 0xb219;
0xffffffff8246c8e8: ret 0xb21c;
0xffffffff8227bb20: ret 0xb21f;
0xffffffff813c5dde: ret 0xb223;
0xffffffff810302a0: ret 0xb22a;
0xffffffff814de43a: ret 0xb22c;
0xffffffff82326533: ret 0xb22d;
0xffffffff81009f01: ret 0xb22e;
0xffffffff8100a007: ret 0xb22f;
0xffffffff817fafad: ret 0xb230;
0xffffffff81b4ce6c: ret 0xb237;
0xffffffff822d9de9: ret 0xb23a;
0xffffffff82415553: ret 0xb23f;
0xffffffff815dc695: ret 0xb242;
0xffffffff81b4d0e8: ret 0xb245;
0xffffffff81339f4f: ret 0xb24;
0xffffffff813c5d1c: ret 0xb24b;
0xffffffff81b4d114: ret 0xb255;
0xffffffff824fe5db: ret 0xb256;
0xffffffff82261397: ret 0xb262;
0xffffffff83442dba: ret 0xb264;
0xffffffff813c5e0a: ret 0xb267;
0xffffffff81b4ce82: ret 0xb268;
0xffffffff8227ccc5: ret 0xb26c;
0xffffffff822ca844: ret 0xb274;
0xffffffff818d2bf2: ret 0xb275;
0xffffffff81967695: ret 0xb276;
0xffffffff824e81da: ret 0xb279;
0xffffffff8170befe: ret 0xb27a;
0xffffffff81b4d12a: ret 0xb27b;
0xffffffff8241feb1: ret 0xb27c;
0xffffffff8238cc9c: ret 0xb27c;
0xffffffff8256ffa4: ret 0xb27f;
0xffffffff8256ffa3: ret 0xb27f;
0xffffffff82501242: ret 0xb283;
0xffffffff813c5dc3: ret 0xb287;
0xffffffff81b4d140: ret 0xb289;
0xffffffff8295d2a4: ret 0xb28;
0xffffffff815dc7c8: ret 0xb28c;
0xffffffff8114a5aa: ret 0xb28f;
0xffffffff81b4d0fe: ret 0xb29a;
0xffffffff822ae7de: ret 0xb29b;
0xffffffff81156d9e: ret 0xb2;
0xffffffff81c7c61f: ret 0xb2a0;
0xffffffff813c5e51: ret 0xb2a3;
0xffffffff82385554: ret 0xb2a6;
0xffffffff81832235: ret 0xb2aa;
0xffffffff81b4d156: ret 0xb2ab;
0xffffffff8243a2a6: ret 0xb2ac;
0xffffffff823f92af: ret 0xb2b0;
0xffffffff823b3318: ret 0xb2b1;
0xffffffff8170c0f9: ret 0xb2b2;
0xffffffff82271374: ret 0xb2b8;
0xffffffff82271373: ret 0xb2b8;
0xffffffff81b4d16c: ret 0xb2ba;
0xffffffff825545f0: ret 0xb2bc;
0xffffffff81b4d182: ret 0xb2c9;
0xffffffff8295d640: ret 0xb2c;
0xffffffff8251962f: ret 0xb2d2;
0xffffffff81b4d198: ret 0xb2d8;
0xffffffff82520fd2: ret 0xb2da;
0xffffffff813c5966: ret 0xb2de;
0xffffffff8253e10b: ret 0xb2e3;
0xffffffff824906c9: ret 0xb2e5;
0xffffffff8256da92: ret 0xb2e6;
0xffffffff822c07cf: ret 0xb2e7;
0xffffffff811769f8: ret 0xb2e8;
0xffffffff81152f8a: ret 0xb2e9;
0xffffffff815dc99b: ret 0xb2eb;
0xffffffff8238cc31: ret 0xb2f5;
0xffffffff81b4d1c4: ret 0xb2f6;
0xffffffff8253230f: ret 0xb2f9;
0xffffffff822ccedd: ret 0xb2fa;
0xffffffff82382e11: ret 0xb2fc;
0xffffffff835a8e32: ret 0xb2fd;
0xffffffff823c404d: ret 0xb2fe;
0xffffffff8243882a: ret 0xb300;
0xffffffff81b4d1da: ret 0xb302;
0xffffffff813c6077: ret 0xb304;
0xffffffff82322959: ret 0xb305;
0xffffffff8249b2bc: ret 0xb306;
0xffffffff8120001c: ret 0xb30;
0xffffffff818323b3: ret 0xb30d;
0xffffffff81b4d1f0: ret 0xb310;
0xffffffff822ca056: ret 0xb317;
0xffffffff8232675f: ret 0xb317;
0xffffffff8113999e: ret 0xb31;
0xffffffff81b4d206: ret 0xb31b;
0xffffffff8223af3c: ret 0xb31d;
0xffffffff81b4d21c: ret 0xb328;
0xffffffff822c9059: ret 0xb329;
0xffffffff822c07ec: ret 0xb32a;
0xffffffff8250fe10: ret 0xb32b;
0xffffffff82409998: ret 0xb32c;
0xffffffff823de5e8: ret 0xb32d;
0xffffffff815dd0c8: ret 0xb331;
0xffffffff8241aa23: ret 0xb333;
0xffffffff813c60a2: ret 0xb334;
0xffffffff824fdcd4: ret 0xb335;
0xffffffff823c56a1: ret 0xb336;
0xffffffff81b4ce98: ret 0xb337;
0xffffffff823298be: ret 0xb339;
0xffffffff823ed1c4: ret 0xb33a;
0xffffffff82305db6: ret 0xb33b;
0xffffffff822293c2: ret 0xb33d;
0xffffffff81b4ceae: ret 0xb346;
0xffffffff810121a8: ret 0xb350;
0xffffffff81581c6a: ret 0xb356;
0xffffffff8295e4a0: ret 0xb35;
0xffffffff8170c298: ret 0xb35b;
0xffffffff81b4cf06: ret 0xb362;
0xffffffff82243e96: ret 0xb365;
0xffffffff815dd211: ret 0xb367;
0xffffffff8233f9aa: ret 0xb36c;
0xffffffff81b4cf1c: ret 0xb36f;
0xffffffff813c60ad: ret 0xb372;
0xffffffff8229c40a: ret 0xb373;
0xffffffff811267ea: ret 0xb375;
0xffffffff82474096: ret 0xb37;
0xffffffff823d0a1c: ret 0xb37a;
0xffffffff81b4cf32: ret 0xb380;
0xffffffff815dda0b: ret 0xb381;
0xffffffff8184a442: ret 0xb38;
0xffffffff8251be40: ret 0xb38a;
0xffffffff8227157a: ret 0xb390;
0xffffffff817c8a2a: ret 0xb391;
0xffffffff81b4cf48: ret 0xb392;
0xffffffff8222bf51: ret 0xb393;
0xffffffff811390ae: ret 0xb3;
0xffffffff8248df9f: ret 0xb3a1;
0xffffffff81b4cf5e: ret 0xb3a3;
0xffffffff824f25cc: ret 0xb3a4;
0xffffffff8229a854: ret 0xb3a8;
0xffffffff8227f1bb: ret 0xb3a;
0xffffffff814d55ca: ret 0xb3ab;
0xffffffff822c4ac9: ret 0xb3b0;
0xffffffff813c60c1: ret 0xb3b2;
0xffffffff822fcad0: ret 0xb3b4;
0xffffffff81b4cf8a: ret 0xb3b5;
0xffffffff8224e2ba: ret 0xb3bd;
0xffffffff8242d456: ret 0xb3be;
0xffffffff82483e71: ret 0xb3c3;
0xffffffff81b4cfa0: ret 0xb3c4;
0xffffffff82354fc2: ret 0xb3c6;
0xffffffff82484b56: ret 0xb3c9;
0xffffffff82413cb2: ret 0xb3ca;
0xffffffff835a7cd4: ret 0xb3cc;
0xffffffff822bbe37: ret 0xb3d1;
0xffffffff81b4cfb6: ret 0xb3d2;
0xffffffff824a923b: ret 0xb3d6;
0xffffffff812b1275: ret 0xb3dc;
0xffffffff81b4cfcc: ret 0xb3e0;
0xffffffff81832829: ret 0xb3e2;
0xffffffff824028d5: ret 0xb3e3;
0xffffffff8127f787: ret 0xb3e8;
0xffffffff81293217: ret 0xb3e9;
0xffffffff82350756: ret 0xb3e;
0xffffffff82482baf: ret 0xb3ea;
0xffffffff8235df04: ret 0xb3ec;
0xffffffff823dcdf4: ret 0xb3ee;
0xffffffff810dc2d3: ret 0xb3ef;
0xffffffff82245812: ret 0xb3f0;
0xffffffff824b4dc1: ret 0xb3f1;
0xffffffff824121db: ret 0xb3f3;
0xffffffff824121d9: ret 0xb3f3;
0xffffffff8237e40f: ret 0xb3f4;
0xffffffff81bd5e16: ret 0xb3f4;
0xffffffff813c60ef: ret 0xb3f6;
0xffffffff81bd5e30: ret 0xb400;
0xffffffff823aaa4e: ret 0xb407;
0xffffffff82555b12: ret 0xb40c;
0xffffffff81bd5e4a: ret 0xb40e;
0xffffffff81bd5e64: ret 0xb41b;
0xffffffff824ece40: ret 0xb41d;
0xffffffff817b00b2: ret 0xb41e;
0xffffffff8253c318: ret 0xb41f;
0xffffffff8235b02d: ret 0xb423;
0xffffffff817bb480: ret 0xb426;
0xffffffff81bd5e7e: ret 0xb42a;
0xffffffff82439f57: ret 0xb42e;
0xffffffff824a3de1: ret 0xb433;
0xffffffff824208c8: ret 0xb437;
0xffffffff82249e91: ret 0xb43;
0xffffffff82249e92: ret 0xb43;
0xffffffff8237bb89: ret 0xb43a;
0xffffffff81bd6247: ret 0xb43c;
0xffffffff824151e1: ret 0xb43e;
0xffffffff825329d7: ret 0xb43f;
0xffffffff81bd62ac: ret 0xb446;
0xffffffff8295f9dc: ret 0xb44;
0xffffffff82477f29: ret 0xb44d;
0xffffffff8223c975: ret 0xb450;
0xffffffff82557c50: ret 0xb455;
0xffffffff8242b1e6: ret 0xb45a;
0xffffffff82345e2e: ret 0xb45b;
0xffffffff82466afc: ret 0xb465;
0xffffffff82283afb: ret 0xb469;
0xffffffff8255ae38: ret 0xb46d;
0xffffffff82571f6b: ret 0xb46e;
0xffffffff8244a176: ret 0xb46f;
0xffffffff835a7db0: ret 0xb477;
0xffffffff8254866c: ret 0xb47;
0xffffffff817b055e: ret 0xb482;
0xffffffff818303a9: ret 0xb485;
0xffffffff82452f67: ret 0xb488;
0xffffffff8124e01f: ret 0xb48;
0xffffffff8249125e: ret 0xb49b;
0xffffffff824ca422: ret 0xb49c;
0xffffffff817b04e8: ret 0xb49d;
0xffffffff81832bb4: ret 0xb49f;
0xffffffff812b5462: ret 0xb4;
0xffffffff824a09a8: ret 0xb4a2;
0xffffffff822b78c4: ret 0xb4a3;
0xffffffff8226ac9e: ret 0xb4a5;
0xffffffff82453c80: ret 0xb4a8;
0xffffffff8173862d: ret 0xb4a;
0xffffffff8250cb50: ret 0xb4aa;
0xffffffff8250cb4f: ret 0xb4aa;
0xffffffff822f83e2: ret 0xb4af;
0xffffffff81831840: ret 0xb4b8;
0xffffffff82350536: ret 0xb4ba;
0xffffffff823c7230: ret 0xb4c4;
0xffffffff819bc250: ret 0xb4c8;
0xffffffff82339905: ret 0xb4cc;
0xffffffff8183184e: ret 0xb4ce;
0xffffffff82245389: ret 0xb4d1;
0xffffffff82469818: ret 0xb4d3;
0xffffffff815bbefa: ret 0xb4d9;
0xffffffff8254ce6e: ret 0xb4dc;
0xffffffff8241e437: ret 0xb4de;
0xffffffff8344ea45: ret 0xb4e0;
0xffffffff8182fcb0: ret 0xb4e1;
0xffffffff824c8833: ret 0xb4e7;
0xffffffff811df026: ret 0xb4e8;
0xffffffff82296ebe: ret 0xb4eb;
0xffffffff82368de0: ret 0xb4ed;
0xffffffff81016b95: ret 0xb4f0;
0xffffffff824408d0: ret 0xb4f4;
0xffffffff823b0be5: ret 0xb4f6;
0xffffffff813c66b6: ret 0xb4f8;
0xffffffff835a8e7e: ret 0xb4fd;
0xffffffff822ac6ff: ret 0xb507;
0xffffffff817f0297: ret 0xb50;
0xffffffff822870ad: ret 0xb50a;
0xffffffff8223f764: ret 0xb50d;
0xffffffff81830e23: ret 0xb50e;
0xffffffff810167d4: ret 0xb510;
0xffffffff82371659: ret 0xb515;
0xffffffff824d9f19: ret 0xb51;
0xffffffff823fb72b: ret 0xb51d;
0xffffffff822981ce: ret 0xb522;
0xffffffff8105e54b: ret 0xb523;
0xffffffff813c6760: ret 0xb52a;
0xffffffff8174aebe: ret 0xb533;
0xffffffff824acd1c: ret 0xb53d;
0xffffffff81b87b8a: ret 0xb543;
0xffffffff824848dc: ret 0xb548;
0xffffffff822f5271: ret 0xb54b;
0xffffffff8142456a: ret 0xb557;
0xffffffff8256366e: ret 0xb55;
0xffffffff82368602: ret 0xb55a;
0xffffffff823dc8f4: ret 0xb55c;
0xffffffff813c678d: ret 0xb563;
0xffffffff81c19a06: ret 0xb564;
0xffffffff811865f4: ret 0xb566;
0xffffffff83455400: ret 0xb567;
0xffffffff82308aea: ret 0xb568;
0xffffffff813ef396: ret 0xb575;
0xffffffff82414f27: ret 0xb578;
0xffffffff822f96c9: ret 0xb57;
0xffffffff8228a23a: ret 0xb57c;
0xffffffff822c2057: ret 0xb57d;
0xffffffff818330b0: ret 0xb57f;
0xffffffff82372c8a: ret 0xb581;
0xffffffff82227ee3: ret 0xb586;
0xffffffff823846e2: ret 0xb58d;
0xffffffff817b0e2e: ret 0xb58e;
0xffffffff813c6703: ret 0xb590;
0xffffffff8110b94a: ret 0xb595;
0xffffffff824f5221: ret 0xb599;
0xffffffff822aca8b: ret 0xb59a;
0xffffffff8247dee1: ret 0xb59f;
0xffffffff8110e8db: ret 0xb5;
0xffffffff822bfb87: ret 0xb5a2;
0xffffffff8254c705: ret 0xb5a6;
0xffffffff8256341b: ret 0xb5a7;
0xffffffff82288d78: ret 0xb5a9;
0xffffffff824bf562: ret 0xb5a;
0xffffffff813c6746: ret 0xb5ae;
0xffffffff82311f41: ret 0xb5b7;
0xffffffff823088dc: ret 0xb5b8;
0xffffffff815dfcc0: ret 0xb5bf;
0xffffffff824aa83d: ret 0xb5c0;
0xffffffff8110e8da: ret 0xb5c2;
0xffffffff829620d0: ret 0xb5c;
0xffffffff8230c67b: ret 0xb5cd;
0xffffffff813c67df: ret 0xb5ce;
0xffffffff818f46b1: ret 0xb5d0;
0xffffffff82227401: ret 0xb5d2;
0xffffffff824e13a4: ret 0xb5db;
0xffffffff823eef2f: ret 0xb5df;
0xffffffff824b0452: ret 0xb5e0;
0xffffffff8174b31c: ret 0xb5e1;
0xffffffff82672860: ret 0xb5e5;
0xffffffff8233d926: ret 0xb5e6;
0xffffffff81341e85: ret 0xb5e8;
0xffffffff810b1d00: ret 0xb5e9;
0xffffffff824bc3a5: ret 0xb5ea;
0xffffffff81b4e53a: ret 0xb5ee;
0xffffffff817b18a9: ret 0xb5f4;
0xffffffff824c0add: ret 0xb5f9;
0xffffffff818f4a51: ret 0xb5fa;
0xffffffff823d7590: ret 0xb5fc;
0xffffffff824d8115: ret 0xb5fe;
0xffffffff8119e304: ret 0xb600;
0xffffffff81b4e4a0: ret 0xb603;
0xffffffff81116e7d: ret 0xb606;
0xffffffff818f4a45: ret 0xb607;
0xffffffff8119e31f: ret 0xb60c;
0xffffffff81115356: ret 0xb60d;
0xffffffff81059771: ret 0xb60f;
0xffffffff818f499c: ret 0xb611;
0xffffffff8342d546: ret 0xb616;
0xffffffff81b4e4b6: ret 0xb617;
0xffffffff8133a07d: ret 0xb61;
0xffffffff823244e6: ret 0xb61d;
0xffffffff8256bd27: ret 0xb61e;
0xffffffff818f4932: ret 0xb621;
0xffffffff81b4e4cc: ret 0xb627;
0xffffffff81833756: ret 0xb629;
0xffffffff8229511f: ret 0xb62e;
0xffffffff82286db9: ret 0xb630;
0xffffffff8342b536: ret 0xb635;
0xffffffff817bb69c: ret 0xb638;
0xffffffff81b4165d: ret 0xb63;
0xffffffff813c6a04: ret 0xb63b;
0xffffffff823ac586: ret 0xb648;
0xffffffff8240c184: ret 0xb64;
0xffffffff81b4e4f8: ret 0xb64d;
0xffffffff82672424: ret 0xb64f;
0xffffffff8240d31f: ret 0xb652;
0xffffffff822ab7b4: ret 0xb654;
0xffffffff823d8720: ret 0xb657;
0xffffffff822dafc9: ret 0xb658;
0xffffffff8250d5ba: ret 0xb659;
0xffffffff8223a6da: ret 0xb65;
0xffffffff8229346e: ret 0xb65a;
0xffffffff8229346f: ret 0xb65a;
0xffffffff813c6a4e: ret 0xb65f;
0xffffffff822a4689: ret 0xb660;
0xffffffff81b4e50e: ret 0xb662;
0xffffffff823bd9a7: ret 0xb663;
0xffffffff8244841b: ret 0xb666;
0xffffffff82321d52: ret 0xb678;
0xffffffff823c8db0: ret 0xb678;
0xffffffff813c6a86: ret 0xb679;
0xffffffff817e161a: ret 0xb681;
0xffffffff82492d7e: ret 0xb683;
0xffffffff8249a833: ret 0xb686;
0xffffffff8232e60f: ret 0xb689;
0xffffffff8173878e: ret 0xb68;
0xffffffff826721ec: ret 0xb68b;
0xffffffff82314f7f: ret 0xb690;
0xffffffff818339c2: ret 0xb694;
0xffffffff81833979: ret 0xb698;
0xffffffff82347888: ret 0xb69d;
0xffffffff815de3b3: ret 0xb69f;
0xffffffff810f87c3: ret 0xb6;
0xffffffff8193ac13: ret 0xb6a0;
0xffffffff8234e8f9: ret 0xb6a4;
0xffffffff8142739a: ret 0xb6a7;
0xffffffff8154c66a: ret 0xb6ac;
0xffffffff82672148: ret 0xb6af;
0xffffffff81833a6b: ret 0xb6b3;
0xffffffff82385ec1: ret 0xb6b9;
0xffffffff81833a81: ret 0xb6bc;
0xffffffff81c36ecf: ret 0xb6c0;
0xffffffff8110b32e: ret 0xb6c1;
0xffffffff81c37064: ret 0xb6c2;
0xffffffff81c3889e: ret 0xb6c3;
0xffffffff81c388b8: ret 0xb6c4;
0xffffffff81c3ae9a: ret 0xb6c5;
0xffffffff81c3bcd0: ret 0xb6c8;
0xffffffff82963948: ret 0xb6c;
0xffffffff8226aff3: ret 0xb6d1;
0xffffffff822a04c6: ret 0xb6d4;
0xffffffff8249e3ac: ret 0xb6dd;
0xffffffff82327e16: ret 0xb6de;
0xffffffff812bbf67: ret 0xb6e0;
0xffffffff823c7b89: ret 0xb6e4;
0xffffffff81114a1a: ret 0xb6e5;
0xffffffff8100f484: ret 0xb6e8;
0xffffffff822bbd3d: ret 0xb6e9;
0xffffffff8249f99b: ret 0xb6e9;
0xffffffff824cbe85: ret 0xb6ee;
0xffffffff81c3c915: ret 0xb6f0;
0xffffffff8250bc0d: ret 0xb6f3;
0xffffffff825317dc: ret 0xb6f4;
0xffffffff82671fac: ret 0xb6f5;
0xffffffff82395532: ret 0xb6f8;
0xffffffff8111350a: ret 0xb6fa;
0xffffffff82671f90: ret 0xb6fb;
0xffffffff835a8e62: ret 0xb6fd;
0xffffffff823d6b92: ret 0xb6ff;
0xffffffff810bae21: ret 0xb700;
0xffffffff823f5a6d: ret 0xb701;
0xffffffff816009ea: ret 0xb703;
0xffffffff835a8230: ret 0xb706;
0xffffffff8127d70f: ret 0xb708;
0xffffffff8127ddbd: ret 0xb709;
0xffffffff8131e603: ret 0xb70;
0xffffffff8253aae3: ret 0xb70b;
0xffffffff8101dd5f: ret 0xb70f;
0xffffffff8127e1fc: ret 0xb710;
0xffffffff82570daf: ret 0xb712;
0xffffffff8226d162: ret 0xb715;
0xffffffff81322d1e: ret 0xb71;
0xffffffff824b1665: ret 0xb71c;
0xffffffff81719b8a: ret 0xb722;
0xffffffff823af171: ret 0xb726;
0xffffffff823875e1: ret 0xb729;
0xffffffff8154456a: ret 0xb72d;
0xffffffff82338b2b: ret 0xb730;
0xffffffff8223da43: ret 0xb735;
0xffffffff822fae05: ret 0xb739;
0xffffffff8345874d: ret 0xb73;
0xffffffff823fdd21: ret 0xb73e;
0xffffffff824abbb6: ret 0xb741;
0xffffffff824e25e6: ret 0xb743;
0xffffffff82499aa2: ret 0xb747;
0xffffffff81060b7b: ret 0xb74;
0xffffffff823dc27b: ret 0xb74c;
0xffffffff81c48020: ret 0xb750;
0xffffffff82228cca: ret 0xb752;
0xffffffff822ed054: ret 0xb758;
0xffffffff822a7def: ret 0xb75;
0xffffffff8252e8bc: ret 0xb763;
0xffffffff824f6b8a: ret 0xb767;
0xffffffff82541640: ret 0xb769;
0xffffffff82964a8c: ret 0xb76;
0xffffffff8101b757: ret 0xb770;
0xffffffff82419a11: ret 0xb771;
0xffffffff81b412cc: ret 0xb772;
0xffffffff8153fd6a: ret 0xb775;
0xffffffff81652784: ret 0xb779;
0xffffffff812df075: ret 0xb77;
0xffffffff8256b6d9: ret 0xb77f;
0xffffffff823df811: ret 0xb789;
0xffffffff8194def2: ret 0xb78;
0xffffffff811c64d8: ret 0xb78b;
0xffffffff834542f8: ret 0xb78c;
0xffffffff81833b18: ret 0xb78d;
0xffffffff812bb7fb: ret 0xb790;
0xffffffff82231f44: ret 0xb792;
0xffffffff8255fd04: ret 0xb798;
0xffffffff8225e980: ret 0xb79a;
0xffffffff8233d304: ret 0xb79c;
0xffffffff8247a6da: ret 0xb79d;
0xffffffff829748e4: ret 0xb7;
0xffffffff82545dc7: ret 0xb7a4;
0xffffffff81b056de: ret 0xb7a6;
0xffffffff82671ba0: ret 0xb7a7;
0xffffffff8176927a: ret 0xb7ab;
0xffffffff822e740c: ret 0xb7ae;
0xffffffff8230fbde: ret 0xb7b1;
0xffffffff82312be3: ret 0xb7b8;
0xffffffff822aec3b: ret 0xb7c0;
0xffffffff813ca787: ret 0xb7c;
0xffffffff82671a74: ret 0xb7ce;
0xffffffff8237e92e: ret 0xb7d0;
0xffffffff824855f5: ret 0xb7d5;
0xffffffff8231bb9c: ret 0xb7d6;
0xffffffff82671a3c: ret 0xb7d7;
0xffffffff824e48c4: ret 0xb7dc;
0xffffffff8230f8fa: ret 0xb7dd;
0xffffffff82322638: ret 0xb7e0;
0xffffffff82267de3: ret 0xb7e1;
0xffffffff817efa43: ret 0xb7e8;
0xffffffff82295f9f: ret 0xb7e9;
0xffffffff835a64da: ret 0xb7f0;
0xffffffff8222a879: ret 0xb7f3;
0xffffffff82409437: ret 0xb7f5;
0xffffffff825625e7: ret 0xb7f7;
0xffffffff8113d44a: ret 0xb7f;
0xffffffff812c2d73: ret 0xb7ff;
0xffffffff81046222: ret 0xb800;
0xffffffff8191b2b2: ret 0xb801;
0xffffffff834479ea: ret 0xb802;
0xffffffff822d9a1b: ret 0xb803;
0xffffffff82555267: ret 0xb803;
0xffffffff816b2334: ret 0xb804;
0xffffffff816b2323: ret 0xb808;
0xffffffff8246527f: ret 0xb80c;
0xffffffff82355795: ret 0xb80d;
0xffffffff82371158: ret 0xb80f;
0xffffffff81a1769c: ret 0xb812;
0xffffffff822c40b0: ret 0xb815;
0xffffffff8346cc75: ret 0xb816;
0xffffffff81c635c0: ret 0xb817;
0xffffffff8227b741: ret 0xb818;
0xffffffff823b6fab: ret 0xb819;
0xffffffff8157b826: ret 0xb81c;
0xffffffff81713cc9: ret 0xb81d;
0xffffffff8243b0d8: ret 0xb81f;
0xffffffff81874645: ret 0xb820;
0xffffffff822b1882: ret 0xb821;
0xffffffff82497997: ret 0xb827;
0xffffffff8224fbc5: ret 0xb828;
0xffffffff83465c84: ret 0xb82c;
0xffffffff824f2853: ret 0xb82f;
0xffffffff815cdc3b: ret 0xb830;
0xffffffff822472bf: ret 0xb834;
0xffffffff822efb80: ret 0xb837;
0xffffffff823d9f5a: ret 0xb838;
0xffffffff8241615c: ret 0xb83;
0xffffffff834a6a31: ret 0xb83a;
0xffffffff810ff49a: ret 0xb83b;
0xffffffff8125000e: ret 0xb841;
0xffffffff8234e845: ret 0xb846;
0xffffffff810084d5: ret 0xb848;
0xffffffff81132a0b: ret 0xb849;
0xffffffff810f0656: ret 0xb85a;
0xffffffff8166b0f2: ret 0xb860;
0xffffffff8166d179: ret 0xb861;
0xffffffff822a1156: ret 0xb862;
0xffffffff8134c10f: ret 0xb866;
0xffffffff822c6bc3: ret 0xb867;
0xffffffff825614a9: ret 0xb868;
0xffffffff82288a2e: ret 0xb869;
0xffffffff8232dd0d: ret 0xb86a;
0xffffffff82437070: ret 0xb86e;
0xffffffff8166f2b3: ret 0xb870;
0xffffffff8345bcff: ret 0xb878;
0xffffffff8267e325: ret 0xb87e;
0xffffffff81c444c6: ret 0xb880;
0xffffffff8345bd18: ret 0xb888;
0xffffffff82546906: ret 0xb88b;
0xffffffff8167237a: ret 0xb88e;
0xffffffff81274f69: ret 0xb890;
0xffffffff8240d432: ret 0xb894;
0xffffffff824ca451: ret 0xb896;
0xffffffff81b529ba: ret 0xb897;
0xffffffff824f59cb: ret 0xb899;
0xffffffff81834827: ret 0xb89a;
0xffffffff8104fdea: ret 0xb8;
0xffffffff810af484: ret 0xb8a0;
0xffffffff8183478d: ret 0xb8ad;
0xffffffff8130b840: ret 0xb8b0;
0xffffffff82439af2: ret 0xb8b1;
0xffffffff818fc321: ret 0xb8b4;
0xffffffff82274fda: ret 0xb8ba;
0xffffffff8190a0e9: ret 0xb8bb;
0xffffffff818fc664: ret 0xb8bf;
0xffffffff8248ad3e: ret 0xb8c5;
0xffffffff819323d6: ret 0xb8c;
0xffffffff816734e9: ret 0xb8d0;
0xffffffff818fc708: ret 0xb8d7;
0xffffffff81905d4a: ret 0xb8dd;
0xffffffff823163e0: ret 0xb8df;
0xffffffff818fc6a1: ret 0xb8e1;
0xffffffff82303ddf: ret 0xb8e2;
0xffffffff82456c9a: ret 0xb8e4;
0xffffffff8119c342: ret 0xb8e8;
0xffffffff812bb5b2: ret 0xb8e9;
0xffffffff8133a8ad: ret 0xb8e;
0xffffffff81a4301a: ret 0xb8eb;
0xffffffff8145600b: ret 0xb8f0;
0xffffffff818fc76f: ret 0xb8f4;
0xffffffff8164d3fc: ret 0xb8fa;
0xffffffff817d45eb: ret 0xb8fb;
0xffffffff8143c132: ret 0xb8fc;
0xffffffff81035891: ret 0xb8fd;
0xffffffff815f03b1: ret 0xb8ff;
0xffffffff817842b3: ret 0xb900;
0xffffffff81258409: ret 0xb901;
0xffffffff8237e194: ret 0xb903;
0xffffffff814a04a4: ret 0xb904;
0xffffffff8170e87a: ret 0xb905;
0xffffffff822cc17b: ret 0xb907;
0xffffffff8130b2d0: ret 0xb908;
0xffffffff8243f6d1: ret 0xb909;
0xffffffff8125c327: ret 0xb90;
0xffffffff81c4d23f: ret 0xb918;
0xffffffff824c231a: ret 0xb91d;
0xffffffff81c4d256: ret 0xb928;
0xffffffff81c50a4d: ret 0xb929;
0xffffffff823b6598: ret 0xb92a;
0xffffffff81456023: ret 0xb930;
0xffffffff824fdaba: ret 0xb932;
0xffffffff8247ec16: ret 0xb935;
0xffffffff83474563: ret 0xb936;
0xffffffff823d519e: ret 0xb937;
0xffffffff811675f2: ret 0xb938;
0xffffffff81328344: ret 0xb941;
0xffffffff8239ab2c: ret 0xb942;
0xffffffff82321b47: ret 0xb944;
0xffffffff8240feb0: ret 0xb946;
0xffffffff815deedb: ret 0xb947;
0xffffffff8100a52b: ret 0xb948;
0xffffffff82413962: ret 0xb94;
0xffffffff822b9a4f: ret 0xb94d;
0xffffffff8134b667: ret 0xb950;
0xffffffff8170ea2f: ret 0xb956;
0xffffffff82413ef4: ret 0xb958;
0xffffffff823d6f0a: ret 0xb95b;
0xffffffff8255fbf2: ret 0xb95e;
0xffffffff818f7660: ret 0xb960;
0xffffffff824a736f: ret 0xb965;
0xffffffff824941a2: ret 0xb966;
0xffffffff82366938: ret 0xb969;
0xffffffff8224d647: ret 0xb96b;
0xffffffff8227178a: ret 0xb96c;
0xffffffff814560f3: ret 0xb970;
0xffffffff8223adb9: ret 0xb971;
0xffffffff82471596: ret 0xb972;
0xffffffff824ba8da: ret 0xb975;
0xffffffff81738756: ret 0xb97;
0xffffffff8235ca27: ret 0xb97d;
0xffffffff81c23e5d: ret 0xb981;
0xffffffff810eab0a: ret 0xb984;
0xffffffff8230f2c3: ret 0xb989;
0xffffffff82384ea2: ret 0xb98;
0xffffffff811ede7b: ret 0xb98b;
0xffffffff82420a1c: ret 0xb98f;
0xffffffff823696b6: ret 0xb990;
0xffffffff813f899a: ret 0xb991;
0xffffffff822a929d: ret 0xb993;
0xffffffff81835000: ret 0xb996;
0xffffffff8230491d: ret 0xb999;
0xffffffff824b5a52: ret 0xb99b;
0xffffffff823f21d2: ret 0xb99c;
0xffffffff822a74c8: ret 0xb99e;
0xffffffff822a74c9: ret 0xb99e;
0xffffffff82370f6a: ret 0xb99f;
0xffffffff81103b4b: ret 0xb9;
0xffffffff8170ecd9: ret 0xb9a9;
0xffffffff82352e64: ret 0xb9aa;
0xffffffff82352e65: ret 0xb9aa;
0xffffffff817b6f43: ret 0xb9ae;
0xffffffff824ddb57: ret 0xb9bb;
0xffffffff8347a66c: ret 0xb9c;
0xffffffff82670f04: ret 0xb9cc;
0xffffffff822eec31: ret 0xb9cf;
0xffffffff822ecd8d: ret 0xb9d7;
0xffffffff8223bd08: ret 0xb9db;
0xffffffff82415d1f: ret 0xb9e0;
0xffffffff8224a5bc: ret 0xb9e1;
0xffffffff82498e96: ret 0xb9e6;
0xffffffff8140df41: ret 0xb9e8;
0xffffffff82391da0: ret 0xb9eb;
0xffffffff8229e851: ret 0xb9ef;
0xffffffff813d9c2a: ret 0xb9f0;
0xffffffff8229b710: ret 0xb9f5;
0xffffffff810d6956: ret 0xb9f7;
0xffffffff814dfaec: ret 0xb9f8;
0xffffffff83469686: ret 0xb9fb;
0xffffffff8155ba06: ret 0xb9fc;
0xffffffff8227696b: ret 0xb9fe;
0xffffffff8105bc61: ret 0xb9ff;
0xffffffff8296c234: ret 0xb;
0xffffffff811cfb88: ret 0xb;
0xffffffff81bc37e9: ret 0xba00;
0xffffffff810185c5: ret 0xba01;
0xffffffff82467d3e: ret 0xba03;
0xffffffff822c4ba3: ret 0xba06;
0xffffffff81110912: ret 0xba08;
0xffffffff82670d6c: ret 0xba0a;
0xffffffff8348a6c2: ret 0xba0f;
0xffffffff822bdb98: ret 0xba11;
0xffffffff813ca521: ret 0xba12;
0xffffffff8186b4e1: ret 0xba20;
0xffffffff834639db: ret 0xba21;
0xffffffff83473ee3: ret 0xba23;
0xffffffff82387f6b: ret 0xba27;
0xffffffff822cc714: ret 0xba31;
0xffffffff81c54459: ret 0xba34;
0xffffffff81c54624: ret 0xba35;
0xffffffff81c5469b: ret 0xba38;
0xffffffff8245f922: ret 0xba39;
0xffffffff8250fa66: ret 0xba45;
0xffffffff8229cfce: ret 0xba46;
0xffffffff81269bf2: ret 0xba48;
0xffffffff8227082c: ret 0xba49;
0xffffffff82670c08: ret 0xba4b;
0xffffffff83473ab1: ret 0xba4c;
0xffffffff8234b3ed: ret 0xba4e;
0xffffffff822d7819: ret 0xba57;
0xffffffff82670b98: ret 0xba5b;
0xffffffff813cd3b4: ret 0xba5c;
0xffffffff82276264: ret 0xba62;
0xffffffff823ca210: ret 0xba66;
0xffffffff82427f46: ret 0xba67;
0xffffffff82967b84: ret 0xba6;
0xffffffff82453697: ret 0xba6b;
0xffffffff817b7ba4: ret 0xba6d;
0xffffffff823d7502: ret 0xba72;
0xffffffff823a0561: ret 0xba73;
0xffffffff823a0562: ret 0xba73;
0xffffffff82366e0f: ret 0xba74;
0xffffffff8345fd38: ret 0xba75;
0xffffffff8155bc7c: ret 0xba77;
0xffffffff8254cef2: ret 0xba7a;
0xffffffff8120d404: ret 0xba7c;
0xffffffff824add48: ret 0xba7d;
0xffffffff825147e4: ret 0xba83;
0xffffffff824719f9: ret 0xba92;
0xffffffff81678e9e: ret 0xba98;
0xffffffff8247b45f: ret 0xba99;
0xffffffff823eb1b7: ret 0xba9;
0xffffffff8245d317: ret 0xba9d;
0xffffffff834657b8: ret 0xba9e;
0xffffffff810d3650: ret 0xba;
0xffffffff8238b3b5: ret 0xbaa9;
0xffffffff816793ef: ret 0xbaac;
0xffffffff822e51ad: ret 0xbaae;
0xffffffff81224fdc: ret 0xbab0;
0xffffffff813cdc5d: ret 0xbab2;
0xffffffff8256f7a6: ret 0xbab4;
0xffffffff822af399: ret 0xbab6;
0xffffffff824ca95c: ret 0xbabc;
0xffffffff82403ee7: ret 0xbabe;
0xffffffff8255327d: ret 0xbabf;
0xffffffff810b44c4: ret 0xbac0;
0xffffffff8167ceba: ret 0xbac1;
0xffffffff815df252: ret 0xbac2;
0xffffffff8126ec4a: ret 0xbac3;
0xffffffff8167cf08: ret 0xbac4;
0xffffffff8167cf22: ret 0xbac5;
0xffffffff824441ad: ret 0xbac;
0xffffffff824441ac: ret 0xbac;
0xffffffff81681475: ret 0xbad0;
0xffffffff822c5fd8: ret 0xbad;
0xffffffff8235e123: ret 0xbadd;
0xffffffff82509f0b: ret 0xbade;
0xffffffff8243ca9b: ret 0xbae3;
0xffffffff822cd129: ret 0xbae5;
0xffffffff822cd12a: ret 0xbae5;
0xffffffff8141ef5c: ret 0xbae8;
0xffffffff81744b50: ret 0xbae9;
0xffffffff8256d64b: ret 0xbaeb;
0xffffffff824cb22d: ret 0xbaed;
0xffffffff8119dc2a: ret 0xbaee;
0xffffffff822a1c01: ret 0xbaef;
0xffffffff811e0f36: ret 0xbaf0;
0xffffffff81682605: ret 0xbaf1;
0xffffffff81689098: ret 0xbaf2;
0xffffffff8168919f: ret 0xbaf3;
0xffffffff816895c7: ret 0xbaf4;
0xffffffff816899c2: ret 0xbaf5;
0xffffffff81689abf: ret 0xbaf6;
0xffffffff81689224: ret 0xbaf7;
0xffffffff8168d00b: ret 0xbaf8;
0xffffffff8168c70a: ret 0xbafc;
0xffffffff8104655d: ret 0xbb00;
0xffffffff81be66a6: ret 0xbb02;
0xffffffff8170f657: ret 0xbb06;
0xffffffff822de1d8: ret 0xbb07;
0xffffffff8227524a: ret 0xbb08;
0xffffffff8345d294: ret 0xbb0;
0xffffffff82378357: ret 0xbb0d;
0xffffffff8223bf9e: ret 0xbb16;
0xffffffff824edf37: ret 0xbb18;
0xffffffff82485cbb: ret 0xbb1d;
0xffffffff812010e7: ret 0xbb1f;
0xffffffff823a9702: ret 0xbb20;
0xffffffff8170f831: ret 0xbb21;
0xffffffff824d4db0: ret 0xbb23;
0xffffffff824d6a9c: ret 0xbb2;
0xffffffff8163f014: ret 0xbb2;
0xffffffff82233317: ret 0xbb2b;
0xffffffff822b45b8: ret 0xbb39;
0xffffffff825597d5: ret 0xbb3b;
0xffffffff8196dae0: ret 0xbb41;
0xffffffff815bc89a: ret 0xbb43;
0xffffffff8296a884: ret 0xbb4;
0xffffffff82285e3b: ret 0xbb4c;
0xffffffff822fb334: ret 0xbb4d;
0xffffffff82460f41: ret 0xbb4e;
0xffffffff8243402c: ret 0xbb4f;
0xffffffff8240cf1a: ret 0xbb50;
0xffffffff824dba20: ret 0xbb52;
0xffffffff82313ff5: ret 0xbb5e;
0xffffffff82345434: ret 0xbb5f;
0xffffffff824f0cef: ret 0xbb60;
0xffffffff8133a823: ret 0xbb6;
0xffffffff82363d41: ret 0xbb6c;
0xffffffff8101bb57: ret 0xbb70;
0xffffffff82285f09: ret 0xbb75;
0xffffffff8139d597: ret 0xbb77;
0xffffffff8253733f: ret 0xbb78;
0xffffffff824a8d5d: ret 0xbb7;
0xffffffff8246e175: ret 0xbb7e;
0xffffffff81b0b3a0: ret 0xbb83;
0xffffffff822f32d6: ret 0xbb84;
0xffffffff823dca2b: ret 0xbb89;
0xffffffff8296b040: ret 0xbb8;
0xffffffff8228ecb7: ret 0xbb8a;
0xffffffff8187e985: ret 0xbb8b;
0xffffffff8227a53e: ret 0xbb98;
0xffffffff8296b148: ret 0xbb9;
0xffffffff82379d7a: ret 0xbb9e;
0xffffffff810c6d71: ret 0xbb;
0xffffffff8227ecb0: ret 0xbba5;
0xffffffff82369fe7: ret 0xbbaf;
0xffffffff835a8718: ret 0xbbba;
0xffffffff823d9aa3: ret 0xbbbc;
0xffffffff82311463: ret 0xbbbf;
0xffffffff82350d9a: ret 0xbbc2;
0xffffffff8251edbd: ret 0xbbc9;
0xffffffff813bc022: ret 0xbbca;
0xffffffff8245f1e2: ret 0xbbcc;
0xffffffff8249b910: ret 0xbbce;
0xffffffff8296b784: ret 0xbbd;
0xffffffff8233be3f: ret 0xbbdb;
0xffffffff83428295: ret 0xbbdc;
0xffffffff8234a609: ret 0xbbde;
0xffffffff8229d2f4: ret 0xbbe0;
0xffffffff813ca099: ret 0xbbe1;
0xffffffff824665a5: ret 0xbbe2;
0xffffffff8223f180: ret 0xbbe6;
0xffffffff83454469: ret 0xbbe7;
0xffffffff81043e6f: ret 0xbbe8;
0xffffffff81205a93: ret 0xbbe9;
0xffffffff8296ba00: ret 0xbbe;
0xffffffff816caf2a: ret 0xbbea;
0xffffffff8177d510: ret 0xbbeb;
0xffffffff822aa737: ret 0xbbed;
0xffffffff8122110a: ret 0xbbef;
0xffffffff817bbc5c: ret 0xbbfd;
0xffffffff814a4ce4: ret 0xbbfe;
0xffffffff823c0e36: ret 0xbc00;
0xffffffff82226dab: ret 0xbc02;
0xffffffff825049a6: ret 0xbc08;
0xffffffff825460f5: ret 0xbc0;
0xffffffff813ca35a: ret 0xbc0c;
0xffffffff8236d4cf: ret 0xbc0d;
0xffffffff815e080e: ret 0xbc17;
0xffffffff823f8041: ret 0xbc19;
0xffffffff812a4ed5: ret 0xbc1b;
0xffffffff823b4ee9: ret 0xbc25;
0xffffffff824c8933: ret 0xbc27;
0xffffffff8246ddf2: ret 0xbc2f;
0xffffffff82474a1a: ret 0xbc33;
0xffffffff815e112d: ret 0xbc35;
0xffffffff823a3381: ret 0xbc37;
0xffffffff834387a2: ret 0xbc3;
0xffffffff822f4a88: ret 0xbc3a;
0xffffffff822c4f47: ret 0xbc3d;
0xffffffff8251b8ec: ret 0xbc40;
0xffffffff81205783: ret 0xbc41;
0xffffffff822e085b: ret 0xbc4b;
0xffffffff82377e8a: ret 0xbc4f;
0xffffffff822c1e65: ret 0xbc53;
0xffffffff823efa29: ret 0xbc55;
0xffffffff82457f01: ret 0xbc56;
0xffffffff82514076: ret 0xbc58;
0xffffffff82514075: ret 0xbc58;
0xffffffff823f843f: ret 0xbc5e;
0xffffffff81237b96: ret 0xbc60;
0xffffffff825697d1: ret 0xbc64;
0xffffffff8239a3f0: ret 0xbc67;
0xffffffff8344a1ea: ret 0xbc68;
0xffffffff824dbf13: ret 0xbc6b;
0xffffffff82487a0a: ret 0xbc6c;
0xffffffff8266fea8: ret 0xbc6f;
0xffffffff816fcd02: ret 0xbc76;
0xffffffff82467610: ret 0xbc7;
0xffffffff82368430: ret 0xbc7b;
0xffffffff818e62b2: ret 0xbc83;
0xffffffff815e1145: ret 0xbc85;
0xffffffff82438447: ret 0xbc87;
0xffffffff823c9566: ret 0xbc89;
0xffffffff822c792a: ret 0xbc8c;
0xffffffff8240ccaa: ret 0xbc90;
0xffffffff8245f5b4: ret 0xbc91;
0xffffffff825675ef: ret 0xbc93;
0xffffffff824049fc: ret 0xbc99;
0xffffffff823d6e33: ret 0xbc99;
0xffffffff82254e40: ret 0xbc9;
0xffffffff82492847: ret 0xbc9a;
0xffffffff8160bbb4: ret 0xbca0;
0xffffffff82292aab: ret 0xbca3;
0xffffffff8266fcd8: ret 0xbca7;
0xffffffff82541076: ret 0xbca9;
0xffffffff824912ce: ret 0xbca;
0xffffffff8230c1b4: ret 0xbcb6;
0xffffffff818ee7c4: ret 0xbcb9;
0xffffffff824c9141: ret 0xbcb;
0xffffffff83428f4d: ret 0xbcbf;
0xffffffff812ee94c: ret 0xbcc0;
0xffffffff82295258: ret 0xbcc5;
0xffffffff822fabcb: ret 0xbcc6;
0xffffffff8296dedc: ret 0xbcc;
0xffffffff823abf8e: ret 0xbcd3;
0xffffffff82409157: ret 0xbcd5;
0xffffffff8241f64a: ret 0xbcda;
0xffffffff81c660f4: ret 0xbcdc;
0xffffffff8252507d: ret 0xbcdf;
0xffffffff812bbba9: ret 0xbce0;
0xffffffff82509dd8: ret 0xbce1;
0xffffffff81041a5a: ret 0xbce8;
0xffffffff815e1fce: ret 0xbce9;
0xffffffff81c3dc80: ret 0xbce;
0xffffffff81807637: ret 0xbcf0;
0xffffffff823d2892: ret 0xbcf1;
0xffffffff823c4330: ret 0xbcf2;
0xffffffff82472407: ret 0xbcf3;
0xffffffff8229df63: ret 0xbcf4;
0xffffffff82451e85: ret 0xbcf5;
0xffffffff822e6acb: ret 0xbcf6;
0xffffffff8250bc48: ret 0xbcfc;
0xffffffff835a8ea9: ret 0xbcfd;
0xffffffff8191bd43: ret 0xbcff;
0xffffffff81048ee3: ret 0xbd00;
0xffffffff8191bf71: ret 0xbd01;
0xffffffff8191bf7a: ret 0xbd02;
0xffffffff8191bf83: ret 0xbd03;
0xffffffff8191bf8c: ret 0xbd04;
0xffffffff8191bf95: ret 0xbd05;
0xffffffff823222ec: ret 0xbd08;
0xffffffff8240c536: ret 0xbd09;
0xffffffff824a551e: ret 0xbd0;
0xffffffff823fa48d: ret 0xbd16;
0xffffffff8135a783: ret 0xbd18;
0xffffffff82471e9f: ret 0xbd1e;
0xffffffff822cad3b: ret 0xbd23;
0xffffffff815e3d9b: ret 0xbd27;
0xffffffff813bc17a: ret 0xbd28;
0xffffffff823b565e: ret 0xbd29;
0xffffffff8296e8cc: ret 0xbd2;
0xffffffff83447df6: ret 0xbd2a;
0xffffffff82383be8: ret 0xbd2b;
0xffffffff822bb733: ret 0xbd2d;
0xffffffff81807657: ret 0xbd30;
0xffffffff824ee61c: ret 0xbd33;
0xffffffff813cbbca: ret 0xbd35;
0xffffffff823d9e10: ret 0xbd39;
0xffffffff822b30ff: ret 0xbd3;
0xffffffff81326396: ret 0xbd41;
0xffffffff82537b09: ret 0xbd44;
0xffffffff8200d060: ret 0xbd45;
0xffffffff8254e219: ret 0xbd47;
0xffffffff813cc1f1: ret 0xbd4a;
0xffffffff8245ff3b: ret 0xbd4d;
0xffffffff824fd299: ret 0xbd4e;
0xffffffff8134b6f7: ret 0xbd50;
0xffffffff8228f610: ret 0xbd51;
0xffffffff816b638a: ret 0xbd5a;
0xffffffff814a4e59: ret 0xbd5d;
0xffffffff824864ba: ret 0xbd60;
0xffffffff815e5f23: ret 0xbd62;
0xffffffff817bc4bf: ret 0xbd64;
0xffffffff823d9860: ret 0xbd67;
0xffffffff825cdc63: ret 0xbd6e;
0xffffffff8110af25: ret 0xbd72;
0xffffffff8266f82c: ret 0xbd73;
0xffffffff810d6a60: ret 0xbd75;
0xffffffff83429268: ret 0xbd7c;
0xffffffff82476e41: ret 0xbd7f;
0xffffffff8266f7bc: ret 0xbd80;
0xffffffff8254bc28: ret 0xbd84;
0xffffffff822818ac: ret 0xbd8;
0xffffffff81b4a680: ret 0xbd8b;
0xffffffff8243386c: ret 0xbd8e;
0xffffffff823b1144: ret 0xbd91;
0xffffffff82247e79: ret 0xbd95;
0xffffffff81738915: ret 0xbd9;
0xffffffff824a64e5: ret 0xbd9f;
0xffffffff8129770a: ret 0xbd;
0xffffffff824261ad: ret 0xbda2;
0xffffffff8235f05d: ret 0xbda5;
0xffffffff82378d06: ret 0xbda8;
0xffffffff825253c2: ret 0xbda9;
0xffffffff815e6ea3: ret 0xbdab;
0xffffffff823d3580: ret 0xbdb6;
0xffffffff8133b2cc: ret 0xbdb;
0xffffffff8139c5ea: ret 0xbdbb;
0xffffffff81b0b6de: ret 0xbdc0;
0xffffffff8235ebb8: ret 0xbdc5;
0xffffffff823a574b: ret 0xbdc8;
0xffffffff8252571b: ret 0xbdca;
0xffffffff8252571a: ret 0xbdca;
0xffffffff814a5201: ret 0xbdcb;
0xffffffff823d1bd7: ret 0xbdcd;
0xffffffff8243dce4: ret 0xbdce;
0xffffffff824ad90e: ret 0xbdd4;
0xffffffff81c3dcb1: ret 0xbdd;
0xffffffff8342ccba: ret 0xbddb;
0xffffffff8142343a: ret 0xbddc;
0xffffffff823d60e8: ret 0xbde0;
0xffffffff8251c910: ret 0xbde4;
0xffffffff82514d70: ret 0xbde6;
0xffffffff81526459: ret 0xbde8;
0xffffffff823c24a5: ret 0xbdea;
0xffffffff8124c6ca: ret 0xbdeb;
0xffffffff812659c2: ret 0xbdec;
0xffffffff81807660: ret 0xbdf0;
0xffffffff824d8ddc: ret 0xbdf5;
0xffffffff823a7f60: ret 0xbdfd;
0xffffffff822ca204: ret 0xbdff;
0xffffffff824ca90a: ret 0xbe00;
0xffffffff81369280: ret 0xbe01;
0xffffffff823673a1: ret 0xbe04;
0xffffffff82414592: ret 0xbe06;
0xffffffff8132c94d: ret 0xbe08;
0xffffffff8106044e: ret 0xbe0;
0xffffffff834a0f7e: ret 0xbe0b;
0xffffffff814a53e0: ret 0xbe0e;
0xffffffff8134a291: ret 0xbe0f;
0xffffffff81bc054d: ret 0xbe10;
0xffffffff823b18e8: ret 0xbe14;
0xffffffff818fc500: ret 0xbe18;
0xffffffff81b305d8: ret 0xbe1;
0xffffffff8231d85f: ret 0xbe1a;
0xffffffff823c04cb: ret 0xbe1c;
0xffffffff823c3b18: ret 0xbe1d;
0xffffffff815e7950: ret 0xbe1f;
0xffffffff8198f4cb: ret 0xbe20;
0xffffffff824fdf79: ret 0xbe28;
0xffffffff81b31ed2: ret 0xbe2;
0xffffffff823ec53a: ret 0xbe2a;
0xffffffff824debfa: ret 0xbe2d;
0xffffffff82282f1b: ret 0xbe30;
0xffffffff8152673a: ret 0xbe32;
0xffffffff824c5066: ret 0xbe39;
0xffffffff81b3110c: ret 0xbe3;
0xffffffff825620b9: ret 0xbe3e;
0xffffffff82261055: ret 0xbe3f;
0xffffffff813f85c8: ret 0xbe40;
0xffffffff810330a0: ret 0xbe41;
0xffffffff8124ddf8: ret 0xbe48;
0xffffffff81b34e12: ret 0xbe4;
0xffffffff82472e89: ret 0xbe4b;
0xffffffff8235e8db: ret 0xbe54;
0xffffffff822bcbd1: ret 0xbe56;
0xffffffff81a23045: ret 0xbe58;
0xffffffff825220c5: ret 0xbe62;
0xffffffff82463397: ret 0xbe63;
0xffffffff8243e85e: ret 0xbe65;
0xffffffff824b4a4e: ret 0xbe67;
0xffffffff8229823f: ret 0xbe69;
0xffffffff825d795d: ret 0xbe6b;
0xffffffff823d23a7: ret 0xbe6d;
0xffffffff81a8160a: ret 0xbe72;
0xffffffff81462691: ret 0xbe75;
0xffffffff82409351: ret 0xbe77;
0xffffffff8141973a: ret 0xbe79;
0xffffffff815d99fb: ret 0xbe7d;
0xffffffff823966cd: ret 0xbe80;
0xffffffff81c2c215: ret 0xbe81;
0xffffffff82544bf7: ret 0xbe85;
0xffffffff811c2f3f: ret 0xbe8;
0xffffffff82256996: ret 0xbe8e;
0xffffffff834298b6: ret 0xbe95;
0xffffffff815e8efb: ret 0xbe96;
0xffffffff82461943: ret 0xbe9c;
0xffffffff8244fc97: ret 0xbe9e;
0xffffffff812153b2: ret 0xbe;
0xffffffff8135774b: ret 0xbea0;
0xffffffff82418c83: ret 0xbea4;
0xffffffff817be719: ret 0xbea5;
0xffffffff823c2228: ret 0xbeae;
0xffffffff82439c3d: ret 0xbeb2;
0xffffffff8159beba: ret 0xbeb3;
0xffffffff8232dcef: ret 0xbeb9;
0xffffffff81186e88: ret 0xbeb;
0xffffffff8152065a: ret 0xbebc;
0xffffffff82348b9d: ret 0xbebf;
0xffffffff815e8c86: ret 0xbec1;
0xffffffff82502740: ret 0xbec7;
0xffffffff818e87c4: ret 0xbec8;
0xffffffff8235bd1b: ret 0xbec9;
0xffffffff82311715: ret 0xbeca;
0xffffffff822bcb34: ret 0xbecd;
0xffffffff812bbd9a: ret 0xbed0;
0xffffffff823d27c8: ret 0xbed1;
0xffffffff824a75da: ret 0xbed3;
0xffffffff817bfe53: ret 0xbed5;
0xffffffff818e9112: ret 0xbed8;
0xffffffff816e93aa: ret 0xbed;
0xffffffff82390633: ret 0xbedf;
0xffffffff8101bec7: ret 0xbee0;
0xffffffff82529df5: ret 0xbee6;
0xffffffff8112c98c: ret 0xbee8;
0xffffffff82288e74: ret 0xbee9;
0xffffffff8228c049: ret 0xbee;
0xffffffff811fb2be: ret 0xbeeb;
0xffffffff82231568: ret 0xbeec;
0xffffffff823be2de: ret 0xbef1;
0xffffffff824e7f8f: ret 0xbef2;
0xffffffff81600b77: ret 0xbef3;
0xffffffff815a5c61: ret 0xbef7;
0xffffffff82522574: ret 0xbefa;
0xffffffff818594d8: ret 0xbefb;
0xffffffff81659b72: ret 0xbefd;
0xffffffff822db435: ret 0xbefe;
0xffffffff818b0deb: ret 0xbeff;
0xffffffff81052680: ret 0xbf00;
0xffffffff8111b9b9: ret 0xbf01;
0xffffffff812761e7: ret 0xbf02;
0xffffffff81aadb7a: ret 0xbf03;
0xffffffff82320237: ret 0xbf04;
0xffffffff824be14f: ret 0xbf08;
0xffffffff82403f15: ret 0xbf0a;
0xffffffff81607399: ret 0xbf0f;
0xffffffff8172d952: ret 0xbf10;
0xffffffff823b0995: ret 0xbf12;
0xffffffff823d5288: ret 0xbf14;
0xffffffff823d5289: ret 0xbf14;
0xffffffff8237dccb: ret 0xbf16;
0xffffffff811670cb: ret 0xbf18;
0xffffffff824e66b3: ret 0xbf1e;
0xffffffff81c59efe: ret 0xbf20;
0xffffffff823cdb71: ret 0xbf22;
0xffffffff823856bf: ret 0xbf27;
0xffffffff817332bb: ret 0xbf28;
0xffffffff823bd958: ret 0xbf2a;
0xffffffff8252400f: ret 0xbf2c;
0xffffffff822b0a05: ret 0xbf2f;
0xffffffff814a28f7: ret 0xbf30;
0xffffffff8225c943: ret 0xbf31;
0xffffffff824bab67: ret 0xbf39;
0xffffffff83474030: ret 0xbf3c;
0xffffffff81c59ece: ret 0xbf40;
0xffffffff8102ce63: ret 0xbf41;
0xffffffff819046b4: ret 0xbf43;
0xffffffff8247cc50: ret 0xbf45;
0xffffffff8125e54d: ret 0xbf48;
0xffffffff81c3dcf6: ret 0xbf4;
0xffffffff8111514f: ret 0xbf4c;
0xffffffff8235e13d: ret 0xbf4d;
0xffffffff819046ce: ret 0xbf4f;
0xffffffff81500073: ret 0xbf50;
0xffffffff8119ee85: ret 0xbf54;
0xffffffff816bba0a: ret 0xbf58;
0xffffffff823e0e1a: ret 0xbf5;
0xffffffff817be279: ret 0xbf5c;
0xffffffff8246f92f: ret 0xbf5e;
0xffffffff81c59f2e: ret 0xbf60;
0xffffffff819046e8: ret 0xbf61;
0xffffffff8349f68a: ret 0xbf63;
0xffffffff824983ce: ret 0xbf64;
0xffffffff8270ab75: ret 0xbf65;
0xffffffff814199ca: ret 0xbf67;
0xffffffff81935ef8: ret 0xbf68;
0xffffffff823717c9: ret 0xbf6;
0xffffffff8159bf73: ret 0xbf6c;
0xffffffff823d5076: ret 0xbf6d;
0xffffffff818077c7: ret 0xbf70;
0xffffffff823a42e1: ret 0xbf71;
0xffffffff8255c31f: ret 0xbf77;
0xffffffff814ff56e: ret 0xbf78;
0xffffffff82286a16: ret 0xbf7c;
0xffffffff814bf46a: ret 0xbf7e;
0xffffffff81408f3a: ret 0xbf81;
0xffffffff81ba07e6: ret 0xbf83;
0xffffffff8238cc1a: ret 0xbf84;
0xffffffff83432eca: ret 0xbf87;
0xffffffff811d24b6: ret 0xbf8b;
0xffffffff822481d3: ret 0xbf94;
0xffffffff823c7075: ret 0xbf95;
0xffffffff822d5613: ret 0xbf99;
0xffffffff829736f8: ret 0xbf9;
0xffffffff822adeb7: ret 0xbf9f;
0xffffffff81011d5f: ret 0xbf;
0xffffffff822a597b: ret 0xbfa0;
0xffffffff82489d76: ret 0xbfa6;
0xffffffff824f7973: ret 0xbfa8;
0xffffffff82295664: ret 0xbfa;
0xffffffff8242d728: ret 0xbfaa;
0xffffffff8137c45a: ret 0xbfc5;
0xffffffff8133b3b4: ret 0xbfc;
0xffffffff8237e5f7: ret 0xbfdd;
0xffffffff816527d0: ret 0xbfe2;
0xffffffff8116ecab: ret 0xbfe8;
0xffffffff8251eddb: ret 0xbfe9;
0xffffffff82283a38: ret 0xbfe;
0xffffffff82451e30: ret 0xbff5;
0xffffffff8239ce08: ret 0xbff7;
0xffffffff8106b7a6: ret 0xbff8;
0xffffffff82552ed5: ret 0xbffd;
0xffffffff81642154: ret 0xbffe;
0xffffffff81271d8a: ret 0xbfff;
0xffffffff8100031d: ret 0xc000;
0xffffffff8137cf7b: ret 0xc001;
0xffffffff824dba4b: ret 0xc002;
0xffffffff823dd3e4: ret 0xc004;
0xffffffff8100eaff: ret 0xc008;
0xffffffff813c37e0: ret 0xc00;
0xffffffff81905d6c: ret 0xc00a;
0xffffffff822eb2c6: ret 0xc00d;
0xffffffff8240fa74: ret 0xc00e;
0xffffffff82292ad1: ret 0xc012;
0xffffffff8227a136: ret 0xc013;
0xffffffff816e297a: ret 0xc014;
0xffffffff8159c020: ret 0xc019;
0xffffffff8234162f: ret 0xc01a;
0xffffffff8239efa2: ret 0xc01e;
0xffffffff822e34d7: ret 0xc023;
0xffffffff8227bd4c: ret 0xc024;
0xffffffff813feb3a: ret 0xc025;
0xffffffff823252cd: ret 0xc029;
0xffffffff83453462: ret 0xc02c;
0xffffffff8138ea9a: ret 0xc030;
0xffffffff8105ab27: ret 0xc031;
0xffffffff814b3b6a: ret 0xc037;
0xffffffff823d7d42: ret 0xc03;
0xffffffff822dc1ae: ret 0xc040;
0xffffffff822d6042: ret 0xc041;
0xffffffff8237e7ec: ret 0xc046;
0xffffffff822ecdec: ret 0xc049;
0xffffffff81738943: ret 0xc04;
0xffffffff822e01cd: ret 0xc04d;
0xffffffff8236baf8: ret 0xc04e;
0xffffffff823ebdf3: ret 0xc051;
0xffffffff8248da18: ret 0xc052;
0xffffffff8242f95a: ret 0xc053;
0xffffffff82360db6: ret 0xc054;
0xffffffff81ad65fa: ret 0xc057;
0xffffffff8229bd49: ret 0xc058;
0xffffffff82571074: ret 0xc059;
0xffffffff823e62d1: ret 0xc05c;
0xffffffff8231cbde: ret 0xc060;
0xffffffff8235b453: ret 0xc061;
0xffffffff82556f4f: ret 0xc062;
0xffffffff8246c865: ret 0xc066;
0xffffffff8241543c: ret 0xc067;
0xffffffff8241543a: ret 0xc067;
0xffffffff822b1015: ret 0xc06c;
0xffffffff8246b851: ret 0xc06e;
0xffffffff8123d5c2: ret 0xc070;
0xffffffff81047108: ret 0xc075;
0xffffffff81289342: ret 0xc077;
0xffffffff8229926e: ret 0xc078;
0xffffffff824e8764: ret 0xc07b;
0xffffffff82435775: ret 0xc082;
0xffffffff81204d45: ret 0xc083;
0xffffffff81028a98: ret 0xc085;
0xffffffff810f80eb: ret 0xc089;
0xffffffff824651d8: ret 0xc08b;
0xffffffff81a759ca: ret 0xc090;
0xffffffff8232209a: ret 0xc092;
0xffffffff8249869d: ret 0xc094;
0xffffffff8226a450: ret 0xc095;
0xffffffff823c41cf: ret 0xc09b;
0xffffffff823f3a36: ret 0xc09d;
0xffffffff811f5382: ret 0xc0;
0xffffffff824bd256: ret 0xc0a2;
0xffffffff825234ac: ret 0xc0a6;
0xffffffff824699f1: ret 0xc0a;
0xffffffff823abf98: ret 0xc0b1;
0xffffffff824184b3: ret 0xc0b4;
0xffffffff81628a7c: ret 0xc0b9;
0xffffffff824a2e09: ret 0xc0ba;
0xffffffff82394a04: ret 0xc0bb;
0xffffffff817be15f: ret 0xc0bd;
0xffffffff825dd15c: ret 0xc0c0;
0xffffffff816c3c9a: ret 0xc0c1;
0xffffffff823b5bdc: ret 0xc0c4;
0xffffffff8116f326: ret 0xc0c8;
0xffffffff82290916: ret 0xc0c;
0xffffffff82290915: ret 0xc0c;
0xffffffff82486ced: ret 0xc0cb;
0xffffffff823ba2a2: ret 0xc0cf;
0xffffffff823803d5: ret 0xc0d2;
0xffffffff824ae631: ret 0xc0d5;
0xffffffff81c3dd3f: ret 0xc0d;
0xffffffff82506e5d: ret 0xc0da;
0xffffffff8243b9dd: ret 0xc0db;
0xffffffff823fed02: ret 0xc0df;
0xffffffff81a6de05: ret 0xc0e2;
0xffffffff82409a68: ret 0xc0e7;
0xffffffff810e14da: ret 0xc0e8;
0xffffffff81adfc85: ret 0xc0eb;
0xffffffff82556f40: ret 0xc0ec;
0xffffffff82556afe: ret 0xc0f0;
0xffffffff82342677: ret 0xc0f3;
0xffffffff82459635: ret 0xc0f4;
0xffffffff82291326: ret 0xc0f8;
0xffffffff817c27ad: ret 0xc0fc;
0xffffffff8239ca4f: ret 0xc0ff;
0xffffffff8115dc42: ret 0xc101;
0xffffffff81064ce8: ret 0xc102;
0xffffffff823551db: ret 0xc103;
0xffffffff82447ba3: ret 0xc104;
0xffffffff81737702: ret 0xc107;
0xffffffff81880e90: ret 0xc108;
0xffffffff81a493b8: ret 0xc10;
0xffffffff82550d1e: ret 0xc10c;
0xffffffff82271b58: ret 0xc118;
0xffffffff811bfd0a: ret 0xc11d;
0xffffffff81c70b2e: ret 0xc120;
0xffffffff8164f79e: ret 0xc121;
0xffffffff81c24ba9: ret 0xc125;
0xffffffff823c0abb: ret 0xc126;
0xffffffff81ac99ba: ret 0xc127;
0xffffffff816cc78f: ret 0xc129;
0xffffffff829768f4: ret 0xc12;
0xffffffff8116c5b3: ret 0xc138;
0xffffffff816d807d: ret 0xc139;
0xffffffff82976b40: ret 0xc13;
0xffffffff8256e9b1: ret 0xc13a;
0xffffffff81979629: ret 0xc13e;
0xffffffff81291acc: ret 0xc13f;
0xffffffff8119bee7: ret 0xc141;
0xffffffff824cdb43: ret 0xc147;
0xffffffff81003fb2: ret 0xc148;
0xffffffff810b07d6: ret 0xc149;
0xffffffff8223f316: ret 0xc154;
0xffffffff8244bda7: ret 0xc160;
0xffffffff8244bda8: ret 0xc160;
0xffffffff8232e6fb: ret 0xc161;
0xffffffff8232e6fc: ret 0xc161;
0xffffffff8155f291: ret 0xc166;
0xffffffff822b3301: ret 0xc169;
0xffffffff824cdee6: ret 0xc172;
0xffffffff8158caa5: ret 0xc175;
0xffffffff813d22f9: ret 0xc178;
0xffffffff824d6932: ret 0xc17e;
0xffffffff8120919d: ret 0xc17f;
0xffffffff8130754f: ret 0xc183;
0xffffffff8110b88d: ret 0xc189;
0xffffffff82419720: ret 0xc18;
0xffffffff813d2315: ret 0xc194;
0xffffffff823d8c18: ret 0xc196;
0xffffffff822b14c3: ret 0xc199;
0xffffffff8162e994: ret 0xc19a;
0xffffffff811e5412: ret 0xc1;
0xffffffff813d2331: ret 0xc1a1;
0xffffffff82459838: ret 0xc1a6;
0xffffffff8167158a: ret 0xc1a8;
0xffffffff8245dfc9: ret 0xc1a9;
0xffffffff82977aa0: ret 0xc1a;
0xffffffff82418519: ret 0xc1ab;
0xffffffff82538561: ret 0xc1b0;
0xffffffff81670a8a: ret 0xc1b3;
0xffffffff813d234d: ret 0xc1b6;
0xffffffff8228a257: ret 0xc1b8;
0xffffffff82404034: ret 0xc1c0;
0xffffffff81378c56: ret 0xc1c3;
0xffffffff8106d32c: ret 0xc1c4;
0xffffffff823f8194: ret 0xc1c6;
0xffffffff813d2369: ret 0xc1ca;
0xffffffff822ffa78: ret 0xc1cd;
0xffffffff823fd04f: ret 0xc1ce;
0xffffffff8247bdd0: ret 0xc1d1;
0xffffffff813d2385: ret 0xc1d4;
0xffffffff81c667fd: ret 0xc1d6;
0xffffffff813d23a1: ret 0xc1db;
0xffffffff824a1ddd: ret 0xc1dc;
0xffffffff813d23bd: ret 0xc1e7;
0xffffffff811df119: ret 0xc1e8;
0xffffffff817f7649: ret 0xc1e9;
0xffffffff8223ebf6: ret 0xc1eb;
0xffffffff82231961: ret 0xc1ef;
0xffffffff8270ab67: ret 0xc1f0;
0xffffffff82677d5b: ret 0xc1f4;
0xffffffff822576df: ret 0xc1f5;
0xffffffff81061d07: ret 0xc1f6;
0xffffffff81201a70: ret 0xc1f7;
0xffffffff81713cc6: ret 0xc1f8;
0xffffffff81b8c680: ret 0xc1fc;
0xffffffff8342e4df: ret 0xc1fd;
0xffffffff8238e48a: ret 0xc1fe;
0xffffffff813cb20d: ret 0xc1ff;
0xffffffff810140d1: ret 0xc200;
0xffffffff81329c7f: ret 0xc201;
0xffffffff8236a1f6: ret 0xc205;
0xffffffff82280a7e: ret 0xc206;
0xffffffff81035a90: ret 0xc208;
0xffffffff8165c5df: ret 0xc209;
0xffffffff8190a2f3: ret 0xc20;
0xffffffff82544307: ret 0xc213;
0xffffffff8225dd98: ret 0xc217;
0xffffffff81239f0b: ret 0xc218;
0xffffffff8235396d: ret 0xc21;
0xffffffff8133b300: ret 0xc21;
0xffffffff824a8183: ret 0xc21a;
0xffffffff823d5e66: ret 0xc21b;
0xffffffff8105976f: ret 0xc220;
0xffffffff81196d2a: ret 0xc221;
0xffffffff8237d556: ret 0xc223;
0xffffffff81749dc5: ret 0xc228;
0xffffffff81371f76: ret 0xc229;
0xffffffff82493dd2: ret 0xc22e;
0xffffffff810068b9: ret 0xc230;
0xffffffff8149f395: ret 0xc231;
0xffffffff81209158: ret 0xc239;
0xffffffff82239678: ret 0xc242;
0xffffffff822d2faf: ret 0xc247;
0xffffffff8247dee0: ret 0xc24d;
0xffffffff823ec1eb: ret 0xc256;
0xffffffff822bc04b: ret 0xc262;
0xffffffff81238d9d: ret 0xc269;
0xffffffff82306580: ret 0xc26a;
0xffffffff823959ab: ret 0xc26d;
0xffffffff8145610b: ret 0xc270;
0xffffffff8104eb56: ret 0xc275;
0xffffffff834a5606: ret 0xc277;
0xffffffff8248d789: ret 0xc278;
0xffffffff8248d78a: ret 0xc278;
0xffffffff8222bc22: ret 0xc27d;
0xffffffff81736e49: ret 0xc280;
0xffffffff8137ce2b: ret 0xc281;
0xffffffff810e475a: ret 0xc283;
0xffffffff81011f05: ret 0xc289;
0xffffffff822983c5: ret 0xc28;
0xffffffff8235b246: ret 0xc293;
0xffffffff82448ea4: ret 0xc294;
0xffffffff81049e2c: ret 0xc2;
0xffffffff823910da: ret 0xc2a3;
0xffffffff816173fa: ret 0xc2a4;
0xffffffff8237c749: ret 0xc2a6;
0xffffffff825d8c0f: ret 0xc2ab;
0xffffffff81456124: ret 0xc2b0;
0xffffffff8241216a: ret 0xc2b1;
0xffffffff8200d474: ret 0xc2b2;
0xffffffff82551344: ret 0xc2ba;
0xffffffff823b6498: ret 0xc2be;
0xffffffff82334f80: ret 0xc2bf;
0xffffffff8224e2b8: ret 0xc2c0;
0xffffffff8114764f: ret 0xc2c1;
0xffffffff810536da: ret 0xc2c2;
0xffffffff8236e62f: ret 0xc2c4;
0xffffffff8228ac17: ret 0xc2c7;
0xffffffff82470404: ret 0xc2c9;
0xffffffff8231740c: ret 0xc2ca;
0xffffffff8230d520: ret 0xc2cd;
0xffffffff8230d521: ret 0xc2cd;
0xffffffff822ff7aa: ret 0xc2d0;
0xffffffff823d6714: ret 0xc2d2;
0xffffffff823345ab: ret 0xc2d7;
0xffffffff81aae8ba: ret 0xc2d8;
0xffffffff8347f864: ret 0xc2d9;
0xffffffff829794f0: ret 0xc2d;
0xffffffff8233fb03: ret 0xc2da;
0xffffffff823497c3: ret 0xc2e3;
0xffffffff81112638: ret 0xc2e8;
0xffffffff82979580: ret 0xc2e;
0xffffffff818c694c: ret 0xc2eb;
0xffffffff8238d53d: ret 0xc2ef;
0xffffffff81c50829: ret 0xc2f0;
0xffffffff8229346d: ret 0xc2f3;
0xffffffff810c146d: ret 0xc2f6;
0xffffffff813c37de: ret 0xc2f7;
0xffffffff822d2fb0: ret 0xc2f;
0xffffffff823869ac: ret 0xc2fb;
0xffffffff813addb5: ret 0xc2ff;
0xffffffff811e0d23: ret 0xc300;
0xffffffff811e138a: ret 0xc301;
0xffffffff811e1389: ret 0xc301;
0xffffffff82307f1c: ret 0xc302;
0xffffffff82492f4d: ret 0xc306;
0xffffffff823ae585: ret 0xc307;
0xffffffff814567d9: ret 0xc30;
0xffffffff814d123a: ret 0xc30a;
0xffffffff8123a77b: ret 0xc30c;
0xffffffff8101c2f7: ret 0xc310;
0xffffffff825cf58f: ret 0xc31d;
0xffffffff8106a917: ret 0xc320;
0xffffffff81690a06: ret 0xc321;
0xffffffff81695775: ret 0xc323;
0xffffffff825b4ea8: ret 0xc324;
0xffffffff823f62f9: ret 0xc326;
0xffffffff8246205b: ret 0xc328;
0xffffffff8232d936: ret 0xc329;
0xffffffff82359788: ret 0xc32;
0xffffffff824383e8: ret 0xc32c;
0xffffffff82500e77: ret 0xc32d;
0xffffffff81456289: ret 0xc330;
0xffffffff8231df96: ret 0xc331;
0xffffffff8234a59f: ret 0xc334;
0xffffffff8242ca77: ret 0xc335;
0xffffffff8228a53b: ret 0xc336;
0xffffffff82254f79: ret 0xc337;
0xffffffff817388da: ret 0xc33;
0xffffffff824158d0: ret 0xc341;
0xffffffff82516987: ret 0xc344;
0xffffffff82545c45: ret 0xc345;
0xffffffff8297a094: ret 0xc34;
0xffffffff816bc58e: ret 0xc359;
0xffffffff810dbba3: ret 0xc35b;
0xffffffff81286c01: ret 0xc368;
0xffffffff82302694: ret 0xc369;
0xffffffff8250b077: ret 0xc36e;
0xffffffff82270579: ret 0xc378;
0xffffffff8239bcdb: ret 0xc37;
0xffffffff8232a605: ret 0xc37e;
0xffffffff822e44cd: ret 0xc382;
0xffffffff812dace3: ret 0xc383;
0xffffffff812c3de8: ret 0xc389;
0xffffffff823a86a7: ret 0xc38f;
0xffffffff82365e1e: ret 0xc390;
0xffffffff8231ebbc: ret 0xc393;
0xffffffff82406ecc: ret 0xc394;
0xffffffff8254153b: ret 0xc39;
0xffffffff8254153a: ret 0xc39;
0xffffffff82496979: ret 0xc39a;
0xffffffff81039e45: ret 0xc3;
0xffffffff825358ca: ret 0xc3a3;
0xffffffff82314128: ret 0xc3aa;
0xffffffff813ec2e2: ret 0xc3b0;
0xffffffff8128c99f: ret 0xc3b1;
0xffffffff822ece9a: ret 0xc3b6;
0xffffffff823c8089: ret 0xc3be;
0xffffffff823c808a: ret 0xc3be;
0xffffffff8135a996: ret 0xc3c0;
0xffffffff823b0399: ret 0xc3c3;
0xffffffff82354634: ret 0xc3c5;
0xffffffff8243b489: ret 0xc3c6;
0xffffffff82282026: ret 0xc3c8;
0xffffffff823c9ddb: ret 0xc3cf;
0xffffffff8228702a: ret 0xc3db;
0xffffffff82494a9d: ret 0xc3dc;
0xffffffff815ec12a: ret 0xc3e0;
0xffffffff8237c745: ret 0xc3e1;
0xffffffff823b6a3d: ret 0xc3e2;
0xffffffff81037b56: ret 0xc3e5;
0xffffffff81110587: ret 0xc3e8;
0xffffffff8297b758: ret 0xc3e;
0xffffffff812ff703: ret 0xc3eb;
0xffffffff817900a2: ret 0xc3ee;
0xffffffff8104401a: ret 0xc3ef;
0xffffffff82229d6b: ret 0xc3f0;
0xffffffff81273d48: ret 0xc3f6;
0xffffffff812b865a: ret 0xc3f7;
0xffffffff824ff971: ret 0xc3f;
0xffffffff813d5c52: ret 0xc3fb;
0xffffffff8250c5a7: ret 0xc3fc;
0xffffffff835a8e81: ret 0xc3fd;
0xffffffff835a8e82: ret 0xc3fd;
0xffffffff8168c37e: ret 0xc400;
0xffffffff81936419: ret 0xc40;
0xffffffff82262ed4: ret 0xc417;
0xffffffff8246a2a0: ret 0xc419;
0xffffffff824cc91f: ret 0xc426;
0xffffffff8253ee36: ret 0xc42c;
0xffffffff8231c302: ret 0xc432;
0xffffffff82294f62: ret 0xc436;
0xffffffff8247ab12: ret 0xc438;
0xffffffff823a8875: ret 0xc43a;
0xffffffff8164b26a: ret 0xc440;
0xffffffff822a72c7: ret 0xc443;
0xffffffff815f2d0a: ret 0xc445;
0xffffffff824507e1: ret 0xc447;
0xffffffff8237558b: ret 0xc44d;
0xffffffff8227e7bb: ret 0xc44e;
0xffffffff810e1e86: ret 0xc450;
0xffffffff822d5dfd: ret 0xc451;
0xffffffff82427416: ret 0xc452;
0xffffffff8244f414: ret 0xc453;
0xffffffff824a3727: ret 0xc45d;
0xffffffff8247fc49: ret 0xc45f;
0xffffffff822ce53d: ret 0xc460;
0xffffffff82466822: ret 0xc467;
0xffffffff823deb64: ret 0xc46c;
0xffffffff8249009d: ret 0xc475;
0xffffffff8342a24a: ret 0xc47;
0xffffffff817c4bae: ret 0xc47e;
0xffffffff818e6b5c: ret 0xc480;
0xffffffff8253a9ae: ret 0xc481;
0xffffffff835a8f18: ret 0xc482;
0xffffffff8241012e: ret 0xc487;
0xffffffff822c895b: ret 0xc488;
0xffffffff822c895a: ret 0xc488;
0xffffffff819741fa: ret 0xc489;
0xffffffff82440e23: ret 0xc48f;
0xffffffff822e37b9: ret 0xc49d;
0xffffffff822a98e6: ret 0xc49f;
0xffffffff8298d7c4: ret 0xc4;
0xffffffff823c56eb: ret 0xc4a5;
0xffffffff82285ccd: ret 0xc4a6;
0xffffffff8229ecef: ret 0xc4a9;
0xffffffff815a21c2: ret 0xc4a;
0xffffffff824b55d2: ret 0xc4aa;
0xffffffff8232cc46: ret 0xc4af;
0xffffffff8230655d: ret 0xc4b5;
0xffffffff83429eb2: ret 0xc4b;
0xffffffff8243207f: ret 0xc4bf;
0xffffffff825aa482: ret 0xc4c3;
0xffffffff8228785a: ret 0xc4c5;
0xffffffff822ef385: ret 0xc4c;
0xffffffff822cda2b: ret 0xc4ce;
0xffffffff8250626e: ret 0xc4cf;
0xffffffff822b0cf3: ret 0xc4d7;
0xffffffff824d784d: ret 0xc4d;
0xffffffff82303970: ret 0xc4da;
0xffffffff8243b3fa: ret 0xc4de;
0xffffffff812a5111: ret 0xc4e0;
0xffffffff813d51fe: ret 0xc4e3;
0xffffffff812a50e1: ret 0xc4e4;
0xffffffff81004176: ret 0xc4e8;
0xffffffff81adfdf1: ret 0xc4eb;
0xffffffff824fa0df: ret 0xc4ec;
0xffffffff822b2b01: ret 0xc4f0;
0xffffffff8255cc7c: ret 0xc4f2;
0xffffffff8224d6fa: ret 0xc4f8;
0xffffffff82487adc: ret 0xc4f;
0xffffffff82487adb: ret 0xc4f;
0xffffffff823b5513: ret 0xc4fb;
0xffffffff823b5514: ret 0xc4fb;
0xffffffff81c7d64c: ret 0xc4fd;
0xffffffff81c7d667: ret 0xc4fe;
0xffffffff81c7d6a7: ret 0xc4ff;
0xffffffff81c7d755: ret 0xc500;
0xffffffff81c1bebf: ret 0xc501;
0xffffffff8345f46a: ret 0xc502;
0xffffffff812ac2a6: ret 0xc503;
0xffffffff812ac2bd: ret 0xc504;
0xffffffff8159da6d: ret 0xc509;
0xffffffff8245244b: ret 0xc510;
0xffffffff8236f7e8: ret 0xc513;
0xffffffff8236f7e6: ret 0xc513;
0xffffffff82327503: ret 0xc519;
0xffffffff815f2fcd: ret 0xc51e;
0xffffffff8245f136: ret 0xc51f;
0xffffffff81b8aa79: ret 0xc520;
0xffffffff82341403: ret 0xc522;
0xffffffff823f52f7: ret 0xc525;
0xffffffff823c26d5: ret 0xc526;
0xffffffff823b08b6: ret 0xc527;
0xffffffff8237ae34: ret 0xc529;
0xffffffff8237ae35: ret 0xc529;
0xffffffff822fe4fa: ret 0xc530;
0xffffffff823a1524: ret 0xc532;
0xffffffff8168454a: ret 0xc539;
0xffffffff82365dbb: ret 0xc53a;
0xffffffff8223f8ed: ret 0xc53d;
0xffffffff8239558e: ret 0xc547;
0xffffffff82409ad4: ret 0xc548;
0xffffffff823f711b: ret 0xc549;
0xffffffff8253262f: ret 0xc54;
0xffffffff810033be: ret 0xc54d;
0xffffffff8183a3e5: ret 0xc557;
0xffffffff8255d9ca: ret 0xc558;
0xffffffff822ec6e4: ret 0xc559;
0xffffffff8240a8de: ret 0xc55;
0xffffffff823e7fd5: ret 0xc55a;
0xffffffff8256f3e7: ret 0xc564;
0xffffffff8225826f: ret 0xc56a;
0xffffffff8237f6f5: ret 0xc56f;
0xffffffff8231e128: ret 0xc572;
0xffffffff8344194e: ret 0xc573;
0xffffffff81003305: ret 0xc576;
0xffffffff822d42ee: ret 0xc577;
0xffffffff824f73a2: ret 0xc578;
0xffffffff8297e3b8: ret 0xc57;
0xffffffff822b435c: ret 0xc57a;
0xffffffff8346176e: ret 0xc57b;
0xffffffff8228dcdc: ret 0xc57d;
0xffffffff82411722: ret 0xc580;
0xffffffff816b544b: ret 0xc583;
0xffffffff823f51c2: ret 0xc585;
0xffffffff81879ea5: ret 0xc588;
0xffffffff815e9720: ret 0xc589;
0xffffffff823a0f49: ret 0xc58;
0xffffffff8243be3c: ret 0xc58a;
0xffffffff82565dd1: ret 0xc594;
0xffffffff824c4e48: ret 0xc596;
0xffffffff822aa400: ret 0xc598;
0xffffffff822e2f44: ret 0xc599;
0xffffffff82264e3a: ret 0xc59a;
0xffffffff8102586e: ret 0xc5;
0xffffffff82356374: ret 0xc5a3;
0xffffffff82436702: ret 0xc5a4;
0xffffffff823538c4: ret 0xc5a7;
0xffffffff8297eaf4: ret 0xc5a;
0xffffffff823ea953: ret 0xc5ac;
0xffffffff8249adb0: ret 0xc5ae;
0xffffffff8241444d: ret 0xc5b3;
0xffffffff823fa400: ret 0xc5b;
0xffffffff8226128f: ret 0xc5bc;
0xffffffff8256abe9: ret 0xc5c7;
0xffffffff834a44ea: ret 0xc5d0;
0xffffffff8240908d: ret 0xc5d4;
0xffffffff814abc4e: ret 0xc5d8;
0xffffffff8229be06: ret 0xc5da;
0xffffffff822fc4df: ret 0xc5dc;
0xffffffff824b8a64: ret 0xc5df;
0xffffffff8253397e: ret 0xc5e2;
0xffffffff81024c1a: ret 0xc5e3;
0xffffffff822d3a1e: ret 0xc5e5;
0xffffffff8237d011: ret 0xc5e6;
0xffffffff81753a51: ret 0xc5e8;
0xffffffff81646da5: ret 0xc5e9;
0xffffffff81919a99: ret 0xc5eb;
0xffffffff822897b4: ret 0xc5ee;
0xffffffff822897b5: ret 0xc5ee;
0xffffffff8249b8c1: ret 0xc5f4;
0xffffffff8134135c: ret 0xc5f7;
0xffffffff835a8e66: ret 0xc5fd;
0xffffffff8137bac2: ret 0xc600;
0xffffffff811abb76: ret 0xc601;
0xffffffff824fec57: ret 0xc605;
0xffffffff823bba61: ret 0xc607;
0xffffffff8345567d: ret 0xc609;
0xffffffff8190a30b: ret 0xc60;
0xffffffff82473682: ret 0xc60c;
0xffffffff8238563d: ret 0xc60e;
0xffffffff8348be93: ret 0xc618;
0xffffffff8160522a: ret 0xc61;
0xffffffff824f4d4c: ret 0xc624;
0xffffffff8256b673: ret 0xc625;
0xffffffff81a3df2a: ret 0xc629;
0xffffffff822da73a: ret 0xc62;
0xffffffff8225cc0a: ret 0xc62a;
0xffffffff823147b9: ret 0xc62e;
0xffffffff81713632: ret 0xc631;
0xffffffff82563d8d: ret 0xc634;
0xffffffff8240036c: ret 0xc636;
0xffffffff82430337: ret 0xc637;
0xffffffff81290b67: ret 0xc639;
0xffffffff817fc82d: ret 0xc640;
0xffffffff8253195c: ret 0xc642;
0xffffffff8245936d: ret 0xc644;
0xffffffff8230769b: ret 0xc645;
0xffffffff82433986: ret 0xc648;
0xffffffff8180bdfb: ret 0xc648;
0xffffffff823e0447: ret 0xc64e;
0xffffffff824998ba: ret 0xc652;
0xffffffff824d1e84: ret 0xc653;
0xffffffff8346e118: ret 0xc657;
0xffffffff8345196a: ret 0xc659;
0xffffffff8238e10e: ret 0xc65;
0xffffffff8346e173: ret 0xc666;
0xffffffff8256e479: ret 0xc66e;
0xffffffff824192e3: ret 0xc679;
0xffffffff81c73241: ret 0xc67f;
0xffffffff816ddc31: ret 0xc683;
0xffffffff8223078f: ret 0xc687;
0xffffffff81034aa9: ret 0xc689;
0xffffffff824110da: ret 0xc68c;
0xffffffff824110d9: ret 0xc68c;
0xffffffff81506daa: ret 0xc690;
0xffffffff82403cfd: ret 0xc691;
0xffffffff823f9748: ret 0xc69a;
0xffffffff823537ac: ret 0xc69e;
0xffffffff8126fdc5: ret 0xc6;
0xffffffff824b8fa8: ret 0xc6a2;
0xffffffff8231caa8: ret 0xc6a6;
0xffffffff8248228a: ret 0xc6a7;
0xffffffff8238d959: ret 0xc6a;
0xffffffff82300b43: ret 0xc6aa;
0xffffffff82529dd9: ret 0xc6ae;
0xffffffff82260ec2: ret 0xc6af;
0xffffffff8252e470: ret 0xc6b3;
0xffffffff822d2ea3: ret 0xc6b4;
0xffffffff8236f20e: ret 0xc6b6;
0xffffffff823eb6e8: ret 0xc6b7;
0xffffffff815fc6a7: ret 0xc6c0;
0xffffffff824246d9: ret 0xc6c2;
0xffffffff823370e2: ret 0xc6c4;
0xffffffff811854cc: ret 0xc6c8;
0xffffffff8193abbd: ret 0xc6d0;
0xffffffff82311da2: ret 0xc6d7;
0xffffffff811853b5: ret 0xc6d8;
0xffffffff82502711: ret 0xc6e1;
0xffffffff8244241e: ret 0xc6e5;
0xffffffff8223e112: ret 0xc6e6;
0xffffffff82330d97: ret 0xc6e7;
0xffffffff8143ff94: ret 0xc6e8;
0xffffffff816e4e44: ret 0xc6e9;
0xffffffff810ce5e0: ret 0xc6eb;
0xffffffff8200d08c: ret 0xc6ee;
0xffffffff8200cd2c: ret 0xc6ef;
0xffffffff812b3eae: ret 0xc6f7;
0xffffffff822bd1d2: ret 0xc6fe;
0xffffffff811d7733: ret 0xc700;
0xffffffff8221b7d9: ret 0xc701;
0xffffffff81c42c22: ret 0xc704;
0xffffffff81b63343: ret 0xc709;
0xffffffff817389ae: ret 0xc70;
0xffffffff8228e4e8: ret 0xc70a;
0xffffffff81abfa19: ret 0xc710;
0xffffffff82007bd8: ret 0xc711;
0xffffffff81506dc5: ret 0xc718;
0xffffffff82006288: ret 0xc71e;
0xffffffff811a964e: ret 0xc71f;
0xffffffff824ff4a0: ret 0xc720;
0xffffffff8236b857: ret 0xc721;
0xffffffff82005838: ret 0xc723;
0xffffffff82005364: ret 0xc725;
0xffffffff82005160: ret 0xc726;
0xffffffff822da279: ret 0xc727;
0xffffffff82004d88: ret 0xc728;
0xffffffff8222b634: ret 0xc729;
0xffffffff81185fef: ret 0xc72;
0xffffffff8243a960: ret 0xc72d;
0xffffffff823b13f1: ret 0xc72f;
0xffffffff823b13f2: ret 0xc72f;
0xffffffff8185cb91: ret 0xc730;
0xffffffff8251c9ba: ret 0xc738;
0xffffffff823149d8: ret 0xc739;
0xffffffff8196a941: ret 0xc73;
0xffffffff824e9d24: ret 0xc73a;
0xffffffff815fc727: ret 0xc740;
0xffffffff810465ae: ret 0xc741;
0xffffffff824c1b6c: ret 0xc742;
0xffffffff8100be68: ret 0xc748;
0xffffffff811846db: ret 0xc749;
0xffffffff819be4e7: ret 0xc74;
0xffffffff824bd52e: ret 0xc750;
0xffffffff81a56dca: ret 0xc755;
0xffffffff810be6e9: ret 0xc75;
0xffffffff822f8c75: ret 0xc75a;
0xffffffff822f8c76: ret 0xc75a;
0xffffffff824c41ff: ret 0xc768;
0xffffffff824132e1: ret 0xc769;
0xffffffff813eba5d: ret 0xc76;
0xffffffff8245ce7d: ret 0xc76f;
0xffffffff81b8b076: ret 0xc770;
0xffffffff82242f9c: ret 0xc773;
0xffffffff81b1cce3: ret 0xc775;
0xffffffff824af57c: ret 0xc776;
0xffffffff819677aa: ret 0xc777;
0xffffffff81289322: ret 0xc77;
0xffffffff8246f66e: ret 0xc77a;
0xffffffff8227946e: ret 0xc77b;
0xffffffff812363c6: ret 0xc77c;
0xffffffff82474db4: ret 0xc77e;
0xffffffff8222e564: ret 0xc77f;
0xffffffff824132d6: ret 0xc781;
0xffffffff82540168: ret 0xc782;
0xffffffff823b6b94: ret 0xc783;
0xffffffff8237eb55: ret 0xc788;
0xffffffff810d8cdf: ret 0xc789;
0xffffffff82981ea4: ret 0xc78;
0xffffffff823f0330: ret 0xc78d;
0xffffffff8232daab: ret 0xc78e;
0xffffffff825daf4e: ret 0xc795;
0xffffffff82365f2e: ret 0xc797;
0xffffffff81879e76: ret 0xc798;
0xffffffff81125a88: ret 0xc79;
0xffffffff825364aa: ret 0xc79d;
0xffffffff81003723: ret 0xc7;
0xffffffff8197c782: ret 0xc7a0;
0xffffffff82403b1f: ret 0xc7a6;
0xffffffff822d2d10: ret 0xc7a8;
0xffffffff8229bd6e: ret 0xc7a;
0xffffffff82236b96: ret 0xc7ae;
0xffffffff8180aab1: ret 0xc7b0;
0xffffffff82239b7f: ret 0xc7b2;
0xffffffff824a463e: ret 0xc7b;
0xffffffff8238628b: ret 0xc7ba;
0xffffffff8230b5ee: ret 0xc7bf;
0xffffffff81257e9a: ret 0xc7c0;
0xffffffff82631dcd: ret 0xc7c5;
0xffffffff82231baa: ret 0xc7c8;
0xffffffff822631eb: ret 0xc7cc;
0xffffffff8229b741: ret 0xc7cf;
0xffffffff822e3a49: ret 0xc7d4;
0xffffffff8243fecb: ret 0xc7d8;
0xffffffff81184f23: ret 0xc7e0;
0xffffffff82490868: ret 0xc7e2;
0xffffffff823f8d39: ret 0xc7e6;
0xffffffff811da613: ret 0xc7e8;
0xffffffff8190801e: ret 0xc7ee;
0xffffffff82682412: ret 0xc7f0;
0xffffffff8223fde8: ret 0xc7f3;
0xffffffff816a6fe5: ret 0xc7f7;
0xffffffff82330b3a: ret 0xc7f8;
0xffffffff823d2928: ret 0xc7f9;
0xffffffff835a8e9a: ret 0xc7fd;
0xffffffff814defd2: ret 0xc7ff;
0xffffffff811d6197: ret 0xc801;
0xffffffff819458e4: ret 0xc804;
0xffffffff8249eee1: ret 0xc807;
0xffffffff8171fdfa: ret 0xc808;
0xffffffff8110419c: ret 0xc809;
0xffffffff8246bfec: ret 0xc80d;
0xffffffff834325a3: ret 0xc818;
0xffffffff822c1203: ret 0xc81;
0xffffffff8252d236: ret 0xc81a;
0xffffffff824b6d44: ret 0xc81d;
0xffffffff8228cc21: ret 0xc822;
0xffffffff83498598: ret 0xc823;
0xffffffff81a7c167: ret 0xc828;
0xffffffff813683e4: ret 0xc829;
0xffffffff829832e8: ret 0xc82;
0xffffffff81771eaa: ret 0xc82b;
0xffffffff816b3580: ret 0xc831;
0xffffffff824c8658: ret 0xc833;
0xffffffff82405838: ret 0xc835;
0xffffffff8242c6f7: ret 0xc838;
0xffffffff8188ada5: ret 0xc839;
0xffffffff83454942: ret 0xc83;
0xffffffff8249c311: ret 0xc83a;
0xffffffff815fc827: ret 0xc840;
0xffffffff82486f3f: ret 0xc840;
0xffffffff823c0ff1: ret 0xc844;
0xffffffff82491237: ret 0xc850;
0xffffffff823f2efc: ret 0xc855;
0xffffffff823f2efb: ret 0xc855;
0xffffffff82350c7e: ret 0xc85b;
0xffffffff822d41b0: ret 0xc861;
0xffffffff8253f631: ret 0xc863;
0xffffffff8102a6e4: ret 0xc868;
0xffffffff81a449ba: ret 0xc86a;
0xffffffff823338ee: ret 0xc86f;
0xffffffff822e2f91: ret 0xc870;
0xffffffff82318a46: ret 0xc874;
0xffffffff8111cd2b: ret 0xc875;
0xffffffff8253f8b7: ret 0xc876;
0xffffffff8231cec3: ret 0xc878;
0xffffffff810175c6: ret 0xc87c;
0xffffffff8156c88a: ret 0xc880;
0xffffffff815a0a60: ret 0xc883;
0xffffffff8236b346: ret 0xc886;
0xffffffff812e0e04: ret 0xc889;
0xffffffff811abb4f: ret 0xc88;
0xffffffff8347d288: ret 0xc890;
0xffffffff823c9f96: ret 0xc895;
0xffffffff823617db: ret 0xc896;
0xffffffff81805708: ret 0xc898;
0xffffffff8237841a: ret 0xc89;
0xffffffff82249c7b: ret 0xc89e;
0xffffffff811753b2: ret 0xc8;
0xffffffff824668a5: ret 0xc8a9;
0xffffffff8233aafc: ret 0xc8b0;
0xffffffff82418337: ret 0xc8b9;
0xffffffff8116b6e0: ret 0xc8b;
0xffffffff8238d865: ret 0xc8ba;
0xffffffff82245c75: ret 0xc8bf;
0xffffffff815fc8a7: ret 0xc8c0;
0xffffffff818dd5b2: ret 0xc8c1;
0xffffffff824b561e: ret 0xc8c2;
0xffffffff835a98bc: ret 0xc8c5;
0xffffffff8123c0f2: ret 0xc8c8;
0xffffffff8346173c: ret 0xc8ce;
0xffffffff835a99a8: ret 0xc8d0;
0xffffffff826bdbc5: ret 0xc8d3;
0xffffffff824f3abc: ret 0xc8d5;
0xffffffff8248ccb5: ret 0xc8d9;
0xffffffff813daeba: ret 0xc8d;
0xffffffff82360f2e: ret 0xc8df;
0xffffffff8342b0ea: ret 0xc8e1;
0xffffffff8110e082: ret 0xc8e8;
0xffffffff82494aa6: ret 0xc8e9;
0xffffffff825405b0: ret 0xc8ed;
0xffffffff8255a20c: ret 0xc8f0;
0xffffffff823c066e: ret 0xc8f1;
0xffffffff829840f8: ret 0xc8f;
0xffffffff8200d446: ret 0xc8ff;
0xffffffff81699df0: ret 0xc900;
0xffffffff813aed37: ret 0xc901;
0xffffffff822a61bf: ret 0xc903;
0xffffffff823411aa: ret 0xc905;
0xffffffff823fdcdc: ret 0xc908;
0xffffffff81a80604: ret 0xc90f;
0xffffffff82571599: ret 0xc911;
0xffffffff825661e1: ret 0xc912;
0xffffffff8251d60a: ret 0xc917;
0xffffffff822ebaf9: ret 0xc918;
0xffffffff8224e338: ret 0xc91;
0xffffffff8245fab3: ret 0xc91f;
0xffffffff823525b8: ret 0xc923;
0xffffffff8144a2aa: ret 0xc92e;
0xffffffff82571d79: ret 0xc930;
0xffffffff8103cab2: ret 0xc931;
0xffffffff8231c0ee: ret 0xc936;
0xffffffff82563435: ret 0xc93;
0xffffffff8346ab74: ret 0xc93f;
0xffffffff8228cbaa: ret 0xc942;
0xffffffff823d90a5: ret 0xc944;
0xffffffff8253016e: ret 0xc946;
0xffffffff823b0174: ret 0xc94a;
0xffffffff8344bf1c: ret 0xc94b;
0xffffffff823908d5: ret 0xc94d;
0xffffffff82419aab: ret 0xc957;
0xffffffff8347fc8a: ret 0xc958;
0xffffffff8230b557: ret 0xc95d;
0xffffffff813dab4b: ret 0xc963;
0xffffffff8246154e: ret 0xc965;
0xffffffff823da410: ret 0xc96a;
0xffffffff82445a3c: ret 0xc96c;
0xffffffff82318e7a: ret 0xc96d;
0xffffffff823018e0: ret 0xc970;
0xffffffff8225bca5: ret 0xc971;
0xffffffff8225bca6: ret 0xc971;
0xffffffff823e19fc: ret 0xc979;
0xffffffff8347fcbe: ret 0xc97c;
0xffffffff822d19c9: ret 0xc97f;
0xffffffff822fc5e9: ret 0xc980;
0xffffffff82456891: ret 0xc981;
0xffffffff81ad3ce8: ret 0xc984;
0xffffffff811d7ff4: ret 0xc985;
0xffffffff8172b147: ret 0xc989;
0xffffffff81903811: ret 0xc98;
0xffffffff823d1664: ret 0xc98d;
0xffffffff8347fcd8: ret 0xc98e;
0xffffffff822bdf02: ret 0xc98f;
0xffffffff82984e64: ret 0xc99;
0xffffffff811653a2: ret 0xc9;
0xffffffff817e9f40: ret 0xc9a0;
0xffffffff82985058: ret 0xc9a;
0xffffffff825497e6: ret 0xc9ab;
0xffffffff8347fd13: ret 0xc9ac;
0xffffffff8145c7dd: ret 0xc9b0;
0xffffffff823f8960: ret 0xc9b1;
0xffffffff823e7e11: ret 0xc9ba;
0xffffffff823e7e12: ret 0xc9ba;
0xffffffff8347fd43: ret 0xc9bd;
0xffffffff823d4883: ret 0xc9be;
0xffffffff812ac743: ret 0xc9c0;
0xffffffff818dd5fc: ret 0xc9c1;
0xffffffff83497418: ret 0xc9c7;
0xffffffff822a90b1: ret 0xc9c9;
0xffffffff8246a8ce: ret 0xc9c;
0xffffffff8347fd58: ret 0xc9cb;
0xffffffff82239556: ret 0xc9cd;
0xffffffff812af2a9: ret 0xc9d0;
0xffffffff812af477: ret 0xc9d1;
0xffffffff812ae517: ret 0xc9d2;
0xffffffff82341410: ret 0xc9d5;
0xffffffff823ded09: ret 0xc9d7;
0xffffffff822d4143: ret 0xc9e5;
0xffffffff81012651: ret 0xc9e8;
0xffffffff822ab9bb: ret 0xc9ed;
0xffffffff835a8dfe: ret 0xc9fd;
0xffffffff814d51ad: ret 0xc;
0xffffffff810294b3: ret 0xca00;
0xffffffff8112d709: ret 0xca01;
0xffffffff823d3d4d: ret 0xca06;
0xffffffff810b032a: ret 0xca08;
0xffffffff81148291: ret 0xca09;
0xffffffff8233bd4b: ret 0xca0b;
0xffffffff814296a2: ret 0xca0f;
0xffffffff822e9518: ret 0xca10;
0xffffffff825243af: ret 0xca11;
0xffffffff82315cfc: ret 0xca18;
0xffffffff82315cfb: ret 0xca18;
0xffffffff823b71e0: ret 0xca1;
0xffffffff81011935: ret 0xca20;
0xffffffff813e40d3: ret 0xca21;
0xffffffff822817b2: ret 0xca22;
0xffffffff8234fe27: ret 0xca24;
0xffffffff8342e81b: ret 0xca26;
0xffffffff812fa6b4: ret 0xca28;
0xffffffff8100639b: ret 0xca29;
0xffffffff823eb350: ret 0xca2a;
0xffffffff823f4a4c: ret 0xca2b;
0xffffffff810baf07: ret 0xca30;
0xffffffff8131ff0a: ret 0xca31;
0xffffffff835a9b24: ret 0xca34;
0xffffffff82384e56: ret 0xca35;
0xffffffff825252f9: ret 0xca36;
0xffffffff81a808d6: ret 0xca38;
0xffffffff8148b967: ret 0xca39;
0xffffffff82552b32: ret 0xca3c;
0xffffffff824f7bc5: ret 0xca40;
0xffffffff82415e5d: ret 0xca41;
0xffffffff823de664: ret 0xca42;
0xffffffff82450dc7: ret 0xca44;
0xffffffff82450dc6: ret 0xca44;
0xffffffff8234ac2f: ret 0xca47;
0xffffffff8238e419: ret 0xca48;
0xffffffff823a130c: ret 0xca4;
0xffffffff819a18af: ret 0xca50;
0xffffffff82323d9b: ret 0xca52;
0xffffffff835a9b98: ret 0xca55;
0xffffffff83453709: ret 0xca56;
0xffffffff8232e8b1: ret 0xca60;
0xffffffff824a0fce: ret 0xca61;
0xffffffff818f60ee: ret 0xca69;
0xffffffff82276dc5: ret 0xca6e;
0xffffffff822832ed: ret 0xca71;
0xffffffff81b2d8ba: ret 0xca73;
0xffffffff8110da2f: ret 0xca74;
0xffffffff835a9be4: ret 0xca7b;
0xffffffff8103a6f5: ret 0xca80;
0xffffffff81011f08: ret 0xca81;
0xffffffff81055336: ret 0xca83;
0xffffffff81930395: ret 0xca84;
0xffffffff8102505c: ret 0xca85;
0xffffffff81c66490: ret 0xca89;
0xffffffff82287296: ret 0xca8d;
0xffffffff823c0cff: ret 0xca92;
0xffffffff823d8359: ret 0xca9e;
0xffffffff824c2947: ret 0xcaaa;
0xffffffff823a9d64: ret 0xcaab;
0xffffffff82326794: ret 0xcab4;
0xffffffff8252ff75: ret 0xcab5;
0xffffffff822d0a5f: ret 0xcab6;
0xffffffff823c823e: ret 0xcab;
0xffffffff825d56c5: ret 0xcaba;
0xffffffff815fcaa7: ret 0xcac0;
0xffffffff82404520: ret 0xcac2;
0xffffffff8154ecea: ret 0xcac8;
0xffffffff824d1738: ret 0xcace;
0xffffffff824596c0: ret 0xcad0;
0xffffffff822da939: ret 0xcad1;
0xffffffff8233d97e: ret 0xcad7;
0xffffffff82462976: ret 0xcadb;
0xffffffff835a9cfc: ret 0xcadd;
0xffffffff8169bc39: ret 0xcae0;
0xffffffff8169c6f3: ret 0xcae2;
0xffffffff8169c70e: ret 0xcae3;
0xffffffff822e649a: ret 0xcae4;
0xffffffff823331b1: ret 0xcae7;
0xffffffff81164970: ret 0xcae8;
0xffffffff810b1ceb: ret 0xcae9;
0xffffffff823a55d8: ret 0xcaed;
0xffffffff8254afd1: ret 0xcaef;
0xffffffff816a21d8: ret 0xcaf0;
0xffffffff816a21ef: ret 0xcaf1;
0xffffffff816a3adf: ret 0xcaf2;
0xffffffff816a3975: ret 0xcaf3;
0xffffffff824fa692: ret 0xcaf5;
0xffffffff82257dd8: ret 0xcaff;
0xffffffff8221a829: ret 0xcb01;
0xffffffff82349292: ret 0xcb03;
0xffffffff816a695d: ret 0xcb08;
0xffffffff8228a5a7: ret 0xcb0b;
0xffffffff81362410: ret 0xcb10;
0xffffffff82492382: ret 0xcb1d;
0xffffffff816b1652: ret 0xcb20;
0xffffffff82405c98: ret 0xcb23;
0xffffffff816be773: ret 0xcb28;
0xffffffff816be78d: ret 0xcb29;
0xffffffff822aae68: ret 0xcb2;
0xffffffff82567ec8: ret 0xcb2b;
0xffffffff82558164: ret 0xcb33;
0xffffffff8223aefd: ret 0xcb35;
0xffffffff816bff5f: ret 0xcb38;
0xffffffff8245deab: ret 0xcb3b;
0xffffffff824b93be: ret 0xcb3d;
0xffffffff815fcb27: ret 0xcb40;
0xffffffff82361936: ret 0xcb42;
0xffffffff82549f3a: ret 0xcb45;
0xffffffff816cb7d7: ret 0xcb48;
0xffffffff82345fcb: ret 0xcb4;
0xffffffff8250b465: ret 0xcb4a;
0xffffffff82315c5d: ret 0xcb4c;
0xffffffff82413112: ret 0xcb4e;
0xffffffff8229b01d: ret 0xcb52;
0xffffffff8246a0af: ret 0xcb54;
0xffffffff82318564: ret 0xcb55;
0xffffffff812ba62b: ret 0xcb58;
0xffffffff8344ca0a: ret 0xcb59;
0xffffffff825724d0: ret 0xcb5b;
0xffffffff8161feaa: ret 0xcb5c;
0xffffffff82384467: ret 0xcb5d;
0xffffffff8241a874: ret 0xcb5e;
0xffffffff8239d7e0: ret 0xcb60;
0xffffffff8233a9fb: ret 0xcb65;
0xffffffff82561e5b: ret 0xcb69;
0xffffffff81738bed: ret 0xcb6;
0xffffffff8234f661: ret 0xcb6b;
0xffffffff823a1066: ret 0xcb6c;
0xffffffff8104eceb: ret 0xcb72;
0xffffffff817ca7bc: ret 0xcb73;
0xffffffff823e507b: ret 0xcb74;
0xffffffff81185ac5: ret 0xcb77;
0xffffffff82987ed0: ret 0xcb7;
0xffffffff822e9121: ret 0xcb81;
0xffffffff82475a49: ret 0xcb83;
0xffffffff829880d4: ret 0xcb8;
0xffffffff822ab5bb: ret 0xcb95;
0xffffffff8114ff99: ret 0xcb9;
0xffffffff817cb061: ret 0xcb9c;
0xffffffff81145442: ret 0xcb;
0xffffffff8233f683: ret 0xcba1;
0xffffffff82334782: ret 0xcba2;
0xffffffff82423eca: ret 0xcba5;
0xffffffff823fd661: ret 0xcba7;
0xffffffff82457bf5: ret 0xcba9;
0xffffffff82316753: ret 0xcbad;
0xffffffff818379ab: ret 0xcbb4;
0xffffffff8232a7cd: ret 0xcbb6;
0xffffffff823882f0: ret 0xcbb7;
0xffffffff8133b885: ret 0xcbb;
0xffffffff8346a768: ret 0xcbc3;
0xffffffff823957ea: ret 0xcbc4;
0xffffffff8103558b: ret 0xcbc8;
0xffffffff824f3e01: ret 0xcbc;
0xffffffff8346578a: ret 0xcbca;
0xffffffff8346a796: ret 0xcbcb;
0xffffffff824c5a72: ret 0xcbcd;
0xffffffff8136269b: ret 0xcbd0;
0xffffffff8343443c: ret 0xcbd4;
0xffffffff824a8732: ret 0xcbd5;
0xffffffff81035676: ret 0xcbd8;
0xffffffff822a8f29: ret 0xcbd9;
0xffffffff823d1713: ret 0xcbde;
0xffffffff822f6690: ret 0xcbe3;
0xffffffff8134d88f: ret 0xcbe8;
0xffffffff8247be8e: ret 0xcbe9;
0xffffffff834361bf: ret 0xcbe;
0xffffffff8231145f: ret 0xcbea;
0xffffffff822d8d14: ret 0xcbed;
0xffffffff8344899d: ret 0xcbf1;
0xffffffff82290e26: ret 0xcbf2;
0xffffffff81714ea8: ret 0xcbf9;
0xffffffff81715043: ret 0xcbff;
0xffffffff813626b2: ret 0xcc00;
0xffffffff822c6e4e: ret 0xcc00;
0xffffffff82430a8b: ret 0xcc01;
0xffffffff8223c066: ret 0xcc0a;
0xffffffff822a5847: ret 0xcc0c;
0xffffffff82309171: ret 0xcc15;
0xffffffff8346a88a: ret 0xcc16;
0xffffffff8239b4aa: ret 0xcc1;
0xffffffff81715051: ret 0xcc1b;
0xffffffff8226120c: ret 0xcc1f;
0xffffffff8243e315: ret 0xcc20;
0xffffffff83465813: ret 0xcc24;
0xffffffff8235ae82: ret 0xcc26;
0xffffffff81362748: ret 0xcc30;
0xffffffff822f6dd2: ret 0xcc37;
0xffffffff822baeb8: ret 0xcc39;
0xffffffff82379a0b: ret 0xcc3e;
0xffffffff823f30a0: ret 0xcc41;
0xffffffff8222fd9c: ret 0xcc42;
0xffffffff824bd312: ret 0xcc47;
0xffffffff8227117d: ret 0xcc4b;
0xffffffff8256b04c: ret 0xcc4f;
0xffffffff81a16fba: ret 0xcc51;
0xffffffff8255ed8c: ret 0xcc52;
0xffffffff81715109: ret 0xcc53;
0xffffffff824c7ff3: ret 0xcc54;
0xffffffff8241e9f1: ret 0xcc56;
0xffffffff823b1bc3: ret 0xcc57;
0xffffffff81c0b6c7: ret 0xcc58;
0xffffffff824fc211: ret 0xcc63;
0xffffffff825dcf7c: ret 0xcc6;
0xffffffff82501f0e: ret 0xcc6a;
0xffffffff823d366d: ret 0xcc6f;
0xffffffff8346aa4a: ret 0xcc71;
0xffffffff8249ea9c: ret 0xcc72;
0xffffffff81715298: ret 0xcc73;
0xffffffff8255064b: ret 0xcc76;
0xffffffff824e01d8: ret 0xcc78;
0xffffffff8253a7e5: ret 0xcc7d;
0xffffffff834889da: ret 0xcc80;
0xffffffff824ff886: ret 0xcc81;
0xffffffff8256118e: ret 0xcc8;
0xffffffff8130cb90: ret 0xcc90;
0xffffffff823388ac: ret 0xcc98;
0xffffffff81334ee9: ret 0xcc;
0xffffffff824d3e83: ret 0xccac;
0xffffffff8236145b: ret 0xccaf;
0xffffffff834788d3: ret 0xccb0;
0xffffffff8347892f: ret 0xccb5;
0xffffffff82308e52: ret 0xccb6;
0xffffffff822eb2cf: ret 0xccb9;
0xffffffff81738cd2: ret 0xccb;
0xffffffff823f83d3: ret 0xccba;
0xffffffff82558645: ret 0xccc2;
0xffffffff822363d9: ret 0xccc3;
0xffffffff81407caa: ret 0xccc4;
0xffffffff8165a4bd: ret 0xccc8;
0xffffffff82362732: ret 0xcccd;
0xffffffff822db71f: ret 0xccce;
0xffffffff81811e02: ret 0xccd0;
0xffffffff8237a764: ret 0xccd5;
0xffffffff81811e12: ret 0xccdc;
0xffffffff8240d38b: ret 0xccdf;
0xffffffff82457539: ret 0xcce0;
0xffffffff8161ec8e: ret 0xcce8;
0xffffffff82355ef9: ret 0xcceb;
0xffffffff822337a1: ret 0xcced;
0xffffffff8346aba6: ret 0xccee;
0xffffffff8346043d: ret 0xccf0;
0xffffffff81331f3a: ret 0xccf1;
0xffffffff8346abd8: ret 0xccf7;
0xffffffff823b2f51: ret 0xccf;
0xffffffff8227042b: ret 0xccfd;
0xffffffff8346ac0a: ret 0xccff;
0xffffffff812b9ed0: ret 0xcd00;
0xffffffff81aacaf3: ret 0xcd01;
0xffffffff8231cb65: ret 0xcd03;
0xffffffff82511402: ret 0xcd07;
0xffffffff812b9b31: ret 0xcd09;
0xffffffff81860be4: ret 0xcd0;
0xffffffff812b9b48: ret 0xcd0a;
0xffffffff812b9b5f: ret 0xcd0b;
0xffffffff8346ac66: ret 0xcd0c;
0xffffffff8225c221: ret 0xcd0f;
0xffffffff82494158: ret 0xcd10;
0xffffffff824e9237: ret 0xcd13;
0xffffffff81906566: ret 0xcd15;
0xffffffff812ba71d: ret 0xcd18;
0xffffffff812ba7ad: ret 0xcd19;
0xffffffff812ba80e: ret 0xcd1a;
0xffffffff812ba83d: ret 0xcd1b;
0xffffffff812ba86c: ret 0xcd1c;
0xffffffff812ba89a: ret 0xcd1d;
0xffffffff812ba8b4: ret 0xcd1e;
0xffffffff824b4b15: ret 0xcd1f;
0xffffffff8136286c: ret 0xcd20;
0xffffffff82284d2e: ret 0xcd23;
0xffffffff823cd932: ret 0xcd24;
0xffffffff824d58d7: ret 0xcd28;
0xffffffff825305f1: ret 0xcd2;
0xffffffff82336713: ret 0xcd2c;
0xffffffff822458c5: ret 0xcd32;
0xffffffff82468a23: ret 0xcd3b;
0xffffffff82339964: ret 0xcd41;
0xffffffff811ebb62: ret 0xcd42;
0xffffffff823f7bfc: ret 0xcd4b;
0xffffffff823250de: ret 0xcd4c;
0xffffffff82383c0e: ret 0xcd4d;
0xffffffff8252309c: ret 0xcd50;
0xffffffff8239a275: ret 0xcd59;
0xffffffff82551589: ret 0xcd61;
0xffffffff81bd2e66: ret 0xcd70;
0xffffffff824fd03a: ret 0xcd71;
0xffffffff822ba9ee: ret 0xcd74;
0xffffffff82465332: ret 0xcd7c;
0xffffffff823e163d: ret 0xcd7e;
0xffffffff825243cf: ret 0xcd7f;
0xffffffff825243d0: ret 0xcd7f;
0xffffffff824c8c04: ret 0xcd82;
0xffffffff81a03dba: ret 0xcd83;
0xffffffff8249d3fb: ret 0xcd84;
0xffffffff8344785f: ret 0xcd87;
0xffffffff8168ad5e: ret 0xcd89;
0xffffffff814ab3ec: ret 0xcd8d;
0xffffffff8247ea8f: ret 0xcd90;
0xffffffff8344788d: ret 0xcd93;
0xffffffff8253f8c5: ret 0xcd97;
0xffffffff823667d1: ret 0xcd9a;
0xffffffff823667d0: ret 0xcd9a;
0xffffffff824d2171: ret 0xcd9b;
0xffffffff8346acf7: ret 0xcd9d;
0xffffffff82321b8b: ret 0xcd9e;
0xffffffff8299cfb4: ret 0xcd;
0xffffffff817eccde: ret 0xcda0;
0xffffffff81b41627: ret 0xcda4;
0xffffffff8346ad29: ret 0xcda6;
0xffffffff822abf5c: ret 0xcda8;
0xffffffff8133b9d1: ret 0xcda;
0xffffffff8234ac72: ret 0xcdac;
0xffffffff82240741: ret 0xcdb8;
0xffffffff8230ddf7: ret 0xcdb9;
0xffffffff8248894a: ret 0xcdb;
0xffffffff81534e0a: ret 0xcdbf;
0xffffffff835aa1b0: ret 0xcdc7;
0xffffffff8226fa05: ret 0xcdc8;
0xffffffff824193b4: ret 0xcdca;
0xffffffff834478f2: ret 0xcdd3;
0xffffffff81679f4a: ret 0xcdd8;
0xffffffff823a2009: ret 0xcdd9;
0xffffffff82288ab0: ret 0xcdd;
0xffffffff8132363a: ret 0xcdda;
0xffffffff83447923: ret 0xcddb;
0xffffffff82504679: ret 0xcde3;
0xffffffff825152a1: ret 0xcde5;
0xffffffff81030c2d: ret 0xcde8;
0xffffffff8235ae17: ret 0xcde;
0xffffffff813cd498: ret 0xcdeb;
0xffffffff8190b5e3: ret 0xcdf8;
0xffffffff835a8e12: ret 0xcdfd;
0xffffffff8346ade4: ret 0xcdfe;
0xffffffff822d56ac: ret 0xcdff;
0xffffffff81a49929: ret 0xce01;
0xffffffff82291115: ret 0xce03;
0xffffffff8223e673: ret 0xce05;
0xffffffff8190b5fe: ret 0xce08;
0xffffffff82381df9: ret 0xce0;
0xffffffff8346ae16: ret 0xce0c;
0xffffffff81a805d5: ret 0xce0f;
0xffffffff813628e8: ret 0xce10;
0xffffffff8346ae44: ret 0xce16;
0xffffffff8190b60e: ret 0xce18;
0xffffffff82361192: ret 0xce1;
0xffffffff82361193: ret 0xce1;
0xffffffff8222a6c7: ret 0xce1d;
0xffffffff823a23f2: ret 0xce1f;
0xffffffff8190b61e: ret 0xce28;
0xffffffff8255314f: ret 0xce2c;
0xffffffff83472461: ret 0xce2f;
0xffffffff82354e58: ret 0xce34;
0xffffffff82493dd4: ret 0xce35;
0xffffffff82493dd3: ret 0xce35;
0xffffffff8190b62e: ret 0xce38;
0xffffffff824d4f5d: ret 0xce3f;
0xffffffff8182ccf3: ret 0xce40;
0xffffffff810e8d48: ret 0xce44;
0xffffffff8190b63e: ret 0xce48;
0xffffffff8227ecdb: ret 0xce4c;
0xffffffff8346aecd: ret 0xce4d;
0xffffffff823d8084: ret 0xce4e;
0xffffffff823e6a5a: ret 0xce53;
0xffffffff824cfadd: ret 0xce56;
0xffffffff8190b64e: ret 0xce58;
0xffffffff835a628a: ret 0xce5b;
0xffffffff8246cdc2: ret 0xce5c;
0xffffffff8145cc9d: ret 0xce60;
0xffffffff824bf62d: ret 0xce61;
0xffffffff8252bedf: ret 0xce63;
0xffffffff822de57d: ret 0xce64;
0xffffffff823585d8: ret 0xce66;
0xffffffff8190b65e: ret 0xce68;
0xffffffff81738d79: ret 0xce6;
0xffffffff819ab0cb: ret 0xce6d;
0xffffffff819eccee: ret 0xce70;
0xffffffff8174e35a: ret 0xce73;
0xffffffff8196779e: ret 0xce76;
0xffffffff8190b66e: ret 0xce78;
0xffffffff810b29d3: ret 0xce7a;
0xffffffff815fc27a: ret 0xce7b;
0xffffffff8233abb0: ret 0xce7e;
0xffffffff824ef6c1: ret 0xce83;
0xffffffff82565769: ret 0xce84;
0xffffffff817ce05f: ret 0xce85;
0xffffffff8238fe2d: ret 0xce86;
0xffffffff810b29ee: ret 0xce87;
0xffffffff8190b67e: ret 0xce88;
0xffffffff81003c81: ret 0xce89;
0xffffffff811decfe: ret 0xce8;
0xffffffff810b2a09: ret 0xce94;
0xffffffff8190b68e: ret 0xce98;
0xffffffff824a6f48: ret 0xce9c;
0xffffffff8134c58a: ret 0xce9f;
0xffffffff810b2a24: ret 0xcea0;
0xffffffff824d1cb9: ret 0xcea3;
0xffffffff817ce123: ret 0xcea6;
0xffffffff8190b69e: ret 0xcea8;
0xffffffff82349d12: ret 0xcea9;
0xffffffff8231062b: ret 0xcea;
0xffffffff8248f35b: ret 0xceaa;
0xffffffff811811da: ret 0xceb3;
0xffffffff824f5b12: ret 0xceb4;
0xffffffff8190b6ae: ret 0xceb8;
0xffffffff8111ce19: ret 0xceb;
0xffffffff818df4f0: ret 0xcec1;
0xffffffff8252b24e: ret 0xcec3;
0xffffffff8190b6be: ret 0xcec8;
0xffffffff82310274: ret 0xceca;
0xffffffff82332289: ret 0xced5;
0xffffffff8227b3dc: ret 0xced7;
0xffffffff8190b6ce: ret 0xced8;
0xffffffff82355bd4: ret 0xced9;
0xffffffff812a6d32: ret 0xcede;
0xffffffff817ce1b8: ret 0xcedf;
0xffffffff823fd538: ret 0xcee1;
0xffffffff82516482: ret 0xcee5;
0xffffffff8251efe4: ret 0xcee7;
0xffffffff8190b6de: ret 0xcee8;
0xffffffff823537be: ret 0xcee9;
0xffffffff823537c0: ret 0xcee9;
0xffffffff81bb330c: ret 0xceeb;
0xffffffff8232e8e4: ret 0xceec;
0xffffffff8245f869: ret 0xceee;
0xffffffff823afb81: ret 0xcef7;
0xffffffff824274c9: ret 0xcefe;
0xffffffff810d8cc5: ret 0xcf01;
0xffffffff82564122: ret 0xcf09;
0xffffffff819d3ed0: ret 0xcf0;
0xffffffff824ca116: ret 0xcf0c;
0xffffffff82481190: ret 0xcf10;
0xffffffff8237b82a: ret 0xcf17;
0xffffffff822c5aad: ret 0xcf1f;
0xffffffff8232b27f: ret 0xcf21;
0xffffffff825d55f3: ret 0xcf31;
0xffffffff823b767a: ret 0xcf33;
0xffffffff812e3033: ret 0xcf34;
0xffffffff818f809c: ret 0xcf38;
0xffffffff819d6093: ret 0xcf39;
0xffffffff8227468b: ret 0xcf3;
0xffffffff8256bef2: ret 0xcf3b;
0xffffffff8104c780: ret 0xcf3c;
0xffffffff811bcc0d: ret 0xcf40;
0xffffffff8236d3d6: ret 0xcf41;
0xffffffff8241c495: ret 0xcf42;
0xffffffff822fb77d: ret 0xcf43;
0xffffffff8247ad84: ret 0xcf45;
0xffffffff823b7f5a: ret 0xcf49;
0xffffffff822cfb47: ret 0xcf4c;
0xffffffff82458753: ret 0xcf52;
0xffffffff822abad4: ret 0xcf57;
0xffffffff8255ac42: ret 0xcf58;
0xffffffff823127b7: ret 0xcf5;
0xffffffff811768d2: ret 0xcf5a;
0xffffffff8249f362: ret 0xcf5e;
0xffffffff824a4469: ret 0xcf62;
0xffffffff82447b23: ret 0xcf66;
0xffffffff822f4d00: ret 0xcf6a;
0xffffffff824edaa6: ret 0xcf6f;
0xffffffff818440e1: ret 0xcf72;
0xffffffff8229e084: ret 0xcf7a;
0xffffffff82254be2: ret 0xcf7f;
0xffffffff82470a5a: ret 0xcf82;
0xffffffff816cbe9f: ret 0xcf89;
0xffffffff823ba76e: ret 0xcf8b;
0xffffffff8254b55f: ret 0xcf97;
0xffffffff811053b2: ret 0xcf;
0xffffffff82473332: ret 0xcfa5;
0xffffffff823a5e76: ret 0xcfa6;
0xffffffff8190c917: ret 0xcfa8;
0xffffffff824c5632: ret 0xcfae;
0xffffffff822e4402: ret 0xcfb3;
0xffffffff82278476: ret 0xcfb;
0xffffffff824ff318: ret 0xcfba;
0xffffffff8257376a: ret 0xcfbe;
0xffffffff8251256a: ret 0xcfc4;
0xffffffff823f5cd3: ret 0xcfcb;
0xffffffff813c4512: ret 0xcfd0;
0xffffffff8245b91e: ret 0xcfd6;
0xffffffff8222b127: ret 0xcfd7;
0xffffffff818d1168: ret 0xcfd;
0xffffffff8236df2f: ret 0xcfdd;
0xffffffff82346858: ret 0xcfdd;
0xffffffff823da979: ret 0xcfe7;
0xffffffff81768f6b: ret 0xcfe8;
0xffffffff82572ef5: ret 0xcfea;
0xffffffff8115ef2e: ret 0xcfeb;
0xffffffff82437a9a: ret 0xcfed;
0xffffffff811acee5: ret 0xcff0;
0xffffffff83460ba5: ret 0xcff6;
0xffffffff8253c0cb: ret 0xcffb;
0xffffffff82382da6: ret 0xcffd;
0xffffffff82650026: ret 0xcfff;
0xffffffff8231e1ec: ret 0xd000;
0xffffffff81c6635e: ret 0xd001;
0xffffffff823219ac: ret 0xd006;
0xffffffff81b959e0: ret 0xd008;
0xffffffff81738df8: ret 0xd00;
0xffffffff822c9c1a: ret 0xd00a;
0xffffffff8344f455: ret 0xd00b;
0xffffffff81c5c97c: ret 0xd010;
0xffffffff823f7bad: ret 0xd012;
0xffffffff813c4532: ret 0xd018;
0xffffffff81ba70c3: ret 0xd01;
0xffffffff81a826d2: ret 0xd020;
0xffffffff824d9d7d: ret 0xd026;
0xffffffff81656b50: ret 0xd029;
0xffffffff823ebc2d: ret 0xd02b;
0xffffffff81a7e290: ret 0xd030;
0xffffffff816c6b75: ret 0xd031;
0xffffffff825d6d88: ret 0xd034;
0xffffffff82227b31: ret 0xd035;
0xffffffff8100cadc: ret 0xd038;
0xffffffff823e4d4c: ret 0xd039;
0xffffffff82290e31: ret 0xd03a;
0xffffffff823cd88d: ret 0xd03c;
0xffffffff8246d091: ret 0xd03f;
0xffffffff8103a903: ret 0xd040;
0xffffffff8348645a: ret 0xd044;
0xffffffff8135214a: ret 0xd045;
0xffffffff817cf822: ret 0xd04c;
0xffffffff817cf872: ret 0xd057;
0xffffffff81716a0b: ret 0xd05c;
0xffffffff817cf8b9: ret 0xd060;
0xffffffff8238681f: ret 0xd066;
0xffffffff81617d94: ret 0xd069;
0xffffffff8151b8ba: ret 0xd06a;
0xffffffff81ae0a42: ret 0xd06c;
0xffffffff816d320c: ret 0xd074;
0xffffffff824cee9f: ret 0xd077;
0xffffffff824677a4: ret 0xd079;
0xffffffff823595c1: ret 0xd07c;
0xffffffff81716aa0: ret 0xd07e;
0xffffffff82411d0e: ret 0xd080;
0xffffffff815405dd: ret 0xd084;
0xffffffff8252dad2: ret 0xd086;
0xffffffff810d8c24: ret 0xd089;
0xffffffff8236994b: ret 0xd095;
0xffffffff8253ed2b: ret 0xd09c;
0xffffffff823cc428: ret 0xd09e;
0xffffffff8112367c: ret 0xd0;
0xffffffff81c5ca3e: ret 0xd0a0;
0xffffffff825578e6: ret 0xd0a4;
0xffffffff8225699d: ret 0xd0a6;
0xffffffff823dc1c4: ret 0xd0a7;
0xffffffff82365bce: ret 0xd0a;
0xffffffff82526bfc: ret 0xd0ad;
0xffffffff8126be81: ret 0xd0ae;
0xffffffff8181a80b: ret 0xd0b0;
0xffffffff8247d5ee: ret 0xd0b2;
0xffffffff824ea58d: ret 0xd0b;
0xffffffff81c5ca57: ret 0xd0c0;
0xffffffff82376837: ret 0xd0c5;
0xffffffff83477782: ret 0xd0cb;
0xffffffff83486474: ret 0xd0cf;
0xffffffff8246fe83: ret 0xd0d1;
0xffffffff8224c29f: ret 0xd0d2;
0xffffffff834a15ca: ret 0xd0d4;
0xffffffff81c1332f: ret 0xd0d8;
0xffffffff82406114: ret 0xd0d9;
0xffffffff8298bd14: ret 0xd0d;
0xffffffff8229d8ce: ret 0xd0dd;
0xffffffff8250a5dd: ret 0xd0df;
0xffffffff813917ca: ret 0xd0e8;
0xffffffff81260213: ret 0xd0eb;
0xffffffff8237d475: ret 0xd0ec;
0xffffffff81716e3f: ret 0xd0ed;
0xffffffff81716e8b: ret 0xd0f5;
0xffffffff82568459: ret 0xd0f6;
0xffffffff811624ba: ret 0xd0f7;
0xffffffff823fb7ab: ret 0xd0fb;
0xffffffff8237b48e: ret 0xd0fe;
0xffffffff81535c8c: ret 0xd101;
0xffffffff825120e5: ret 0xd103;
0xffffffff81c668df: ret 0xd105;
0xffffffff816a82cf: ret 0xd108;
0xffffffff815a57aa: ret 0xd10;
0xffffffff8234b9ca: ret 0xd10b;
0xffffffff824c89bc: ret 0xd10c;
0xffffffff82492a42: ret 0xd10e;
0xffffffff825159cf: ret 0xd111;
0xffffffff822cb3f5: ret 0xd115;
0xffffffff824a7cb3: ret 0xd119;
0xffffffff82500d32: ret 0xd11;
0xffffffff82462a9a: ret 0xd11a;
0xffffffff819ca5ba: ret 0xd11b;
0xffffffff81c659b4: ret 0xd11e;
0xffffffff8242ff95: ret 0xd123;
0xffffffff822b292c: ret 0xd125;
0xffffffff819c9aba: ret 0xd126;
0xffffffff8171745c: ret 0xd128;
0xffffffff81553aec: ret 0xd129;
0xffffffff8113d311: ret 0xd131;
0xffffffff824e39f3: ret 0xd134;
0xffffffff81718f0d: ret 0xd138;
0xffffffff81558580: ret 0xd139;
0xffffffff824aea87: ret 0xd144;
0xffffffff810f810c: ret 0xd148;
0xffffffff818f32a6: ret 0xd149;
0xffffffff8298c860: ret 0xd14;
0xffffffff822fb563: ret 0xd14a;
0xffffffff822c23e6: ret 0xd14f;
0xffffffff8181a824: ret 0xd150;
0xffffffff824f7221: ret 0xd157;
0xffffffff8239630b: ret 0xd158;
0xffffffff82506524: ret 0xd15e;
0xffffffff822a1018: ret 0xd165;
0xffffffff8236df00: ret 0xd167;
0xffffffff8248b948: ret 0xd169;
0xffffffff8248b949: ret 0xd169;
0xffffffff8235bbe6: ret 0xd16;
0xffffffff824d704a: ret 0xd16a;
0xffffffff83497dca: ret 0xd16c;
0xffffffff81521f49: ret 0xd170;
0xffffffff822b544a: ret 0xd174;
0xffffffff8146fe0f: ret 0xd175;
0xffffffff8241bac9: ret 0xd179;
0xffffffff8231bf90: ret 0xd17b;
0xffffffff812362c2: ret 0xd17c;
0xffffffff8244cf3d: ret 0xd17f;
0xffffffff8344a801: ret 0xd180;
0xffffffff810dc213: ret 0xd182;
0xffffffff810ea9e7: ret 0xd184;
0xffffffff82316632: ret 0xd186;
0xffffffff810bc3fa: ret 0xd189;
0xffffffff8240e2dd: ret 0xd18e;
0xffffffff824aefb1: ret 0xd192;
0xffffffff823581b1: ret 0xd195;
0xffffffff8234910f: ret 0xd19b;
0xffffffff825481f8: ret 0xd1;
0xffffffff823ba33e: ret 0xd1a3;
0xffffffff823ba33f: ret 0xd1a3;
0xffffffff817cfecb: ret 0xd1a9;
0xffffffff8244aa7b: ret 0xd1a;
0xffffffff8139bf6a: ret 0xd1b3;
0xffffffff82264543: ret 0xd1b4;
0xffffffff824d801f: ret 0xd1b5;
0xffffffff817cfef5: ret 0xd1b7;
0xffffffff82444688: ret 0xd1b;
0xffffffff822f0c7a: ret 0xd1be;
0xffffffff8227daf1: ret 0xd1c4;
0xffffffff817cff1e: ret 0xd1c5;
0xffffffff823a2eae: ret 0xd1c6;
0xffffffff823a2eaf: ret 0xd1c6;
0xffffffff822baadc: ret 0xd1cd;
0xffffffff823e8958: ret 0xd1d0;
0xffffffff810ef99e: ret 0xd1d4;
0xffffffff824d7d1b: ret 0xd1d6;
0xffffffff8235d35d: ret 0xd1d8;
0xffffffff8133be6b: ret 0xd1d;
0xffffffff8344aa7c: ret 0xd1dc;
0xffffffff81718b42: ret 0xd1dd;
0xffffffff8234843d: ret 0xd1de;
0xffffffff824eca6c: ret 0xd1e2;
0xffffffff822fcc2f: ret 0xd1e3;
0xffffffff81624f39: ret 0xd1e8;
0xffffffff810efbd9: ret 0xd1e9;
0xffffffff823b8d8d: ret 0xd1ea;
0xffffffff815f86b2: ret 0xd1eb;
0xffffffff82336466: ret 0xd1ec;
0xffffffff822648a5: ret 0xd1ee;
0xffffffff82422f47: ret 0xd1f1;
0xffffffff823abd6f: ret 0xd1f2;
0xffffffff823906ce: ret 0xd1f3;
0xffffffff8224ea66: ret 0xd1f6;
0xffffffff810bc422: ret 0xd1f7;
0xffffffff8187ea09: ret 0xd1f8;
0xffffffff8226fdbd: ret 0xd1f9;
0xffffffff824b4f42: ret 0xd1f;
0xffffffff8199a5ea: ret 0xd1fa;
0xffffffff816cf92e: ret 0xd1ff;
0xffffffff810ec7e8: ret 0xd200;
0xffffffff813f174d: ret 0xd201;
0xffffffff810f1b02: ret 0xd204;
0xffffffff822b763e: ret 0xd206;
0xffffffff817928c9: ret 0xd208;
0xffffffff823371d7: ret 0xd20;
0xffffffff8246b83e: ret 0xd211;
0xffffffff822ba50a: ret 0xd213;
0xffffffff822ba509: ret 0xd213;
0xffffffff82562bf9: ret 0xd217;
0xffffffff8119c400: ret 0xd218;
0xffffffff8225788b: ret 0xd219;
0xffffffff82394ffc: ret 0xd222;
0xffffffff8240584f: ret 0xd223;
0xffffffff81792b26: ret 0xd228;
0xffffffff8348bcca: ret 0xd22d;
0xffffffff8228c09e: ret 0xd230;
0xffffffff8112c39c: ret 0xd231;
0xffffffff8240f93e: ret 0xd233;
0xffffffff823fbeeb: ret 0xd23c;
0xffffffff810f4468: ret 0xd240;
0xffffffff8235a9c7: ret 0xd243;
0xffffffff81738e82: ret 0xd24;
0xffffffff822904e5: ret 0xd24c;
0xffffffff819ed1f6: ret 0xd250;
0xffffffff8252dd67: ret 0xd253;
0xffffffff82559438: ret 0xd259;
0xffffffff8249cf43: ret 0xd25b;
0xffffffff823116c8: ret 0xd266;
0xffffffff812e99d2: ret 0xd267;
0xffffffff8113cbf3: ret 0xd269;
0xffffffff823a8cc6: ret 0xd26c;
0xffffffff8175e9aa: ret 0xd274;
0xffffffff810f455d: ret 0xd278;
0xffffffff8239433f: ret 0xd280;
0xffffffff819cd541: ret 0xd281;
0xffffffff818c591f: ret 0xd283;
0xffffffff810f3519: ret 0xd284;
0xffffffff8139e6b6: ret 0xd285;
0xffffffff822b536f: ret 0xd289;
0xffffffff823db53e: ret 0xd28;
0xffffffff818f6101: ret 0xd290;
0xffffffff82306281: ret 0xd292;
0xffffffff822b2872: ret 0xd294;
0xffffffff822b2873: ret 0xd294;
0xffffffff82391b42: ret 0xd296;
0xffffffff822d1a2f: ret 0xd29c;
0xffffffff8145bf4b: ret 0xd2a0;
0xffffffff811b2380: ret 0xd2a2;
0xffffffff81891fe2: ret 0xd2a7;
0xffffffff82433e53: ret 0xd2a8;
0xffffffff82489248: ret 0xd2ab;
0xffffffff824e47bd: ret 0xd2ac;
0xffffffff834838ca: ret 0xd2b1;
0xffffffff81639b21: ret 0xd2b6;
0xffffffff835aab38: ret 0xd2b9;
0xffffffff812d563a: ret 0xd2ba;
0xffffffff8165d09a: ret 0xd2bb;
0xffffffff83486576: ret 0xd2bc;
0xffffffff814ac9b7: ret 0xd2be;
0xffffffff823b60ab: ret 0xd2bf;
0xffffffff83486670: ret 0xd2c4;
0xffffffff82563555: ret 0xd2c5;
0xffffffff822bae12: ret 0xd2ca;
0xffffffff8244e2a2: ret 0xd2cc;
0xffffffff834866d4: ret 0xd2d7;
0xffffffff823d5cbf: ret 0xd2db;
0xffffffff82359223: ret 0xd2e2;
0xffffffff8244ff80: ret 0xd2e5;
0xffffffff815c3fe8: ret 0xd2e8;
0xffffffff81c0e168: ret 0xd2e9;
0xffffffff82415100: ret 0xd2ea;
0xffffffff812635e4: ret 0xd2eb;
0xffffffff82428fec: ret 0xd2ec;
0xffffffff810fac0a: ret 0xd2f0;
0xffffffff810fb013: ret 0xd2f1;
0xffffffff823434c3: ret 0xd2f3;
0xffffffff823fe1e7: ret 0xd2f4;
0xffffffff835a0b85: ret 0xd2f5;
0xffffffff81036c2e: ret 0xd2f6;
0xffffffff810f5edb: ret 0xd2f7;
0xffffffff823e2132: ret 0xd2f8;
0xffffffff8141d10b: ret 0xd2fb;
0xffffffff83452d91: ret 0xd2fd;
0xffffffff811083e0: ret 0xd301;
0xffffffff82260f41: ret 0xd302;
0xffffffff823f838a: ret 0xd305;
0xffffffff810f2fdd: ret 0xd309;
0xffffffff822ebd53: ret 0xd30d;
0xffffffff811cd3ca: ret 0xd310;
0xffffffff8141d12c: ret 0xd313;
0xffffffff82541daf: ret 0xd314;
0xffffffff810fde9c: ret 0xd320;
0xffffffff810fded2: ret 0xd321;
0xffffffff811015c2: ret 0xd322;
0xffffffff82316d5e: ret 0xd323;
0xffffffff811023e2: ret 0xd324;
0xffffffff81102ff3: ret 0xd325;
0xffffffff81671a19: ret 0xd328;
0xffffffff8253b8c7: ret 0xd32b;
0xffffffff8243dac0: ret 0xd32c;
0xffffffff8255f568: ret 0xd32d;
0xffffffff816493c0: ret 0xd331;
0xffffffff81618b0b: ret 0xd332;
0xffffffff8249bfb8: ret 0xd336;
0xffffffff81b250db: ret 0xd338;
0xffffffff8173f975: ret 0xd339;
0xffffffff823442b4: ret 0xd33a;
0xffffffff819ad00f: ret 0xd33b;
0xffffffff8240e196: ret 0xd33e;
0xffffffff83452dec: ret 0xd33f;
0xffffffff824bd218: ret 0xd341;
0xffffffff81128b2a: ret 0xd343;
0xffffffff82557dd9: ret 0xd345;
0xffffffff81c1377d: ret 0xd346;
0xffffffff810c1486: ret 0xd348;
0xffffffff818f21a2: ret 0xd349;
0xffffffff81127cb9: ret 0xd350;
0xffffffff81c13879: ret 0xd353;
0xffffffff8254f0b6: ret 0xd354;
0xffffffff82258341: ret 0xd35a;
0xffffffff81c5b1da: ret 0xd35b;
0xffffffff823e2f67: ret 0xd35d;
0xffffffff82237151: ret 0xd363;
0xffffffff82545a87: ret 0xd36a;
0xffffffff817904ab: ret 0xd372;
0xffffffff8224f086: ret 0xd377;
0xffffffff8224b21b: ret 0xd37;
0xffffffff824fd691: ret 0xd37c;
0xffffffff815c39d0: ret 0xd384;
0xffffffff82488ed4: ret 0xd388;
0xffffffff81381fde: ret 0xd389;
0xffffffff8245ad88: ret 0xd391;
0xffffffff822df726: ret 0xd395;
0xffffffff8230ec30: ret 0xd39;
0xffffffff82464c99: ret 0xd39c;
0xffffffff8223f655: ret 0xd39f;
0xffffffff812c4ec8: ret 0xd3;
0xffffffff8242ae74: ret 0xd3a0;
0xffffffff822ab7a7: ret 0xd3a1;
0xffffffff8245ed61: ret 0xd3a3;
0xffffffff8245ed62: ret 0xd3a3;
0xffffffff825d4b99: ret 0xd3a5;
0xffffffff834742ca: ret 0xd3a7;
0xffffffff822dc238: ret 0xd3a;
0xffffffff82358735: ret 0xd3ab;
0xffffffff83473aca: ret 0xd3af;
0xffffffff834736ca: ret 0xd3b3;
0xffffffff8167877e: ret 0xd3b8;
0xffffffff824ede1e: ret 0xd3ba;
0xffffffff81bd36d0: ret 0xd3c0;
0xffffffff8227f300: ret 0xd3c5;
0xffffffff8227f2ff: ret 0xd3c5;
0xffffffff8237f719: ret 0xd3c8;
0xffffffff817394ed: ret 0xd3c;
0xffffffff823136fa: ret 0xd3cb;
0xffffffff824e1f1a: ret 0xd3ce;
0xffffffff824f3df2: ret 0xd3d6;
0xffffffff824faee7: ret 0xd3d7;
0xffffffff81885988: ret 0xd3e0;
0xffffffff82542391: ret 0xd3e2;
0xffffffff8240d89f: ret 0xd3e5;
0xffffffff81c138dc: ret 0xd3e6;
0xffffffff81624e37: ret 0xd3e8;
0xffffffff824a98e4: ret 0xd3e9;
0xffffffff822c44b0: ret 0xd3ea;
0xffffffff824c16a1: ret 0xd3ec;
0xffffffff82521e33: ret 0xd3ed;
0xffffffff81c139f9: ret 0xd3f3;
0xffffffff82247c84: ret 0xd3f5;
0xffffffff8237ed00: ret 0xd3fb;
0xffffffff835a8e85: ret 0xd3fd;
0xffffffff822b4bf9: ret 0xd3fd;
0xffffffff82382e86: ret 0xd402;
0xffffffff822aa26a: ret 0xd404;
0xffffffff8346e3ca: ret 0xd406;
0xffffffff8230aca7: ret 0xd40e;
0xffffffff83447cd6: ret 0xd416;
0xffffffff823f038e: ret 0xd417;
0xffffffff8346cbca: ret 0xd41e;
0xffffffff823dba29: ret 0xd421;
0xffffffff8346c3ca: ret 0xd426;
0xffffffff82521eed: ret 0xd42c;
0xffffffff82305e0c: ret 0xd42e;
0xffffffff82269726: ret 0xd43d;
0xffffffff824f6cc9: ret 0xd448;
0xffffffff822e63d6: ret 0xd449;
0xffffffff823c6a25: ret 0xd44;
0xffffffff822ee635: ret 0xd44d;
0xffffffff8248d118: ret 0xd456;
0xffffffff825d659f: ret 0xd457;
0xffffffff817df28f: ret 0xd459;
0xffffffff822f9ecc: ret 0xd45;
0xffffffff83468fca: ret 0xd45a;
0xffffffff81679cee: ret 0xd460;
0xffffffff822bfd88: ret 0xd464;
0xffffffff82395aaa: ret 0xd466;
0xffffffff8231febb: ret 0xd469;
0xffffffff82439db1: ret 0xd46;
0xffffffff82513bdf: ret 0xd471;
0xffffffff8114b5e2: ret 0xd475;
0xffffffff8196ea40: ret 0xd476;
0xffffffff818fddd5: ret 0xd477;
0xffffffff816da9ca: ret 0xd478;
0xffffffff816e154d: ret 0xd479;
0xffffffff82550a35: ret 0xd47;
0xffffffff816e1f99: ret 0xd47a;
0xffffffff816e3026: ret 0xd47b;
0xffffffff824bfdda: ret 0xd482;
0xffffffff82472018: ret 0xd489;
0xffffffff824ba3ec: ret 0xd48d;
0xffffffff81c13f30: ret 0xd48e;
0xffffffff8246ebd8: ret 0xd493;
0xffffffff824dcda4: ret 0xd498;
0xffffffff8299235c: ret 0xd49;
0xffffffff81c14034: ret 0xd49a;
0xffffffff83452ada: ret 0xd49c;
0xffffffff82491f86: ret 0xd49f;
0xffffffff810b5442: ret 0xd4;
0xffffffff823bbac9: ret 0xd4a0;
0xffffffff81c14355: ret 0xd4a8;
0xffffffff8133bd73: ret 0xd4a;
0xffffffff83463dca: ret 0xd4ac;
0xffffffff8347272f: ret 0xd4b0;
0xffffffff824213ab: ret 0xd4b9;
0xffffffff82434361: ret 0xd4b;
0xffffffff8233648f: ret 0xd4ba;
0xffffffff81c14552: ret 0xd4bd;
0xffffffff8145a4ea: ret 0xd4c0;
0xffffffff81939fba: ret 0xd4c2;
0xffffffff823a859a: ret 0xd4c4;
0xffffffff816f9245: ret 0xd4c5;
0xffffffff812b443a: ret 0xd4cc;
0xffffffff82316f49: ret 0xd4d0;
0xffffffff83460fca: ret 0xd4da;
0xffffffff822f7997: ret 0xd4dc;
0xffffffff82348d06: ret 0xd4e2;
0xffffffff8226d286: ret 0xd4e3;
0xffffffff8240e5c1: ret 0xd4e4;
0xffffffff822ff8c4: ret 0xd4e5;
0xffffffff815fb186: ret 0xd4e8;
0xffffffff811a84c6: ret 0xd4e9;
0xffffffff82992b50: ret 0xd4e;
0xffffffff82337e13: ret 0xd4eb;
0xffffffff8344ce11: ret 0xd4ec;
0xffffffff8171a821: ret 0xd4ef;
0xffffffff812d7b3a: ret 0xd4f0;
0xffffffff83452f70: ret 0xd4f1;
0xffffffff82404fb7: ret 0xd4f4;
0xffffffff819b1adb: ret 0xd4f8;
0xffffffff823632bc: ret 0xd4fe;
0xffffffff8200d43a: ret 0xd4ff;
0xffffffff822a0e41: ret 0xd501;
0xffffffff8197b0ba: ret 0xd503;
0xffffffff8233ee74: ret 0xd50a;
0xffffffff8170addc: ret 0xd516;
0xffffffff823feffe: ret 0xd51f;
0xffffffff83433aa4: ret 0xd520;
0xffffffff82280674: ret 0xd522;
0xffffffff8170e394: ret 0xd524;
0xffffffff8170e3ae: ret 0xd525;
0xffffffff8170e3c8: ret 0xd526;
0xffffffff8170e3e2: ret 0xd527;
0xffffffff8170e3f9: ret 0xd528;
0xffffffff8234f10f: ret 0xd52b;
0xffffffff812c2a10: ret 0xd530;
0xffffffff812c2a42: ret 0xd531;
0xffffffff812cd327: ret 0xd532;
0xffffffff81378834: ret 0xd539;
0xffffffff819b49fa: ret 0xd53a;
0xffffffff82454976: ret 0xd53d;
0xffffffff8227ee16: ret 0xd53e;
0xffffffff812d46db: ret 0xd540;
0xffffffff83460ec6: ret 0xd545;
0xffffffff83459dca: ret 0xd54c;
0xffffffff835aaf7c: ret 0xd54d;
0xffffffff8252f5c9: ret 0xd54e;
0xffffffff8254837e: ret 0xd559;
0xffffffff8171a83e: ret 0xd560;
0xffffffff82470406: ret 0xd564;
0xffffffff82355d80: ret 0xd565;
0xffffffff82284d7b: ret 0xd568;
0xffffffff823a87d4: ret 0xd569;
0xffffffff824d92ce: ret 0xd571;
0xffffffff82486ede: ret 0xd573;
0xffffffff8240c77d: ret 0xd574;
0xffffffff822dffcc: ret 0xd576;
0xffffffff8232a7c4: ret 0xd577;
0xffffffff822fbefd: ret 0xd578;
0xffffffff8228599a: ret 0xd579;
0xffffffff8229365b: ret 0xd57b;
0xffffffff82492b71: ret 0xd57c;
0xffffffff83460e98: ret 0xd57d;
0xffffffff82440d86: ret 0xd57f;
0xffffffff8127d565: ret 0xd580;
0xffffffff83460f84: ret 0xd588;
0xffffffff81950ae5: ret 0xd58;
0xffffffff82232d61: ret 0xd58e;
0xffffffff82279595: ret 0xd590;
0xffffffff82416b6c: ret 0xd593;
0xffffffff824b7c77: ret 0xd59d;
0xffffffff812a4e1d: ret 0xd5;
0xffffffff822da128: ret 0xd5a2;
0xffffffff822c5d35: ret 0xd5a7;
0xffffffff82549189: ret 0xd5aa;
0xffffffff8242401d: ret 0xd5b2;
0xffffffff8241b9ac: ret 0xd5b5;
0xffffffff8190d3be: ret 0xd5b6;
0xffffffff82341ba7: ret 0xd5b;
0xffffffff8196f5ba: ret 0xd5be;
0xffffffff81c29b1a: ret 0xd5bf;
0xffffffff824a8731: ret 0xd5c2;
0xffffffff82488969: ret 0xd5c;
0xffffffff834610a6: ret 0xd5cc;
0xffffffff822e771f: ret 0xd5ce;
0xffffffff8118d5c1: ret 0xd5d0;
0xffffffff823f87b1: ret 0xd5d5;
0xffffffff8137a614: ret 0xd5d8;
0xffffffff82265ba4: ret 0xd5da;
0xffffffff81c140cd: ret 0xd5de;
0xffffffff823eb0dc: ret 0xd5df;
0xffffffff8118cd9f: ret 0xd5e0;
0xffffffff822df89c: ret 0xd5e4;
0xffffffff8119fc75: ret 0xd5e8;
0xffffffff8196b822: ret 0xd5eb;
0xffffffff8246d779: ret 0xd5ee;
0xffffffff825d597a: ret 0xd5ef;
0xffffffff8255b0c9: ret 0xd5f2;
0xffffffff823d5e68: ret 0xd5f3;
0xffffffff81aa09ed: ret 0xd5f7;
0xffffffff8224c76f: ret 0xd602;
0xffffffff822a572c: ret 0xd608;
0xffffffff824989bb: ret 0xd614;
0xffffffff82531371: ret 0xd61b;
0xffffffff82311bf5: ret 0xd61f;
0xffffffff82509b28: ret 0xd620;
0xffffffff8246a993: ret 0xd621;
0xffffffff83460fe6: ret 0xd624;
0xffffffff8267e521: ret 0xd629;
0xffffffff83461164: ret 0xd62b;
0xffffffff8346104a: ret 0xd62f;
0xffffffff815ecb0a: ret 0xd630;
0xffffffff8165cdb5: ret 0xd631;
0xffffffff8239dd7c: ret 0xd634;
0xffffffff8239dd7d: ret 0xd634;
0xffffffff8168b62f: ret 0xd635;
0xffffffff82460a22: ret 0xd636;
0xffffffff8148f6cf: ret 0xd639;
0xffffffff823b84ca: ret 0xd63b;
0xffffffff8159d64a: ret 0xd640;
0xffffffff83453295: ret 0xd646;
0xffffffff8173929f: ret 0xd64;
0xffffffff822c586f: ret 0xd64b;
0xffffffff83449dca: ret 0xd64c;
0xffffffff822d0eba: ret 0xd64d;
0xffffffff824d107f: ret 0xd64e;
0xffffffff8256c599: ret 0xd653;
0xffffffff822494ba: ret 0xd654;
0xffffffff8246366c: ret 0xd65f;
0xffffffff8135126a: ret 0xd660;
0xffffffff822608c6: ret 0xd662;
0xffffffff82317c4f: ret 0xd667;
0xffffffff81915d0a: ret 0xd66b;
0xffffffff834611f4: ret 0xd66d;
0xffffffff8171aec2: ret 0xd671;
0xffffffff82501ffd: ret 0xd672;
0xffffffff82472483: ret 0xd676;
0xffffffff81521f2a: ret 0xd67a;
0xffffffff82313022: ret 0xd67b;
0xffffffff82397f47: ret 0xd67d;
0xffffffff8240c4b2: ret 0xd684;
0xffffffff823303cc: ret 0xd687;
0xffffffff811fb300: ret 0xd689;
0xffffffff82277e0f: ret 0xd68;
0xffffffff8250aafd: ret 0xd68c;
0xffffffff82535944: ret 0xd691;
0xffffffff82269b54: ret 0xd692;
0xffffffff8238ade0: ret 0xd693;
0xffffffff822b237a: ret 0xd695;
0xffffffff822e43fb: ret 0xd697;
0xffffffff822fe564: ret 0xd699;
0xffffffff8252bcfe: ret 0xd69;
0xffffffff824ac888: ret 0xd69d;
0xffffffff81294ee6: ret 0xd6;
0xffffffff8232b2ee: ret 0xd6a1;
0xffffffff834612bc: ret 0xd6a3;
0xffffffff8171ae65: ret 0xd6a9;
0xffffffff83461323: ret 0xd6aa;
0xffffffff83461358: ret 0xd6b6;
0xffffffff8133af54: ret 0xd6b;
0xffffffff8228f0c0: ret 0xd6bd;
0xffffffff8347d959: ret 0xd6bf;
0xffffffff8346138d: ret 0xd6c3;
0xffffffff8190950a: ret 0xd6c4;
0xffffffff834533d1: ret 0xd6c9;
0xffffffff822878f0: ret 0xd6cc;
0xffffffff822878ef: ret 0xd6cc;
0xffffffff8171bc93: ret 0xd6d5;
0xffffffff82384e5e: ret 0xd6db;
0xffffffff8253d1f8: ret 0xd6df;
0xffffffff817bd671: ret 0xd6e0;
0xffffffff8151db8a: ret 0xd6e2;
0xffffffff835ab2d0: ret 0xd6e3;
0xffffffff8195ce2a: ret 0xd6e5;
0xffffffff81445f40: ret 0xd6e8;
0xffffffff81419a34: ret 0xd6e9;
0xffffffff824b2464: ret 0xd6ee;
0xffffffff822a0fa3: ret 0xd6f1;
0xffffffff823d6c03: ret 0xd6f7;
0xffffffff8247ad39: ret 0xd6f9;
0xffffffff823de929: ret 0xd6ff;
0xffffffff81108429: ret 0xd701;
0xffffffff8240936a: ret 0xd705;
0xffffffff818bb3fa: ret 0xd709;
0xffffffff824512a9: ret 0xd70;
0xffffffff822f66e2: ret 0xd70b;
0xffffffff8255d25d: ret 0xd70d;
0xffffffff824bc107: ret 0xd70f;
0xffffffff8248574e: ret 0xd710;
0xffffffff8248574f: ret 0xd710;
0xffffffff824d8fe9: ret 0xd713;
0xffffffff823e23e6: ret 0xd718;
0xffffffff823b394b: ret 0xd71;
0xffffffff824c959e: ret 0xd71d;
0xffffffff82443901: ret 0xd722;
0xffffffff835ab39c: ret 0xd724;
0xffffffff82386762: ret 0xd726;
0xffffffff81a782da: ret 0xd729;
0xffffffff815644c5: ret 0xd72;
0xffffffff82274fa0: ret 0xd72f;
0xffffffff81ac896c: ret 0xd731;
0xffffffff81919e55: ret 0xd739;
0xffffffff81693eb3: ret 0xd73;
0xffffffff822877ae: ret 0xd73b;
0xffffffff8104c72e: ret 0xd73c;
0xffffffff8192f9c0: ret 0xd740;
0xffffffff82300d42: ret 0xd743;
0xffffffff823f81ce: ret 0xd745;
0xffffffff82514b01: ret 0xd746;
0xffffffff82310a32: ret 0xd748;
0xffffffff82263635: ret 0xd749;
0xffffffff8175ce73: ret 0xd74;
0xffffffff8239198c: ret 0xd751;
0xffffffff8157341a: ret 0xd75;
0xffffffff81c153c5: ret 0xd762;
0xffffffff8253b1cd: ret 0xd763;
0xffffffff81793696: ret 0xd768;
0xffffffff823c3327: ret 0xd76b;
0xffffffff81c1392d: ret 0xd776;
0xffffffff81008cb7: ret 0xd77;
0xffffffff8189d1c6: ret 0xd780;
0xffffffff82412329: ret 0xd782;
0xffffffff813e34d5: ret 0xd785;
0xffffffff822cd6ad: ret 0xd786;
0xffffffff81c15527: ret 0xd789;
0xffffffff822d70be: ret 0xd78;
0xffffffff823f03b3: ret 0xd78c;
0xffffffff822f7632: ret 0xd793;
0xffffffff82295b96: ret 0xd794;
0xffffffff82568973: ret 0xd798;
0xffffffff8171c71d: ret 0xd79e;
0xffffffff829a98f0: ret 0xd7;
0xffffffff81bed625: ret 0xd7a0;
0xffffffff82245d8a: ret 0xd7a1;
0xffffffff823609d3: ret 0xd7a3;
0xffffffff8196868a: ret 0xd7a6;
0xffffffff82275471: ret 0xd7a8;
0xffffffff823eecab: ret 0xd7a9;
0xffffffff8222bc5b: ret 0xd7ad;
0xffffffff8346153a: ret 0xd7af;
0xffffffff823862b9: ret 0xd7b1;
0xffffffff82489bd9: ret 0xd7b4;
0xffffffff8245449e: ret 0xd7b5;
0xffffffff81839a18: ret 0xd7b5;
0xffffffff82495417: ret 0xd7b7;
0xffffffff82495418: ret 0xd7b7;
0xffffffff813e35cf: ret 0xd7b8;
0xffffffff823d47cd: ret 0xd7bb;
0xffffffff8346160e: ret 0xd7bd;
0xffffffff82310b0f: ret 0xd7c9;
0xffffffff824a3ad3: ret 0xd7cc;
0xffffffff824a52ab: ret 0xd7d3;
0xffffffff834616a9: ret 0xd7d5;
0xffffffff8240067a: ret 0xd7d6;
0xffffffff8230b4eb: ret 0xd7d8;
0xffffffff8236c13d: ret 0xd7d9;
0xffffffff823da08f: ret 0xd7d;
0xffffffff8236f971: ret 0xd7dd;
0xffffffff824bac13: ret 0xd7de;
0xffffffff823afc02: ret 0xd7e4;
0xffffffff813e2f63: ret 0xd7e8;
0xffffffff813e3619: ret 0xd7e9;
0xffffffff82266572: ret 0xd7f;
0xffffffff82438d01: ret 0xd7fa;
0xffffffff835a8e9e: ret 0xd7fd;
0xffffffff8239e824: ret 0xd7fe;
0xffffffff81aacb17: ret 0xd801;
0xffffffff824303fb: ret 0xd802;
0xffffffff8223bc02: ret 0xd806;
0xffffffff817d0ada: ret 0xd80;
0xffffffff824e09d6: ret 0xd80b;
0xffffffff8104defd: ret 0xd810;
0xffffffff823c347b: ret 0xd814;
0xffffffff82409acc: ret 0xd816;
0xffffffff8256ba8b: ret 0xd81;
0xffffffff83486825: ret 0xd81a;
0xffffffff82357903: ret 0xd81c;
0xffffffff82471be3: ret 0xd81f;
0xffffffff81c0ec1a: ret 0xd821;
0xffffffff82257623: ret 0xd822;
0xffffffff8118d672: ret 0xd828;
0xffffffff819c062c: ret 0xd82a;
0xffffffff824529fb: ret 0xd839;
0xffffffff824511fc: ret 0xd83e;
0xffffffff824ffbd9: ret 0xd83f;
0xffffffff823eb35e: ret 0xd843;
0xffffffff822cde58: ret 0xd847;
0xffffffff822c7e0d: ret 0xd848;
0xffffffff824df461: ret 0xd84;
0xffffffff81384d7a: ret 0xd84b;
0xffffffff822e898d: ret 0xd858;
0xffffffff82510d65: ret 0xd85c;
0xffffffff813e50cd: ret 0xd85d;
0xffffffff82459498: ret 0xd861;
0xffffffff8245def3: ret 0xd862;
0xffffffff824f199f: ret 0xd864;
0xffffffff81c07fca: ret 0xd869;
0xffffffff824d4e2a: ret 0xd86a;
0xffffffff8246000a: ret 0xd86f;
0xffffffff8172ab3e: ret 0xd872;
0xffffffff822facfa: ret 0xd873;
0xffffffff810dbd12: ret 0xd874;
0xffffffff82471549: ret 0xd875;
0xffffffff824b472b: ret 0xd878;
0xffffffff8249870b: ret 0xd87;
0xffffffff813e58bb: ret 0xd881;
0xffffffff83491dbc: ret 0xd883;
0xffffffff811ae300: ret 0xd888;
0xffffffff816c6a17: ret 0xd889;
0xffffffff8171741b: ret 0xd88c;
0xffffffff8171b9fc: ret 0xd88e;
0xffffffff825ce873: ret 0xd890;
0xffffffff8234fc05: ret 0xd897;
0xffffffff8119f3a7: ret 0xd89;
0xffffffff834618fa: ret 0xd89a;
0xffffffff8139e50e: ret 0xd8;
0xffffffff813e5f83: ret 0xd8a2;
0xffffffff8234c3d7: ret 0xd8a7;
0xffffffff83480926: ret 0xd8a8;
0xffffffff812dcd65: ret 0xd8a;
0xffffffff818e9dda: ret 0xd8ac;
0xffffffff8232402d: ret 0xd8b5;
0xffffffff8171ba4d: ret 0xd8b6;
0xffffffff8171bd11: ret 0xd8b8;
0xffffffff82442ea8: ret 0xd8b9;
0xffffffff8100e492: ret 0xd8b;
0xffffffff813e40b9: ret 0xd8c4;
0xffffffff823ff380: ret 0xd8ca;
0xffffffff8171be2e: ret 0xd8cc;
0xffffffff81217565: ret 0xd8d0;
0xffffffff824b5bdb: ret 0xd8d3;
0xffffffff8344d845: ret 0xd8d5;
0xffffffff822626c4: ret 0xd8d;
0xffffffff82304843: ret 0xd8da;
0xffffffff8193d72a: ret 0xd8dc;
0xffffffff8229faf2: ret 0xd8e1;
0xffffffff83452e80: ret 0xd8e3;
0xffffffff824dcbe4: ret 0xd8e4;
0xffffffff8101f03e: ret 0xd8e8;
0xffffffff82350412: ret 0xd8e9;
0xffffffff83453030: ret 0xd8eb;
0xffffffff813e3dfb: ret 0xd8ee;
0xffffffff82422eba: ret 0xd8f2;
0xffffffff825cf472: ret 0xd8f6;
0xffffffff811cfe27: ret 0xd8f7;
0xffffffff835a8e5a: ret 0xd8fd;
0xffffffff8165ce27: ret 0xd901;
0xffffffff823e6013: ret 0xd904;
0xffffffff822db7e2: ret 0xd905;
0xffffffff8234dbdb: ret 0xd907;
0xffffffff823ea2bc: ret 0xd90;
0xffffffff8230a7da: ret 0xd911;
0xffffffff82253753: ret 0xd913;
0xffffffff83461a1c: ret 0xd914;
0xffffffff822c85c0: ret 0xd918;
0xffffffff82520203: ret 0xd91;
0xffffffff822e2bec: ret 0xd91b;
0xffffffff823b2821: ret 0xd91c;
0xffffffff81217787: ret 0xd920;
0xffffffff8172178c: ret 0xd921;
0xffffffff817217bb: ret 0xd922;
0xffffffff834533fe: ret 0xd924;
0xffffffff815fdb28: ret 0xd928;
0xffffffff8230a672: ret 0xd929;
0xffffffff82387fc6: ret 0xd92a;
0xffffffff8226c116: ret 0xd92c;
0xffffffff817269a8: ret 0xd930;
0xffffffff813e6d9d: ret 0xd933;
0xffffffff8137482d: ret 0xd939;
0xffffffff8227431a: ret 0xd93;
0xffffffff8152a27a: ret 0xd93a;
0xffffffff83461ae0: ret 0xd93b;
0xffffffff82408081: ret 0xd93d;
0xffffffff82235b15: ret 0xd93f;
0xffffffff83461a80: ret 0xd944;
0xffffffff81713b65: ret 0xd948;
0xffffffff834536d9: ret 0xd94b;
0xffffffff813e6f02: ret 0xd950;
0xffffffff8246e0dd: ret 0xd954;
0xffffffff823af580: ret 0xd955;
0xffffffff82383d64: ret 0xd959;
0xffffffff8121779d: ret 0xd960;
0xffffffff824f6ac9: ret 0xd962;
0xffffffff82570be8: ret 0xd963;
0xffffffff82570be9: ret 0xd963;
0xffffffff822a89e3: ret 0xd968;
0xffffffff81739190: ret 0xd96;
0xffffffff82390217: ret 0xd96c;
0xffffffff823d67ec: ret 0xd96f;
0xffffffff8345379f: ret 0xd970;
0xffffffff81492c8d: ret 0xd972;
0xffffffff81a394ee: ret 0xd973;
0xffffffff834537d4: ret 0xd977;
0xffffffff823bb885: ret 0xd97;
0xffffffff812362ba: ret 0xd97f;
0xffffffff824cb3cb: ret 0xd980;
0xffffffff814f3b8a: ret 0xd982;
0xffffffff813e7c0e: ret 0xd985;
0xffffffff824e1e7b: ret 0xd986;
0xffffffff81136e50: ret 0xd989;
0xffffffff823ea59a: ret 0xd98a;
0xffffffff8190d726: ret 0xd98d;
0xffffffff824e162b: ret 0xd98e;
0xffffffff82274876: ret 0xd992;
0xffffffff8153e11a: ret 0xd99d;
0xffffffff8246e291: ret 0xd99f;
0xffffffff82341d7f: ret 0xd9;
0xffffffff822ec86d: ret 0xd9a1;
0xffffffff8225e9a2: ret 0xd9a7;
0xffffffff824f7659: ret 0xd9a8;
0xffffffff82315264: ret 0xd9ab;
0xffffffff81413bea: ret 0xd9af;
0xffffffff8223770f: ret 0xd9b5;
0xffffffff813e8629: ret 0xd9b9;
0xffffffff824be558: ret 0xd9b;
0xffffffff82546363: ret 0xd9ba;
0xffffffff82564811: ret 0xd9be;
0xffffffff83453869: ret 0xd9c1;
0xffffffff8251400e: ret 0xd9c5;
0xffffffff823c121b: ret 0xd9cb;
0xffffffff824ae7dd: ret 0xd9cc;
0xffffffff8243f5b2: ret 0xd9cd;
0xffffffff8231496f: ret 0xd9d0;
0xffffffff8238c17d: ret 0xd9d1;
0xffffffff822725a9: ret 0xd9d5;
0xffffffff83461c06: ret 0xd9d9;
0xffffffff834276b9: ret 0xd9dc;
0xffffffff83461ba2: ret 0xd9dd;
0xffffffff81888687: ret 0xd9e0;
0xffffffff82261871: ret 0xd9e5;
0xffffffff83461c38: ret 0xd9e6;
0xffffffff811e8881: ret 0xd9e8;
0xffffffff82304875: ret 0xd9eb;
0xffffffff83461d00: ret 0xd9f0;
0xffffffff8242524f: ret 0xd9f1;
0xffffffff816b426b: ret 0xd9f6;
0xffffffff81537604: ret 0xd9f7;
0xffffffff83461d64: ret 0xd9f8;
0xffffffff8133c247: ret 0xd9f;
0xffffffff82260e1e: ret 0xd9fb;
0xffffffff823d5f78: ret 0xd9fd;
0xffffffff83461d32: ret 0xd9fe;
0xffffffff811cc91e: ret 0xd;
0xffffffff8188869e: ret 0xda00;
0xffffffff8171da17: ret 0xda01;
0xffffffff824e579a: ret 0xda02;
0xffffffff83461dc7: ret 0xda05;
0xffffffff82319624: ret 0xda06;
0xffffffff82319623: ret 0xda06;
0xffffffff824f5d58: ret 0xda07;
0xffffffff81013615: ret 0xda08;
0xffffffff815ed4d6: ret 0xda09;
0xffffffff81026042: ret 0xda0;
0xffffffff813eb496: ret 0xda0b;
0xffffffff822b2559: ret 0xda0e;
0xffffffff813fd4f5: ret 0xda10;
0xffffffff824429f5: ret 0xda11;
0xffffffff8226c76a: ret 0xda17;
0xffffffff824370d3: ret 0xda1;
0xffffffff8227237c: ret 0xda1c;
0xffffffff82327874: ret 0xda1d;
0xffffffff8237439b: ret 0xda1f;
0xffffffff81282973: ret 0xda20;
0xffffffff824bc075: ret 0xda23;
0xffffffff814e998a: ret 0xda24;
0xffffffff822f14f0: ret 0xda25;
0xffffffff813ebc72: ret 0xda26;
0xffffffff811624dd: ret 0xda29;
0xffffffff816e0fbc: ret 0xda30;
0xffffffff8228a79b: ret 0xda34;
0xffffffff81b0acc7: ret 0xda39;
0xffffffff823794b0: ret 0xda3b;
0xffffffff82477147: ret 0xda3f;
0xffffffff818886cc: ret 0xda40;
0xffffffff824328cd: ret 0xda41;
0xffffffff823b038b: ret 0xda42;
0xffffffff81c59798: ret 0xda48;
0xffffffff81c597b5: ret 0xda49;
0xffffffff822a696c: ret 0xda4;
0xffffffff81c597d4: ret 0xda4a;
0xffffffff81c597ee: ret 0xda4b;
0xffffffff81c5981d: ret 0xda4c;
0xffffffff81c5b647: ret 0xda4d;
0xffffffff81c5b65e: ret 0xda4e;
0xffffffff81c5e0d2: ret 0xda50;
0xffffffff823b1263: ret 0xda51;
0xffffffff824d6b51: ret 0xda52;
0xffffffff8342ee72: ret 0xda53;
0xffffffff824f5307: ret 0xda54;
0xffffffff82286f03: ret 0xda57;
0xffffffff8238cc0b: ret 0xda5;
0xffffffff8242f841: ret 0xda5b;
0xffffffff825245ba: ret 0xda5c;
0xffffffff818886e6: ret 0xda60;
0xffffffff817e5e16: ret 0xda69;
0xffffffff813ebcac: ret 0xda6a;
0xffffffff824754c6: ret 0xda6d;
0xffffffff8225ed83: ret 0xda6e;
0xffffffff825d62c4: ret 0xda71;
0xffffffff81493651: ret 0xda72;
0xffffffff816f94cf: ret 0xda75;
0xffffffff8253cf38: ret 0xda77;
0xffffffff82423938: ret 0xda7a;
0xffffffff824cdfaf: ret 0xda7b;
0xffffffff824cdfae: ret 0xda7b;
0xffffffff818cca82: ret 0xda7d;
0xffffffff82694587: ret 0xda7e;
0xffffffff81888700: ret 0xda80;
0xffffffff8256415a: ret 0xda83;
0xffffffff813ebcf4: ret 0xda85;
0xffffffff81531dba: ret 0xda87;
0xffffffff8224cf80: ret 0xda8b;
0xffffffff835ab960: ret 0xda8c;
0xffffffff8249259a: ret 0xda8f;
0xffffffff81c3d564: ret 0xda90;
0xffffffff82572fc0: ret 0xda95;
0xffffffff82522d18: ret 0xda96;
0xffffffff822dc7e2: ret 0xda9c;
0xffffffff824b5882: ret 0xda9d;
0xffffffff810553f2: ret 0xda;
0xffffffff8188871a: ret 0xdaa0;
0xffffffff8171e3a3: ret 0xdaa1;
0xffffffff82373551: ret 0xdaa2;
0xffffffff82532f4f: ret 0xdaa3;
0xffffffff8224b929: ret 0xdaa4;
0xffffffff8235b054: ret 0xdaa7;
0xffffffff825630a0: ret 0xdaaf;
0xffffffff81ae58bb: ret 0xdab0;
0xffffffff811a486c: ret 0xdab2;
0xffffffff822ea019: ret 0xdab4;
0xffffffff8228dc48: ret 0xdab7;
0xffffffff8190e5aa: ret 0xdab8;
0xffffffff81888734: ret 0xdac0;
0xffffffff8346a9b3: ret 0xdac2;
0xffffffff81be0dda: ret 0xdac4;
0xffffffff823d6759: ret 0xdac7;
0xffffffff813ebcd8: ret 0xdac9;
0xffffffff82509bba: ret 0xdaca;
0xffffffff83461eba: ret 0xdacf;
0xffffffff81c5e39b: ret 0xdad1;
0xffffffff81c5e512: ret 0xdad3;
0xffffffff81c5fb13: ret 0xdad4;
0xffffffff822f5571: ret 0xdad5;
0xffffffff8171e288: ret 0xdadd;
0xffffffff824aea05: ret 0xdadf;
0xffffffff8188874e: ret 0xdae0;
0xffffffff811de700: ret 0xdae8;
0xffffffff8102fb60: ret 0xdae9;
0xffffffff81ba09c4: ret 0xdae;
0xffffffff81864942: ret 0xdaeb;
0xffffffff835aba10: ret 0xdaee;
0xffffffff8175d01a: ret 0xdaf1;
0xffffffff813ebd1a: ret 0xdaf3;
0xffffffff81b0c8e9: ret 0xdaf6;
0xffffffff81000412: ret 0xdaf7;
0xffffffff81526fca: ret 0xdaf8;
0xffffffff810e1391: ret 0xdb00;
0xffffffff825dac88: ret 0xdb02;
0xffffffff8235f6f9: ret 0xdb03;
0xffffffff8251fee2: ret 0xdb04;
0xffffffff8236da1a: ret 0xdb0b;
0xffffffff824a2338: ret 0xdb0d;
0xffffffff823e64d4: ret 0xdb0f;
0xffffffff8170c6e3: ret 0xdb10;
0xffffffff8174d9a3: ret 0xdb11;
0xffffffff8233b134: ret 0xdb19;
0xffffffff8233b135: ret 0xdb19;
0xffffffff8254f21f: ret 0xdb1b;
0xffffffff83461f15: ret 0xdb1d;
0xffffffff822376a1: ret 0xdb1f;
0xffffffff818887a9: ret 0xdb20;
0xffffffff8248aff1: ret 0xdb26;
0xffffffff83461f43: ret 0xdb2a;
0xffffffff813eb8ef: ret 0xdb2b;
0xffffffff824b5c27: ret 0xdb2c;
0xffffffff810c626d: ret 0xdb31;
0xffffffff82374b9b: ret 0xdb32;
0xffffffff82301f71: ret 0xdb3a;
0xffffffff8149636e: ret 0xdb40;
0xffffffff8346ad57: ret 0xdb41;
0xffffffff8254f3ca: ret 0xdb43;
0xffffffff8245ea99: ret 0xdb48;
0xffffffff8241a619: ret 0xdb49;
0xffffffff8229ffe9: ret 0xdb4c;
0xffffffff823aca56: ret 0xdb4f;
0xffffffff813eba1a: ret 0xdb52;
0xffffffff823f08f5: ret 0xdb54;
0xffffffff8346203b: ret 0xdb58;
0xffffffff8232c11a: ret 0xdb59;
0xffffffff8299d83c: ret 0xdb5;
0xffffffff823b12b3: ret 0xdb5e;
0xffffffff818887d7: ret 0xdb60;
0xffffffff8230a626: ret 0xdb64;
0xffffffff8249fd0c: ret 0xdb64;
0xffffffff8346209e: ret 0xdb68;
0xffffffff8256d5c7: ret 0xdb69;
0xffffffff824d4745: ret 0xdb6d;
0xffffffff8226ab21: ret 0xdb70;
0xffffffff8348ca25: ret 0xdb71;
0xffffffff81746ae2: ret 0xdb72;
0xffffffff81a3952b: ret 0xdb73;
0xffffffff8239c1ad: ret 0xdb74;
0xffffffff818fe323: ret 0xdb75;
0xffffffff813ebd62: ret 0xdb76;
0xffffffff817e3f41: ret 0xdb7c;
0xffffffff8227afc0: ret 0xdb7e;
0xffffffff8227afc1: ret 0xdb7e;
0xffffffff823907bb: ret 0xdb7f;
0xffffffff818887ee: ret 0xdb80;
0xffffffff812f8673: ret 0xdb85;
0xffffffff8348cabb: ret 0xdb87;
0xffffffff83480cd3: ret 0xdb88;
0xffffffff822e060f: ret 0xdb8b;
0xffffffff813ebd7d: ret 0xdb8c;
0xffffffff8170c6f3: ret 0xdb90;
0xffffffff824bc8be: ret 0xdb91;
0xffffffff8173997e: ret 0xdb9;
0xffffffff82325c9d: ret 0xdb9a;
0xffffffff81045422: ret 0xdb;
0xffffffff81888808: ret 0xdba0;
0xffffffff82308e3f: ret 0xdba3;
0xffffffff813eba32: ret 0xdba4;
0xffffffff83480e23: ret 0xdba7;
0xffffffff8253b8fe: ret 0xdba8;
0xffffffff8233b5c7: ret 0xdbab;
0xffffffff822e3140: ret 0xdbae;
0xffffffff8241da11: ret 0xdbb0;
0xffffffff822f493d: ret 0xdbb4;
0xffffffff8243b7ac: ret 0xdbbc;
0xffffffff81888822: ret 0xdbc0;
0xffffffff81287976: ret 0xdbc2;
0xffffffff81244b3a: ret 0xdbc5;
0xffffffff813e9c28: ret 0xdbc6;
0xffffffff8251873a: ret 0xdbc7;
0xffffffff8173d8d3: ret 0xdbc8;
0xffffffff8105e64a: ret 0xdbc9;
0xffffffff8255935e: ret 0xdbcb;
0xffffffff824aa2e7: ret 0xdbcc;
0xffffffff82391d31: ret 0xdbcd;
0xffffffff8348cdaf: ret 0xdbd0;
0xffffffff824bff46: ret 0xdbd3;
0xffffffff8173da30: ret 0xdbd4;
0xffffffff822c529a: ret 0xdbd5;
0xffffffff82680f97: ret 0xdbd9;
0xffffffff8240e47c: ret 0xdbd;
0xffffffff824b930f: ret 0xdbdf;
0xffffffff81bf206a: ret 0xdbe0;
0xffffffff82526ddc: ret 0xdbe1;
0xffffffff82513562: ret 0xdbe4;
0xffffffff8223426f: ret 0xdbe5;
0xffffffff811b536f: ret 0xdbe8;
0xffffffff81c04c6a: ret 0xdbe;
0xffffffff823daade: ret 0xdbeb;
0xffffffff813e9c51: ret 0xdbed;
0xffffffff823bc3d8: ret 0xdbf4;
0xffffffff817e2b03: ret 0xdbf;
0xffffffff823eb5d5: ret 0xdbff;
0xffffffff825731e8: ret 0xdc06;
0xffffffff812bfc16: ret 0xdc08;
0xffffffff834988bb: ret 0xdc0;
0xffffffff8251b633: ret 0xdc0b;
0xffffffff82241597: ret 0xdc12;
0xffffffff823a10b7: ret 0xdc16;
0xffffffff813ea325: ret 0xdc1d;
0xffffffff8153b58a: ret 0xdc24;
0xffffffff8245e1f1: ret 0xdc26;
0xffffffff823b8184: ret 0xdc29;
0xffffffff823f0306: ret 0xdc2a;
0xffffffff8233ed77: ret 0xdc2c;
0xffffffff8348d04f: ret 0xdc2f;
0xffffffff823c07a2: ret 0xdc3;
0xffffffff824d8c8d: ret 0xdc3a;
0xffffffff8253f59c: ret 0xdc40;
0xffffffff810718ed: ret 0xdc41;
0xffffffff813ea2fe: ret 0xdc43;
0xffffffff822c26ae: ret 0xdc48;
0xffffffff810718e8: ret 0xdc49;
0xffffffff8239d613: ret 0xdc4d;
0xffffffff810718e3: ret 0xdc51;
0xffffffff817df4b0: ret 0xdc53;
0xffffffff810718de: ret 0xdc59;
0xffffffff824a0773: ret 0xdc59;
0xffffffff824fc54a: ret 0xdc5b;
0xffffffff822e4e4c: ret 0xdc60;
0xffffffff810718d9: ret 0xdc61;
0xffffffff8348d12d: ret 0xdc68;
0xffffffff810718d4: ret 0xdc69;
0xffffffff8250227e: ret 0xdc6b;
0xffffffff814ad23c: ret 0xdc70;
0xffffffff810718cf: ret 0xdc71;
0xffffffff813ea702: ret 0xdc73;
0xffffffff810ab2ac: ret 0xdc79;
0xffffffff819c6d1c: ret 0xdc84;
0xffffffff822f17f6: ret 0xdc87;
0xffffffff8173ec62: ret 0xdc88;
0xffffffff82356ec9: ret 0xdc8b;
0xffffffff8236ea38: ret 0xdc8c;
0xffffffff8234b981: ret 0xdc8f;
0xffffffff82340cf5: ret 0xdc92;
0xffffffff82340cf6: ret 0xdc92;
0xffffffff81026075: ret 0xdc9;
0xffffffff810353c2: ret 0xdc;
0xffffffff822fa738: ret 0xdca4;
0xffffffff82293cdf: ret 0xdca5;
0xffffffff823df118: ret 0xdca8;
0xffffffff82250e4a: ret 0xdcab;
0xffffffff82424a3d: ret 0xdcaf;
0xffffffff822e7dae: ret 0xdcb0;
0xffffffff82535885: ret 0xdcb6;
0xffffffff8174d358: ret 0xdcb8;
0xffffffff817e31f6: ret 0xdcb;
0xffffffff813ec5e6: ret 0xdcbb;
0xffffffff822c52dd: ret 0xdcbc;
0xffffffff8252d396: ret 0xdcbd;
0xffffffff82275d8a: ret 0xdcc0;
0xffffffff8346fc4c: ret 0xdcc2;
0xffffffff8348d30b: ret 0xdcc3;
0xffffffff82477a10: ret 0xdcc6;
0xffffffff8244edb6: ret 0xdcc8;
0xffffffff8227e982: ret 0xdcca;
0xffffffff8246527b: ret 0xdccc;
0xffffffff82316e06: ret 0xdcd2;
0xffffffff82698dbe: ret 0xdcd3;
0xffffffff815fed31: ret 0xdcd7;
0xffffffff8348d36f: ret 0xdcd8;
0xffffffff8342d34b: ret 0xdcd9;
0xffffffff824686ba: ret 0xdcd;
0xffffffff822545f1: ret 0xdcdb;
0xffffffff82513ee7: ret 0xdcdd;
0xffffffff8227d73d: ret 0xdcde;
0xffffffff8348d39d: ret 0xdce5;
0xffffffff81736648: ret 0xdce8;
0xffffffff81af93ce: ret 0xdce9;
0xffffffff822e83bf: ret 0xdce;
0xffffffff8348d3cb: ret 0xdcef;
0xffffffff82530dbb: ret 0xdcf4;
0xffffffff829a0124: ret 0xdcf;
0xffffffff82317343: ret 0xdcfc;
0xffffffff818dd75d: ret 0xdd01;
0xffffffff823288ed: ret 0xdd0b;
0xffffffff824e9629: ret 0xdd10;
0xffffffff82411872: ret 0xdd14;
0xffffffff822a5aab: ret 0xdd17;
0xffffffff8223b637: ret 0xdd1d;
0xffffffff8250af10: ret 0xdd1f;
0xffffffff8226cdd4: ret 0xdd22;
0xffffffff825d7dbe: ret 0xdd26;
0xffffffff824601ba: ret 0xdd2d;
0xffffffff823f1af1: ret 0xdd38;
0xffffffff823b2d86: ret 0xdd3b;
0xffffffff8256898a: ret 0xdd3f;
0xffffffff810719f4: ret 0xdd41;
0xffffffff817d379e: ret 0xdd47;
0xffffffff810719e8: ret 0xdd49;
0xffffffff82487ad7: ret 0xdd4;
0xffffffff810719dc: ret 0xdd51;
0xffffffff82538897: ret 0xdd52;
0xffffffff810719d0: ret 0xdd59;
0xffffffff82501535: ret 0xdd5a;
0xffffffff810719c4: ret 0xdd61;
0xffffffff82251cac: ret 0xdd62;
0xffffffff82238399: ret 0xdd65;
0xffffffff8253d180: ret 0xdd66;
0xffffffff810719b8: ret 0xdd69;
0xffffffff817d3742: ret 0xdd6a;
0xffffffff8348d53c: ret 0xdd6b;
0xffffffff82333436: ret 0xdd6e;
0xffffffff824bce97: ret 0xdd6f;
0xffffffff810719ac: ret 0xdd71;
0xffffffff823ed732: ret 0xdd74;
0xffffffff8196a917: ret 0xdd76;
0xffffffff82446ab6: ret 0xdd77;
0xffffffff810ab30e: ret 0xdd79;
0xffffffff835abe3c: ret 0xdd7a;
0xffffffff823fc444: ret 0xdd7d;
0xffffffff822e040a: ret 0xdd80;
0xffffffff8245bac8: ret 0xdd86;
0xffffffff82316fdb: ret 0xdd8a;
0xffffffff824c413f: ret 0xdd8b;
0xffffffff8228f1c3: ret 0xdd8e;
0xffffffff8222deef: ret 0xdd92;
0xffffffff8163a2b9: ret 0xdd94;
0xffffffff8253c690: ret 0xdd98;
0xffffffff8253c68f: ret 0xdd98;
0xffffffff82226e17: ret 0xdd9c;
0xffffffff83470098: ret 0xdda1;
0xffffffff822ab7ed: ret 0xdda2;
0xffffffff82527b26: ret 0xddb1;
0xffffffff822fa76e: ret 0xddb2;
0xffffffff83481159: ret 0xddb4;
0xffffffff817d3c47: ret 0xddb5;
0xffffffff81287a07: ret 0xddb6;
0xffffffff814f295a: ret 0xddb7;
0xffffffff822f3928: ret 0xddb9;
0xffffffff8157ddc6: ret 0xddbc;
0xffffffff822e3b0d: ret 0xddbf;
0xffffffff834899f4: ret 0xddc0;
0xffffffff823d1822: ret 0xddc2;
0xffffffff8251c2f2: ret 0xddc7;
0xffffffff817e323f: ret 0xddc;
0xffffffff8254773b: ret 0xddcb;
0xffffffff822f1cf4: ret 0xddcc;
0xffffffff81344653: ret 0xddd5;
0xffffffff8225292e: ret 0xddd;
0xffffffff834626fa: ret 0xdddf;
0xffffffff8191ea2a: ret 0xdde1;
0xffffffff8237a1e6: ret 0xdde2;
0xffffffff811c2c6d: ret 0xdde8;
0xffffffff811df516: ret 0xdde9;
0xffffffff8133ab9d: ret 0xdde;
0xffffffff819536ec: ret 0xddeb;
0xffffffff823d2c6b: ret 0xddec;
0xffffffff825678ce: ret 0xddee;
0xffffffff822441e1: ret 0xddef;
0xffffffff8245a33b: ret 0xddf3;
0xffffffff8268f823: ret 0xddf4;
0xffffffff822ae690: ret 0xddf8;
0xffffffff825223a3: ret 0xddfd;
0xffffffff8165ccaa: ret 0xde01;
0xffffffff814b30a4: ret 0xde06;
0xffffffff822de446: ret 0xde07;
0xffffffff82344669: ret 0xde0e;
0xffffffff822676b9: ret 0xde14;
0xffffffff823e6c09: ret 0xde19;
0xffffffff814c84b5: ret 0xde1;
0xffffffff82358ea6: ret 0xde1d;
0xffffffff82538031: ret 0xde1e;
0xffffffff814ad27c: ret 0xde20;
0xffffffff8233e498: ret 0xde22;
0xffffffff82374d14: ret 0xde23;
0xffffffff817d3bfb: ret 0xde28;
0xffffffff82326ab6: ret 0xde2a;
0xffffffff81456469: ret 0xde30;
0xffffffff813b895a: ret 0xde32;
0xffffffff8225df4f: ret 0xde37;
0xffffffff82327e36: ret 0xde3;
0xffffffff8236dac6: ret 0xde3c;
0xffffffff824880b6: ret 0xde40;
0xffffffff817d3e32: ret 0xde44;
0xffffffff835ac068: ret 0xde46;
0xffffffff823e2da2: ret 0xde4b;
0xffffffff82315c7e: ret 0xde53;
0xffffffff83484e02: ret 0xde54;
0xffffffff8119e92b: ret 0xde56;
0xffffffff82246687: ret 0xde57;
0xffffffff8225a1d5: ret 0xde58;
0xffffffff823a9a8a: ret 0xde59;
0xffffffff817e328a: ret 0xde5;
0xffffffff822e6722: ret 0xde5c;
0xffffffff825333fb: ret 0xde5d;
0xffffffff823ab705: ret 0xde5f;
0xffffffff8247aa3f: ret 0xde63;
0xffffffff813ecad1: ret 0xde66;
0xffffffff82318ff0: ret 0xde73;
0xffffffff811aaaa1: ret 0xde76;
0xffffffff825d6732: ret 0xde77;
0xffffffff824ab0bc: ret 0xde78;
0xffffffff82330724: ret 0xde7e;
0xffffffff82570f2d: ret 0xde7f;
0xffffffff825d85c7: ret 0xde80;
0xffffffff8250efb2: ret 0xde87;
0xffffffff822a1768: ret 0xde88;
0xffffffff81001809: ret 0xde8;
0xffffffff824d9905: ret 0xde8b;
0xffffffff8226ce8b: ret 0xde8f;
0xffffffff82416d29: ret 0xde91;
0xffffffff817d3e84: ret 0xde94;
0xffffffff8233cfc0: ret 0xde9a;
0xffffffff8346666b: ret 0xde9b;
0xffffffff81015392: ret 0xde;
0xffffffff8248f170: ret 0xdea1;
0xffffffff822a737a: ret 0xdea5;
0xffffffff813eb0a8: ret 0xdead;
0xffffffff81721a01: ret 0xdeb2;
0xffffffff824c749d: ret 0xdeb3;
0xffffffff823a55c6: ret 0xdeb5;
0xffffffff82328ed2: ret 0xdeb6;
0xffffffff817a0d86: ret 0xdeb8;
0xffffffff81455e88: ret 0xdeb;
0xffffffff822776fe: ret 0xdebe;
0xffffffff818b47a4: ret 0xdebf;
0xffffffff8162c8a4: ret 0xdec0;
0xffffffff81721a22: ret 0xdec4;
0xffffffff82239b0c: ret 0xdec7;
0xffffffff8250a2c2: ret 0xdec;
0xffffffff8344b2f7: ret 0xded0;
0xffffffff8344d4fc: ret 0xded4;
0xffffffff813eb46b: ret 0xded8;
0xffffffff824d4c52: ret 0xded9;
0xffffffff822f66d9: ret 0xdede;
0xffffffff8232294e: ret 0xdedf;
0xffffffff81335119: ret 0xdee0;
0xffffffff822ff3ca: ret 0xdee1;
0xffffffff823c8f19: ret 0xdee2;
0xffffffff834706bb: ret 0xdee4;
0xffffffff82294d47: ret 0xdee6;
0xffffffff8115156c: ret 0xdee8;
0xffffffff824bc6f4: ret 0xdee;
0xffffffff824bc6f3: ret 0xdee;
0xffffffff834706e9: ret 0xdeee;
0xffffffff822741bc: ret 0xdeef;
0xffffffff8241e04b: ret 0xdef8;
0xffffffff82416940: ret 0xdef9;
0xffffffff81c1adad: ret 0xdefb;
0xffffffff82367230: ret 0xdeff;
0xffffffff822f2815: ret 0xdf00;
0xffffffff81aae160: ret 0xdf01;
0xffffffff8230f66f: ret 0xdf0a;
0xffffffff823ebc3c: ret 0xdf0c;
0xffffffff82508fbf: ret 0xdf11;
0xffffffff823c8c88: ret 0xdf15;
0xffffffff8252af91: ret 0xdf1a;
0xffffffff8237d394: ret 0xdf1d;
0xffffffff82259a68: ret 0xdf20;
0xffffffff82478c59: ret 0xdf22;
0xffffffff817e3279: ret 0xdf2;
0xffffffff824df730: ret 0xdf2c;
0xffffffff811bc548: ret 0xdf2e;
0xffffffff8246d3fd: ret 0xdf2f;
0xffffffff83470744: ret 0xdf31;
0xffffffff823d5782: ret 0xdf32;
0xffffffff811bc4cb: ret 0xdf38;
0xffffffff8102610b: ret 0xdf3;
0xffffffff824dd7ab: ret 0xdf3b;
0xffffffff8226f5fd: ret 0xdf3d;
0xffffffff8130d75a: ret 0xdf3f;
0xffffffff8237231a: ret 0xdf40;
0xffffffff823c20a6: ret 0xdf46;
0xffffffff823e01f4: ret 0xdf48;
0xffffffff8222fddd: ret 0xdf4d;
0xffffffff8120df31: ret 0xdf50;
0xffffffff82260b43: ret 0xdf51;
0xffffffff824d85c3: ret 0xdf55;
0xffffffff8234c888: ret 0xdf56;
0xffffffff825d8c11: ret 0xdf57;
0xffffffff823ac8f6: ret 0xdf5;
0xffffffff81478e5a: ret 0xdf5a;
0xffffffff823ad57e: ret 0xdf5b;
0xffffffff82444544: ret 0xdf5f;
0xffffffff82330489: ret 0xdf62;
0xffffffff8149cff2: ret 0xdf63;
0xffffffff824cf238: ret 0xdf66;
0xffffffff8174ddc2: ret 0xdf68;
0xffffffff823ecefd: ret 0xdf6a;
0xffffffff81c6decd: ret 0xdf73;
0xffffffff81739a4b: ret 0xdf7;
0xffffffff82408497: ret 0xdf7e;
0xffffffff823ef924: ret 0xdf81;
0xffffffff81493a8a: ret 0xdf83;
0xffffffff818c77fa: ret 0xdf84;
0xffffffff819ef17a: ret 0xdf85;
0xffffffff8134d59a: ret 0xdf86;
0xffffffff825156b1: ret 0xdf87;
0xffffffff83470985: ret 0xdf89;
0xffffffff824bc40a: ret 0xdf8;
0xffffffff82351148: ret 0xdf8f;
0xffffffff82321065: ret 0xdf93;
0xffffffff823b6248: ret 0xdf95;
0xffffffff834709b6: ret 0xdf98;
0xffffffff8232ef03: ret 0xdf9d;
0xffffffff810053f2: ret 0xdf;
0xffffffff82371ef0: ret 0xdfa0;
0xffffffff82233f70: ret 0xdfad;
0xffffffff8228c62f: ret 0xdfb1;
0xffffffff8234e1cd: ret 0xdfb4;
0xffffffff82441c52: ret 0xdfb6;
0xffffffff819e0113: ret 0xdfb9;
0xffffffff82232206: ret 0xdfbe;
0xffffffff823eef2e: ret 0xdfc2;
0xffffffff8240ea47: ret 0xdfc3;
0xffffffff826816e3: ret 0xdfc4;
0xffffffff8232c862: ret 0xdfc9;
0xffffffff82262069: ret 0xdfc;
0xffffffff8240f048: ret 0xdfcb;
0xffffffff8173cee5: ret 0xdfd1;
0xffffffff823e0f7f: ret 0xdfd3;
0xffffffff81229272: ret 0xdfd5;
0xffffffff8133b17e: ret 0xdfd;
0xffffffff811bca88: ret 0xdfdb;
0xffffffff814ad2bc: ret 0xdfe0;
0xffffffff811c283f: ret 0xdfe2;
0xffffffff8104404b: ret 0xdfe8;
0xffffffff81b4021e: ret 0xdfe9;
0xffffffff819152d1: ret 0xdfea;
0xffffffff8245a6ce: ret 0xdfeb;
0xffffffff82341910: ret 0xdfee;
0xffffffff810335f2: ret 0xdff1;
0xffffffff823d780a: ret 0xdff2;
0xffffffff811bcf5b: ret 0xdff3;
0xffffffff822cce12: ret 0xdff5;
0xffffffff824606a5: ret 0xdff6;
0xffffffff81915310: ret 0xdffa;
0xffffffff8164c93a: ret 0xdffb;
0xffffffff824ca70c: ret 0xdffc;
0xffffffff8225469e: ret 0xdffe;
0xffffffff82485762: ret 0xdfff;
0xffffffff834732bb: ret 0xe002;
0xffffffff8254c1f9: ret 0xe003;
0xffffffff8254c1fa: ret 0xe003;
0xffffffff823c4a1b: ret 0xe008;
0xffffffff824a3776: ret 0xe00b;
0xffffffff824261ec: ret 0xe010;
0xffffffff823ed7b0: ret 0xe018;
0xffffffff81026280: ret 0xe01;
0xffffffff82435f84: ret 0xe01c;
0xffffffff8117a803: ret 0xe022;
0xffffffff835ac4ac: ret 0xe027;
0xffffffff824467e8: ret 0xe029;
0xffffffff8192a368: ret 0xe02a;
0xffffffff83496063: ret 0xe030;
0xffffffff8253d77d: ret 0xe035;
0xffffffff8253d77c: ret 0xe035;
0xffffffff82405cea: ret 0xe036;
0xffffffff817e32d0: ret 0xe03;
0xffffffff82421a53: ret 0xe03b;
0xffffffff81620e0f: ret 0xe03c;
0xffffffff824e6d2e: ret 0xe043;
0xffffffff81276948: ret 0xe045;
0xffffffff8146b7c1: ret 0xe04;
0xffffffff8249ed5c: ret 0xe05b;
0xffffffff819d44e3: ret 0xe060;
0xffffffff83470c33: ret 0xe063;
0xffffffff82320e79: ret 0xe06;
0xffffffff83470cc5: ret 0xe06f;
0xffffffff815e1515: ret 0xe074;
0xffffffff8197c362: ret 0xe076;
0xffffffff823dac1c: ret 0xe078;
0xffffffff824580e1: ret 0xe07;
0xffffffff824580e2: ret 0xe07;
0xffffffff812af76a: ret 0xe07b;
0xffffffff8174d2a3: ret 0xe07c;
0xffffffff8174d2f1: ret 0xe07d;
0xffffffff8174d342: ret 0xe07e;
0xffffffff8125985e: ret 0xe083;
0xffffffff8222ef53: ret 0xe086;
0xffffffff82430fb0: ret 0xe089;
0xffffffff82557cf1: ret 0xe08c;
0xffffffff824d2fe2: ret 0xe08d;
0xffffffff82315b5a: ret 0xe08e;
0xffffffff82437e18: ret 0xe094;
0xffffffff824bcd21: ret 0xe098;
0xffffffff8250a41a: ret 0xe099;
0xffffffff8242cca9: ret 0xe09b;
0xffffffff811c264d: ret 0xe0;
0xffffffff822e63ab: ret 0xe0a0;
0xffffffff82508f68: ret 0xe0a2;
0xffffffff825506a3: ret 0xe0a6;
0xffffffff82276857: ret 0xe0a7;
0xffffffff82397556: ret 0xe0ac;
0xffffffff8230cccb: ret 0xe0ae;
0xffffffff823faeea: ret 0xe0b0;
0xffffffff8257274b: ret 0xe0b2;
0xffffffff8247de25: ret 0xe0b3;
0xffffffff82326a31: ret 0xe0be;
0xffffffff8187a731: ret 0xe0bf;
0xffffffff81522b53: ret 0xe0c0;
0xffffffff8176f087: ret 0xe0c1;
0xffffffff8256ca08: ret 0xe0c6;
0xffffffff8243b05f: ret 0xe0c7;
0xffffffff822ba4d5: ret 0xe0ca;
0xffffffff825d6032: ret 0xe0d1;
0xffffffff8256d013: ret 0xe0d3;
0xffffffff8239ac7f: ret 0xe0d5;
0xffffffff8175563a: ret 0xe0e0;
0xffffffff8346ad85: ret 0xe0e2;
0xffffffff8254c25d: ret 0xe0e3;
0xffffffff822c89fa: ret 0xe0e6;
0xffffffff8228b30d: ret 0xe0e7;
0xffffffff8191e0ba: ret 0xe0e8;
0xffffffff8247f2d4: ret 0xe0ee;
0xffffffff8255016f: ret 0xe0f4;
0xffffffff813eb2af: ret 0xe0ff;
0xffffffff81c69235: ret 0xe100;
0xffffffff8347dfa5: ret 0xe101;
0xffffffff82271247: ret 0xe104;
0xffffffff822c2cce: ret 0xe106;
0xffffffff822c2ccd: ret 0xe106;
0xffffffff83470e42: ret 0xe108;
0xffffffff810260d6: ret 0xe10;
0xffffffff835ac4e4: ret 0xe10a;
0xffffffff8122a45c: ret 0xe110;
0xffffffff822de1a9: ret 0xe114;
0xffffffff817e32c2: ret 0xe11;
0xffffffff8237a13b: ret 0xe11a;
0xffffffff812a0a2a: ret 0xe11e;
0xffffffff813eb51e: ret 0xe120;
0xffffffff823d05ff: ret 0xe12e;
0xffffffff813fe0d5: ret 0xe130;
0xffffffff8222dffa: ret 0xe131;
0xffffffff824342fc: ret 0xe133;
0xffffffff822e140d: ret 0xe135;
0xffffffff81b8715a: ret 0xe13;
0xffffffff813eb450: ret 0xe13e;
0xffffffff8247f2f5: ret 0xe13f;
0xffffffff82392928: ret 0xe149;
0xffffffff8224e3ce: ret 0xe14d;
0xffffffff8345410a: ret 0xe14f;
0xffffffff8239c97b: ret 0xe156;
0xffffffff8228bb42: ret 0xe157;
0xffffffff82278ba7: ret 0xe15;
0xffffffff813eb2d6: ret 0xe15b;
0xffffffff82231ac1: ret 0xe15d;
0xffffffff8345419a: ret 0xe15e;
0xffffffff824f1128: ret 0xe160;
0xffffffff82497a12: ret 0xe161;
0xffffffff817a00f1: ret 0xe168;
0xffffffff829a66b0: ret 0xe16;
0xffffffff822970b8: ret 0xe170;
0xffffffff8233a354: ret 0xe172;
0xffffffff81146e12: ret 0xe173;
0xffffffff82397bd8: ret 0xe176;
0xffffffff834541cc: ret 0xe177;
0xffffffff813eb4cd: ret 0xe178;
0xffffffff82306582: ret 0xe17b;
0xffffffff816f0a59: ret 0xe180;
0xffffffff81370e11: ret 0xe181;
0xffffffff81055e92: ret 0xe183;
0xffffffff82308188: ret 0xe185;
0xffffffff819531df: ret 0xe18;
0xffffffff81722f51: ret 0xe18c;
0xffffffff83454354: ret 0xe18d;
0xffffffff823fb049: ret 0xe18e;
0xffffffff82304eb2: ret 0xe192;
0xffffffff813eb28c: ret 0xe195;
0xffffffff823b5180: ret 0xe19e;
0xffffffff811e4e02: ret 0xe1;
0xffffffff814ad2fc: ret 0xe1a0;
0xffffffff82508105: ret 0xe1a2;
0xffffffff8224fcaf: ret 0xe1a5;
0xffffffff8348d3f8: ret 0xe1a9;
0xffffffff813c14c5: ret 0xe1b0;
0xffffffff82404225: ret 0xe1b1;
0xffffffff81828ee4: ret 0xe1b9;
0xffffffff829a6df4: ret 0xe1b;
0xffffffff83461d99: ret 0xe1ba;
0xffffffff818c86ca: ret 0xe1c1;
0xffffffff8162f338: ret 0xe1c2;
0xffffffff82462b58: ret 0xe1c6;
0xffffffff823e49b9: ret 0xe1c7;
0xffffffff824daf75: ret 0xe1d0;
0xffffffff8244943e: ret 0xe1d3;
0xffffffff824e91be: ret 0xe1d4;
0xffffffff813eb4fc: ret 0xe1d9;
0xffffffff8133abef: ret 0xe1d;
0xffffffff8127e1b6: ret 0xe1e0;
0xffffffff812fa0a2: ret 0xe1e1;
0xffffffff822e46a4: ret 0xe1e3;
0xffffffff824bf485: ret 0xe1e4;
0xffffffff822ce779: ret 0xe1e6;
0xffffffff8147a159: ret 0xe1e8;
0xffffffff834327e9: ret 0xe1e9;
0xffffffff8251d500: ret 0xe1ed;
0xffffffff822f84b0: ret 0xe1f0;
0xffffffff814a629a: ret 0xe1f2;
0xffffffff813eb385: ret 0xe1f3;
0xffffffff82557301: ret 0xe1f7;
0xffffffff8248d310: ret 0xe1f9;
0xffffffff8250f72f: ret 0xe1f;
0xffffffff826e3d07: ret 0xe1fa;
0xffffffff8162399d: ret 0xe1fc;
0xffffffff83479228: ret 0xe204;
0xffffffff813ebdec: ret 0xe20f;
0xffffffff8225d65b: ret 0xe213;
0xffffffff82283c5f: ret 0xe214;
0xffffffff82362f31: ret 0xe216;
0xffffffff82354a66: ret 0xe217;
0xffffffff829a7490: ret 0xe21;
0xffffffff8241bf79: ret 0xe21e;
0xffffffff8232a522: ret 0xe221;
0xffffffff8247e857: ret 0xe223;
0xffffffff824b1736: ret 0xe227;
0xffffffff824b1735: ret 0xe227;
0xffffffff82409af6: ret 0xe22b;
0xffffffff8342dc18: ret 0xe22c;
0xffffffff8347f7ae: ret 0xe230;
0xffffffff8256ff44: ret 0xe236;
0xffffffff8233ec17: ret 0xe237;
0xffffffff817be11a: ret 0xe239;
0xffffffff817e2588: ret 0xe23;
0xffffffff82414ebc: ret 0xe23a;
0xffffffff8178d9ae: ret 0xe240;
0xffffffff817be14d: ret 0xe241;
0xffffffff824c0d8e: ret 0xe246;
0xffffffff817be105: ret 0xe24b;
0xffffffff81b9f25a: ret 0xe24c;
0xffffffff82469e7c: ret 0xe24d;
0xffffffff823e94fe: ret 0xe24e;
0xffffffff813c14eb: ret 0xe250;
0xffffffff823cb28c: ret 0xe251;
0xffffffff8227717c: ret 0xe25a;
0xffffffff82333aa8: ret 0xe25b;
0xffffffff8256d6e7: ret 0xe25d;
0xffffffff8178c4d6: ret 0xe260;
0xffffffff822934bf: ret 0xe261;
0xffffffff813ebe04: ret 0xe263;
0xffffffff8256a785: ret 0xe265;
0xffffffff824b6559: ret 0xe270;
0xffffffff814959da: ret 0xe272;
0xffffffff81160b14: ret 0xe274;
0xffffffff824a35ab: ret 0xe275;
0xffffffff8236efc7: ret 0xe276;
0xffffffff8223f7e4: ret 0xe278;
0xffffffff823a50fb: ret 0xe27b;
0xffffffff824f37dc: ret 0xe27e;
0xffffffff81006a10: ret 0xe280;
0xffffffff810332cd: ret 0xe281;
0xffffffff81019297: ret 0xe283;
0xffffffff8245c114: ret 0xe284;
0xffffffff8105ae7a: ret 0xe285;
0xffffffff8241db2b: ret 0xe28;
0xffffffff834f0eab: ret 0xe28e;
0xffffffff82289559: ret 0xe28f;
0xffffffff823de945: ret 0xe291;
0xffffffff83454791: ret 0xe293;
0xffffffff8232b6a8: ret 0xe296;
0xffffffff822b0fa6: ret 0xe29a;
0xffffffff829bb990: ret 0xe2;
0xffffffff81917451: ret 0xe2a0;
0xffffffff82271d3d: ret 0xe2a4;
0xffffffff819191e9: ret 0xe2aa;
0xffffffff812fa665: ret 0xe2af;
0xffffffff8191bd77: ret 0xe2b1;
0xffffffff817e27d0: ret 0xe2b;
0xffffffff824a225a: ret 0xe2ba;
0xffffffff811d0ae5: ret 0xe2c0;
0xffffffff8100cc4d: ret 0xe2c1;
0xffffffff823af335: ret 0xe2c4;
0xffffffff81739a0d: ret 0xe2c;
0xffffffff814b7bd9: ret 0xe2ca;
0xffffffff823c7f2a: ret 0xe2ce;
0xffffffff819d44d3: ret 0xe2d0;
0xffffffff81723ee4: ret 0xe2d1;
0xffffffff81015a99: ret 0xe2d3;
0xffffffff822d1bce: ret 0xe2d7;
0xffffffff82452360: ret 0xe2de;
0xffffffff813ec08a: ret 0xe2df;
0xffffffff822c53e2: ret 0xe2e5;
0xffffffff81145e76: ret 0xe2e8;
0xffffffff8120863f: ret 0xe2e9;
0xffffffff8342f3e9: ret 0xe2e;
0xffffffff82540719: ret 0xe2ea;
0xffffffff81bc3b21: ret 0xe2eb;
0xffffffff817da79f: ret 0xe2ed;
0xffffffff813c1513: ret 0xe2f0;
0xffffffff823a8e17: ret 0xe2f1;
0xffffffff81844612: ret 0xe2f3;
0xffffffff817da702: ret 0xe2f6;
0xffffffff822f367c: ret 0xe2fa;
0xffffffff8238956b: ret 0xe2fb;
0xffffffff82691f0c: ret 0xe2fc;
0xffffffff817da810: ret 0xe300;
0xffffffff812a4f1a: ret 0xe305;
0xffffffff825626ab: ret 0xe307;
0xffffffff823fdcb4: ret 0xe309;
0xffffffff817da7f6: ret 0xe30b;
0xffffffff823e3d60: ret 0xe30f;
0xffffffff824afd97: ret 0xe312;
0xffffffff817da7cd: ret 0xe316;
0xffffffff823b7a24: ret 0xe319;
0xffffffff8254646f: ret 0xe31d;
0xffffffff82311faa: ret 0xe31f;
0xffffffff817da7e7: ret 0xe320;
0xffffffff824fa670: ret 0xe321;
0xffffffff824de749: ret 0xe322;
0xffffffff82561ca6: ret 0xe323;
0xffffffff8164c627: ret 0xe328;
0xffffffff823e11a0: ret 0xe32;
0xffffffff813ec09d: ret 0xe32d;
0xffffffff8252ce16: ret 0xe32f;
0xffffffff825d4da4: ret 0xe330;
0xffffffff824f522c: ret 0xe338;
0xffffffff822fbcb3: ret 0xe33e;
0xffffffff82305fb5: ret 0xe33f;
0xffffffff82305fb6: ret 0xe33f;
0xffffffff824052e6: ret 0xe341;
0xffffffff8231e991: ret 0xe348;
0xffffffff81918cf7: ret 0xe349;
0xffffffff823f3aab: ret 0xe34f;
0xffffffff819ec063: ret 0xe350;
0xffffffff819194da: ret 0xe352;
0xffffffff82451ea6: ret 0xe353;
0xffffffff818fc744: ret 0xe355;
0xffffffff83461bd4: ret 0xe356;
0xffffffff82361d44: ret 0xe35;
0xffffffff81919590: ret 0xe361;
0xffffffff824e5f05: ret 0xe362;
0xffffffff81b9f9da: ret 0xe36;
0xffffffff82426280: ret 0xe36d;
0xffffffff8183defb: ret 0xe372;
0xffffffff814ccc7e: ret 0xe375;
0xffffffff8196762e: ret 0xe376;
0xffffffff8252e305: ret 0xe377;
0xffffffff824dcd94: ret 0xe378;
0xffffffff822cc045: ret 0xe379;
0xffffffff824c0581: ret 0xe37f;
0xffffffff819ec07c: ret 0xe380;
0xffffffff8236d388: ret 0xe383;
0xffffffff817db52d: ret 0xe384;
0xffffffff811c01e3: ret 0xe385;
0xffffffff81c76350: ret 0xe38a;
0xffffffff8243c57c: ret 0xe38f;
0xffffffff813c153b: ret 0xe390;
0xffffffff829aa96c: ret 0xe39;
0xffffffff82516141: ret 0xe39a;
0xffffffff819aa29a: ret 0xe39c;
0xffffffff823b5349: ret 0xe39f;
0xffffffff8247b718: ret 0xe3a8;
0xffffffff823f2882: ret 0xe3a9;
0xffffffff82303775: ret 0xe3ab;
0xffffffff82246e7d: ret 0xe3b0;
0xffffffff82320572: ret 0xe3b5;
0xffffffff822b6069: ret 0xe3b7;
0xffffffff8249901c: ret 0xe3b;
0xffffffff823b14cd: ret 0xe3bb;
0xffffffff819ec0bf: ret 0xe3c0;
0xffffffff8250f67b: ret 0xe3c1;
0xffffffff82448352: ret 0xe3d0;
0xffffffff8236c9e7: ret 0xe3d2;
0xffffffff824c6e3f: ret 0xe3d4;
0xffffffff824c6e40: ret 0xe3d4;
0xffffffff82495b59: ret 0xe3d6;
0xffffffff824b18bc: ret 0xe3d8;
0xffffffff823ad7c4: ret 0xe3d;
0xffffffff824deb32: ret 0xe3e1;
0xffffffff822711bd: ret 0xe3e4;
0xffffffff825108f9: ret 0xe3e6;
0xffffffff822a3e7e: ret 0xe3e7;
0xffffffff811d16c7: ret 0xe3e8;
0xffffffff81ace6b7: ret 0xe3e9;
0xffffffff8267dbbd: ret 0xe3f0;
0xffffffff824bf34b: ret 0xe3f2;
0xffffffff818333d9: ret 0xe3f3;
0xffffffff823ac500: ret 0xe3f5;
0xffffffff813eccd4: ret 0xe3f6;
0xffffffff824d3b3f: ret 0xe3f;
0xffffffff824df4e5: ret 0xe3ff;
0xffffffff822ae473: ret 0xe400;
0xffffffff82310387: ret 0xe403;
0xffffffff82532015: ret 0xe40c;
0xffffffff824e1f04: ret 0xe40e;
0xffffffff83454a06: ret 0xe414;
0xffffffff822ba886: ret 0xe416;
0xffffffff8230ba16: ret 0xe417;
0xffffffff8222fe18: ret 0xe418;
0xffffffff813ecf0e: ret 0xe419;
0xffffffff82242249: ret 0xe41;
0xffffffff824fa0cb: ret 0xe41d;
0xffffffff83454a3b: ret 0xe420;
0xffffffff8254df08: ret 0xe421;
0xffffffff822adef1: ret 0xe426;
0xffffffff823ec6cf: ret 0xe429;
0xffffffff82439cb2: ret 0xe42;
0xffffffff83454a70: ret 0xe42e;
0xffffffff813c1563: ret 0xe430;
0xffffffff829abddc: ret 0xe43;
0xffffffff83454aa5: ret 0xe43b;
0xffffffff813ed9ac: ret 0xe43e;
0xffffffff8236d637: ret 0xe446;
0xffffffff8229c439: ret 0xe447;
0xffffffff82228948: ret 0xe449;
0xffffffff822dc644: ret 0xe44;
0xffffffff82431908: ret 0xe44b;
0xffffffff81b1da4a: ret 0xe450;
0xffffffff83454b07: ret 0xe454;
0xffffffff822b8a18: ret 0xe458;
0xffffffff829ac128: ret 0xe45;
0xffffffff823886a6: ret 0xe45a;
0xffffffff8146d99a: ret 0xe463;
0xffffffff82298538: ret 0xe465;
0xffffffff824c8e1f: ret 0xe469;
0xffffffff82260f9a: ret 0xe46;
0xffffffff823596b5: ret 0xe46a;
0xffffffff82490f0f: ret 0xe46b;
0xffffffff8149a4e8: ret 0xe470;
0xffffffff82230303: ret 0xe477;
0xffffffff8245a698: ret 0xe47;
0xffffffff813ed77e: ret 0xe47d;
0xffffffff824d1937: ret 0xe47e;
0xffffffff822e188e: ret 0xe484;
0xffffffff824b9d38: ret 0xe485;
0xffffffff822c6f3e: ret 0xe486;
0xffffffff82339167: ret 0xe48;
0xffffffff8231cd46: ret 0xe48b;
0xffffffff81104dec: ret 0xe490;
0xffffffff82521486: ret 0xe491;
0xffffffff811c61ca: ret 0xe49f;
0xffffffff81590c7a: ret 0xe4;
0xffffffff822b5821: ret 0xe4a1;
0xffffffff823bccd5: ret 0xe4a;
0xffffffff8120ddca: ret 0xe4ab;
0xffffffff82398029: ret 0xe4b2;
0xffffffff8239802a: ret 0xe4b2;
0xffffffff823e6ac7: ret 0xe4b5;
0xffffffff8135d4ea: ret 0xe4b8;
0xffffffff813ee699: ret 0xe4c1;
0xffffffff82489739: ret 0xe4cb;
0xffffffff813c158b: ret 0xe4d0;
0xffffffff8269316d: ret 0xe4d3;
0xffffffff825514a2: ret 0xe4d5;
0xffffffff823a24ed: ret 0xe4d;
0xffffffff811046d5: ret 0xe4e0;
0xffffffff824b6218: ret 0xe4e4;
0xffffffff812bb17a: ret 0xe4e7;
0xffffffff8112c966: ret 0xe4e8;
0xffffffff816593b6: ret 0xe4e9;
0xffffffff8135f257: ret 0xe4eb;
0xffffffff81bf136a: ret 0xe4f0;
0xffffffff822eea04: ret 0xe4f2;
0xffffffff8111e35a: ret 0xe4fc;
0xffffffff835a8e76: ret 0xe4fd;
0xffffffff8200d52a: ret 0xe4ff;
0xffffffff823a82c7: ret 0xe50c;
0xffffffff822c056e: ret 0xe514;
0xffffffff817e2886: ret 0xe51;
0xffffffff8235e3a4: ret 0xe51b;
0xffffffff8248c263: ret 0xe51f;
0xffffffff82388b4a: ret 0xe527;
0xffffffff81006013: ret 0xe528;
0xffffffff812af65a: ret 0xe529;
0xffffffff83496b18: ret 0xe52d;
0xffffffff81724858: ret 0xe533;
0xffffffff822dd5d7: ret 0xe534;
0xffffffff8342aa04: ret 0xe536;
0xffffffff825d7005: ret 0xe537;
0xffffffff811032b2: ret 0xe538;
0xffffffff8225a3a5: ret 0xe539;
0xffffffff825314a2: ret 0xe53d;
0xffffffff823159af: ret 0xe53e;
0xffffffff8181d6c2: ret 0xe540;
0xffffffff822e0f53: ret 0xe543;
0xffffffff83496b7c: ret 0xe544;
0xffffffff83496be0: ret 0xe54d;
0xffffffff814b702e: ret 0xe555;
0xffffffff822bb9a7: ret 0xe557;
0xffffffff81739ae9: ret 0xe55;
0xffffffff819ec1ec: ret 0xe560;
0xffffffff824c0065: ret 0xe561;
0xffffffff8234eed3: ret 0xe56;
0xffffffff814b7229: ret 0xe56a;
0xffffffff82295e98: ret 0xe56b;
0xffffffff83496cab: ret 0xe56f;
0xffffffff813c15b3: ret 0xe570;
0xffffffff818e0c9f: ret 0xe572;
0xffffffff81157513: ret 0xe573;
0xffffffff82304f51: ret 0xe574;
0xffffffff81108a03: ret 0xe575;
0xffffffff81107925: ret 0xe576;
0xffffffff81107949: ret 0xe577;
0xffffffff8110940d: ret 0xe578;
0xffffffff8110974d: ret 0xe579;
0xffffffff814cc777: ret 0xe57;
0xffffffff816d526e: ret 0xe583;
0xffffffff814c190e: ret 0xe585;
0xffffffff83496cdd: ret 0xe586;
0xffffffff8110b7aa: ret 0xe588;
0xffffffff82514d38: ret 0xe58;
0xffffffff8110d417: ret 0xe590;
0xffffffff8110d472: ret 0xe591;
0xffffffff824c2fb5: ret 0xe592;
0xffffffff82534230: ret 0xe597;
0xffffffff823c5e15: ret 0xe59a;
0xffffffff823c5e14: ret 0xe59a;
0xffffffff829bf970: ret 0xe5;
0xffffffff823041a9: ret 0xe5a0;
0xffffffff8147849a: ret 0xe5a9;
0xffffffff823d32eb: ret 0xe5ab;
0xffffffff82525b1e: ret 0xe5ae;
0xffffffff81b2e7aa: ret 0xe5af;
0xffffffff82454f55: ret 0xe5b0;
0xffffffff83496da0: ret 0xe5b2;
0xffffffff82375d38: ret 0xe5b6;
0xffffffff824a3933: ret 0xe5bc;
0xffffffff8125b26a: ret 0xe5c0;
0xffffffff8228296b: ret 0xe5c1;
0xffffffff8228296a: ret 0xe5c1;
0xffffffff825532df: ret 0xe5c5;
0xffffffff822dbb11: ret 0xe5cb;
0xffffffff824c6778: ret 0xe5d6;
0xffffffff817e28ae: ret 0xe5d;
0xffffffff822e6105: ret 0xe5da;
0xffffffff82477816: ret 0xe5dd;
0xffffffff8113339a: ret 0xe5e7;
0xffffffff817fca85: ret 0xe5e8;
0xffffffff816b6419: ret 0xe5eb;
0xffffffff82463797: ret 0xe5f1;
0xffffffff82321518: ret 0xe5f4;
0xffffffff822c0786: ret 0xe5f;
0xffffffff822b9fa6: ret 0xe5fb;
0xffffffff8194e5ce: ret 0xe600;
0xffffffff8224380d: ret 0xe603;
0xffffffff8133af3d: ret 0xe60;
0xffffffff813c15db: ret 0xe610;
0xffffffff822f5520: ret 0xe613;
0xffffffff8238d400: ret 0xe618;
0xffffffff8242eacb: ret 0xe61b;
0xffffffff822dd266: ret 0xe628;
0xffffffff8349837d: ret 0xe630;
0xffffffff824864a0: ret 0xe631;
0xffffffff82500a82: ret 0xe635;
0xffffffff82445fc9: ret 0xe638;
0xffffffff819ec8e6: ret 0xe640;
0xffffffff8227fd56: ret 0xe644;
0xffffffff82262d0c: ret 0xe646;
0xffffffff8236cdf5: ret 0xe647;
0xffffffff82314ba3: ret 0xe648;
0xffffffff8242dd83: ret 0xe64;
0xffffffff8231f79c: ret 0xe64c;
0xffffffff822e5160: ret 0xe654;
0xffffffff82360c93: ret 0xe659;
0xffffffff8147e27a: ret 0xe65b;
0xffffffff8251bdfb: ret 0xe65d;
0xffffffff82543b55: ret 0xe66b;
0xffffffff814922b2: ret 0xe672;
0xffffffff81c6dd76: ret 0xe673;
0xffffffff810358be: ret 0xe674;
0xffffffff817e28cd: ret 0xe67;
0xffffffff822fc3f2: ret 0xe67d;
0xffffffff825d63cd: ret 0xe681;
0xffffffff810f5e72: ret 0xe683;
0xffffffff814cd545: ret 0xe68;
0xffffffff823eeb44: ret 0xe68c;
0xffffffff82283b68: ret 0xe691;
0xffffffff825489a8: ret 0xe692;
0xffffffff8225abb5: ret 0xe694;
0xffffffff8243a578: ret 0xe69;
0xffffffff81b1654a: ret 0xe69c;
0xffffffff823a9819: ret 0xe69d;
0xffffffff81110e69: ret 0xe6a0;
0xffffffff81110e83: ret 0xe6a4;
0xffffffff81110e9d: ret 0xe6a8;
0xffffffff82284ee8: ret 0xe6a9;
0xffffffff8226798e: ret 0xe6ad;
0xffffffff822de827: ret 0xe6ae;
0xffffffff813c15fd: ret 0xe6b0;
0xffffffff823b5d28: ret 0xe6b7;
0xffffffff81b60cca: ret 0xe6bc;
0xffffffff81b69002: ret 0xe6c1;
0xffffffff823285b2: ret 0xe6ce;
0xffffffff817a695f: ret 0xe6d0;
0xffffffff83496eef: ret 0xe6d1;
0xffffffff82487712: ret 0xe6d3;
0xffffffff82366d6c: ret 0xe6d8;
0xffffffff823ad0b7: ret 0xe6dc;
0xffffffff822847f5: ret 0xe6df;
0xffffffff822c0a62: ret 0xe6e7;
0xffffffff8134d874: ret 0xe6e8;
0xffffffff8120840c: ret 0xe6e9;
0xffffffff81106379: ret 0xe6f3;
0xffffffff8267cdf7: ret 0xe6f4;
0xffffffff824909cf: ret 0xe6f5;
0xffffffff82280a80: ret 0xe6fe;
0xffffffff8349f6b8: ret 0xe701;
0xffffffff8248b564: ret 0xe702;
0xffffffff81103f5e: ret 0xe707;
0xffffffff8349f6e5: ret 0xe70a;
0xffffffff82505388: ret 0xe70e;
0xffffffff83496fdd: ret 0xe712;
0xffffffff8349719e: ret 0xe71a;
0xffffffff82397de7: ret 0xe722;
0xffffffff82397de6: ret 0xe722;
0xffffffff824d527f: ret 0xe728;
0xffffffff811913b1: ret 0xe72;
0xffffffff83497266: ret 0xe72b;
0xffffffff814564fd: ret 0xe730;
0xffffffff82541ba1: ret 0xe731;
0xffffffff82480173: ret 0xe733;
0xffffffff8346e414: ret 0xe736;
0xffffffff811d5856: ret 0xe73;
0xffffffff8141828a: ret 0xe73b;
0xffffffff83497298: ret 0xe73c;
0xffffffff8111dde2: ret 0xe73f;
0xffffffff8244f014: ret 0xe740;
0xffffffff823b80d2: ret 0xe742;
0xffffffff834972cd: ret 0xe747;
0xffffffff8230c6d1: ret 0xe748;
0xffffffff814cd7de: ret 0xe74;
0xffffffff82519ac5: ret 0xe74b;
0xffffffff8160c258: ret 0xe74f;
0xffffffff8247be7a: ret 0xe752;
0xffffffff825145a7: ret 0xe754;
0xffffffff824a531a: ret 0xe756;
0xffffffff81163963: ret 0xe75;
0xffffffff824c93bb: ret 0xe75f;
0xffffffff819eca71: ret 0xe760;
0xffffffff81c65313: ret 0xe76;
0xffffffff824d5f1c: ret 0xe76b;
0xffffffff824d5f1b: ret 0xe76b;
0xffffffff82282ce9: ret 0xe76f;
0xffffffff8180c535: ret 0xe770;
0xffffffff81492945: ret 0xe772;
0xffffffff817ccf49: ret 0xe775;
0xffffffff8349f960: ret 0xe776;
0xffffffff82500ae0: ret 0xe777;
0xffffffff82280650: ret 0xe778;
0xffffffff823070a3: ret 0xe781;
0xffffffff822a8f1b: ret 0xe786;
0xffffffff81739fb7: ret 0xe78;
0xffffffff8243c230: ret 0xe78e;
0xffffffff82567dba: ret 0xe792;
0xffffffff822f7296: ret 0xe794;
0xffffffff822fc812: ret 0xe797;
0xffffffff824ed137: ret 0xe79a;
0xffffffff8180c545: ret 0xe7a0;
0xffffffff823fa6c1: ret 0xe7a4;
0xffffffff829b2ad0: ret 0xe7a;
0xffffffff81b1109a: ret 0xe7b2;
0xffffffff822d52df: ret 0xe7b5;
0xffffffff824102ec: ret 0xe7b6;
0xffffffff82364d6c: ret 0xe7b7;
0xffffffff817051dd: ret 0xe7b8;
0xffffffff824d5aa2: ret 0xe7c0;
0xffffffff824dc853: ret 0xe7c4;
0xffffffff834499c9: ret 0xe7c5;
0xffffffff8349fb11: ret 0xe7c9;
0xffffffff815db60c: ret 0xe7ca;
0xffffffff82354d11: ret 0xe7cc;
0xffffffff82290ba8: ret 0xe7ce;
0xffffffff822f9d80: ret 0xe7d1;
0xffffffff8227b61b: ret 0xe7d6;
0xffffffff822a9ef3: ret 0xe7de;
0xffffffff824ddad1: ret 0xe7e7;
0xffffffff817e7f2f: ret 0xe7e8;
0xffffffff822753ef: ret 0xe7ec;
0xffffffff814ccaba: ret 0xe7f;
0xffffffff823cc0c9: ret 0xe7fb;
0xffffffff8349fcc9: ret 0xe7fe;
0xffffffff8104a0f0: ret 0xe800;
0xffffffff8127f47e: ret 0xe801;
0xffffffff818c03f5: ret 0xe802;
0xffffffff814e3c48: ret 0xe804;
0xffffffff823d2d48: ret 0xe805;
0xffffffff8119c035: ret 0xe808;
0xffffffff83491839: ret 0xe809;
0xffffffff823162b1: ret 0xe80b;
0xffffffff823107bd: ret 0xe80d;
0xffffffff818f7f74: ret 0xe810;
0xffffffff822511ef: ret 0xe813;
0xffffffff8224e97f: ret 0xe814;
0xffffffff81953f3a: ret 0xe818;
0xffffffff823fa7c7: ret 0xe819;
0xffffffff8227d54e: ret 0xe81e;
0xffffffff8164d461: ret 0xe820;
0xffffffff82431ddd: ret 0xe822;
0xffffffff81542601: ret 0xe826;
0xffffffff81316edf: ret 0xe828;
0xffffffff81a948f2: ret 0xe829;
0xffffffff8199150d: ret 0xe830;
0xffffffff818038ea: ret 0xe836;
0xffffffff82308f2f: ret 0xe837;
0xffffffff82366082: ret 0xe83;
0xffffffff81b0dcfa: ret 0xe83e;
0xffffffff8240f100: ret 0xe840;
0xffffffff8349fe29: ret 0xe846;
0xffffffff81903901: ret 0xe848;
0xffffffff8252f251: ret 0xe84e;
0xffffffff819a9ccb: ret 0xe850;
0xffffffff8138da7a: ret 0xe853;
0xffffffff8251734f: ret 0xe855;
0xffffffff8349fe8d: ret 0xe859;
0xffffffff82364cb4: ret 0xe860;
0xffffffff823ddbc2: ret 0xe862;
0xffffffff8349febf: ret 0xe863;
0xffffffff813f5a84: ret 0xe864;
0xffffffff8349fef1: ret 0xe86c;
0xffffffff81724cfc: ret 0xe870;
0xffffffff816f104f: ret 0xe875;
0xffffffff823af805: ret 0xe876;
0xffffffff82471ed1: ret 0xe877;
0xffffffff82560c95: ret 0xe87d;
0xffffffff81c231cd: ret 0xe881;
0xffffffff82288451: ret 0xe884;
0xffffffff82327fdd: ret 0xe888;
0xffffffff82511850: ret 0xe88c;
0xffffffff8224e06f: ret 0xe88d;
0xffffffff814af61e: ret 0xe890;
0xffffffff8249e13d: ret 0xe891;
0xffffffff82246356: ret 0xe892;
0xffffffff82436eb4: ret 0xe893;
0xffffffff813d170f: ret 0xe898;
0xffffffff8100896a: ret 0xe8;
0xffffffff824eaccb: ret 0xe8a9;
0xffffffff834974a9: ret 0xe8b4;
0xffffffff82239673: ret 0xe8b5;
0xffffffff823db8f1: ret 0xe8b8;
0xffffffff824a1319: ret 0xe8b;
0xffffffff8237964d: ret 0xe8bb;
0xffffffff814a9910: ret 0xe8c1;
0xffffffff81455e93: ret 0xe8c2;
0xffffffff810526bd: ret 0xe8c3;
0xffffffff824989a0: ret 0xe8c5;
0xffffffff82270760: ret 0xe8cf;
0xffffffff822e8c50: ret 0xe8d5;
0xffffffff81535f14: ret 0xe8d8;
0xffffffff8244246f: ret 0xe8e1;
0xffffffff8191f071: ret 0xe8e3;
0xffffffff8191f07d: ret 0xe8e4;
0xffffffff8191f086: ret 0xe8e5;
0xffffffff8191f08f: ret 0xe8e6;
0xffffffff8191f098: ret 0xe8e7;
0xffffffff814b8452: ret 0xe8e8;
0xffffffff8191f0aa: ret 0xe8e9;
0xffffffff8133af23: ret 0xe8e;
0xffffffff823e2b0e: ret 0xe8ea;
0xffffffff818c5ab0: ret 0xe8ec;
0xffffffff824adf5b: ret 0xe8ef;
0xffffffff81757985: ret 0xe8f0;
0xffffffff817579a4: ret 0xe8f1;
0xffffffff82680882: ret 0xe8f4;
0xffffffff824d749d: ret 0xe8f5;
0xffffffff82531d94: ret 0xe8f6;
0xffffffff81bc8ce5: ret 0xe8f8;
0xffffffff81aecc9d: ret 0xe8f9;
0xffffffff822eabff: ret 0xe8f;
0xffffffff819c4636: ret 0xe8fc;
0xffffffff83493cbf: ret 0xe8fd;
0xffffffff83490f12: ret 0xe8fd;
0xffffffff8342e4f3: ret 0xe8fd;
0xffffffff818c053a: ret 0xe8fe;
0xffffffff8148acae: ret 0xe8ff;
0xffffffff8104c10a: ret 0xe900;
0xffffffff810b1f3c: ret 0xe901;
0xffffffff810b0b8d: ret 0xe902;
0xffffffff810b0cbf: ret 0xe903;
0xffffffff810b1dfe: ret 0xe904;
0xffffffff810b15c2: ret 0xe905;
0xffffffff810b0f7c: ret 0xe906;
0xffffffff810b11fc: ret 0xe907;
0xffffffff8172bbd0: ret 0xe908;
0xffffffff83497614: ret 0xe909;
0xffffffff810b0d8e: ret 0xe90a;
0xffffffff823b7551: ret 0xe90c;
0xffffffff810b1326: ret 0xe90d;
0xffffffff81630852: ret 0xe910;
0xffffffff83497645: ret 0xe914;
0xffffffff822363e4: ret 0xe915;
0xffffffff823a50d2: ret 0xe916;
0xffffffff81643dc7: ret 0xe918;
0xffffffff822ee9b6: ret 0xe919;
0xffffffff825114da: ret 0xe91f;
0xffffffff816b6025: ret 0xe920;
0xffffffff8242bd4f: ret 0xe922;
0xffffffff824ed36d: ret 0xe924;
0xffffffff81b01a01: ret 0xe928;
0xffffffff823d4c7a: ret 0xe92a;
0xffffffff834a038f: ret 0xe92e;
0xffffffff825d6193: ret 0xe937;
0xffffffff8240922a: ret 0xe93a;
0xffffffff82387c31: ret 0xe93b;
0xffffffff8238faa0: ret 0xe940;
0xffffffff810b198f: ret 0xe941;
0xffffffff8223758e: ret 0xe945;
0xffffffff834a0451: ret 0xe946;
0xffffffff822cb748: ret 0xe948;
0xffffffff817e2d18: ret 0xe94;
0xffffffff8155b718: ret 0xe94a;
0xffffffff82498b8e: ret 0xe94c;
0xffffffff82280b26: ret 0xe94d;
0xffffffff82305462: ret 0xe94e;
0xffffffff8231d081: ret 0xe94f;
0xffffffff824bde9f: ret 0xe952;
0xffffffff8238afdb: ret 0xe955;
0xffffffff822fbe4b: ret 0xe95;
0xffffffff8233ba01: ret 0xe95a;
0xffffffff8111e44a: ret 0xe95b;
0xffffffff823d82da: ret 0xe95c;
0xffffffff8253a4a4: ret 0xe961;
0xffffffff8238af62: ret 0xe967;
0xffffffff82309795: ret 0xe96b;
0xffffffff826a1cb8: ret 0xe96e;
0xffffffff81619ca2: ret 0xe975;
0xffffffff81c2392e: ret 0xe981;
0xffffffff82430b2a: ret 0xe986;
0xffffffff81175257: ret 0xe989;
0xffffffff829b5edc: ret 0xe98;
0xffffffff81b2b62a: ret 0xe98c;
0xffffffff823cd4a2: ret 0xe98e;
0xffffffff81af85d9: ret 0xe990;
0xffffffff824b11cd: ret 0xe991;
0xffffffff824b11cc: ret 0xe991;
0xffffffff82355762: ret 0xe99e;
0xffffffff82474435: ret 0xe9a2;
0xffffffff8176cd8e: ret 0xe9a4;
0xffffffff8176d3da: ret 0xe9a5;
0xffffffff81772329: ret 0xe9a7;
0xffffffff81772b6b: ret 0xe9a8;
0xffffffff81772b85: ret 0xe9a9;
0xffffffff81772b9f: ret 0xe9aa;
0xffffffff8151daf7: ret 0xe9b0;
0xffffffff82327c64: ret 0xe9b6;
0xffffffff81772de6: ret 0xe9b8;
0xffffffff81772bc7: ret 0xe9b9;
0xffffffff824fbdf4: ret 0xe9bb;
0xffffffff834976a6: ret 0xe9bd;
0xffffffff817feb80: ret 0xe9c0;
0xffffffff8119b60c: ret 0xe9c1;
0xffffffff8239a2b4: ret 0xe9c4;
0xffffffff8106cdaf: ret 0xe9c5;
0xffffffff822e3526: ret 0xe9c6;
0xffffffff8349770d: ret 0xe9cd;
0xffffffff8226fa5e: ret 0xe9cf;
0xffffffff81775eff: ret 0xe9d0;
0xffffffff81775f19: ret 0xe9d1;
0xffffffff81775f33: ret 0xe9d2;
0xffffffff81775f4d: ret 0xe9d3;
0xffffffff81775f64: ret 0xe9d4;
0xffffffff81775f7e: ret 0xe9d5;
0xffffffff81775f98: ret 0xe9d6;
0xffffffff81775fe0: ret 0xe9d7;
0xffffffff81775ffa: ret 0xe9d8;
0xffffffff81776014: ret 0xe9d9;
0xffffffff8177602e: ret 0xe9da;
0xffffffff8248acbd: ret 0xe9dc;
0xffffffff812583ea: ret 0xe9e0;
0xffffffff822ce3fa: ret 0xe9e2;
0xffffffff813f1f61: ret 0xe9e8;
0xffffffff813d5711: ret 0xe9e9;
0xffffffff8226a03d: ret 0xe9ea;
0xffffffff8349786a: ret 0xe9ed;
0xffffffff8228cc11: ret 0xe9f5;
0xffffffff83497898: ret 0xe9f6;
0xffffffff819f45ca: ret 0xe9f8;
0xffffffff811ce9b9: ret 0xe9fc;
0xffffffff817259a3: ret 0xe9fd;
0xffffffff816658e3: ret 0xe9ff;
0xffffffff814d3740: ret 0xe9ff;
0xffffffff8100d72a: ret 0xe;
0xffffffff810ccdc3: ret 0xea09;
0xffffffff819f0e49: ret 0xea0;
0xffffffff82257e52: ret 0xea10;
0xffffffff8247e1fe: ret 0xea12;
0xffffffff8228b58b: ret 0xea16;
0xffffffff817e2d85: ret 0xea1;
0xffffffff823e025e: ret 0xea22;
0xffffffff81403f5c: ret 0xea23;
0xffffffff8222c462: ret 0xea24;
0xffffffff811edecc: ret 0xea29;
0xffffffff823d3afd: ret 0xea2e;
0xffffffff8165ca9e: ret 0xea31;
0xffffffff8225cf8f: ret 0xea38;
0xffffffff8225cf8e: ret 0xea38;
0xffffffff8174a1f4: ret 0xea39;
0xffffffff82367d42: ret 0xea3c;
0xffffffff82450333: ret 0xea42;
0xffffffff8242b017: ret 0xea43;
0xffffffff819f5724: ret 0xea48;
0xffffffff83466f84: ret 0xea4c;
0xffffffff823b38e0: ret 0xea52;
0xffffffff823cd322: ret 0xea54;
0xffffffff824581e0: ret 0xea57;
0xffffffff8253bcda: ret 0xea5a;
0xffffffff834a0a70: ret 0xea5e;
0xffffffff810f8f1b: ret 0xea60;
0xffffffff8244099d: ret 0xea66;
0xffffffff823b6f50: ret 0xea69;
0xffffffff8237ced2: ret 0xea6d;
0xffffffff817ae953: ret 0xea70;
0xffffffff81150ea1: ret 0xea75;
0xffffffff8241a40a: ret 0xea7e;
0xffffffff8349a7c8: ret 0xea81;
0xffffffff819e288c: ret 0xea83;
0xffffffff82466fc6: ret 0xea84;
0xffffffff81a72332: ret 0xea88;
0xffffffff81a80e18: ret 0xea89;
0xffffffff8349a98e: ret 0xea8a;
0xffffffff81921a55: ret 0xea90;
0xffffffff814c1658: ret 0xea91;
0xffffffff823dca4d: ret 0xea92;
0xffffffff82268e36: ret 0xea95;
0xffffffff82268e35: ret 0xea95;
0xffffffff8349aa72: ret 0xea98;
0xffffffff8349aa94: ret 0xea99;
0xffffffff822a1338: ret 0xea9e;
0xffffffff81a7a773: ret 0xeaa1;
0xffffffff81a7a9f3: ret 0xeaa2;
0xffffffff81a7c29a: ret 0xeaa4;
0xffffffff823e50ec: ret 0xeaa6;
0xffffffff8192966b: ret 0xeaaa;
0xffffffff822cb0c5: ret 0xeaab;
0xffffffff82273c62: ret 0xeaad;
0xffffffff822e905e: ret 0xeaaf;
0xffffffff8237aa81: ret 0xeab7;
0xffffffff817f9869: ret 0xeab8;
0xffffffff81779ac8: ret 0xeab9;
0xffffffff81779ae5: ret 0xeaba;
0xffffffff8149f711: ret 0xeabb;
0xffffffff8102e19d: ret 0xeabd;
0xffffffff816db670: ret 0xeabe;
0xffffffff8102421c: ret 0xeac0;
0xffffffff81031a8f: ret 0xeac1;
0xffffffff822c2fd7: ret 0xeac2;
0xffffffff82468712: ret 0xeac3;
0xffffffff824b3d6f: ret 0xeac5;
0xffffffff82417d2b: ret 0xeac6;
0xffffffff81614abb: ret 0xeacc;
0xffffffff81681624: ret 0xead0;
0xffffffff815a4883: ret 0xead1;
0xffffffff822d2036: ret 0xead2;
0xffffffff8157b41b: ret 0xead3;
0xffffffff81614b49: ret 0xead4;
0xffffffff8231faeb: ret 0xead5;
0xffffffff81a7f92d: ret 0xead8;
0xffffffff81a813af: ret 0xead9;
0xffffffff81a8255f: ret 0xeada;
0xffffffff81187d7a: ret 0xeadb;
0xffffffff81a84207: ret 0xeadc;
0xffffffff823fd3dc: ret 0xeae0;
0xffffffff8195878a: ret 0xeae1;
0xffffffff818426cf: ret 0xeae2;
0xffffffff81a8658a: ret 0xeae4;
0xffffffff81a8c663: ret 0xeae5;
0xffffffff81a8d9bb: ret 0xeae6;
0xffffffff81a8febb: ret 0xeae7;
0xffffffff81402d50: ret 0xeae8;
0xffffffff81a9266b: ret 0xeae9;
0xffffffff81a94b0b: ret 0xeaea;
0xffffffff81263667: ret 0xeaeb;
0xffffffff81a9742b: ret 0xeaec;
0xffffffff81a99a4b: ret 0xeaed;
0xffffffff81a9af45: ret 0xeaee;
0xffffffff81a9c3eb: ret 0xeaef;
0xffffffff81a9ed06: ret 0xeaf0;
0xffffffff81aa02a5: ret 0xeaf1;
0xffffffff81aa2284: ret 0xeaf2;
0xffffffff81aa5738: ret 0xeaf3;
0xffffffff81aa6f39: ret 0xeaf4;
0xffffffff81aa816b: ret 0xeaf5;
0xffffffff81aa9505: ret 0xeaf6;
0xffffffff81aab092: ret 0xeaf7;
0xffffffff8182b92d: ret 0xeaf8;
0xffffffff81aaf5f5: ret 0xeaf9;
0xffffffff81ab13c4: ret 0xeafa;
0xffffffff81ab4561: ret 0xeafb;
0xffffffff81ab5c85: ret 0xeafc;
0xffffffff81ab7bc2: ret 0xeafd;
0xffffffff81abad60: ret 0xeafe;
0xffffffff81abc459: ret 0xeaff;
0xffffffff8104fbf4: ret 0xeb00;
0xffffffff8103d6ab: ret 0xeb00;
0xffffffff8101f84a: ret 0xeb01;
0xffffffff810b1652: ret 0xeb02;
0xffffffff810b1db3: ret 0xeb03;
0xffffffff81559990: ret 0xeb04;
0xffffffff8114fb20: ret 0xeb08;
0xffffffff81a7190c: ret 0xeb0c;
0xffffffff8349b650: ret 0xeb0d;
0xffffffff810fdcbc: ret 0xeb10;
0xffffffff81a1a831: ret 0xeb14;
0xffffffff818c7ee8: ret 0xeb17;
0xffffffff81acaeed: ret 0xeb18;
0xffffffff823c0c47: ret 0xeb1a;
0xffffffff822728b1: ret 0xeb1c;
0xffffffff81b4ec14: ret 0xeb20;
0xffffffff812aa52a: ret 0xeb22;
0xffffffff81708dde: ret 0xeb28;
0xffffffff822f16e3: ret 0xeb2d;
0xffffffff823c21e7: ret 0xeb2f;
0xffffffff824321cf: ret 0xeb30;
0xffffffff8183fcae: ret 0xeb38;
0xffffffff822bf97c: ret 0xeb3a;
0xffffffff824f392b: ret 0xeb3c;
0xffffffff82514975: ret 0xeb3e;
0xffffffff817c1889: ret 0xeb40;
0xffffffff81ad1282: ret 0xeb41;
0xffffffff81423c1a: ret 0xeb42;
0xffffffff81163800: ret 0xeb48;
0xffffffff824b6b76: ret 0xeb49;
0xffffffff8131f558: ret 0xeb50;
0xffffffff822647bb: ret 0xeb55;
0xffffffff8344782e: ret 0xeb56;
0xffffffff82381d27: ret 0xeb57;
0xffffffff817ae55f: ret 0xeb58;
0xffffffff8245b858: ret 0xeb65;
0xffffffff8235ad49: ret 0xeb66;
0xffffffff8229798a: ret 0xeb67;
0xffffffff811ac4e5: ret 0xeb68;
0xffffffff82414aad: ret 0xeb69;
0xffffffff83456a6d: ret 0xeb6a;
0xffffffff8241fb51: ret 0xeb6c;
0xffffffff824d0ea3: ret 0xeb72;
0xffffffff823e72eb: ret 0xeb73;
0xffffffff81718842: ret 0xeb74;
0xffffffff812dd75c: ret 0xeb75;
0xffffffff811c1ef4: ret 0xeb77;
0xffffffff817aab8c: ret 0xeb78;
0xffffffff823100ab: ret 0xeb79;
0xffffffff824b21c2: ret 0xeb7;
0xffffffff82547502: ret 0xeb7b;
0xffffffff811bcfeb: ret 0xeb7c;
0xffffffff81a74b74: ret 0xeb7f;
0xffffffff8171d190: ret 0xeb80;
0xffffffff81c148d4: ret 0xeb81;
0xffffffff817b7b02: ret 0xeb84;
0xffffffff811c1ed9: ret 0xeb87;
0xffffffff817e2dbf: ret 0xeb8;
0xffffffff819d4590: ret 0xeb8c;
0xffffffff81b2e650: ret 0xeb8d;
0xffffffff8239ce33: ret 0xeb9d;
0xffffffff814ed77a: ret 0xeb;
0xffffffff8171d9ea: ret 0xeba0;
0xffffffff8137cdde: ret 0xeba1;
0xffffffff823892a3: ret 0xeba2;
0xffffffff8242e8ab: ret 0xeba3;
0xffffffff8231740e: ret 0xeba5;
0xffffffff8232f9ac: ret 0xeba6;
0xffffffff82446431: ret 0xeba;
0xffffffff811bcf89: ret 0xebac;
0xffffffff817807d6: ret 0xebb0;
0xffffffff81780acd: ret 0xebb1;
0xffffffff81780ae7: ret 0xebb2;
0xffffffff81780b01: ret 0xebb3;
0xffffffff81780b1b: ret 0xebb4;
0xffffffff81780b35: ret 0xebb5;
0xffffffff817818f4: ret 0xebb6;
0xffffffff823afe16: ret 0xebb8;
0xffffffff823ee8e1: ret 0xebba;
0xffffffff811c1f0a: ret 0xebbb;
0xffffffff811c1fb2: ret 0xebbf;
0xffffffff823f2334: ret 0xebc2;
0xffffffff811c201c: ret 0xebc3;
0xffffffff811c204a: ret 0xebc5;
0xffffffff811c2145: ret 0xebcb;
0xffffffff824aa647: ret 0xebcc;
0xffffffff8245a66e: ret 0xebd2;
0xffffffff8223df91: ret 0xebd4;
0xffffffff8240494c: ret 0xebd6;
0xffffffff814e548a: ret 0xebd8;
0xffffffff824220b5: ret 0xebd9;
0xffffffff824220b6: ret 0xebd9;
0xffffffff814cea17: ret 0xebd;
0xffffffff83498007: ret 0xebdc;
0xffffffff8349fc9b: ret 0xebdd;
0xffffffff811c2131: ret 0xebdf;
0xffffffff82538b66: ret 0xebe0;
0xffffffff83498035: ret 0xebe1;
0xffffffff824cb03e: ret 0xebe4;
0xffffffff81541a3e: ret 0xebe8;
0xffffffff81c6dd9f: ret 0xebe9;
0xffffffff8153a589: ret 0xebea;
0xffffffff8227c351: ret 0xebec;
0xffffffff811c21a0: ret 0xebed;
0xffffffff813a314e: ret 0xebf0;
0xffffffff825709c1: ret 0xebf2;
0xffffffff8244091c: ret 0xebf3;
0xffffffff82434583: ret 0xebf6;
0xffffffff812f7825: ret 0xebf7;
0xffffffff816c07bc: ret 0xebf8;
0xffffffff816d8bb6: ret 0xebfb;
0xffffffff811e1377: ret 0xebfc;
0xffffffff811c209b: ret 0xebfd;
0xffffffff814e0713: ret 0xebfe;
0xffffffff81182730: ret 0xebff;
0xffffffff816ec940: ret 0xec00;
0xffffffff8178e0fe: ret 0xec01;
0xffffffff81752434: ret 0xec02;
0xffffffff8235b745: ret 0xec05;
0xffffffff8237d201: ret 0xec06;
0xffffffff811c39fb: ret 0xec07;
0xffffffff81277609: ret 0xec0;
0xffffffff81752452: ret 0xec0a;
0xffffffff8237588a: ret 0xec11;
0xffffffff82416cf9: ret 0xec12;
0xffffffff823658eb: ret 0xec15;
0xffffffff82326e71: ret 0xec17;
0xffffffff829ba350: ret 0xec1;
0xffffffff8246c323: ret 0xec20;
0xffffffff824af342: ret 0xec23;
0xffffffff82405934: ret 0xec24;
0xffffffff82405933: ret 0xec24;
0xffffffff825316cb: ret 0xec25;
0xffffffff8256dc3e: ret 0xec26;
0xffffffff8227ccaf: ret 0xec27;
0xffffffff81783d06: ret 0xec30;
0xffffffff82420648: ret 0xec33;
0xffffffff81842786: ret 0xec37;
0xffffffff82494fb6: ret 0xec38;
0xffffffff819f810e: ret 0xec40;
0xffffffff813c7b8a: ret 0xec42;
0xffffffff822fb22a: ret 0xec4a;
0xffffffff82261b3f: ret 0xec51;
0xffffffff81acbb1a: ret 0xec52;
0xffffffff82545711: ret 0xec54;
0xffffffff811c406b: ret 0xec56;
0xffffffff824e6937: ret 0xec62;
0xffffffff82296ce4: ret 0xec69;
0xffffffff817e337d: ret 0xec6;
0xffffffff8349235a: ret 0xec6b;
0xffffffff822f22af: ret 0xec70;
0xffffffff816c895a: ret 0xec72;
0xffffffff816d4d53: ret 0xec75;
0xffffffff8117971d: ret 0xec77;
0xffffffff824073bd: ret 0xec78;
0xffffffff834980f7: ret 0xec7b;
0xffffffff8178501c: ret 0xec7c;
0xffffffff823f848c: ret 0xec7d;
0xffffffff8349812c: ret 0xec7f;
0xffffffff8349825b: ret 0xec83;
0xffffffff82388d13: ret 0xec85;
0xffffffff8349828d: ret 0xec87;
0xffffffff8173a223: ret 0xec8;
0xffffffff834982bf: ret 0xec8b;
0xffffffff82483728: ret 0xec8e;
0xffffffff8231e4c7: ret 0xec93;
0xffffffff823e55a7: ret 0xec98;
0xffffffff823aa0ea: ret 0xec9;
0xffffffff823c3e63: ret 0xec9a;
0xffffffff819037a5: ret 0xec9c;
0xffffffff822af79c: ret 0xec9e;
0xffffffff8227af19: ret 0xec9f;
0xffffffff81134e66: ret 0xec;
0xffffffff82474809: ret 0xeca6;
0xffffffff81784f5c: ret 0xeca8;
0xffffffff81785cd7: ret 0xeca9;
0xffffffff823786c3: ret 0xeca9;
0xffffffff822bf0bb: ret 0xeca;
0xffffffff811456ca: ret 0xecaa;
0xffffffff83483ff6: ret 0xecab;
0xffffffff823696e7: ret 0xecac;
0xffffffff823696e6: ret 0xecac;
0xffffffff825087ac: ret 0xecae;
0xffffffff82267c13: ret 0xecaf;
0xffffffff8240d053: ret 0xecb0;
0xffffffff8235c05e: ret 0xecb5;
0xffffffff82394d78: ret 0xecb9;
0xffffffff822753ee: ret 0xecc2;
0xffffffff822753ed: ret 0xecc2;
0xffffffff824cf585: ret 0xeccb;
0xffffffff835ad894: ret 0xeccf;
0xffffffff824b8ccd: ret 0xecd0;
0xffffffff823101b5: ret 0xecd3;
0xffffffff82359a67: ret 0xecd6;
0xffffffff82236974: ret 0xecd8;
0xffffffff8242240a: ret 0xece3;
0xffffffff824690df: ret 0xece6;
0xffffffff8100c42e: ret 0xece8;
0xffffffff829bb658: ret 0xece;
0xffffffff811883e8: ret 0xeceb;
0xffffffff811c44da: ret 0xecf1;
0xffffffff8225273b: ret 0xecf3;
0xffffffff811c44b9: ret 0xecf9;
0xffffffff814cedb5: ret 0xecf;
0xffffffff824aa38c: ret 0xecfd;
0xffffffff8225ef96: ret 0xecfe;
0xffffffff8200d422: ret 0xecff;
0xffffffff816c7ef2: ret 0xed04;
0xffffffff8251ce0c: ret 0xed09;
0xffffffff8239662c: ret 0xed0b;
0xffffffff822e8fe9: ret 0xed0c;
0xffffffff8248f14d: ret 0xed10;
0xffffffff835ad8e4: ret 0xed13;
0xffffffff824d5ae6: ret 0xed19;
0xffffffff824d5ae5: ret 0xed19;
0xffffffff823cd258: ret 0xed1a;
0xffffffff823e4476: ret 0xed1d;
0xffffffff814aecee: ret 0xed20;
0xffffffff822727e4: ret 0xed24;
0xffffffff834983af: ret 0xed27;
0xffffffff834984d9: ret 0xed2b;
0xffffffff822d1e4a: ret 0xed2c;
0xffffffff823790c8: ret 0xed2e;
0xffffffff81016178: ret 0xed31;
0xffffffff8228d01f: ret 0xed32;
0xffffffff8244c084: ret 0xed3a;
0xffffffff818d1a60: ret 0xed3b;
0xffffffff8186ec4a: ret 0xed40;
0xffffffff822a151a: ret 0xed46;
0xffffffff817b6412: ret 0xed50;
0xffffffff8243e0dd: ret 0xed51;
0xffffffff8232e552: ret 0xed52;
0xffffffff824cca5d: ret 0xed54;
0xffffffff823c4dd1: ret 0xed56;
0xffffffff817e33ab: ret 0xed5;
0xffffffff824e53b5: ret 0xed5f;
0xffffffff823a1d75: ret 0xed64;
0xffffffff816f6df5: ret 0xed66;
0xffffffff8133b713: ret 0xed6;
0xffffffff8238daf5: ret 0xed6e;
0xffffffff816d67cf: ret 0xed72;
0xffffffff81266426: ret 0xed73;
0xffffffff81921a0b: ret 0xed75;
0xffffffff8115750b: ret 0xed76;
0xffffffff81899b50: ret 0xed7c;
0xffffffff8255315f: ret 0xed7d;
0xffffffff816b542e: ret 0xed85;
0xffffffff8349850b: ret 0xed8d;
0xffffffff82239d15: ret 0xed8e;
0xffffffff824ea146: ret 0xed8f;
0xffffffff817ced1e: ret 0xed90;
0xffffffff822ff2ca: ret 0xed91;
0xffffffff8245bdca: ret 0xed92;
0xffffffff82280359: ret 0xed94;
0xffffffff825070a4: ret 0xed95;
0xffffffff824c3101: ret 0xed96;
0xffffffff829ca56c: ret 0xed;
0xffffffff824b6825: ret 0xeda3;
0xffffffff834985c6: ret 0xeda8;
0xffffffff822ceb9c: ret 0xeda9;
0xffffffff824492c7: ret 0xedaa;
0xffffffff824492c6: ret 0xedaa;
0xffffffff82258293: ret 0xedae;
0xffffffff810b5e12: ret 0xedba;
0xffffffff8174fec5: ret 0xedbd;
0xffffffff822295b5: ret 0xedc5;
0xffffffff813f9ae9: ret 0xedc8;
0xffffffff8228c7af: ret 0xedc9;
0xffffffff817e33d0: ret 0xedc;
0xffffffff82423f1e: ret 0xedd1;
0xffffffff824b9424: ret 0xedd4;
0xffffffff8256f6af: ret 0xedd7;
0xffffffff8241fe4c: ret 0xedd9;
0xffffffff8173a4bb: ret 0xedd;
0xffffffff813f958a: ret 0xeddd;
0xffffffff823b1891: ret 0xede6;
0xffffffff8233412d: ret 0xede7;
0xffffffff8118a30d: ret 0xede8;
0xffffffff823c404a: ret 0xedeb;
0xffffffff82471764: ret 0xedef;
0xffffffff82355d57: ret 0xedf0;
0xffffffff823e98e6: ret 0xedf1;
0xffffffff82543eba: ret 0xedf9;
0xffffffff825074a1: ret 0xedf;
0xffffffff822e3bf6: ret 0xedfa;
0xffffffff818edd8e: ret 0xee01;
0xffffffff8237c0a6: ret 0xee02;
0xffffffff834f0a25: ret 0xee03;
0xffffffff8234d988: ret 0xee09;
0xffffffff824d8490: ret 0xee11;
0xffffffff824fc345: ret 0xee15;
0xffffffff8111f93a: ret 0xee17;
0xffffffff82247754: ret 0xee19;
0xffffffff822c8223: ret 0xee1c;
0xffffffff822c8222: ret 0xee1c;
0xffffffff823f5a3a: ret 0xee20;
0xffffffff82564152: ret 0xee23;
0xffffffff8163efed: ret 0xee25;
0xffffffff826e3919: ret 0xee29;
0xffffffff829bd5e0: ret 0xee2;
0xffffffff81132806: ret 0xee34;
0xffffffff82280140: ret 0xee35;
0xffffffff82303ee1: ret 0xee37;
0xffffffff823f6788: ret 0xee3b;
0xffffffff823f6787: ret 0xee3b;
0xffffffff824ded2b: ret 0xee41;
0xffffffff8224cfc7: ret 0xee45;
0xffffffff82296900: ret 0xee48;
0xffffffff829bd850: ret 0xee4;
0xffffffff810b036a: ret 0xee53;
0xffffffff822eb3e6: ret 0xee56;
0xffffffff8230e13c: ret 0xee5;
0xffffffff81b5b8aa: ret 0xee5b;
0xffffffff83454ca5: ret 0xee64;
0xffffffff8244b456: ret 0xee65;
0xffffffff82384d18: ret 0xee66;
0xffffffff824f1c00: ret 0xee67;
0xffffffff823bdb70: ret 0xee6;
0xffffffff8247ba05: ret 0xee6d;
0xffffffff811291ca: ret 0xee6f;
0xffffffff8130755f: ret 0xee75;
0xffffffff817e33e9: ret 0xee7;
0xffffffff824bba04: ret 0xee7a;
0xffffffff81899b80: ret 0xee7c;
0xffffffff823dcb91: ret 0xee7d;
0xffffffff822bc932: ret 0xee82;
0xffffffff8225f4f9: ret 0xee83;
0xffffffff8255b366: ret 0xee85;
0xffffffff824a65a5: ret 0xee86;
0xffffffff82506e71: ret 0xee87;
0xffffffff81b22e1a: ret 0xee89;
0xffffffff8100114c: ret 0xee8;
0xffffffff822cd33e: ret 0xee8e;
0xffffffff819fc061: ret 0xee98;
0xffffffff811e8991: ret 0xee9e;
0xffffffff829cbd04: ret 0xee;
0xffffffff823f036e: ret 0xeea1;
0xffffffff8226aac3: ret 0xeea5;
0xffffffff824bf062: ret 0xeea6;
0xffffffff8255df72: ret 0xeea9;
0xffffffff824a2a37: ret 0xeea;
0xffffffff8234e07f: ret 0xeeaa;
0xffffffff82463d5f: ret 0xeead;
0xffffffff8253a5d0: ret 0xeeae;
0xffffffff824cb09a: ret 0xeeb2;
0xffffffff8229e811: ret 0xeeb4;
0xffffffff824d4103: ret 0xeeb8;
0xffffffff81186209: ret 0xeeb;
0xffffffff8253f021: ret 0xeebb;
0xffffffff8251b5cd: ret 0xeebe;
0xffffffff818f0e14: ret 0xeec1;
0xffffffff817b8849: ret 0xeec3;
0xffffffff8233dc02: ret 0xeec6;
0xffffffff819fd0a8: ret 0xeec8;
0xffffffff8243360e: ret 0xeeca;
0xffffffff822fa134: ret 0xeed1;
0xffffffff817b861b: ret 0xeed4;
0xffffffff83498922: ret 0xeee0;
0xffffffff824dfee6: ret 0xeee2;
0xffffffff8118ba0c: ret 0xeee8;
0xffffffff8239d6b3: ret 0xeee;
0xffffffff8111263a: ret 0xeeea;
0xffffffff823bde29: ret 0xeeed;
0xffffffff82348fe3: ret 0xeef5;
0xffffffff8349897e: ret 0xeef7;
0xffffffff823de15d: ret 0xeefb;
0xffffffff812c0665: ret 0xeeff;
0xffffffff834488fe: ret 0xef00;
0xffffffff81c66646: ret 0xef01;
0xffffffff8230d619: ret 0xef08;
0xffffffff829bef84: ret 0xef0;
0xffffffff825707be: ret 0xef0b;
0xffffffff8224aa5f: ret 0xef0b;
0xffffffff82483146: ret 0xef15;
0xffffffff817e342e: ret 0xef1;
0xffffffff824c7148: ret 0xef1d;
0xffffffff82449204: ret 0xef25;
0xffffffff82552449: ret 0xef28;
0xffffffff8226e335: ret 0xef2;
0xffffffff824761f6: ret 0xef2b;
0xffffffff8121945a: ret 0xef2e;
0xffffffff823fabcf: ret 0xef31;
0xffffffff811c9b78: ret 0xef32;
0xffffffff825009ce: ret 0xef3;
0xffffffff823250d8: ret 0xef45;
0xffffffff81a045c9: ret 0xef48;
0xffffffff8244f55d: ret 0xef4b;
0xffffffff824d59f0: ret 0xef52;
0xffffffff8359d2f0: ret 0xef54;
0xffffffff81a4fd0e: ret 0xef5;
0xffffffff8232e056: ret 0xef5c;
0xffffffff8248d78c: ret 0xef5d;
0xffffffff83498a40: ret 0xef65;
0xffffffff83498aa4: ret 0xef70;
0xffffffff81141481: ret 0xef72;
0xffffffff81a0a2a9: ret 0xef75;
0xffffffff83498bd3: ret 0xef7a;
0xffffffff8244e9c7: ret 0xef7e;
0xffffffff835adba8: ret 0xef80;
0xffffffff83498c05: ret 0xef84;
0xffffffff824e5cb7: ret 0xef85;
0xffffffff8160a25c: ret 0xef89;
0xffffffff823d48a5: ret 0xef8b;
0xffffffff83498c69: ret 0xef8c;
0xffffffff823cc06a: ret 0xef8d;
0xffffffff822b336e: ret 0xef8f;
0xffffffff83498a0f: ret 0xef90;
0xffffffff8161f62e: ret 0xef91;
0xffffffff83455057: ret 0xef94;
0xffffffff8173a5e2: ret 0xef9;
0xffffffff82472273: ret 0xef9a;
0xffffffff829cd328: ret 0xef;
0xffffffff8193235d: ret 0xefa0;
0xffffffff8229cd7e: ret 0xefa2;
0xffffffff822d0841: ret 0xefa6;
0xffffffff822d0842: ret 0xefa6;
0xffffffff8234dc29: ret 0xefb7;
0xffffffff8254a4d3: ret 0xefb8;
0xffffffff823efdf7: ret 0xefc4;
0xffffffff823e9e06: ret 0xefc6;
0xffffffff8228f3f0: ret 0xefc8;
0xffffffff823e1c40: ret 0xefca;
0xffffffff824e401a: ret 0xefcc;
0xffffffff823eb232: ret 0xefd0;
0xffffffff8346b3d0: ret 0xefd2;
0xffffffff8224a8c8: ret 0xefd3;
0xffffffff82326527: ret 0xefd5;
0xffffffff8232908d: ret 0xefd6;
0xffffffff8227872f: ret 0xefd7;
0xffffffff823ba638: ret 0xefd;
0xffffffff822ee30e: ret 0xefdb;
0xffffffff8267d5e2: ret 0xefdc;
0xffffffff834551ad: ret 0xefe1;
0xffffffff8252b769: ret 0xefe2;
0xffffffff816fc224: ret 0xefe8;
0xffffffff829c0778: ret 0xefe;
0xffffffff822afdb7: ret 0xefec;
0xffffffff82440ead: ret 0xeff3;
0xffffffff823e0084: ret 0xeff4;
0xffffffff822ecf50: ret 0xeff7;
0xffffffff8244d490: ret 0xeff;
0xffffffff823ccfb0: ret 0xeffb;
0xffffffff8151d0b9: ret 0xefff;
0xffffffff81044c65: ret 0xf000;
0xffffffff8136d22a: ret 0xf001;
0xffffffff825167ad: ret 0xf006;
0xffffffff81484881: ret 0xf007;
0xffffffff816ba90a: ret 0xf008;
0xffffffff81ae87ed: ret 0xf009;
0xffffffff810533f9: ret 0xf00;
0xffffffff81046aaa: ret 0xf00;
0xffffffff81046aab: ret 0xf00;
0xffffffff8255441d: ret 0xf00e;
0xffffffff822fbcef: ret 0xf012;
0xffffffff82478c82: ret 0xf015;
0xffffffff8105ff40: ret 0xf01;
0xffffffff823cc3f0: ret 0xf01a;
0xffffffff82378605: ret 0xf022;
0xffffffff811c6d73: ret 0xf024;
0xffffffff82518188: ret 0xf026;
0xffffffff81b8089a: ret 0xf029;
0xffffffff811ec362: ret 0xf02;
0xffffffff82423ebf: ret 0xf02a;
0xffffffff82521bda: ret 0xf02c;
0xffffffff8254beee: ret 0xf02e;
0xffffffff814565a9: ret 0xf030;
0xffffffff83454d04: ret 0xf031;
0xffffffff8126eb67: ret 0xf034;
0xffffffff82286aa2: ret 0xf035;
0xffffffff818848c9: ret 0xf038;
0xffffffff8101f5a1: ret 0xf03;
0xffffffff822e61e9: ret 0xf03f;
0xffffffff82298405: ret 0xf040;
0xffffffff81c155c9: ret 0xf048;
0xffffffff82373c37: ret 0xf049;
0xffffffff81005795: ret 0xf04;
0xffffffff82393810: ret 0xf04a;
0xffffffff81729a61: ret 0xf04d;
0xffffffff8228ed9e: ret 0xf04f;
0xffffffff82479995: ret 0xf051;
0xffffffff82306aa2: ret 0xf052;
0xffffffff82344b2e: ret 0xf053;
0xffffffff8233d1cb: ret 0xf055;
0xffffffff818aaa8f: ret 0xf05;
0xffffffff8161f650: ret 0xf05d;
0xffffffff8248bc03: ret 0xf05e;
0xffffffff8256a8b0: ret 0xf062;
0xffffffff8161f8a2: ret 0xf063;
0xffffffff812b042a: ret 0xf065;
0xffffffff8239c598: ret 0xf069;
0xffffffff81153449: ret 0xf06;
0xffffffff82248091: ret 0xf06a;
0xffffffff8229d374: ret 0xf06d;
0xffffffff8175e35b: ret 0xf075;
0xffffffff824ea3d3: ret 0xf076;
0xffffffff81410577: ret 0xf078;
0xffffffff81288298: ret 0xf07;
0xffffffff81c2a260: ret 0xf081;
0xffffffff824f1380: ret 0xf082;
0xffffffff82389368: ret 0xf086;
0xffffffff816c7707: ret 0xf089;
0xffffffff81058b71: ret 0xf08;
0xffffffff823896fa: ret 0xf08b;
0xffffffff813f7059: ret 0xf092;
0xffffffff82467019: ret 0xf098;
0xffffffff82431521: ret 0xf09a;
0xffffffff81314b9a: ret 0xf09c;
0xffffffff818fea80: ret 0xf0;
0xffffffff822f187c: ret 0xf0a1;
0xffffffff82559068: ret 0xf0a3;
0xffffffff8229fa96: ret 0xf0a8;
0xffffffff81a7eaea: ret 0xf0a;
0xffffffff8243fe3c: ret 0xf0aa;
0xffffffff83455372: ret 0xf0bf;
0xffffffff8134160a: ret 0xf0c2;
0xffffffff824f3769: ret 0xf0c7;
0xffffffff82502286: ret 0xf0c8;
0xffffffff834553d2: ret 0xf0c9;
0xffffffff813fa53d: ret 0xf0c;
0xffffffff82444188: ret 0xf0ca;
0xffffffff8242df0f: ret 0xf0cb;
0xffffffff82250877: ret 0xf0cd;
0xffffffff82285016: ret 0xf0cf;
0xffffffff81916afc: ret 0xf0d0;
0xffffffff82529c32: ret 0xf0d6;
0xffffffff82419c59: ret 0xf0dd;
0xffffffff82559693: ret 0xf0df;
0xffffffff8241bf0b: ret 0xf0e1;
0xffffffff8243e0fb: ret 0xf0e4;
0xffffffff82399cb1: ret 0xf0e5;
0xffffffff82506062: ret 0xf0e7;
0xffffffff817b387a: ret 0xf0e8;
0xffffffff817f731a: ret 0xf0e9;
0xffffffff822e90df: ret 0xf0e;
0xffffffff8250ec8f: ret 0xf0ee;
0xffffffff811c188e: ret 0xf0f2;
0xffffffff81620184: ret 0xf0f6;
0xffffffff8103d671: ret 0xf0f;
0xffffffff823b0bc0: ret 0xf0fb;
0xffffffff814d53a6: ret 0xf0ff;
0xffffffff810d8c80: ret 0xf101;
0xffffffff81110967: ret 0xf10;
0xffffffff8256b3f8: ret 0xf110;
0xffffffff8172b9f3: ret 0xf112;
0xffffffff81621126: ret 0xf114;
0xffffffff824fc0b3: ret 0xf115;
0xffffffff82464903: ret 0xf116;
0xffffffff81b34dd0: ret 0xf11;
0xffffffff823a7887: ret 0xf11a;
0xffffffff82244d71: ret 0xf11b;
0xffffffff812e97ea: ret 0xf11d;
0xffffffff834554f1: ret 0xf11f;
0xffffffff825738f9: ret 0xf122;
0xffffffff811a4c6a: ret 0xf126;
0xffffffff823ee913: ret 0xf12f;
0xffffffff823ee911: ret 0xf12f;
0xffffffff82405171: ret 0xf130;
0xffffffff823adbac: ret 0xf131;
0xffffffff82387068: ret 0xf132;
0xffffffff8253a2bc: ret 0xf133;
0xffffffff824f09ba: ret 0xf135;
0xffffffff811726e5: ret 0xf139;
0xffffffff82235542: ret 0xf13b;
0xffffffff812e1e67: ret 0xf13e;
0xffffffff82548cc7: ret 0xf13f;
0xffffffff81621b76: ret 0xf140;
0xffffffff8172ba3f: ret 0xf148;
0xffffffff8249a838: ret 0xf153;
0xffffffff823ec85f: ret 0xf154;
0xffffffff823d7f75: ret 0xf157;
0xffffffff825d7f67: ret 0xf15a;
0xffffffff825d7f66: ret 0xf15a;
0xffffffff8191f18e: ret 0xf15f;
0xffffffff8191f1cc: ret 0xf160;
0xffffffff8191f1d5: ret 0xf161;
0xffffffff8191f1de: ret 0xf162;
0xffffffff8191f1e7: ret 0xf163;
0xffffffff8191f1f0: ret 0xf164;
0xffffffff8191f1f9: ret 0xf165;
0xffffffff8347a255: ret 0xf166;
0xffffffff81914dd2: ret 0xf168;
0xffffffff81a3905f: ret 0xf16;
0xffffffff8238b856: ret 0xf16a;
0xffffffff823de5f7: ret 0xf16c;
0xffffffff824426d7: ret 0xf170;
0xffffffff810f6053: ret 0xf175;
0xffffffff82250a27: ret 0xf17c;
0xffffffff811dde60: ret 0xf180;
0xffffffff823e87a2: ret 0xf182;
0xffffffff8165c285: ret 0xf189;
0xffffffff818f4527: ret 0xf18;
0xffffffff817548b1: ret 0xf191;
0xffffffff82349f27: ret 0xf199;
0xffffffff824513c3: ret 0xf19a;
0xffffffff824ac5b3: ret 0xf19e;
0xffffffff81622dbd: ret 0xf19f;
0xffffffff829d0414: ret 0xf1;
0xffffffff822da2df: ret 0xf1a4;
0xffffffff823d5de0: ret 0xf1a5;
0xffffffff813562fa: ret 0xf1a8;
0xffffffff8228e4e3: ret 0xf1a;
0xffffffff8228e4e4: ret 0xf1a;
0xffffffff8229cbbf: ret 0xf1aa;
0xffffffff823ce89f: ret 0xf1c0;
0xffffffff823c0c2b: ret 0xf1c1;
0xffffffff8235b0bb: ret 0xf1c5;
0xffffffff82294b11: ret 0xf1c7;
0xffffffff813fa52a: ret 0xf1c;
0xffffffff824a0b79: ret 0xf1cf;
0xffffffff826bf5be: ret 0xf1d3;
0xffffffff823c6647: ret 0xf1d8;
0xffffffff8226d29e: ret 0xf1e2;
0xffffffff823c7eb3: ret 0xf1e3;
0xffffffff8244d0f4: ret 0xf1e5;
0xffffffff822739cc: ret 0xf1e7;
0xffffffff810e14a9: ret 0xf1e8;
0xffffffff81e00709: ret 0xf1e9;
0xffffffff8155b7c3: ret 0xf1e;
0xffffffff813c44cb: ret 0xf1f0;
0xffffffff81627e04: ret 0xf1f6;
0xffffffff824f92f4: ret 0xf1f;
0xffffffff822fa334: ret 0xf1fd;
0xffffffff811d607d: ret 0xf201;
0xffffffff810e0e3a: ret 0xf202;
0xffffffff81925f0b: ret 0xf204;
0xffffffff817e1f75: ret 0xf209;
0xffffffff81024ecb: ret 0xf20;
0xffffffff822bb972: ret 0xf20a;
0xffffffff8174cc7a: ret 0xf210;
0xffffffff81926533: ret 0xf215;
0xffffffff823ac02b: ret 0xf219;
0xffffffff829c3bc4: ret 0xf21;
0xffffffff8224f745: ret 0xf21f;
0xffffffff8165cbee: ret 0xf221;
0xffffffff82278d30: ret 0xf224;
0xffffffff82450d66: ret 0xf228;
0xffffffff817f214d: ret 0xf229;
0xffffffff822afed8: ret 0xf22;
0xffffffff810afe61: ret 0xf22a;
0xffffffff8230bbf2: ret 0xf22d;
0xffffffff813daa8a: ret 0xf22f;
0xffffffff823c9735: ret 0xf230;
0xffffffff8165ce50: ret 0xf231;
0xffffffff8136672a: ret 0xf232;
0xffffffff822beff8: ret 0xf235;
0xffffffff82345682: ret 0xf23c;
0xffffffff82548622: ret 0xf241;
0xffffffff82425066: ret 0xf242;
0xffffffff823ad9d2: ret 0xf249;
0xffffffff81acdd21: ret 0xf24;
0xffffffff824165ae: ret 0xf24a;
0xffffffff8230af97: ret 0xf24b;
0xffffffff8224d493: ret 0xf24c;
0xffffffff824a17ed: ret 0xf250;
0xffffffff824a0103: ret 0xf25b;
0xffffffff810dc272: ret 0xf25d;
0xffffffff82241d2a: ret 0xf262;
0xffffffff823bfea0: ret 0xf263;
0xffffffff822cd4cc: ret 0xf266;
0xffffffff81b13b8b: ret 0xf26;
0xffffffff8235c7d9: ret 0xf26e;
0xffffffff83499585: ret 0xf270;
0xffffffff810f9e2c: ret 0xf273;
0xffffffff82313d5a: ret 0xf274;
0xffffffff8115c991: ret 0xf275;
0xffffffff81038386: ret 0xf27c;
0xffffffff8103a09c: ret 0xf280;
0xffffffff8147036a: ret 0xf281;
0xffffffff812b3f41: ret 0xf283;
0xffffffff8148a207: ret 0xf28;
0xffffffff82471a6e: ret 0xf28e;
0xffffffff822fd864: ret 0xf29;
0xffffffff829d1b88: ret 0xf2;
0xffffffff812f147a: ret 0xf2a6;
0xffffffff822a6460: ret 0xf2ac;
0xffffffff82556827: ret 0xf2ae;
0xffffffff82535169: ret 0xf2b1;
0xffffffff815ec081: ret 0xf2b8;
0xffffffff824ad538: ret 0xf2bb;
0xffffffff82348a18: ret 0xf2bd;
0xffffffff810dc303: ret 0xf2c0;
0xffffffff82370ce1: ret 0xf2c1;
0xffffffff824e2683: ret 0xf2c;
0xffffffff82276f5b: ret 0xf2cd;
0xffffffff8224713b: ret 0xf2ce;
0xffffffff8151dc95: ret 0xf2d0;
0xffffffff82528956: ret 0xf2d2;
0xffffffff8342eb99: ret 0xf2da;
0xffffffff82343392: ret 0xf2de;
0xffffffff817ac992: ret 0xf2e0;
0xffffffff825256dd: ret 0xf2e3;
0xffffffff822c61df: ret 0xf2e4;
0xffffffff815df9a8: ret 0xf2e8;
0xffffffff81c0e148: ret 0xf2e9;
0xffffffff8238b107: ret 0xf2e;
0xffffffff823b83e3: ret 0xf2ed;
0xffffffff82501834: ret 0xf2ee;
0xffffffff82473aa0: ret 0xf2ef;
0xffffffff835ae0a0: ret 0xf2f0;
0xffffffff822ab95c: ret 0xf2f1;
0xffffffff82697086: ret 0xf2f4;
0xffffffff824481fc: ret 0xf2f6;
0xffffffff824432da: ret 0xf2f9;
0xffffffff83488912: ret 0xf2f;
0xffffffff8228305d: ret 0xf2ff;
0xffffffff811328d3: ret 0xf300;
0xffffffff8173d8e2: ret 0xf303;
0xffffffff82435398: ret 0xf306;
0xffffffff817cdd8a: ret 0xf308;
0xffffffff818503ad: ret 0xf30;
0xffffffff8254058c: ret 0xf30e;
0xffffffff82242452: ret 0xf30f;
0xffffffff823b325b: ret 0xf317;
0xffffffff823b325c: ret 0xf317;
0xffffffff824b4fbf: ret 0xf319;
0xffffffff817403a3: ret 0xf321;
0xffffffff8222b3d9: ret 0xf322;
0xffffffff824a5b7a: ret 0xf325;
0xffffffff822b4b30: ret 0xf326;
0xffffffff811852aa: ret 0xf328;
0xffffffff83487c77: ret 0xf329;
0xffffffff8222aecd: ret 0xf33b;
0xffffffff817acbe2: ret 0xf340;
0xffffffff8172c4a0: ret 0xf345;
0xffffffff823d8268: ret 0xf347;
0xffffffff824048b5: ret 0xf34a;
0xffffffff823b4211: ret 0xf34b;
0xffffffff822d9a44: ret 0xf34c;
0xffffffff8243f84e: ret 0xf34e;
0xffffffff817b81e3: ret 0xf350;
0xffffffff8245e58b: ret 0xf352;
0xffffffff823bece5: ret 0xf356;
0xffffffff823ceef6: ret 0xf357;
0xffffffff814c43ea: ret 0xf358;
0xffffffff82258624: ret 0xf358;
0xffffffff82471908: ret 0xf35b;
0xffffffff82491fc8: ret 0xf363;
0xffffffff81522112: ret 0xf364;
0xffffffff81c2b88f: ret 0xf366;
0xffffffff82539e8d: ret 0xf367;
0xffffffff822dc32b: ret 0xf369;
0xffffffff829c55c4: ret 0xf36;
0xffffffff823d3b38: ret 0xf36d;
0xffffffff81c2b8b0: ret 0xf374;
0xffffffff8346a587: ret 0xf375;
0xffffffff819f5131: ret 0xf378;
0xffffffff824ee777: ret 0xf379;
0xffffffff82502b35: ret 0xf37c;
0xffffffff8119f33c: ret 0xf380;
0xffffffff825057c5: ret 0xf381;
0xffffffff81c2b8c9: ret 0xf382;
0xffffffff824d00cc: ret 0xf383;
0xffffffff82499e6c: ret 0xf385;
0xffffffff824a60ec: ret 0xf387;
0xffffffff827fc18c: ret 0xf388;
0xffffffff815341ef: ret 0xf389;
0xffffffff8173a92c: ret 0xf38;
0xffffffff810ef8da: ret 0xf390;
0xffffffff814c453d: ret 0xf39c;
0xffffffff82446115: ret 0xf39d;
0xffffffff822afc38: ret 0xf3a8;
0xffffffff8229df2d: ret 0xf3ac;
0xffffffff814c507c: ret 0xf3ad;
0xffffffff823946b4: ret 0xf3b2;
0xffffffff8254fa5d: ret 0xf3b;
0xffffffff824ebee8: ret 0xf3bb;
0xffffffff822538e3: ret 0xf3c0;
0xffffffff82531af1: ret 0xf3c1;
0xffffffff82557cdc: ret 0xf3c4;
0xffffffff82425301: ret 0xf3c5;
0xffffffff8172c843: ret 0xf3c6;
0xffffffff822a3b4e: ret 0xf3c9;
0xffffffff83488976: ret 0xf3c;
0xffffffff8346ab42: ret 0xf3d8;
0xffffffff8243d828: ret 0xf3d9;
0xffffffff8231a769: ret 0xf3dd;
0xffffffff82257a79: ret 0xf3e2;
0xffffffff82269adc: ret 0xf3e3;
0xffffffff81012627: ret 0xf3e8;
0xffffffff81034f67: ret 0xf3e9;
0xffffffff811e0b9a: ret 0xf3e;
0xffffffff817ae086: ret 0xf3f0;
0xffffffff8101a91d: ret 0xf3f;
0xffffffff8229cfeb: ret 0xf3fa;
0xffffffff82378d25: ret 0xf403;
0xffffffff822c8642: ret 0xf405;
0xffffffff8112c3a6: ret 0xf40;
0xffffffff823aa3c9: ret 0xf410;
0xffffffff8234fa36: ret 0xf411;
0xffffffff8172cb19: ret 0xf415;
0xffffffff8251e3c7: ret 0xf416;
0xffffffff8243e14c: ret 0xf418;
0xffffffff8106ab9b: ret 0xf41;
0xffffffff8157f421: ret 0xf41a;
0xffffffff824dd6d0: ret 0xf41e;
0xffffffff82435cea: ret 0xf420;
0xffffffff824d30e8: ret 0xf422;
0xffffffff822d449f: ret 0xf424;
0xffffffff81690d72: ret 0xf428;
0xffffffff829c6950: ret 0xf42;
0xffffffff823033a5: ret 0xf42e;
0xffffffff813aa0da: ret 0xf430;
0xffffffff822ddaed: ret 0xf433;
0xffffffff822a61fd: ret 0xf435;
0xffffffff8172cd4f: ret 0xf437;
0xffffffff81876a45: ret 0xf43d;
0xffffffff824c1c3d: ret 0xf441;
0xffffffff82437b8d: ret 0xf446;
0xffffffff82341eea: ret 0xf449;
0xffffffff8103eab6: ret 0xf44;
0xffffffff8252bf7c: ret 0xf44c;
0xffffffff823b974d: ret 0xf44e;
0xffffffff810c4c36: ret 0xf450;
0xffffffff8172d1cf: ret 0xf455;
0xffffffff811f8c95: ret 0xf45;
0xffffffff82435b13: ret 0xf45e;
0xffffffff82499b42: ret 0xf464;
0xffffffff8246167d: ret 0xf465;
0xffffffff824f91e9: ret 0xf466;
0xffffffff824ad181: ret 0xf46;
0xffffffff822a11de: ret 0xf46b;
0xffffffff822a11e0: ret 0xf46b;
0xffffffff823b2879: ret 0xf46c;
0xffffffff824fbe12: ret 0xf46d;
0xffffffff823594f8: ret 0xf46f;
0xffffffff82299c13: ret 0xf470;
0xffffffff81719b81: ret 0xf472;
0xffffffff8172d0cf: ret 0xf474;
0xffffffff81c2a610: ret 0xf479;
0xffffffff81927fd4: ret 0xf47b;
0xffffffff824e149d: ret 0xf47c;
0xffffffff8165cfd9: ret 0xf47d;
0xffffffff82491886: ret 0xf483;
0xffffffff8235d254: ret 0xf486;
0xffffffff81617de5: ret 0xf48;
0xffffffff810147fe: ret 0xf48;
0xffffffff812fc475: ret 0xf490;
0xffffffff822b7799: ret 0xf491;
0xffffffff8225ad6e: ret 0xf496;
0xffffffff8102a049: ret 0xf49;
0xffffffff81927fdd: ret 0xf49b;
0xffffffff81bcaefa: ret 0xf49d;
0xffffffff82861514: ret 0xf4;
0xffffffff82285f98: ret 0xf4a3;
0xffffffff8172d10e: ret 0xf4a5;
0xffffffff823b29a5: ret 0xf4a8;
0xffffffff81927fe6: ret 0xf4b6;
0xffffffff813914a7: ret 0xf4bd;
0xffffffff8237ca20: ret 0xf4be;
0xffffffff82353324: ret 0xf4c0;
0xffffffff825710d9: ret 0xf4c1;
0xffffffff824a7c49: ret 0xf4c3;
0xffffffff8231875f: ret 0xf4c8;
0xffffffff8103b5b1: ret 0xf4c;
0xffffffff81720b29: ret 0xf4cd;
0xffffffff823b48cd: ret 0xf4cf;
0xffffffff823b4634: ret 0xf4d0;
0xffffffff8172d0b0: ret 0xf4d7;
0xffffffff81927fef: ret 0xf4d8;
0xffffffff822eccba: ret 0xf4d9;
0xffffffff823d33e4: ret 0xf4e1;
0xffffffff8254d11d: ret 0xf4e4;
0xffffffff81437e22: ret 0xf4e8;
0xffffffff817b6577: ret 0xf4e9;
0xffffffff81927ff8: ret 0xf4f9;
0xffffffff835a8e5e: ret 0xf4fd;
0xffffffff81725aba: ret 0xf501;
0xffffffff82507700: ret 0xf504;
0xffffffff8153e048: ret 0xf50;
0xffffffff82306fcf: ret 0xf50b;
0xffffffff81b4f1e9: ret 0xf510;
0xffffffff81a3cd1a: ret 0xf511;
0xffffffff8249b6b6: ret 0xf519;
0xffffffff825235f1: ret 0xf51;
0xffffffff823176ee: ret 0xf51c;
0xffffffff823176ed: ret 0xf51c;
0xffffffff8245164d: ret 0xf524;
0xffffffff8229273c: ret 0xf52c;
0xffffffff8222f211: ret 0xf52e;
0xffffffff822c6bf8: ret 0xf52f;
0xffffffff823ef53b: ret 0xf531;
0xffffffff82263bfa: ret 0xf533;
0xffffffff8172d912: ret 0xf537;
0xffffffff8243a617: ret 0xf538;
0xffffffff822ce178: ret 0xf53;
0xffffffff82409746: ret 0xf542;
0xffffffff8252acef: ret 0xf54;
0xffffffff824928e3: ret 0xf54e;
0xffffffff82274971: ret 0xf54f;
0xffffffff817cf004: ret 0xf550;
0xffffffff82560ccf: ret 0xf551;
0xffffffff822bf61a: ret 0xf555;
0xffffffff82451a42: ret 0xf560;
0xffffffff824fa4de: ret 0xf561;
0xffffffff8172d8e3: ret 0xf565;
0xffffffff8250690a: ret 0xf56c;
0xffffffff8225ef58: ret 0xf56f;
0xffffffff824660c2: ret 0xf572;
0xffffffff81bf81ff: ret 0xf575;
0xffffffff8228feb3: ret 0xf582;
0xffffffff813a538a: ret 0xf586;
0xffffffff812d6e7b: ret 0xf588;
0xffffffff812d6e95: ret 0xf589;
0xffffffff822a9dee: ret 0xf58e;
0xffffffff812d71e8: ret 0xf594;
0xffffffff812d7217: ret 0xf595;
0xffffffff812d71c2: ret 0xf596;
0xffffffff812dac32: ret 0xf597;
0xffffffff812dac50: ret 0xf598;
0xffffffff822b88fa: ret 0xf59e;
0xffffffff829d607c: ret 0xf5;
0xffffffff824f833b: ret 0xf5a7;
0xffffffff823f7423: ret 0xf5a8;
0xffffffff810353d6: ret 0xf5af;
0xffffffff810bf591: ret 0xf5b0;
0xffffffff8172dd19: ret 0xf5b2;
0xffffffff8114bca5: ret 0xf5b8;
0xffffffff8153fdd9: ret 0xf5bd;
0xffffffff812dd608: ret 0xf5c0;
0xffffffff823065ff: ret 0xf5c2;
0xffffffff812e0938: ret 0xf5c8;
0xffffffff812e35ea: ret 0xf5c9;
0xffffffff8173a735: ret 0xf5c;
0xffffffff812e8a73: ret 0xf5ca;
0xffffffff82493c81: ret 0xf5d0;
0xffffffff824ca918: ret 0xf5d4;
0xffffffff82357cd2: ret 0xf5da;
0xffffffff8227e258: ret 0xf5dd;
0xffffffff82492053: ret 0xf5de;
0xffffffff823f5f4f: ret 0xf5df;
0xffffffff811dcde5: ret 0xf5e8;
0xffffffff8247d6d0: ret 0xf5e9;
0xffffffff822c5073: ret 0xf5eb;
0xffffffff8135210a: ret 0xf5f1;
0xffffffff8224b917: ret 0xf5f4;
0xffffffff8242ae88: ret 0xf5fc;
0xffffffff82269f81: ret 0xf600;
0xffffffff814d2ef9: ret 0xf601;
0xffffffff823a833b: ret 0xf603;
0xffffffff81a701d8: ret 0xf604;
0xffffffff8155f2f4: ret 0xf608;
0xffffffff81886b46: ret 0xf60;
0xffffffff8236138b: ret 0xf60a;
0xffffffff813819f8: ret 0xf60c;
0xffffffff812f7ed0: ret 0xf610;
0xffffffff81a70174: ret 0xf614;
0xffffffff82492d22: ret 0xf617;
0xffffffff82301382: ret 0xf61a;
0xffffffff8172dfa4: ret 0xf61c;
0xffffffff8253afdf: ret 0xf61d;
0xffffffff824f60de: ret 0xf61f;
0xffffffff8100ebf0: ret 0xf620;
0xffffffff812faa41: ret 0xf621;
0xffffffff824f4891: ret 0xf626;
0xffffffff8233e99f: ret 0xf630;
0xffffffff811f2457: ret 0xf631;
0xffffffff822846da: ret 0xf637;
0xffffffff8172dfc6: ret 0xf63f;
0xffffffff8105c52d: ret 0xf640;
0xffffffff8120ddd5: ret 0xf641;
0xffffffff824d9e8b: ret 0xf644;
0xffffffff823ad2eb: ret 0xf647;
0xffffffff81304624: ret 0xf648;
0xffffffff81948ff2: ret 0xf64a;
0xffffffff83470e70: ret 0xf651;
0xffffffff81707d42: ret 0xf657;
0xffffffff82305e14: ret 0xf658;
0xffffffff822fbb76: ret 0xf65a;
0xffffffff8164d4da: ret 0xf65e;
0xffffffff8172dff0: ret 0xf660;
0xffffffff8251fec5: ret 0xf663;
0xffffffff81b15323: ret 0xf668;
0xffffffff81064943: ret 0xf66;
0xffffffff8256397b: ret 0xf66f;
0xffffffff8256397c: ret 0xf66f;
0xffffffff82547ee6: ret 0xf670;
0xffffffff8256a7f9: ret 0xf672;
0xffffffff8172e09c: ret 0xf673;
0xffffffff8157f67e: ret 0xf674;
0xffffffff823bc6bd: ret 0xf680;
0xffffffff810526b9: ret 0xf685;
0xffffffff82518d5f: ret 0xf686;
0xffffffff8231d223: ret 0xf688;
0xffffffff81927a5d: ret 0xf689;
0xffffffff814cfd7c: ret 0xf68;
0xffffffff834a0c25: ret 0xf68d;
0xffffffff8242de66: ret 0xf690;
0xffffffff8172e103: ret 0xf692;
0xffffffff82286991: ret 0xf69;
0xffffffff81a2731a: ret 0xf69a;
0xffffffff8238e4fd: ret 0xf6;
0xffffffff8132012a: ret 0xf6a0;
0xffffffff823afee9: ret 0xf6a8;
0xffffffff824ff3ea: ret 0xf6ab;
0xffffffff8130f61a: ret 0xf6b0;
0xffffffff8172e12f: ret 0xf6b3;
0xffffffff823eeb03: ret 0xf6b4;
0xffffffff82315437: ret 0xf6bd;
0xffffffff8159f654: ret 0xf6c0;
0xffffffff823fe44d: ret 0xf6c2;
0xffffffff8192a248: ret 0xf6c7;
0xffffffff8172e7a9: ret 0xf6d0;
0xffffffff82475d1f: ret 0xf6d3;
0xffffffff82534149: ret 0xf6d5;
0xffffffff824e8b9e: ret 0xf6d6;
0xffffffff82235780: ret 0xf6d7;
0xffffffff82521e1f: ret 0xf6d8;
0xffffffff81941c04: ret 0xf6e8;
0xffffffff81be27e2: ret 0xf6ec;
0xffffffff8248dffb: ret 0xf6f1;
0xffffffff8188ef8e: ret 0xf6f8;
0xffffffff823c4c25: ret 0xf6fa;
0xffffffff814aa8b2: ret 0xf6ff;
0xffffffff810bf6c6: ret 0xf700;
0xffffffff81a94d0d: ret 0xf701;
0xffffffff8172e6bc: ret 0xf703;
0xffffffff81015bee: ret 0xf70;
0xffffffff825424d9: ret 0xf70a;
0xffffffff81a8d3b5: ret 0xf70e;
0xffffffff8175f617: ret 0xf710;
0xffffffff82430261: ret 0xf711;
0xffffffff82643bbc: ret 0xf712;
0xffffffff812d7b2a: ret 0xf713;
0xffffffff823cac7b: ret 0xf71a;
0xffffffff81282247: ret 0xf71d;
0xffffffff8172e626: ret 0xf720;
0xffffffff8230457b: ret 0xf725;
0xffffffff824d4f9c: ret 0xf729;
0xffffffff8175f67e: ret 0xf730;
0xffffffff8222c967: ret 0xf731;
0xffffffff81389c0a: ret 0xf735;
0xffffffff8245334c: ret 0xf737;
0xffffffff82551dc3: ret 0xf738;
0xffffffff8151f5f3: ret 0xf73;
0xffffffff8248fe67: ret 0xf73c;
0xffffffff823a8337: ret 0xf73d;
0xffffffff823a8336: ret 0xf73d;
0xffffffff82303c59: ret 0xf73e;
0xffffffff812965cb: ret 0xf73f;
0xffffffff810b4855: ret 0xf741;
0xffffffff814c7ed1: ret 0xf747;
0xffffffff8100c076: ret 0xf748;
0xffffffff8113aeac: ret 0xf748;
0xffffffff811200ee: ret 0xf749;
0xffffffff8113b195: ret 0xf74;
0xffffffff8129fefa: ret 0xf74b;
0xffffffff8233d478: ret 0xf74c;
0xffffffff8129ca3a: ret 0xf74d;
0xffffffff823fb0e0: ret 0xf74f;
0xffffffff8236281e: ret 0xf750;
0xffffffff81126112: ret 0xf754;
0xffffffff822ab33e: ret 0xf757;
0xffffffff8194107e: ret 0xf75;
0xffffffff822c40ef: ret 0xf760;
0xffffffff8172e643: ret 0xf765;
0xffffffff834f0199: ret 0xf766;
0xffffffff814d0122: ret 0xf76;
0xffffffff822b5e81: ret 0xf76f;
0xffffffff8222db6d: ret 0xf770;
0xffffffff8123f52a: ret 0xf774;
0xffffffff81b6a418: ret 0xf777;
0xffffffff824f1522: ret 0xf779;
0xffffffff810ec4e4: ret 0xf77;
0xffffffff8172e682: ret 0xf77f;
0xffffffff82562199: ret 0xf781;
0xffffffff812401d7: ret 0xf788;
0xffffffff816e2f21: ret 0xf789;
0xffffffff8238ddc5: ret 0xf791;
0xffffffff82573595: ret 0xf793;
0xffffffff817715aa: ret 0xf797;
0xffffffff81ae98ef: ret 0xf799;
0xffffffff814c2fb1: ret 0xf79a;
0xffffffff814c152e: ret 0xf79b;
0xffffffff8232ef72: ret 0xf79d;
0xffffffff8251a8eb: ret 0xf79f;
0xffffffff8231ca7f: ret 0xf7a0;
0xffffffff816f2f01: ret 0xf7a5;
0xffffffff823082d1: ret 0xf7ad;
0xffffffff8165cb45: ret 0xf7af;
0xffffffff81240d97: ret 0xf7b0;
0xffffffff8172e57f: ret 0xf7b4;
0xffffffff8173a9e9: ret 0xf7b;
0xffffffff81983c18: ret 0xf7bb;
0xffffffff81a20c1a: ret 0xf7bc;
0xffffffff822633ae: ret 0xf7be;
0xffffffff812550bb: ret 0xf7bf;
0xffffffff81004aa1: ret 0xf7c0;
0xffffffff822411db: ret 0xf7c4;
0xffffffff8232cf68: ret 0xf7c7;
0xffffffff8255f2ab: ret 0xf7c8;
0xffffffff8101214e: ret 0xf7ca;
0xffffffff8101e26a: ret 0xf7cc;
0xffffffff8254e599: ret 0xf7ce;
0xffffffff82472b89: ret 0xf7cf;
0xffffffff8172e943: ret 0xf7d2;
0xffffffff818c9d28: ret 0xf7d4;
0xffffffff82241336: ret 0xf7d5;
0xffffffff8139e6d6: ret 0xf7d;
0xffffffff822cd85c: ret 0xf7da;
0xffffffff8246ad9e: ret 0xf7dc;
0xffffffff82505528: ret 0xf7e3;
0xffffffff8231e9bb: ret 0xf7e7;
0xffffffff813841b3: ret 0xf7e8;
0xffffffff812a8faa: ret 0xf7e9;
0xffffffff8172ec9b: ret 0xf7f3;
0xffffffff82450967: ret 0xf7f9;
0xffffffff82450968: ret 0xf7f9;
0xffffffff829cbe10: ret 0xf7f;
0xffffffff826fddc5: ret 0xf7fa;
0xffffffff8238ec18: ret 0xf7fb;
0xffffffff81310d15: ret 0xf7ff;
0xffffffff822fd0d7: ret 0xf800;
0xffffffff81b83c5e: ret 0xf801;
0xffffffff824908eb: ret 0xf806;
0xffffffff82302cbd: ret 0xf808;
0xffffffff814c42a5: ret 0xf809;
0xffffffff8105bbe2: ret 0xf80;
0xffffffff824732c1: ret 0xf814;
0xffffffff814c4ad4: ret 0xf817;
0xffffffff8105b7e6: ret 0xf81;
0xffffffff82379a32: ret 0xf81b;
0xffffffff8243a0d5: ret 0xf81e;
0xffffffff824360c6: ret 0xf820;
0xffffffff817dc262: ret 0xf822;
0xffffffff81a19f1a: ret 0xf824;
0xffffffff818b347b: ret 0xf825;
0xffffffff822cdd5d: ret 0xf827;
0xffffffff823894c8: ret 0xf828;
0xffffffff8172edfd: ret 0xf829;
0xffffffff82334902: ret 0xf82d;
0xffffffff8253e1b3: ret 0xf82e;
0xffffffff834355ac: ret 0xf830;
0xffffffff8229a650: ret 0xf832;
0xffffffff82528147: ret 0xf836;
0xffffffff834355c2: ret 0xf838;
0xffffffff823324c7: ret 0xf83a;
0xffffffff834355d8: ret 0xf840;
0xffffffff823e976c: ret 0xf845;
0xffffffff81524f2e: ret 0xf847;
0xffffffff81302072: ret 0xf848;
0xffffffff813020c7: ret 0xf849;
0xffffffff8130563e: ret 0xf84a;
0xffffffff8255e08b: ret 0xf84c;
0xffffffff82531d88: ret 0xf84f;
0xffffffff81309a35: ret 0xf850;
0xffffffff81309a58: ret 0xf851;
0xffffffff81309a76: ret 0xf852;
0xffffffff8230b5b5: ret 0xf857;
0xffffffff824bc44e: ret 0xf85a;
0xffffffff824238b5: ret 0xf85d;
0xffffffff8172ef23: ret 0xf860;
0xffffffff8247d67a: ret 0xf864;
0xffffffff8101ec92: ret 0xf868;
0xffffffff8187be18: ret 0xf869;
0xffffffff8249834b: ret 0xf86;
0xffffffff8249834a: ret 0xf86;
0xffffffff824b0a23: ret 0xf86f;
0xffffffff8101edaf: ret 0xf875;
0xffffffff82438491: ret 0xf878;
0xffffffff82254266: ret 0xf879;
0xffffffff8255f5f3: ret 0xf87;
0xffffffff834534c5: ret 0xf87d;
0xffffffff8253e2f2: ret 0xf87e;
0xffffffff823600d6: ret 0xf87f;
0xffffffff81a41701: ret 0xf880;
0xffffffff81025715: ret 0xf883;
0xffffffff8101ee2e: ret 0xf884;
0xffffffff81006516: ret 0xf885;
0xffffffff816c6ba4: ret 0xf889;
0xffffffff823b434e: ret 0xf88;
0xffffffff823bce94: ret 0xf88a;
0xffffffff822dd705: ret 0xf88c;
0xffffffff8264382c: ret 0xf88d;
0xffffffff8172ea34: ret 0xf893;
0xffffffff8113b1b6: ret 0xf894;
0xffffffff817dd01f: ret 0xf895;
0xffffffff83452eae: ret 0xf898;
0xffffffff8112366e: ret 0xf8;
0xffffffff8101ee9e: ret 0xf8a0;
0xffffffff82310900: ret 0xf8a4;
0xffffffff8228a8f7: ret 0xf8a;
0xffffffff823eae3b: ret 0xf8aa;
0xffffffff81a1bbda: ret 0xf8ab;
0xffffffff8101ef0e: ret 0xf8ac;
0xffffffff824c4734: ret 0xf8ad;
0xffffffff823bc73e: ret 0xf8b3;
0xffffffff82383296: ret 0xf8b4;
0xffffffff8101ef7e: ret 0xf8c0;
0xffffffff8156c657: ret 0xf8c1;
0xffffffff8255b265: ret 0xf8c4;
0xffffffff82410f26: ret 0xf8c5;
0xffffffff8172ea67: ret 0xf8c6;
0xffffffff82281395: ret 0xf8c8;
0xffffffff8255d5a4: ret 0xf8c;
0xffffffff8101efee: ret 0xf8ce;
0xffffffff8135656a: ret 0xf8d0;
0xffffffff824739ad: ret 0xf8d1;
0xffffffff824fcc7b: ret 0xf8da;
0xffffffff8229e110: ret 0xf8de;
0xffffffff823f7322: ret 0xf8e1;
0xffffffff825640c9: ret 0xf8e4;
0xffffffff822c382d: ret 0xf8e6;
0xffffffff81234ca2: ret 0xf8e8;
0xffffffff823c5fb9: ret 0xf8e;
0xffffffff8172eafd: ret 0xf8ea;
0xffffffff8232f38e: ret 0xf8ec;
0xffffffff81a0d20a: ret 0xf8ef;
0xffffffff810d247c: ret 0xf8f4;
0xffffffff822d3cb2: ret 0xf8f;
0xffffffff82542966: ret 0xf8fa;
0xffffffff835a8e06: ret 0xf8fd;
0xffffffff81bc8553: ret 0xf8ff;
0xffffffff822eda1e: ret 0xf901;
0xffffffff82485f0f: ret 0xf903;
0xffffffff824e1e69: ret 0xf908;
0xffffffff814d0bdf: ret 0xf90;
0xffffffff82457640: ret 0xf90b;
0xffffffff8245f1ca: ret 0xf90f;
0xffffffff8172ebde: ret 0xf910;
0xffffffff823dac62: ret 0xf916;
0xffffffff822f957b: ret 0xf917;
0xffffffff823c0dff: ret 0xf918;
0xffffffff811498aa: ret 0xf91d;
0xffffffff8135eb06: ret 0xf920;
0xffffffff823eb3c3: ret 0xf924;
0xffffffff814dce97: ret 0xf92;
0xffffffff81456649: ret 0xf930;
0xffffffff8344f57b: ret 0xf931;
0xffffffff8232b98b: ret 0xf932;
0xffffffff82397ac4: ret 0xf935;
0xffffffff8234b0e8: ret 0xf936;
0xffffffff811726ea: ret 0xf939;
0xffffffff824d3560: ret 0xf93;
0xffffffff82234627: ret 0xf93a;
0xffffffff8224c3bd: ret 0xf94e;
0xffffffff8101f430: ret 0xf955;
0xffffffff8253e0c6: ret 0xf957;
0xffffffff8231f471: ret 0xf95;
0xffffffff815ef5b4: ret 0xf960;
0xffffffff824de457: ret 0xf962;
0xffffffff82378719: ret 0xf968;
0xffffffff8242d08c: ret 0xf96b;
0xffffffff822e3645: ret 0xf96d;
0xffffffff81a2c7da: ret 0xf96e;
0xffffffff8132922a: ret 0xf96f;
0xffffffff8228a1c4: ret 0xf970;
0xffffffff816282c2: ret 0xf972;
0xffffffff81c29f3c: ret 0xf976;
0xffffffff8134c17a: ret 0xf97c;
0xffffffff8237cb65: ret 0xf97e;
0xffffffff816295b7: ret 0xf97f;
0xffffffff8101c555: ret 0xf980;
0xffffffff81028a8f: ret 0xf981;
0xffffffff81018af1: ret 0xf983;
0xffffffff811c1ff0: ret 0xf986;
0xffffffff81c29f56: ret 0xf987;
0xffffffff822462c8: ret 0xf988;
0xffffffff816c15ad: ret 0xf989;
0xffffffff811b70e1: ret 0xf98;
0xffffffff823d99a0: ret 0xf98a;
0xffffffff81439d47: ret 0xf98b;
0xffffffff8225f9dd: ret 0xf98c;
0xffffffff816296b3: ret 0xf992;
0xffffffff824734b4: ret 0xf993;
0xffffffff81c29f67: ret 0xf998;
0xffffffff8173aac5: ret 0xf99;
0xffffffff81629b71: ret 0xf99d;
0xffffffff824b84c0: ret 0xf99f;
0xffffffff8189dc6a: ret 0xf9;
0xffffffff8247fe7f: ret 0xf9a0;
0xffffffff8240d8d3: ret 0xf9a2;
0xffffffff824a74be: ret 0xf9a9;
0xffffffff822a7b53: ret 0xf9aa;
0xffffffff82300524: ret 0xf9ab;
0xffffffff82369a0c: ret 0xf9ae;
0xffffffff823af13b: ret 0xf9af;
0xffffffff823af13c: ret 0xf9af;
0xffffffff82240abf: ret 0xf9b0;
0xffffffff818dd698: ret 0xf9b1;
0xffffffff822f482a: ret 0xf9b5;
0xffffffff811a5f4a: ret 0xf9b8;
0xffffffff82477823: ret 0xf9bb;
0xffffffff8172f1db: ret 0xf9bc;
0xffffffff81629f5e: ret 0xf9bd;
0xffffffff8241c6c3: ret 0xf9c1;
0xffffffff822800be: ret 0xf9c3;
0xffffffff8254eba5: ret 0xf9c;
0xffffffff8162a13a: ret 0xf9cd;
0xffffffff822aed38: ret 0xf9cf;
0xffffffff8178a985: ret 0xf9d0;
0xffffffff8178d912: ret 0xf9d1;
0xffffffff823b2be9: ret 0xf9d7;
0xffffffff824b5990: ret 0xf9d8;
0xffffffff811d2b9d: ret 0xf9df;
0xffffffff82557c45: ret 0xf9e2;
0xffffffff822ae98b: ret 0xf9e4;
0xffffffff824b28d9: ret 0xf9e7;
0xffffffff8162a690: ret 0xf9e8;
0xffffffff81191f8a: ret 0xf9e;
0xffffffff822a79ef: ret 0xf9ed;
0xffffffff815134bc: ret 0xf9f0;
0xffffffff822659dc: ret 0xf9f1;
0xffffffff8245571d: ret 0xf9f2;
0xffffffff8348493c: ret 0xf9f8;
0xffffffff8133851a: ret 0xf9f9;
0xffffffff826db468: ret 0xf9fa;
0xffffffff8175d2f8: ret 0xf9fc;
0xffffffff835a8e8a: ret 0xf9fd;
0xffffffff82375766: ret 0xf9ff;
0xffffffff82375764: ret 0xf9ff;
0xffffffff810b77a8: ret 0xf;
0xffffffff81050583: ret 0xfa00;
0xffffffff8112ebdb: ret 0xfa01;
0xffffffff8231b967: ret 0xfa03;
0xffffffff824de92f: ret 0xfa06;
0xffffffff824de930: ret 0xfa06;
0xffffffff81632fdc: ret 0xfa09;
0xffffffff824db091: ret 0xfa11;
0xffffffff8231f830: ret 0xfa13;
0xffffffff81628301: ret 0xfa16;
0xffffffff824275be: ret 0xfa17;
0xffffffff8144914b: ret 0xfa18;
0xffffffff824c11b6: ret 0xfa1;
0xffffffff8165cc41: ret 0xfa21;
0xffffffff822897d8: ret 0xfa22;
0xffffffff811825ea: ret 0xfa27;
0xffffffff81769baf: ret 0xfa29;
0xffffffff82454bd6: ret 0xfa2d;
0xffffffff8165cbd1: ret 0xfa31;
0xffffffff82419199: ret 0xfa32;
0xffffffff8242bd3f: ret 0xfa39;
0xffffffff8162ad9e: ret 0xfa41;
0xffffffff82319b02: ret 0xfa42;
0xffffffff8162ac9b: ret 0xfa43;
0xffffffff8225a6ea: ret 0xfa49;
0xffffffff8255be15: ret 0xfa4d;
0xffffffff82280e3b: ret 0xfa4e;
0xffffffff82229c11: ret 0xfa53;
0xffffffff82229c12: ret 0xfa53;
0xffffffff812e432a: ret 0xfa56;
0xffffffff824ef0ef: ret 0xfa57;
0xffffffff822f7cae: ret 0xfa5c;
0xffffffff8172f481: ret 0xfa5f;
0xffffffff8171f474: ret 0xfa60;
0xffffffff8256b7fb: ret 0xfa62;
0xffffffff822ac491: ret 0xfa65;
0xffffffff8144e18a: ret 0xfa69;
0xffffffff8235b53f: ret 0xfa6d;
0xffffffff823dd74e: ret 0xfa73;
0xffffffff823e52d1: ret 0xfa75;
0xffffffff8240d8b2: ret 0xfa79;
0xffffffff829cf068: ret 0xfa7;
0xffffffff823c41ed: ret 0xfa7b;
0xffffffff823c41ee: ret 0xfa7b;
0xffffffff813cd41a: ret 0xfa80;
0xffffffff8127154a: ret 0xfa81;
0xffffffff81033619: ret 0xfa83;
0xffffffff822bec27: ret 0xfa84;
0xffffffff81c660a7: ret 0xfa89;
0xffffffff8132c5df: ret 0xfa8;
0xffffffff822fffc4: ret 0xfa8b;
0xffffffff822e0141: ret 0xfa96;
0xffffffff817ddaf5: ret 0xfa98;
0xffffffff81820ae5: ret 0xfa9;
0xffffffff8172f5db: ret 0xfa9a;
0xffffffff8229d44e: ret 0xfa9e;
0xffffffff81c2e83c: ret 0xfaa1;
0xffffffff8172f615: ret 0xfaa2;
0xffffffff8254594d: ret 0xfaa5;
0xffffffff824ae6a2: ret 0xfaad;
0xffffffff822322d5: ret 0xfaaf;
0xffffffff823185cb: ret 0xfab1;
0xffffffff8245a734: ret 0xfab2;
0xffffffff8229b880: ret 0xfab;
0xffffffff82565e30: ret 0xfaba;
0xffffffff823bc55e: ret 0xfac0;
0xffffffff811d7a25: ret 0xfac1;
0xffffffff824ab165: ret 0xfac3;
0xffffffff8235e6b2: ret 0xfac5;
0xffffffff81695f75: ret 0xfac7;
0xffffffff81189994: ret 0xfac8;
0xffffffff823f149f: ret 0xfacd;
0xffffffff810db584: ret 0xfad0;
0xffffffff8164bcd0: ret 0xfad1;
0xffffffff822e7d39: ret 0xfad3;
0xffffffff810d7298: ret 0xfad4;
0xffffffff822bf8b3: ret 0xfada;
0xffffffff823d1823: ret 0xfadd;
0xffffffff813146f2: ret 0xfadf;
0xffffffff824da8ab: ret 0xfae2;
0xffffffff8225b0a8: ret 0xfae4;
0xffffffff8224d078: ret 0xfae6;
0xffffffff81036f40: ret 0xfae8;
0xffffffff8113f990: ret 0xfae9;
0xffffffff82432b0c: ret 0xfae;
0xffffffff823e43fd: ret 0xfaed;
0xffffffff81629c4e: ret 0xfaef;
0xffffffff823a8d70: ret 0xfaf2;
0xffffffff824023ba: ret 0xfaf4;
0xffffffff822cdd90: ret 0xfafa;
0xffffffff8192c1a6: ret 0xfafc;
0xffffffff8252779e: ret 0xfafd;
0xffffffff81c2f4ef: ret 0xfb00;
0xffffffff81b41a36: ret 0xfb01;
0xffffffff82519e29: ret 0xfb04;
0xffffffff82519e28: ret 0xfb04;
0xffffffff81629c65: ret 0xfb09;
0xffffffff818cfae7: ret 0xfb10;
0xffffffff8162981e: ret 0xfb18;
0xffffffff82261275: ret 0xfb1;
0xffffffff82434d9e: ret 0xfb1a;
0xffffffff8172fdaf: ret 0xfb1b;
0xffffffff82468e20: ret 0xfb1c;
0xffffffff824f2b8c: ret 0xfb20;
0xffffffff816293db: ret 0xfb26;
0xffffffff817e2279: ret 0xfb2;
0xffffffff8247e885: ret 0xfb2a;
0xffffffff8192a828: ret 0xfb2f;
0xffffffff822bebed: ret 0xfb34;
0xffffffff81629a8f: ret 0xfb36;
0xffffffff8172fddd: ret 0xfb3c;
0xffffffff822c9a4d: ret 0xfb3e;
0xffffffff81138c2d: ret 0xfb48;
0xffffffff824c341b: ret 0xfb49;
0xffffffff81ad132c: ret 0xfb50;
0xffffffff81ad1347: ret 0xfb51;
0xffffffff81ad1362: ret 0xfb52;
0xffffffff81ad39d0: ret 0xfb53;
0xffffffff81961958: ret 0xfb54;
0xffffffff81ad40dd: ret 0xfb55;
0xffffffff81ad40fa: ret 0xfb56;
0xffffffff81adc039: ret 0xfb57;
0xffffffff8113931e: ret 0xfb58;
0xffffffff81adc070: ret 0xfb59;
0xffffffff81adc54e: ret 0xfb5a;
0xffffffff8250f5d3: ret 0xfb5e;
0xffffffff81c18854: ret 0xfb60;
0xffffffff82347c22: ret 0xfb62;
0xffffffff822ad07a: ret 0xfb63;
0xffffffff8252a963: ret 0xfb64;
0xffffffff8127ee0a: ret 0xfb67;
0xffffffff81998e78: ret 0xfb70;
0xffffffff823925c6: ret 0xfb71;
0xffffffff8239d5f4: ret 0xfb75;
0xffffffff8172ffa2: ret 0xfb79;
0xffffffff82572938: ret 0xfb7e;
0xffffffff810b1d98: ret 0xfb80;
0xffffffff811a82a1: ret 0xfb83;
0xffffffff82518fef: ret 0xfb88;
0xffffffff81667858: ret 0xfb89;
0xffffffff83448a5b: ret 0xfb8b;
0xffffffff8147eaa5: ret 0xfb90;
0xffffffff82432adc: ret 0xfb92;
0xffffffff822a12b7: ret 0xfb96;
0xffffffff81634ed5: ret 0xfb9;
0xffffffff823b93fe: ret 0xfb9d;
0xffffffff81044e45: ret 0xfb;
0xffffffff811385ad: ret 0xfba0;
0xffffffff82522df2: ret 0xfba1;
0xffffffff81c3b47e: ret 0xfba8;
0xffffffff834988f0: ret 0xfba9;
0xffffffff817301e2: ret 0xfbaf;
0xffffffff82261fae: ret 0xfbb2;
0xffffffff81332c1a: ret 0xfbb6;
0xffffffff83485935: ret 0xfbb8;
0xffffffff829d0d40: ret 0xfbb;
0xffffffff823ee7fa: ret 0xfbbd;
0xffffffff82359927: ret 0xfbbe;
0xffffffff813cb32a: ret 0xfbc0;
0xffffffff825396b0: ret 0xfbc3;
0xffffffff824c80e2: ret 0xfbc4;
0xffffffff83485b6a: ret 0xfbc8;
0xffffffff822df5ae: ret 0xfbca;
0xffffffff8173025b: ret 0xfbcb;
0xffffffff823aae2e: ret 0xfbcf;
0xffffffff82430e66: ret 0xfbd1;
0xffffffff824fa786: ret 0xfbd5;
0xffffffff819df9fa: ret 0xfbd7;
0xffffffff83449a2b: ret 0xfbd;
0xffffffff8248afa8: ret 0xfbdc;
0xffffffff823813ef: ret 0xfbde;
0xffffffff822f486f: ret 0xfbe0;
0xffffffff8249fc6c: ret 0xfbe3;
0xffffffff8234e12d: ret 0xfbe6;
0xffffffff822a6d0e: ret 0xfbe7;
0xffffffff818e1c9f: ret 0xfbe8;
0xffffffff814ef7cf: ret 0xfbe9;
0xffffffff822aa8ff: ret 0xfbea;
0xffffffff82445e22: ret 0xfbf5;
0xffffffff822b980a: ret 0xfbf;
0xffffffff822b9808: ret 0xfbf;
0xffffffff8246e57e: ret 0xfbfb;
0xffffffff813abd5a: ret 0xfbff;
0xffffffff8104c386: ret 0xfc00;
0xffffffff823585a7: ret 0xfc03;
0xffffffff81bd6e5a: ret 0xfc07;
0xffffffff817306e9: ret 0xfc08;
0xffffffff816eeb1a: ret 0xfc0;
0xffffffff824acbe4: ret 0xfc0a;
0xffffffff8114057a: ret 0xfc0c;
0xffffffff824d3499: ret 0xfc0d;
0xffffffff8224e2e4: ret 0xfc0f;
0xffffffff8342e849: ret 0xfc11;
0xffffffff824a706b: ret 0xfc15;
0xffffffff816b2544: ret 0xfc18;
0xffffffff8249338f: ret 0xfc19;
0xffffffff8235d34c: ret 0xfc1;
0xffffffff82506934: ret 0xfc1d;
0xffffffff816fbb6c: ret 0xfc20;
0xffffffff8227f53f: ret 0xfc21;
0xffffffff824690b2: ret 0xfc29;
0xffffffff8344e7a8: ret 0xfc2a;
0xffffffff822bfbb3: ret 0xfc2d;
0xffffffff8103dd3a: ret 0xfc33;
0xffffffff824889e6: ret 0xfc38;
0xffffffff8101b7ca: ret 0xfc3;
0xffffffff823c734b: ret 0xfc3b;
0xffffffff8110f0ea: ret 0xfc3c;
0xffffffff8230a986: ret 0xfc3e;
0xffffffff823c59c7: ret 0xfc3f;
0xffffffff810cde0d: ret 0xfc40;
0xffffffff824e0159: ret 0xfc42;
0xffffffff8342e908: ret 0xfc43;
0xffffffff8227138e: ret 0xfc45;
0xffffffff822d13ad: ret 0xfc46;
0xffffffff811b3c06: ret 0xfc48;
0xffffffff8342e936: ret 0xfc4f;
0xffffffff81795924: ret 0xfc50;
0xffffffff81730ba4: ret 0xfc51;
0xffffffff8228345b: ret 0xfc53;
0xffffffff823e7e53: ret 0xfc54;
0xffffffff825d64b2: ret 0xfc5c;
0xffffffff8349bcc2: ret 0xfc60;
0xffffffff8239f251: ret 0xfc62;
0xffffffff82362bbe: ret 0xfc68;
0xffffffff81ae95e4: ret 0xfc6a;
0xffffffff825d9827: ret 0xfc6b;
0xffffffff82374c74: ret 0xfc6f;
0xffffffff8192ddf5: ret 0xfc70;
0xffffffff8246e9e7: ret 0xfc74;
0xffffffff8173ad8e: ret 0xfc7;
0xffffffff82537aa5: ret 0xfc7c;
0xffffffff819b132a: ret 0xfc80;
0xffffffff8252a1e8: ret 0xfc84;
0xffffffff82403938: ret 0xfc85;
0xffffffff822ad633: ret 0xfc86;
0xffffffff817b2b54: ret 0xfc88;
0xffffffff8130a521: ret 0xfc8;
0xffffffff822d73ab: ret 0xfc8e;
0xffffffff822d73ac: ret 0xfc8e;
0xffffffff822bf540: ret 0xfc8f;
0xffffffff8243289d: ret 0xfc95;
0xffffffff8226c718: ret 0xfc96;
0xffffffff82517601: ret 0xfc9c;
0xffffffff8146c29d: ret 0xfc;
0xffffffff823a4d5f: ret 0xfca6;
0xffffffff82496c7d: ret 0xfca;
0xffffffff82496c7c: ret 0xfca;
0xffffffff824ff8cd: ret 0xfcaa;
0xffffffff8114054d: ret 0xfcac;
0xffffffff81a3372a: ret 0xfcad;
0xffffffff8149c9f9: ret 0xfcb0;
0xffffffff8252ce96: ret 0xfcb2;
0xffffffff82293a79: ret 0xfcb4;
0xffffffff81a7d5da: ret 0xfcb6;
0xffffffff824c6a8b: ret 0xfcb9;
0xffffffff82393b99: ret 0xfcbb;
0xffffffff8173114b: ret 0xfcc1;
0xffffffff82262068: ret 0xfcc2;
0xffffffff81ab805a: ret 0xfcd1;
0xffffffff82276efb: ret 0xfcd4;
0xffffffff81731100: ret 0xfcd6;
0xffffffff8130e21a: ret 0xfcd8;
0xffffffff8342eb3d: ret 0xfcde;
0xffffffff8103313a: ret 0xfcdf;
0xffffffff8344bfb2: ret 0xfce1;
0xffffffff824102e8: ret 0xfce3;
0xffffffff8235ee4c: ret 0xfce7;
0xffffffff811c00de: ret 0xfce8;
0xffffffff81641a0e: ret 0xfce9;
0xffffffff8255e133: ret 0xfce;
0xffffffff81587b3a: ret 0xfceb;
0xffffffff8169de02: ret 0xfcec;
0xffffffff81731236: ret 0xfcf0;
0xffffffff822f5456: ret 0xfcf4;
0xffffffff822f5455: ret 0xfcf4;
0xffffffff823d9527: ret 0xfcf8;
0xffffffff8200d512: ret 0xfcff;
0xffffffff8237b8f1: ret 0xfd00;
0xffffffff81a8f7b2: ret 0xfd01;
0xffffffff819ccaaa: ret 0xfd0;
0xffffffff81731221: ret 0xfd0b;
0xffffffff81af5303: ret 0xfd0c;
0xffffffff81af54d5: ret 0xfd0d;
0xffffffff81af536e: ret 0xfd0f;
0xffffffff817967f5: ret 0xfd10;
0xffffffff811d85de: ret 0xfd13;
0xffffffff815d6a0a: ret 0xfd15;
0xffffffff829d39cc: ret 0xfd1;
0xffffffff83464fba: ret 0xfd1f;
0xffffffff811a7532: ret 0xfd20;
0xffffffff8342ec22: ret 0xfd25;
0xffffffff824ba3f9: ret 0xfd27;
0xffffffff826e3991: ret 0xfd29;
0xffffffff822dfcac: ret 0xfd2a;
0xffffffff81731263: ret 0xfd2c;
0xffffffff82392894: ret 0xfd2d;
0xffffffff8227b6aa: ret 0xfd34;
0xffffffff823cdf5d: ret 0xfd35;
0xffffffff816d7d51: ret 0xfd3;
0xffffffff82245ce2: ret 0xfd3a;
0xffffffff8234cfba: ret 0xfd40;
0xffffffff8158de5a: ret 0xfd44;
0xffffffff822cd191: ret 0xfd46;
0xffffffff822347ba: ret 0xfd4a;
0xffffffff81731255: ret 0xfd4c;
0xffffffff825472d2: ret 0xfd4f;
0xffffffff83474d93: ret 0xfd57;
0xffffffff8342ec7d: ret 0xfd58;
0xffffffff8222df95: ret 0xfd64;
0xffffffff8159891a: ret 0xfd64;
0xffffffff81799196: ret 0xfd65;
0xffffffff8158fd70: ret 0xfd66;
0xffffffff82490dd0: ret 0xfd67;
0xffffffff811a81fd: ret 0xfd68;
0xffffffff823902b1: ret 0xfd6;
0xffffffff823c2184: ret 0xfd6b;
0xffffffff817d114a: ret 0xfd6e;
0xffffffff81550c2a: ret 0xfd70;
0xffffffff82420cac: ret 0xfd71;
0xffffffff8238bf7f: ret 0xfd72;
0xffffffff817dfa66: ret 0xfd75;
0xffffffff817312b4: ret 0xfd78;
0xffffffff811f2eba: ret 0xfd79;
0xffffffff815d37ba: ret 0xfd7c;
0xffffffff817998bd: ret 0xfd7d;
0xffffffff8179a149: ret 0xfd80;
0xffffffff8179a1c9: ret 0xfd81;
0xffffffff8132d242: ret 0xfd83;
0xffffffff811082b9: ret 0xfd88;
0xffffffff810de96a: ret 0xfd89;
0xffffffff819c9f6a: ret 0xfd8a;
0xffffffff81731394: ret 0xfd8d;
0xffffffff81afee80: ret 0xfd90;
0xffffffff82495cce: ret 0xfd90;
0xffffffff8227a565: ret 0xfd92;
0xffffffff83485440: ret 0xfd94;
0xffffffff83485464: ret 0xfd95;
0xffffffff817a1c3f: ret 0xfd96;
0xffffffff8130ae4a: ret 0xfd97;
0xffffffff824ccbb2: ret 0xfd9a;
0xffffffff81aff2ad: ret 0xfd9c;
0xffffffff823e50cb: ret 0xfd9e;
0xffffffff819daf9a: ret 0xfd9f;
0xffffffff823c4f53: ret 0xfda0;
0xffffffff8159739a: ret 0xfda2;
0xffffffff8248c8d3: ret 0xfda7;
0xffffffff817a4ff8: ret 0xfda8;
0xffffffff8153a596: ret 0xfda;
0xffffffff823418f7: ret 0xfdad;
0xffffffff81731357: ret 0xfdaf;
0xffffffff822f64d7: ret 0xfdb1;
0xffffffff82539363: ret 0xfdb2;
0xffffffff8130893a: ret 0xfdb3;
0xffffffff826728f1: ret 0xfdb5;
0xffffffff826720a9: ret 0xfdb6;
0xffffffff82671401: ret 0xfdb8;
0xffffffff8224571d: ret 0xfdb9;
0xffffffff823d370b: ret 0xfdb;
0xffffffff814955fa: ret 0xfdba;
0xffffffff8266fc39: ret 0xfdbc;
0xffffffff8346cd7a: ret 0xfdbd;
0xffffffff813238b5: ret 0xfdbf;
0xffffffff81b16aee: ret 0xfdc0;
0xffffffff835a8f69: ret 0xfdc4;
0xffffffff8238e303: ret 0xfdc5;
0xffffffff8343b058: ret 0xfdc7;
0xffffffff82278c6f: ret 0xfdc8;
0xffffffff822accca: ret 0xfdc9;
0xffffffff815ffb14: ret 0xfdc;
0xffffffff83450091: ret 0xfdcb;
0xffffffff835aa40c: ret 0xfdce;
0xffffffff8227d18b: ret 0xfdce;
0xffffffff835aa7cd: ret 0xfdcf;
0xffffffff8173136c: ret 0xfdd0;
0xffffffff817e0026: ret 0xfdd1;
0xffffffff81110ef0: ret 0xfdd2;
0xffffffff82698d3e: ret 0xfdd3;
0xffffffff83472866: ret 0xfdd3;
0xffffffff83451e4a: ret 0xfdd4;
0xffffffff8162ea7f: ret 0xfdd6;
0xffffffff83462866: ret 0xfdd8;
0xffffffff82448ece: ret 0xfdd9;
0xffffffff835ab860: ret 0xfdd9;
0xffffffff835abcc5: ret 0xfddb;
0xffffffff834a4412: ret 0xfddc;
0xffffffff835ac1b9: ret 0xfdde;
0xffffffff815010fa: ret 0xfddf;
0xffffffff83447346: ret 0xfde0;
0xffffffff825cd643: ret 0xfde1;
0xffffffff82514852: ret 0xfde4;
0xffffffff835ace3d: ret 0xfde6;
0xffffffff82508b1b: ret 0xfde7;
0xffffffff81717b9d: ret 0xfde8;
0xffffffff810f55ad: ret 0xfde9;
0xffffffff835ad4f9: ret 0xfdea;
0xffffffff8123a88a: ret 0xfdec;
0xffffffff83462898: ret 0xfdee;
0xffffffff81304aa4: ret 0xfdef;
0xffffffff835adcd1: ret 0xfdf0;
0xffffffff835ade8d: ret 0xfdf1;
0xffffffff817313ae: ret 0xfdf2;
0xffffffff81403f73: ret 0xfdf3;
0xffffffff834628ca: ret 0xfdf7;
0xffffffff81403f53: ret 0xfdf8;
0xffffffff817a806f: ret 0xfdf9;
0xffffffff81b16fda: ret 0xfdfc;
0xffffffff8252a3a8: ret 0xfdfd;
0xffffffff83462960: ret 0xfdfe;
0xffffffff81012002: ret 0xfdff;
0xffffffff812561b5: ret 0xfe00;
0xffffffff81420f6a: ret 0xfe01;
0xffffffff82323b1b: ret 0xfe04;
0xffffffff8244cdef: ret 0xfe06;
0xffffffff83462991: ret 0xfe07;
0xffffffff823835d3: ret 0xfe09;
0xffffffff813bdfc2: ret 0xfe0;
0xffffffff824e6bc7: ret 0xfe0b;
0xffffffff835af8bd: ret 0xfe0e;
0xffffffff817a80a7: ret 0xfe10;
0xffffffff82502b1c: ret 0xfe12;
0xffffffff8237fe69: ret 0xfe15;
0xffffffff817313e8: ret 0xfe16;
0xffffffff835afb79: ret 0xfe17;
0xffffffff8162ec7c: ret 0xfe18;
0xffffffff823a3434: ret 0xfe1;
0xffffffff8231ce19: ret 0xfe1a;
0xffffffff815e113a: ret 0xfe1f;
0xffffffff823ae7e8: ret 0xfe20;
0xffffffff817e0136: ret 0xfe22;
0xffffffff8349e79c: ret 0xfe23;
0xffffffff82285bbd: ret 0xfe24;
0xffffffff835b0468: ret 0xfe26;
0xffffffff82369737: ret 0xfe28;
0xffffffff829d5fdc: ret 0xfe2;
0xffffffff835a50b5: ret 0xfe2a;
0xffffffff8242b623: ret 0xfe2b;
0xffffffff834370d9: ret 0xfe2d;
0xffffffff834a7231: ret 0xfe2e;
0xffffffff82461363: ret 0xfe32;
0xffffffff835b0dbd: ret 0xfe33;
0xffffffff82465736: ret 0xfe3b;
0xffffffff83489640: ret 0xfe3d;
0xffffffff817efdaa: ret 0xfe3e;
0xffffffff8155121b: ret 0xfe40;
0xffffffff82398c9e: ret 0xfe41;
0xffffffff822645ad: ret 0xfe42;
0xffffffff8173145d: ret 0xfe45;
0xffffffff835b2789: ret 0xfe49;
0xffffffff835a6dff: ret 0xfe4c;
0xffffffff835b2b7d: ret 0xfe4e;
0xffffffff835b2b7c: ret 0xfe4e;
0xffffffff835b2ce5: ret 0xfe4f;
0xffffffff813d1b23: ret 0xfe50;
0xffffffff82331d8c: ret 0xfe52;
0xffffffff82531504: ret 0xfe54;
0xffffffff816feaba: ret 0xfe5a;
0xffffffff835b3bc5: ret 0xfe5d;
0xffffffff835b3d4d: ret 0xfe5e;
0xffffffff82440874: ret 0xfe60;
0xffffffff817fd2da: ret 0xfe61;
0xffffffff811e7e4c: ret 0xfe63;
0xffffffff823c1589: ret 0xfe6;
0xffffffff835b4e99: ret 0xfe6a;
0xffffffff819d599a: ret 0xfe6e;
0xffffffff822cfb7d: ret 0xfe6f;
0xffffffff811a86d2: ret 0xfe70;
0xffffffff8162ed36: ret 0xfe75;
0xffffffff823cafe2: ret 0xfe76;
0xffffffff81731775: ret 0xfe77;
0xffffffff815bb241: ret 0xfe78;
0xffffffff814d1fb9: ret 0xfe7;
0xffffffff824f5cb8: ret 0xfe7a;
0xffffffff82571c95: ret 0xfe7d;
0xffffffff82502281: ret 0xfe7e;
0xffffffff834518dc: ret 0xfe80;
0xffffffff81a69a5a: ret 0xfe81;
0xffffffff8138350a: ret 0xfe82;
0xffffffff81695289: ret 0xfe83;
0xffffffff8256fcb7: ret 0xfe84;
0xffffffff8127bbc7: ret 0xfe88;
0xffffffff814c26b1: ret 0xfe89;
0xffffffff811487f1: ret 0xfe8;
0xffffffff814c2721: ret 0xfe8a;
0xffffffff813a41fa: ret 0xfe8b;
0xffffffff828013e9: ret 0xfe8d;
0xffffffff817b159d: ret 0xfe8e;
0xffffffff824a31b0: ret 0xfe8f;
0xffffffff827fe1a9: ret 0xfe92;
0xffffffff817316ec: ret 0xfe94;
0xffffffff822c5095: ret 0xfe96;
0xffffffff823b9f27: ret 0xfe97;
0xffffffff823b9f26: ret 0xfe97;
0xffffffff819ab022: ret 0xfe98;
0xffffffff8234eb4d: ret 0xfe9c;
0xffffffff829e27fc: ret 0xfe;
0xffffffff8249153f: ret 0xfea1;
0xffffffff828079dd: ret 0xfea5;
0xffffffff81c45ada: ret 0xfea6;
0xffffffff822b4abb: ret 0xfea8;
0xffffffff8162ee46: ret 0xfeab;
0xffffffff8255ffac: ret 0xfeac;
0xffffffff81291fd4: ret 0xfead;
0xffffffff8194b32a: ret 0xfeae;
0xffffffff82815765: ret 0xfeb0;
0xffffffff82431743: ret 0xfeb1;
0xffffffff82423b76: ret 0xfeb2;
0xffffffff811cef6a: ret 0xfeb3;
0xffffffff824c8ace: ret 0xfeb8;
0xffffffff8100ef2f: ret 0xfeb;
0xffffffff8137d221: ret 0xfec1;
0xffffffff816658da: ret 0xfec2;
0xffffffff825dd2d1: ret 0xfec6;
0xffffffff8232aaca: ret 0xfec7;
0xffffffff825304c5: ret 0xfed0;
0xffffffff825304c4: ret 0xfed0;
0xffffffff8226ce07: ret 0xfed2;
0xffffffff81a09e2a: ret 0xfed3;
0xffffffff825135e6: ret 0xfed4;
0xffffffff813bdcda: ret 0xfed5;
0xffffffff823eb377: ret 0xfed6;
0xffffffff8173aed2: ret 0xfed;
0xffffffff810d7435: ret 0xfeda;
0xffffffff81c24c8a: ret 0xfedc;
0xffffffff822fdc20: ret 0xfee0;
0xffffffff810d7452: ret 0xfee2;
0xffffffff82534d88: ret 0xfee3;
0xffffffff823b0878: ret 0xfee5;
0xffffffff8280a55d: ret 0xfee7;
0xffffffff81030cfc: ret 0xfee8;
0xffffffff83441b2b: ret 0xfee9;
0xffffffff8232e4f0: ret 0xfeea;
0xffffffff82453b70: ret 0xfeeb;
0xffffffff82392eb8: ret 0xfeec;
0xffffffff813cde1a: ret 0xfeed;
0xffffffff823d05e8: ret 0xfeef;
0xffffffff81145c8a: ret 0xfef0;
0xffffffff827f860c: ret 0xfef0;
0xffffffff827fc289: ret 0xfef4;
0xffffffff812086ba: ret 0xfef5;
0xffffffff812583ca: ret 0xfefc;
0xffffffff825d58e5: ret 0xfefd;
0xffffffff82804bbc: ret 0xfefd;
0xffffffff819a8c49: ret 0xfeff;
0xffffffff8126ae99: ret 0xff00;
0xffffffff81a1495e: ret 0xff01;
0xffffffff813237eb: ret 0xff03;
0xffffffff8158fd15: ret 0xff04;
0xffffffff8117251a: ret 0xff08;
0xffffffff81ad663c: ret 0xff0;
0xffffffff83462b4c: ret 0xff0a;
0xffffffff82004829: ret 0xff0c;
0xffffffff827ff69d: ret 0xff0e;
0xffffffff81388f4a: ret 0xff0f;
0xffffffff819019c9: ret 0xff10;
0xffffffff822b0418: ret 0xff12;
0xffffffff812e80ea: ret 0xff13;
0xffffffff8280b601: ret 0xff15;
0xffffffff82005105: ret 0xff17;
0xffffffff814d06a5: ret 0xff18;
0xffffffff82289d5c: ret 0xff19;
0xffffffff81b09f7b: ret 0xff1;
0xffffffff8181fdfa: ret 0xff1b;
0xffffffff8229fc91: ret 0xff1c;
0xffffffff81ad00b5: ret 0xff1f;
0xffffffff8142bbba: ret 0xff21;
0xffffffff81939a2a: ret 0xff24;
0xffffffff81b6a087: ret 0xff25;
0xffffffff81536164: ret 0xff28;
0xffffffff823398e2: ret 0xff2;
0xffffffff823398e1: ret 0xff2;
0xffffffff8162ef4b: ret 0xff2a;
0xffffffff8181079a: ret 0xff2c;
0xffffffff8255501b: ret 0xff2d;
0xffffffff825538c1: ret 0xff2e;
0xffffffff8178200a: ret 0xff30;
0xffffffff812668dd: ret 0xff31;
0xffffffff8158213a: ret 0xff32;
0xffffffff81298a8a: ret 0xff33;
0xffffffff814817aa: ret 0xff34;
0xffffffff8348b4fa: ret 0xff35;
0xffffffff8124a49b: ret 0xff38;
0xffffffff823268c2: ret 0xff39;
0xffffffff81062be6: ret 0xff3;
0xffffffff8178160a: ret 0xff3a;
0xffffffff8266e575: ret 0xff3b;
0xffffffff8199dfba: ret 0xff3c;
0xffffffff815d8f9a: ret 0xff3d;
0xffffffff82340991: ret 0xff3f;
0xffffffff818c4fbc: ret 0xff3f;
0xffffffff81981b38: ret 0xff40;
0xffffffff8188e4cb: ret 0xff41;
0xffffffff8149e83a: ret 0xff42;
0xffffffff8266c39d: ret 0xff44;
0xffffffff81c5b0a7: ret 0xff45;
0xffffffff81c7fb9c: ret 0xff46;
0xffffffff82371469: ret 0xff47;
0xffffffff81199eb0: ret 0xff48;
0xffffffff8166099a: ret 0xff49;
0xffffffff81a64b10: ret 0xff4;
0xffffffff82448cb9: ret 0xff4a;
0xffffffff81bfb04d: ret 0xff4b;
0xffffffff8266ad9d: ret 0xff4c;
0xffffffff8228c942: ret 0xff4d;
0xffffffff817b2baa: ret 0xff4e;
0xffffffff81536064: ret 0xff50;
0xffffffff81b9b0fa: ret 0xff51;
0xffffffff81b8b09b: ret 0xff52;
0xffffffff81b8ea5c: ret 0xff54;
0xffffffff81b5b049: ret 0xff55;
0xffffffff81bc4fc8: ret 0xff56;
0xffffffff8162f01a: ret 0xff57;
0xffffffff812f1898: ret 0xff58;
0xffffffff824b9381: ret 0xff59;
0xffffffff82668499: ret 0xff5b;
0xffffffff826680c1: ret 0xff5c;
0xffffffff810da59b: ret 0xff5d;
0xffffffff82285438: ret 0xff5f;
0xffffffff817b58cc: ret 0xff60;
0xffffffff81169a6a: ret 0xff61;
0xffffffff81a8b0fa: ret 0xff62;
0xffffffff826668a1: ret 0xff63;
0xffffffff81a5b129: ret 0xff65;
0xffffffff81a4b104: ret 0xff66;
0xffffffff824ad9f2: ret 0xff67;
0xffffffff82665509: ret 0xff68;
0xffffffff82664f91: ret 0xff69;
0xffffffff824891d4: ret 0xff6;
0xffffffff82664c29: ret 0xff6a;
0xffffffff81aeda3a: ret 0xff6b;
0xffffffff819eb062: ret 0xff6c;
0xffffffff82663ffd: ret 0xff6d;
0xffffffff81b9fbe4: ret 0xff6e;
0xffffffff817b58b2: ret 0xff70;
0xffffffff81a4240e: ret 0xff70;
0xffffffff8199b10f: ret 0xff71;
0xffffffff81b8d766: ret 0xff72;
0xffffffff819740fe: ret 0xff73;
0xffffffff8196b0d8: ret 0xff74;
0xffffffff826625c1: ret 0xff75;
0xffffffff8103bb3a: ret 0xff76;
0xffffffff816ac823: ret 0xff78;
0xffffffff8191b0a5: ret 0xff79;
0xffffffff816d8077: ret 0xff7;
0xffffffff81a88aba: ret 0xff7a;
0xffffffff8186c70a: ret 0xff7b;
0xffffffff81188985: ret 0xff7c;
0xffffffff818db08a: ret 0xff7d;
0xffffffff81915504: ret 0xff7e;
0xffffffff81a053ca: ret 0xff7f;
0xffffffff8122738a: ret 0xff80;
0xffffffff826387d1: ret 0xff81;
0xffffffff818e5474: ret 0xff81;
0xffffffff83567b01: ret 0xff81;
0xffffffff83567c49: ret 0xff81;
0xffffffff83567ab9: ret 0xff81;
0xffffffff83567c51: ret 0xff81;
0xffffffff818d5dee: ret 0xff82;
0xffffffff818d5506: ret 0xff82;
0xffffffff81319333: ret 0xff83;
0xffffffff8180c3c1: ret 0xff84;
0xffffffff8185b06b: ret 0xff85;
0xffffffff8265e0ed: ret 0xff86;
0xffffffff81a0d70c: ret 0xff87;
0xffffffff8265d831: ret 0xff88;
0xffffffff8190f897: ret 0xff89;
0xffffffff8155e92f: ret 0xff8;
0xffffffff81885047: ret 0xff8a;
0xffffffff817fb071: ret 0xff8b;
0xffffffff819bf310: ret 0xff8c;
0xffffffff81854aeb: ret 0xff8d;
0xffffffff8118089a: ret 0xff8e;
0xffffffff819383be: ret 0xff8f;
0xffffffff81245e4d: ret 0xff90;
0xffffffff813a93da: ret 0xff91;
0xffffffff8172c3ce: ret 0xff92;
0xffffffff8176b108: ret 0xff94;
0xffffffff812c094a: ret 0xff95;
0xffffffff817431e9: ret 0xff96;
0xffffffff8348b750: ret 0xff97;
0xffffffff8124e02f: ret 0xff98;
0xffffffff8172305d: ret 0xff99;
0xffffffff814d2185: ret 0xff9;
0xffffffff8180291a: ret 0xff9a;
0xffffffff82658261: ret 0xff9b;
0xffffffff816eb092: ret 0xff9c;
0xffffffff82657c95: ret 0xff9d;
0xffffffff81915859: ret 0xff9e;
0xffffffff81056472: ret 0xff9f;
0xffffffff81004eb1: ret 0xff;
0xffffffff8117aa4a: ret 0xffa0;
0xffffffff81a02db8: ret 0xffa1;
0xffffffff8185d747: ret 0xffa2;
0xffffffff811da18a: ret 0xffa3;
0xffffffff8166b0d0: ret 0xffa4;
0xffffffff81bc1e5a: ret 0xffa5;
0xffffffff824369c2: ret 0xffa6;
0xffffffff81c5e63a: ret 0xffa7;
0xffffffff816a2b71: ret 0xffa8;
0xffffffff8255a6dc: ret 0xffa;
0xffffffff8160b031: ret 0xffaa;
0xffffffff8111eb8a: ret 0xffab;
0xffffffff815eb0f2: ret 0xffac;
0xffffffff815db0b5: ret 0xffad;
0xffffffff811759ea: ret 0xffae;
0xffffffff815bb031: ret 0xffaf;
0xffffffff8349d38d: ret 0xffaf;
0xffffffff8349d3c5: ret 0xffaf;
0xffffffff8139595e: ret 0xffb0;
0xffffffff81009e8a: ret 0xffb1;
0xffffffff8167f8b5: ret 0xffb2;
0xffffffff8167a73c: ret 0xffb3;
0xffffffff8173fb97: ret 0xffb4;
0xffffffff83434169: ret 0xffb5;
0xffffffff8155b042: ret 0xffb5;
0xffffffff8154b0bb: ret 0xffb6;
0xffffffff81600f2f: ret 0xffb7;
0xffffffff812d4bd5: ret 0xffb8;
0xffffffff817ab950: ret 0xffba;
0xffffffff817ab85a: ret 0xffbb;
0xffffffff81ba58da: ret 0xffbc;
0xffffffff82651031: ret 0xffbd;
0xffffffff81533dc9: ret 0xffbe;
0xffffffff8119c766: ret 0xffbf;
0xffffffff819d317d: ret 0xffc0;
0xffffffff8161851f: ret 0xffc1;
0xffffffff814d65ce: ret 0xffc2;
0xffffffff8147b0f2: ret 0xffc3;
0xffffffff8154f95d: ret 0xffc4;
0xffffffff814d8984: ret 0xffc5;
0xffffffff815477cc: ret 0xffc6;
0xffffffff818fb7da: ret 0xffc7;
0xffffffff815ffc1c: ret 0xffc8;
0xffffffff819818f8: ret 0xffc9;
0xffffffff81b467ca: ret 0xffc;
0xffffffff8154f2c3: ret 0xffca;
0xffffffff814500ae: ret 0xffcb;
0xffffffff815f6bd8: ret 0xffcd;
0xffffffff81445ac3: ret 0xffce;
0xffffffff813bb09b: ret 0xffcf;
0xffffffff813f54a4: ret 0xffd0;
0xffffffff8195d021: ret 0xffd1;
0xffffffff8128c72a: ret 0xffd2;
0xffffffff813f295e: ret 0xffd3;
0xffffffff8192d06e: ret 0xffd4;
0xffffffff81939fd6: ret 0xffd4;
0xffffffff814528bb: ret 0xffd5;
0xffffffff813467f1: ret 0xffd6;
0xffffffff8138d669: ret 0xffd7;
0xffffffff8132b068: ret 0xffd8;
0xffffffff8131b05b: ret 0xffd9;
0xffffffff8130b0d7: ret 0xffda;
0xffffffff8151d67c: ret 0xffdb;
0xffffffff813161c6: ret 0xffdc;
0xffffffff81282687: ret 0xffdd;
0xffffffff8133665b: ret 0xffde;
0xffffffff8127948c: ret 0xffdf;
0xffffffff8115ab3b: ret 0xffe0;
0xffffffff8280ea21: ret 0xffe1;
0xffffffff8129f589: ret 0xffe2;
0xffffffff812655ca: ret 0xffe3;
0xffffffff813af38b: ret 0xffe4;
0xffffffff8148061b: ret 0xffe5;
0xffffffff81b209cf: ret 0xffe6;
0xffffffff8123b0dc: ret 0xffe7;
0xffffffff817b944f: ret 0xffe8;
0xffffffff817b9f3b: ret 0xffe9;
0xffffffff8112467f: ret 0xffe;
0xffffffff817d9f36: ret 0xffea;
0xffffffff8120b0e6: ret 0xffea;
0xffffffff811fb087: ret 0xffeb;
0xffffffff81033dd1: ret 0xffec;
0xffffffff8104657a: ret 0xffed;
0xffffffff8124cb6a: ret 0xffee;
0xffffffff81141d2a: ret 0xffef;
0xffffffff811ab0dc: ret 0xfff0;
0xffffffff81292911: ret 0xfff1;
0xffffffff812b6df6: ret 0xfff2;
0xffffffff8164d141: ret 0xfff3;
0xffffffff810bb93f: ret 0xfff4;
0xffffffff8103750a: ret 0xfff5;
0xffffffff81156469: ret 0xfff6;
0xffffffff81294b25: ret 0xfff7;
0xffffffff81a05a17: ret 0xfff8;
0xffffffff8101f20a: ret 0xfff8;
0xffffffff810243ea: ret 0xfff9;
0xffffffff826500fd: ret 0xfff;
0xffffffff8105586b: ret 0xfff;
0xffffffff8100eae7: ret 0xfffa;
0xffffffff8101a19a: ret 0xfffb;
0xffffffff819f7446: ret 0xfffc;
0xffffffff8104caea: ret 0xfffc;
0xffffffff8103268a: ret 0xfffd;
0xffffffff8100be4a: ret 0xfffe;
0xffffffff81583b76: ret 0xffff;
0xffffffff8104727e: ret 0xffff;
0xffffffff81644e19: ret 0xffff;
0xffffffff81000327: ret 0xffff;
0xffffffff8168c868: ret 0xffff;
0xffffffff8100213a: ret 1;
0xffffffff8101405c: ret 2;
0xffffffff82804f2c: ret 2;
0xffffffff810140d3: ret 3;
0xffffffff81c2e85e: ret 3;
0xffffffff81116c9c: ret 4;
0xffffffff81240416: ret 4;
0xffffffff828b8260: ret 4;
0xffffffff828cea18: ret 5;
0xffffffff810fa27c: ret 5;
0xffffffff828f3c94: ret 6;
0xffffffff811ce04b: ret 6;
0xffffffff8125e535: ret 7;
0xffffffff8102cb4a: ret 8;
0xffffffff8101b0d1: ret 9;
0xffffffff810001cc: ret;
0xffffffff81040e38: ret;
0xffffffff81002062: ret;
0xffffffff813a1528: ret;
0xffffffff8103e84e: ret;
0xffffffff81036caa: ret;
0xffffffff8110e837: ret;
0xffffffff835a96c9: rol bh, 0xfd; leave; rol bh, 0xfd; push rcx; ret 0xfdc7;
0xffffffff819f92cf: rol bl, 0x31; leave; cmp [rax+0x38], esi; cmovne rax, rcx; ret;
0xffffffff81bf8205: rol bl, 0x31; leave; imul eax, ecx, 0x2c; add eax, 0xf8; cdqe; ret;
0xffffffff811e60e4: rol byte ptr [rax+0xf00137b], cl; xchg esp, eax; ret 0x894c;
0xffffffff83431cfa: rol byte ptr [rax+0xf2c033c], cl; xchg esp, eax; ret 0x8d48;
0xffffffff81277900: rol byte ptr [rax+0xf40083c], cl; xchg esp, eax; ret 0xf201;
0xffffffff81526360: rol byte ptr [rax+0xf5c0178], cl; xchg esp, eax; ret 0xb60f;
0xffffffff818660cd: rol byte ptr [rax+rax], 0; add [rdi], cl; xchg esp, eax; ret 0x8948;
0xffffffff8224ce45: rol byte ptr [rax-0x3c7419e], 1; leave; imul edx, [rsi-0x3c], 0x777e4d20; iretd;
0xffffffff8220d4b7: rol byte ptr [rax-0x76b6d4c1], cl; rol byte ptr [rcx+0xf], 1; xchg esp, eax; ret 0x149;
0xffffffff81c084d5: rol byte ptr [rax-0x80], 0xfe; add cl, [rdi]; xchg esp, eax; ret 0x8b49;
0xffffffff8160872b: rol byte ptr [rax], 0; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81b1c1d9: rol byte ptr [rax], 0; add [rbx+0xbc8f], cl; add [rbx+0x418084c], al; xor eax, eax; add rsp, 0xc; ret;
0xffffffff81ab930c: rol byte ptr [rax], 0; add [rcx], dh; fild st, dword ptr [rcx-0xa]; rol byte ptr [rdx], 0xf; xchg esp, eax; ret;
0xffffffff81031511: rol byte ptr [rax], 0; add [rcx], dh; shr dh, 0x31; shr dh, 0x81; leave; ret 0;
0xffffffff81b25538: rol byte ptr [rax], 1; add rsp, 0xc; ret;
0xffffffff81992dc8: rol byte ptr [rax], 1; add rsp, 4; ret;
0xffffffff819cf73d: rol byte ptr [rax], 1; mov [rdi+0x88], eax; mov eax, eax; add rsp, 4; ret;
0xffffffff819cd40d: rol byte ptr [rax], 1; not eax; mov [rsi+0x88], eax; add rsp, 0x18; ret;
0xffffffff819cd5aa: rol byte ptr [rax], cl; not edx; mov [rsi+0x88], edx; add rsp, 0xc; ret;
0xffffffff813dcfc5: rol byte ptr [rbp+0x5b0874c9], 0x41; pop rsp; pop r14; pop r15; ret;
0xffffffff8349a633: rol byte ptr [rbp+0x5b0878db], 0x41; pop rsp; pop r14; pop r15; ret;
0xffffffff81041daa: rol byte ptr [rbp-0x3f6bf008], 1; add rsp, 4; ret;
0xffffffff8168493a: rol byte ptr [rbp-0x7b], cl; dec dword ptr [rdi]; xchg esp, eax; ret 0x2941;
0xffffffff814bada4: rol byte ptr [rbp-0x7b], cl; dec dword ptr [rdi]; xchg esp, eax; ret 0x548d;
0xffffffff81959030: rol byte ptr [rbp-0x7b], cl; dec dword ptr [rdi]; xchg esp, eax; ret 0x8948;
0xffffffff8158511b: rol byte ptr [rbp-0x7b], cl; in al, 0xf; xchg esp, eax; ror dword ptr [rdi], 0x95; ret 0x8d43;
0xffffffff8182d9a6: rol byte ptr [rbx+0x370bd], 0; add ecx, [rdi]; xchg esp, eax; sar byte ptr [rdx+4], 0x29; ret 0x8d48;
0xffffffff81811c96: rol byte ptr [rbx+0x388be], 0; add [rdi], cl; xchg esp, eax; ror byte ptr [rax-0x3f], 0xe0; add ecx, [rax+9]; ret;
0xffffffff8194a563: rol byte ptr [rbx+0xf00f47b], cl; xchg esp, eax; ret 0x894c;
0xffffffff813aa133: rol byte ptr [rbx+0xf012078], cl; xchg esp, eax; ret 0x8b48;
0xffffffff81329c78: rol byte ptr [rbx+0xf01c07f], cl; xchg esp, eax; ret 0xc201;
0xffffffff81351d35: rol byte ptr [rbx+0xf062878], cl; xchg esp, eax; ret 0x8b48;
0xffffffff8183d572: rol byte ptr [rbx+rbx*2], 0x41; pop rsp; pop r14; pop r15; ret;
0xffffffff8251455c: rol byte ptr [rbx-0x50], 0xbc; pop rsp; iretd;
0xffffffff8182eac7: rol byte ptr [rcx+0x10802f9], cl; add [rdi], cl; xchg esp, eax; ret 0x2a8;
0xffffffff81644b7b: rol byte ptr [rcx+0x115c047e], 0; add [rdi], cl; xchg esp, eax; shl bh, 0xd8; ret;
0xffffffff816e6411: rol byte ptr [rcx+0x2000f9], cl; add [rdi], cl; xchg esp, eax; ret 0xc8d;
0xffffffff813fe8ef: rol byte ptr [rcx+0x4000f9], cl; add [rdi], cl; xchg esp, eax; ret 0x448b;
0xffffffff8172f85a: rol byte ptr [rcx+0x5b13f9], cl; add [rdi], cl; xchg esp, eax; ret 0xca83;
0xffffffff81061bb9: rol byte ptr [rcx+0x5c], 1; mov rsp, rbp; pop rbp; ret;
0xffffffff81c6816a: rol byte ptr [rcx+0xf], 0xb6; leave; sub eax, ecx; ret;
0xffffffff8220d4bd: rol byte ptr [rcx+0xf], 1; xchg esp, eax; ret 0x149;
0xffffffff8103225b: rol byte ptr [rcx+0xffffff], cl; add [rdi], cl; xchg esp, eax; ret 0xe2c1;
0xffffffff819ac6dc: rol byte ptr [rcx+rax], 0x88; xchg [rax+2], esp; add [rax], al; xor eax, eax; ret;
0xffffffff819ac8ed: rol byte ptr [rcx+rax], 0x88; xchg [rcx+2], esp; add [rax], al; xor eax, eax; ret;
0xffffffff811d6076: rol byte ptr [rcx-0x7d], cl; cli; or [rdi], cl; xchg esp, eax; ret 0xf201;
0xffffffff8144edc1: rol byte ptr [rcx-0x7d], cl; mov edi, 0xd4; add [rdi], cl; xchg esp, eax; ret 0x894c;
0xffffffff818a5f27: rol byte ptr [rcx-0x7d], cl; mov esi, 0x40c; add [rdi], ecx; xchg esp, eax; ret 0xe2c1;
0xffffffff815d389c: rol byte ptr [rcx-0x7d], cl; std; dec dword ptr [rdi]; xchg esp, eax; ret 0xdaf7;
0xffffffff814b9c27: rol byte ptr [rcx-0x7f], 0xf8; add [rax], al; add [rax+0xf], al; xchg esp, eax; sar byte ptr [rdx+0x42], 0x29; ret 0x8141;
0xffffffff81bef68e: rol byte ptr [rcx-0x80], cl; mov edi, 0x21c; add [rdi], cl; xchg esp, eax; ret 0x349;
0xffffffff81298e3f: rol byte ptr [rcx-0xa], 0xc4; add [rdi], ecx; xchg esp, eax; ret 0xc220;
0xffffffff81ab2c21: rol byte ptr [rcx-0xa], cl; and al, 2; add cl, [rdi]; xchg esp, eax; ret 0xc148;
0xffffffff81b65df0: rol byte ptr [rcx], 0x31; leave; cmp eax, 3; mov eax, 0xffffffea; cmovb eax, ecx; ret;
0xffffffff8126394c: rol byte ptr [rcx], 0x48; shl eax, 0xd; or rax, 1; mov [rip+0x23b61b3], rax; add rsp, 4; ret;
0xffffffff8147df9e: rol byte ptr [rcx], 0x89; xchg [rdx+rax], esp; add [rax], al; mov eax, 1; ret;
0xffffffff81329c7b: rol byte ptr [rcx], 0xf; xchg esp, eax; ret 0xc201;
0xffffffff8191f559: rol byte ptr [rdx+rdx*8-0x2dceee8b], 0x3c; or cl, [rdi]; xchg esp, eax; ret 0x3c80;
0xffffffff81ab9314: rol byte ptr [rdx], 0xf; xchg esp, eax; ret;
0xffffffff834723bc: rol dh, 1; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82406ecb: rol dl, 1; xchg esp, eax; ret;
0xffffffff81b09f99: rol dword ptr [r9-0x77], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811310cb: rol dword ptr [rax+0x48000000], 0x8b; xchg esp, eax; ret;
0xffffffff81142d8e: rol dword ptr [rax+8], 1; int1; movzx ecx, cl; add eax, ecx; add rsp, 0x48; ret;
0xffffffff81281ef4: rol dword ptr [rax-0xa], 0xc6; add [rdi], ecx; xchg esp, eax; ret 0xca20;
0xffffffff8121ea80: rol dword ptr [rax], 0; add [rax-0x3bf2d4b8], al; push rsp; pop rsp; add [rax+1], ecx; iretd;
0xffffffff81196fde: rol dword ptr [rax], 0; str [rdi]; xchg esp, eax; ret 0xca83;
0xffffffff818a5ab9: rol dword ptr [rax], 1; add [rax], al; add rsp, 0x10; pop rbx; ret;
0xffffffff812e59f6: rol dword ptr [rax], 1; add rsp, 8; pop rbx; ret;
0xffffffff81ba33e5: rol dword ptr [rbx+0x1acb8], 0; add [rdi], cl; xchg esp, eax; ret 0xa889;
0xffffffff81ae8036: rol dword ptr [rbx+0x1c247c], 0xf; xchg esp, eax; ret;
0xffffffff81718f03: rol dword ptr [rbx+0x1d8bb], 0; add [rdi], cl; xchg esp, eax; ret 0xd138;
0xffffffff818cb4f2: rol dword ptr [rbx+0x5f6fee1], 0x2a; xchg ecx, eax; fiadd st, dword ptr [rcx]; add [rdi], ecx; xchg esp, eax; ret 0xc220;
0xffffffff8197dde4: rol dword ptr [rbx-0x3bc33bc3], 1; add [rdi], cl; xchg esp, eax; ret 0xca20;
0xffffffff81a788dd: rol dword ptr [rbx-0x7c99f31f], 0xf9; or [rdi], cl; xchg esp, eax; ret 0xf280;
0xffffffff827fed05: rol dword ptr [rbx], 0; add [rax], al; add [rax], al; xchg esp, eax; and bl, [rdx]; jmp qword ptr [rax];
0xffffffff818df4e6: rol dword ptr [rbx], 0xf; xchg esp, eax; ret;
0xffffffff81c68166: rol dword ptr [rcx+0xf], 0xb6; rol byte ptr [rcx+0xf], 0xb6; leave; sub eax, ecx; ret;
0xffffffff825d6ffc: rol dword ptr [rcx-0x13], 1; pop rsp; in eax, dx; ret 0x299d;
0xffffffff812b23c0: rol dword ptr [rcx-0x75], 0x45; or al, 0xa8; add al, 0xf; xchg esp, eax; ret 0xca08;
0xffffffff816ca267: rol dword ptr [rcx-0x76], 1; xchg esp, eax; and al, 0x3f; add [rax], eax; add [rax], dh; ret 0xca08;
0xffffffff816ca22b: rol dword ptr [rcx-0x76], cl; xchg esp, eax; and al, 0x3a; add [rax], eax; add [rax], dh; ret 0xda08;
0xffffffff81b09f9a: rol dword ptr [rcx-0x77], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81700eb7: rol dword ptr [rcx-0x7d], 0xbf; fadd st, dword ptr [rcx]; add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x1b0;
0xffffffff8182a0a1: rol dword ptr [rcx-0x80], 0xf8; dec dword ptr [rdi]; xchg esp, eax; ret 0x474;
0xffffffff8182a056: rol dword ptr [rcx-0x80], 0xf8; dec dword ptr [rdi]; xchg esp, eax; ret 0x4f74;
0xffffffff81a808ce: rol dword ptr [rcx-0xa], 0x45; add cl, [rdi]; xchg esp, eax; ret 0xca38;
0xffffffff81260ebe: rol dword ptr [rcx-0xa], 0xc1; add [rdi], ecx; xchg esp, eax; ret;
0xffffffff81298f8e: rol dword ptr [rcx-0xa], 0xc4; add [rdi], ecx; xchg esp, eax; ret 0xca20;
0xffffffff81372847: rol dword ptr [rcx-0xa], 0xc7; cmp [rdi], cl; xchg esp, eax; ret 0xc748;
0xffffffff8152635d: rol dword ptr [rcx], 0x31; rol byte ptr [rax+0xf5c0178], cl; xchg esp, eax; ret 0xb60f;
0xffffffff812c3cf3: rol dword ptr [rcx], 0xb8; add [rax], eax; add [rax], al; shl rax, cl; add rsp, 8; ret;
0xffffffff81283cf8: rol dword ptr [rcx], 0xf; xchg esp, eax; ret 0x2040;
0xffffffff8105976b: rol dword ptr [rcx], 0xf; xchg esp, eax; ret 0xc220;
0xffffffff813c7dc0: rol dword ptr [rcx], 0xf; xchg esp, eax; ret 0xc230;
0xffffffff8128296f: rol dword ptr [rcx], 0xf; xchg esp, eax; ret 0xda20;
0xffffffff8105afe9: rol dword ptr [rcx], 0xf; xchg esp, eax; ret;
0xffffffff81964b6c: rol dword ptr [rcx], 1; add [rbx+0x41], ebx; pop rsp; pop r14; pop r15; ret;
0xffffffff824c9b2a: rol dword ptr [rcx], cl; pop rsp; add eax, 0x2d90bd12; mov esp, 0x5712dda7; iretd;
0xffffffff812558dd: rol dword ptr [rcx], cl; xor eax, eax; add rsp, 8; ret;
0xffffffff824d98c4: rol dword ptr [rdi+0x55], 1; add esp, 0x3d2b68de; iret;
0xffffffff8200bd5d: rol dword ptr [rdi+rdi*8], 1; test r14b, 0xff; adc esp, 0xffffffb6; jmp far fword ptr [rax+0x3bff04d1];
0xffffffff812971e9: rol dword ptr [rdx], 0xf; xchg esp, eax; ret;
0xffffffff8223e25c: rol dword ptr [rsi+0xcc86bb1], 0x29; xor eax, 0xbbafcc66; xchg esp, eax; mov ebx, 0xe661c075; sub r9b, [rax+rbx*4+0x4a]; ret 0x8d38;
0xffffffff81566f09: rol ecx, 0xe1; add eax, 0x81f90944; leave; add byte ptr [rax], 0; add [rcx-0x77], al; iretd;
0xffffffff8239657e: rol edi, cl; lea ebx, [rcx*2-0x471a75a6]; leave; mov ah, 0x4e; ret;
0xffffffff81a499ad: rol edx, 0x18; sub eax, edx; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8264f861: rol esp, 0xff; xadd esp, eax; call far fword ptr [rdi];
0xffffffff834a1abc: ror bh, 1; sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff810b031e: ror byte ptr [rax+0x39], 0x3d; ficom st, dword ptr [rbx-0x12]; add [rdi], ecx; xchg esp, eax; ret 0xc208;
0xffffffff816ad97f: ror byte ptr [rax+0x39], cl; mov bh, 0xa0; add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x8948;
0xffffffff81546bca: ror byte ptr [rax+0x3b], cl; mov ebx, [rax]; add al, [rax]; add [rdi], cl; xchg esp, eax; ret 0x5089;
0xffffffff81546bb4: ror byte ptr [rax+0x3b], cl; mov ebx, eax; add [rax], eax; add [rdi], cl; xchg esp, eax; ret 0x5089;
0xffffffff8135db1d: ror byte ptr [rax+0x3b], cl; sbb [r15], cl; xchg esp, eax; ret 0x5389;
0xffffffff815e5358: ror byte ptr [rax-0x7b], 1; leave; cmovne rax, rdx; ret;
0xffffffff81c8216b: ror byte ptr [rax-0x7d], 0x7c; and al, 0x40; add [rdi], cl; xchg esp, eax; ror byte ptr [rbp-0x37afc], 0xff; jmp qword ptr [rbp+0x48];
0xffffffff810fe1b7: ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81bb4aa4: ror byte ptr [rax-0x7d], 0xc4; and [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8121046f: ror byte ptr [rax-0x7d], 0xc4; cmp [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff816519ae: ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff817a08fe: ror byte ptr [rax-0x7d], 0xc4; sub [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81a39f4b: ror byte ptr [rax-0x7d], 0xc4; xor [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff819f6605: ror byte ptr [rax-0x7d], 0xfa; add [rdi], ecx; xchg esp, edx; add [rax], al; add [rax-0x7d], cl; ret 0x4801;
0xffffffff8171fdf3: ror byte ptr [rax-0x7d], 0xfa; dec dword ptr [rdi]; xchg esp, eax; ret 0xc808;
0xffffffff811f9457: ror byte ptr [rax-0x7d], cl; mov eax, 0xd8; add [rdi], cl; xchg esp, eax; ret 0xe2c1;
0xffffffff816bbecf: ror byte ptr [rax-0x7d], cl; mov ecx, 0xb18; dec dword ptr [rdi]; xchg esp, eax; ret 0x4c8d;
0xffffffff81200e4a: ror byte ptr [rax-0x7d], cl; mov ecx, 0xd8; add [rdi], cl; xchg esp, eax; ret 0xe2c1;
0xffffffff818660c9: ror byte ptr [rax-0x7d], cl; mov edi, 0x4c0; add [rdi], cl; xchg esp, eax; ret 0x8948;
0xffffffff8171ed36: ror byte ptr [rax], 1; enter 0x8040, 0xff; add [rdi], ecx; xchg esp, eax; ret 0xd189;
0xffffffff816bab4c: ror byte ptr [rbp+0x3b], cl; pop rsi; or [rdi], cl; xchg esp, eax; ret 0xf49;
0xffffffff816b90ff: ror byte ptr [rbx+rdi+0x63], cl; or [rdi], cl; xchg esp, eax; ret 0xf49;
0xffffffff816b731e: ror byte ptr [rbx+rdi+0x65], cl; or [rdi], cl; xchg esp, eax; ret 0xf49;
0xffffffff823c96dd: ror byte ptr [rbx], cl; xchg [rdi-0x49cd6aba], esp; ret;
0xffffffff81546a48: ror byte ptr [rcx+0x3b], cl; mov [rax+rbx*8], fs; add [rax], eax; add [rdi], cl; xchg esp, eax; ret 0x5089;
0xffffffff81546a60: ror byte ptr [rcx+0x3b], cl; mov [rax+rbx], fs; add al, [rax]; add [rdi], cl; xchg esp, eax; ret 0x5089;
0xffffffff819695b7: ror byte ptr [rcx+0xfc808d8], cl; xchg esp, eax; ret 0x8b44;
0xffffffff817e5150: ror byte ptr [rcx+rdi-0xf], 0xf; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; pop r15; ret;
0xffffffff817aa2f7: ror byte ptr [rcx+rdi-0xf], 0xf; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; ret;
0xffffffff81668b45: ror byte ptr [rcx-0x3e36f03f], 1; leave; adc [rcx], dh; rol dword ptr [rcx], 1; enter 0xc289, 0xc1; ret 0x3103;
0xffffffff81357270: ror byte ptr [rcx-0x7d], 0x3e; add [rdi], cl; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; pop r15; ret;
0xffffffff81b95467: ror byte ptr [rcx-0x7d], 6; add [rbx+0x41], ebx; pop rsp; pop r14; pop r15; ret;
0xffffffff810c09aa: ror byte ptr [rcx], 0xc; sub eax, 0xcad; add rsp, 0x10; ret;
0xffffffff818e667f: ror byte ptr [rdi], 0x49; enter 0xc031, 0x85; leave; setne al; pop rbx; ret;
0xffffffff818474f8: ror byte ptr [rdi], 0x84; leave; add [rax], al; add [rax-0x77], cl; ret;
0xffffffff81123a79: ror byte ptr [rdi], 0x84; leave; add [rax], al; add [rax-0x7f], cl; ret;
0xffffffff81a02b12: ror byte ptr [rdi], 0x84; leave; add [rax], al; add [rbx+0xf004878], al; xchg ebp, eax; ret 0xc931;
0xffffffff81354690: ror byte ptr [rdi], 0x84; pop rsp; add [rax], eax; add [rax-0x77], cl; ret;
0xffffffff810cfc81: ror byte ptr [rdi], 0x84; xchg esp, eax; add [rax], al; add [rax-0x39], cl; ret;
0xffffffff8181974d: ror byte ptr [rdi], 0x84; xchg esp, eax; add [rax], al; add [rax-0x77], cl; ret;
0xffffffff815178d5: ror byte ptr [rdi], 0x84; xchg esp, eax; add al, 0; add [rax-0x77], cl; ret;
0xffffffff816a6c2a: ror byte ptr [rdi], 0x95; shr dword ptr [rcx+0x60800], 0xf; xchg esp, eax; ret;
0xffffffff8197ee1e: ror byte ptr [rdi], 0xb6; leave; cmove ecx, eax; movzx eax, cl; ret;
0xffffffff8176a495: ror byte ptr [rdi], 1; xchg esp, eax; ret 0xc085;
0xffffffff811c5fd9: ror byte ptr [rdi], 1; xchg esp, eax; ret;
0xffffffff8125c32e: ror byte ptr [rdi], 1; xchg esp, eax; ror byte ptr [rax], 0xc8; ret;
0xffffffff8169fa6f: ror byte ptr [rdi], cl; or ebx, [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff81b98f87: ror byte ptr [rdi], cl; test [rax-0x7c000002], cl; cli; add ecx, [rdi]; xchg esp, eax; ret 0xd008;
0xffffffff81299c15: ror byte ptr [rdi], cl; xchg ebp, eax; shl dh, 0xc2; add [rdi], ecx; xchg esp, eax; ret;
0xffffffff813dd001: ror byte ptr [rdi], cl; xchg esp, eax; ret 0xc220;
0xffffffff812e59bb: ror byte ptr [rdi], cl; xchg esp, eax; ret 0xc230;
0xffffffff8142cb3e: ror byte ptr [rdi], cl; xchg esp, eax; ret 0xc985;
0xffffffff818dd7d8: ror byte ptr [rdi], cl; xchg esp, eax; ret 0xca20;
0xffffffff81354cd1: ror byte ptr [rdi], cl; xchg esp, eax; ret 0xca30;
0xffffffff8180e273: ror byte ptr [rdi], cl; xchg esp, eax; ret 0xf41;
0xffffffff810f3132: ror byte ptr [rdi], cl; xchg esp, eax; ret;
0xffffffff825521bd: ror byte ptr [rdx+0x35d8c2ec], 1; pop rsp; ret 0x9f16;
0xffffffff8193dcd3: ror byte ptr [rip+0x14e80000], 0xbd; xchg esp, eax; dec dword ptr [rax-0x7b]; shl byte ptr [rbx+rcx*2+0x48], 0x89; ret;
0xffffffff8193e418: ror byte ptr [rip-0x30180000], 0xb5; xchg esp, eax; dec dword ptr [rax-0x7b]; shl byte ptr [rdi+rcx*2+0x48], 0x89; ret;
0xffffffff813c5028: ror byte ptr [rsp+rax*2], 0x89; leave; shl rax, cl; cmp rax, rdx; cmovg rax, rdx; ret;
0xffffffff824f2224: ror dl, 1; xchg esp, eax; scasd [rdi]; sti; iretd;
0xffffffff819f62f3: ror dword ptr [rax-0x7b], 1; leave; cmovne rax, rdx; ret;
0xffffffff8172903d: ror dword ptr [rax-0x7d], 0xc4; sbb [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff819a9c85: ror dword ptr [rax-0x7d], 0xe6; dec byte ptr [rdi]; xchg esp, eax; ret;
0xffffffff8174ac21: ror dword ptr [rax-0x7d], 0xf8; add ecx, [rdi]; xchg esp, eax; shl byte ptr [rax], 0xc8; ret;
0xffffffff8171f765: ror dword ptr [rax-0x7d], 0xfa; dec dword ptr [rdi]; xchg esp, eax; ret 0x840;
0xffffffff81c4b702: ror dword ptr [rax-0x7d], 1; leave; or dh, dh; ret 0x4812;
0xffffffff816c2c6b: ror dword ptr [rax-9], 0xd9; and rax, rcx; add rsp, 0x20; ret;
0xffffffff826cf09d: ror dword ptr [rax], 1; mov esp, [rbx+0x73]; ret;
0xffffffff82420210: ror dword ptr [rbx+0x680c0c9f], cl; xor [rcx+0x1c], bl; sub dh, [rdx-0x1e]; mov byte ptr [rsi-0xa1604aa], 0xe2; pop rsp; iretd;
0xffffffff8227092e: ror dword ptr [rbx-0x2b68a02], cl; or ebx, esi; scasb [rdi]; xchg esp, eax; ret 0x9bcf;
0xffffffff83469ecb: ror dword ptr [rbx-0x2c], 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff816ea76a: ror dword ptr [rbx], cl; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8169cfb5: ror dword ptr [rcx-0x7d], 0x7e; pop rax; add [rdi], cl; xchg esp, eax; ret 0xca30;
0xffffffff81a7de69: ror dword ptr [rdi], 1; xchg edx, eax; shl esi, 0x45; or al, [rdi+rcx]; xchg esp, eax; ret 0xca30;
0xffffffff815405da: ror dword ptr [rdi], 1; xchg esp, eax; ret 0xd084;
0xffffffff8180e797: ror dword ptr [rdi], 1; xchg esp, eax; rol byte ptr [rcx], 0xc0; ret;
0xffffffff8247dfe5: ror dword ptr [rdx-0x5d], cl; leave; ret;
0xffffffff822f77f6: ror dword ptr [rdx], cl; leave; or ah, ch; rcr byte ptr [rbx-0x614f0045], cl; xor eax, [rax-0x26]; iretd;
0xffffffff83469bcb: ror dword ptr [rsi-0x2c], 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff826cf09c: ror dword ptr fs:[rax], 1; mov esp, [rbx+0x73]; ret;
0xffffffff823fae51: ror ecx, 0xe4; pop rsp; add al, 1; call qword ptr [rbx-0x3e];
0xffffffff83471acb: ror edi, 0xd3; std; add rsp, 8; pop rbx; ret;
0xffffffff812558db: ror edi, 1; rol dword ptr [rcx], cl; xor eax, eax; add rsp, 8; ret;
0xffffffff82003354: ror edx, 1; or bh, bh; sub eax, 0xe4ffffd5; pop rsp; add eax, 0xacad1ff; jmp far fword ptr [rax];
0xffffffff810addab: ror esi, 0x15; add esp, eax; ret 0x69;
0xffffffff819f62f2: ror qword ptr [rax-0x7b], 1; leave; cmovne rax, rdx; ret;
0xffffffff822a5154: sahf; add [rdx-0xc299244], ebx; cmp ecx, [rsi]; xchg edx, eax; pop rsp; ret;
0xffffffff8155340e: sahf; add esp, 0x5e415bff; ret;
0xffffffff82462bf2: sahf; cmc; xchg esp, eax; add [rbx+rax*4-0x32], edi; and [rdi-0x45f2e787], esp; ret 0x275;
0xffffffff82287c30: sahf; in al, dx; pop rsp; iretd;
0xffffffff8238d413: sahf; leave; fcmovnbe st, st(6); fsub st, st(6); ret;
0xffffffff81605751: sahf; mov al, [0x415bf88944000006]; pop rsp; pop r14; pop r15; ret;
0xffffffff82232962: sahf; mov bl, 6; shr dword ptr [rsi+rax*8+0x42f3ec93], cl; xchg [rbx+rax*4], esp; or al, 0x1a; iretd;
0xffffffff834733ee: sahf; mov dh, 0xd3; std; add rsp, 8; pop rbx; ret;
0xffffffff8249ef81: sahf; or edi, [rax+0x48]; adc [rax-0x59], ah; mov ch, 0xc6; leave; ret;
0xffffffff834702ee: sahf; out 0xd3, eax; std; add rsp, 8; pop rbx; ret;
0xffffffff8251ffe0: sahf; pop rsp; iretd;
0xffffffff822b5c33: sahf; pop rsp; ret;
0xffffffff8231f7b4: sahf; pop rsp; sub ebx, [rdi]; movsxd esp, [rdx-0x7de9a372]; cmp eax, 0x401299bb; ret 0x12d5;
0xffffffff8243e30e: sahf; push rcx; out dx, al; pop rsi; xchg [rbx-0x12], esp; ret 0xcc20;
0xffffffff83484c0c: sahf; sar ch, cl; add rsp, 8; pop rbx; ret;
0xffffffff83474bb9: sahf; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8348d0ee: sahf; sbb edx, edx; std; add rsp, 8; pop rbx; ret;
0xffffffff82287c2b: sahf; shl dword ptr [rdi-0x6199aa69], cl; in al, dx; pop rsp; iretd;
0xffffffff826885a5: sahf; sub [rdi-0xb], dh; mov esi, 0x7561540a; leave; jmp qword ptr [rdi+rcx*8-2];
0xffffffff826cfc3b: sahf; sub [rsp+rcx*4+0xe], ch; mov esp, [rbx+0x73]; ret;
0xffffffff824205c2: sahf; sub bl, [rsi+0x7ed55f9e]; fistp dword ptr [rcx+0x518f4fc2], st; or ecx, ebp; pop rsp; iretd;
0xffffffff822caadf: sahf; xchg esp, eax; push rsp; mov ds, [rbx-0x4f]; sahf; iretq;
0xffffffff823abd6d: sahf; xchg esp, eax; ret 0xd1f2;
0xffffffff812d29ae: sahf; xchg esp, eax; sti; jmp qword ptr [rbp+0x48];
0xffffffff823f09e5: sahf; xchg gs:[rbx+0x7896b3ab], cl; pop rsp; push rsi; iretd;
0xffffffff816d1b58: sar al, 0x89; xchg [rdi+rdx], esp; add [rax], al; mov dword ptr [rdi+0x171c], 7; ret;
0xffffffff8158a4aa: sar bh, 0x48; add esp, 0x10; pop rbx; ret;
0xffffffff8112a564: sar bh, 0x48; add esp, 8; pop rbx; pop r14; ret;
0xffffffff814b6053: sar bh, 1; add rsp, 0x10; ret;
0xffffffff814b606c: sar bh, 1; add rsp, 8; ret;
0xffffffff8264d5fe: sar bh, 1; lahf; xchg esp, eax; sar bh, 1; iretd;
0xffffffff818edf5b: sar bl, 0x48; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8144edbd: sar byte ptr [rax+0x1c], 0x31; rol byte ptr [rcx-0x7d], cl; mov edi, 0xd4; add [rdi], cl; xchg esp, eax; ret 0x894c;
0xffffffff810d6299: sar byte ptr [rax+0x5be88900], 0x41; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff8243bd96: sar byte ptr [rax+0x7d4d908f], 1; leave; sbb eax, 0x6356fc6a; adc esi, ebx; call far fword ptr [rax+rbp*4+0x4048455b];
0xffffffff810374de: sar byte ptr [rax+8], 0x48; add esp, 8; pop rbx; pop r14; ret;
0xffffffff822fc6d6: sar byte ptr [rax], 0xf2; leave; out 0x3c, al; call qword ptr [rdi-0x5307470f];
0xffffffff81a82118: sar byte ptr [rbx], cl; or [rdi], cl; xchg esp, eax; ret 0x5039;
0xffffffff81a7dd11: sar byte ptr [rcx], cl; or [rdi], cl; xchg esp, eax; ret 0x5039;
0xffffffff812177dc: sar byte ptr [rip+0x415bfff8], 1; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff83555a08: sar byte ptr [rsi-0x7e6c], 0xff; push qword ptr [rax-0x3e]; xchg esp, eax; cmp edi, 0xc0ffffff; ret 0x8194;
0xffffffff823d380d: sar byte ptr [rsi], 0x60; mov ch, 6; mov esp, eax; ret 0x8b71;
0xffffffff8349f700: sar ch, 1; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff8349f5d7: sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff834a0ff3: sar ch, 1; add rsp, 8; ret;
0xffffffff8348c3db: sar ch, cl; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff834837cd: sar ch, cl; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff83484a31: sar ch, cl; add rsp, 8; pop rbx; ret;
0xffffffff8348376f: sar ch, cl; add rsp, 8; ret;
0xffffffff82305d7c: sar dl, cl; scasb [rdi]; xchg esp, eax; cli; ret 0x9cff;
0xffffffff8252df4f: sar dword ptr [r14], cl; xchg esp, eax; int 0x40; iretq;
0xffffffff834671bb: sar dword ptr [rax-0x2c], 1; std; add rsp, 8; pop rbx; ret;
0xffffffff815d3899: sar dword ptr [rax], 0x31; rol byte ptr [rcx-0x7d], cl; std; dec dword ptr [rdi]; xchg esp, eax; ret 0xdaf7;
0xffffffff8238df83: sar dword ptr [rbp-0x24], 1; push rax; xchg esp, eax; cmp dl, [rsi-0x5a]; ret;
0xffffffff822e784b: sar dword ptr [rbx+0x1a], 1; pushfq; in al, 0x82; xchg esp, edi; push rbx; ret;
0xffffffff8241b416: sar dword ptr [rbx+0x1d], cl; shr byte ptr [rbx], 1; cmp [rdx-0x35a4c15f], eax; pop rsp; sbb ebp, [rbp+0x5312b4ac]; iretd;
0xffffffff82316c47: sar dword ptr [rbx-0x2f], 1; mov dh, [rcx-0x527586ed]; leave; ret;
0xffffffff816a703a: sar dword ptr [rcx+0x50827856], 0xe8; fstp tbyte ptr [rbx], st; mov al, 0xff; add rsp, 8; ret;
0xffffffff813236d9: sar dword ptr [rcx+rax], 0xf; xchg esp, eax; ror byte ptr [rax], 0xc8; ret;
0xffffffff82313e02: sar dword ptr [rcx+rbp+0xc5af05d], cl; leave; add dword ptr [rdi-0x35], 0x70; neg ecx; mov [rbp-0x7e], fs; jmp far fword ptr [rdi+3];
0xffffffff8245dc30: sar dword ptr [rcx+rdx+0x3d4b8d4f], cl; leave; pushfq; ret 0x4add;
0xffffffff823c0feb: sar dword ptr [rcx-0x32], 1; fxch st, st(4); pop rsp; ret 0xc844;
0xffffffff822fb259: sar dword ptr [rcx-0x36f426c0], 0xfd; pop rsp; ret 0xae5b;
0xffffffff82237b57: sar dword ptr [rdx+0x41444c35], cl; rcl byte ptr [rax-0xcc7c40a], 0xb2; pop rsp; ret;
0xffffffff814e536b: sar dword ptr [rdx+rbx*2-0x7d], 0x39; add [rdi], cl; xchg esp, eax; rol dword ptr [rcx+rcx*4-0x3e], 0xf6; rol byte ptr [rdx+rcx*8+0x1494b75], cl; ret 0xc031;
0xffffffff8168981d: sar dword ptr [rdx-1], 0x85; leave; cmovs eax, edx; add rsp, 4; ret;
0xffffffff824945bb: sar dword ptr [rdx], cl; movsb [rdi], [rsi]; xadd [rcx+0x14dffe20], eax; mov ebp, 0x8839d69a; xchg esp, eax; call qword ptr [rsi+0x58];
0xffffffff8250501b: sar dword ptr [rip-0x6cd1da05], 1; imul eax, [rcx-0x8a2fbf0], 0x23; pop rsp; iretd;
0xffffffff8252df50: sar dword ptr [rsi], cl; xchg esp, eax; int 0x40; iretq;
0xffffffff834985dd: sar ebp, 1; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff834931a5: sar ebp, 1; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff83498366: sar ebp, 1; add rsp, 8; pop rbx; ret;
0xffffffff834984f0: sar ebp, 1; add rsp, 8; pop rbx; ret;
0xffffffff83493294: sar ebp, 1; add rsp, 8; pop rbx; ret;
0xffffffff83496a13: sar ebp, 1; add rsp, 8; ret;
0xffffffff834708dc: sar ebp, cl; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff834785a2: sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8346eb64: sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8347c3f0: sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff83478519: sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8347c603: sar ebp, cl; add rsp, 8; ret;
0xffffffff82009ca0: sar ebx, cl; xchg esp, eax; jmp far fword ptr [rdx+rsi*8+4];
0xffffffff819c30cf: sar edi, 1; add rsp, 8; ret;
0xffffffff8264d1be: sar edi, 1; scasd [rdi]; xchg esp, eax; sar edi, 1; call qword ptr [rdx-0x6ec0002f];
0xffffffff826fb091: sar esp, cl; xchg esp, eax; cmc; mov al, [0x63aae8f46cefd50b]; jmp rdx;
0xffffffff8168981c: sar qword ptr [rdx-1], 0x85; leave; cmovs eax, edx; add rsp, 4; ret;
0xffffffff83499b0c: sar r13, 1; add rsp, 8; ret;
0xffffffff8343a2e7: sbb [eax], al; add [rdi], cl; xchg esp, eax; shr bl, 2; xor eax, eax; ret;
0xffffffff8100d7c6: sbb [r11+0x41], bl; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff812e49df: sbb [r11+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8135db20: sbb [r15], cl; xchg esp, eax; ret 0x5389;
0xffffffff8118f896: sbb [r8-0x7b], cl; leave; cmove rax, rcx; ret;
0xffffffff81a7d6eb: sbb [r9], sil; leave; cmp rax, 0xfffffffffffff001; cmovb eax, ecx; pop rbx; ret;
0xffffffff823db896: sbb [rax+0x1d437ee2], ax; leave; sbb eax, ebx; ret 0x7064;
0xffffffff823db897: sbb [rax+0x1d437ee2], eax; leave; sbb eax, ebx; ret 0x7064;
0xffffffff810be6e0: sbb [rax+0x21], cl; fimul st, dword ptr [rax+0x39]; fimul st, dword ptr [rdi]; xchg esp, eax; ret 0xc75;
0xffffffff82563410: sbb [rax+0x22da8466], eax; adc rsp, rax; sbb esi, edi; ret 0xb5a7;
0xffffffff811c80e6: sbb [rax+0x39], cl; shl dword ptr [rsp+rsi*8+0x48], 0x85; leave; sete al; ret;
0xffffffff81afe42e: sbb [rax+0x415b0101], edi; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff813f215f: sbb [rax+0xf413bf9], eax; xchg esp, eax; ret;
0xffffffff82315bed: sbb [rax-0x378de22b], al; cli; cmp bl, [rbx-0x19]; add esp, esi; int 0x55; ret 0x3dcf;
0xffffffff8118f897: sbb [rax-0x7b], cl; leave; cmove rax, rcx; ret;
0xffffffff813f283a: sbb [rax-0x80], al; std; cmp ecx, [rdi]; xchg esp, eax; ret;
0xffffffff816e9881: sbb [rax], al; adc [rax], al; add [rdi], cl; xchg esp, eax; ret;
0xffffffff8292797c: sbb [rax], al; add [rax], al; leave; ret 8;
0xffffffff8343a2e8: sbb [rax], al; add [rdi], cl; xchg esp, eax; shr bl, 2; xor eax, eax; ret;
0xffffffff81236b9b: sbb [rax], eax; add [rax-0x7b], cl; leave; cmovns rax, rcx; add rax, rsi; ret;
0xffffffff81bc5442: sbb [rax], eax; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81486367: sbb [rax], eax; add [rcx], dh; leave; cmp eax, 0x2b270000; cmove eax, ecx; ret;
0xffffffff82ab235a: sbb [rax], eax; xchg esp, eax; fiadd st, word ptr [rax]; add ch, ch; call far fword ptr [rcx];
0xffffffff81486366: sbb [rax], r8d; add [rcx], dh; leave; cmp eax, 0x2b270000; cmove eax, ecx; ret;
0xffffffff815bbbba: sbb [rbp+0x12], dh; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff810c99b5: sbb [rbp+0x13], dh; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff813a8800: sbb [rbp+0x14], dh; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff81250b91: sbb [rbp+0x19], dh; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff83440d5a: sbb [rbp+0x1b], dh; add rsp, 0x20; pop rbx; ret;
0xffffffff8179caf7: sbb [rbp+0x1c], dh; add rsp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff813d93ca: sbb [rbp+0x20], dh; mov eax, ebp; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff81447eb2: sbb [rbp+0x26], dh; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff819adc74: sbb [rbp+0x28], dh; add rsp, 0x20; ret;
0xffffffff819a3d51: sbb [rbp+0x29], dh; add rsp, 0x20; pop rbx; ret;
0xffffffff8121c2a9: sbb [rbp+0x2a], dh; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff813924b8: sbb [rbp+0x2b], dh; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff813bdfdc: sbb [rbp+0x34], dh; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff81b521ac: sbb [rbp+0x34], dh; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff81a0e5f3: sbb [rbp+0x36], dh; add rsp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff822b8f6d: sbb [rbp+0x40], bh; movsd [rdi], [rsi]; pop rsp; cmp ebx, esp; lea edi, [rsi+0x287b9c9c]; iretd;
0xffffffff8105188d: sbb [rbp+0x45], dh; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff81c5e758: sbb [rbp+0x4b], dh; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff819ace32: sbb [rbp+0x4c], dh; add rsp, 0x20; pop rbx; ret;
0xffffffff811e07b6: sbb [rbp+0x51], dh; mov rax, rbx; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff8158a5bf: sbb [rbp+0x52], dh; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff8195db1e: sbb [rbp+0x55], dh; add rsp, 0x20; ret;
0xffffffff819ae029: sbb [rbp+0x56], dh; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff8120a0cb: sbb [rbp+0x5d], dh; mov eax, ebp; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff81c6ee9e: sbb [rbp+0x66], dh; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff8126a07f: sbb [rbp+0x6e], dh; add rsp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff81704d39: sbb [rbp+0x76], dh; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff819ad8fe: sbb [rbp+0x77], dh; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff810cca2a: sbb [rbp+0xa], dh; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff810bf6e1: sbb [rbp+0xa], dh; add rsp, 0x20; pop rbx; ret;
0xffffffff81acf551: sbb [rbp+0xa], dh; mov eax, ebx; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff81382ac5: sbb [rbp+0xb], dh; mov eax, r14d; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff814719e8: sbb [rbp+0xb], dh; mov rax, r14; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff8106b7bf: sbb [rbp+0xc], dh; add rsp, 0x20; ret;
0xffffffff8194a0bb: sbb [rbp+0xe], dh; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff81b8673b: sbb [rbp+0xe], dh; add rsp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff8103a70c: sbb [rbp+5], dh; add rsp, 0x20; ret;
0xffffffff8111fb6c: sbb [rbp+5], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff8102a3aa: sbb [rbp+6], dh; add rsp, 0x20; pop rbx; ret;
0xffffffff8103a9c2: sbb [rbp+7], dh; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8195db6c: sbb [rbp+7], dh; add rsp, 0x20; ret;
0xffffffff8105de6a: sbb [rbp+8], dh; add rsp, 0x20; pop rbx; pop r14; ret;
0xffffffff8183b8c0: sbb [rbp+8], dh; mov eax, ebx; add rsp, 0x20; pop rbx; ret;
0xffffffff8112d772: sbb [rbp+8], dh; mov eax, edx; add rsp, 0x20; pop rbx; ret;
0xffffffff8117cabe: sbb [rbp+9], dh; add rsp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff810cc2df: sbb [rbp+9], dh; add rsp, 0x20; ret;
0xffffffff8112d8f8: sbb [rbp+9], dh; mov eax, ebp; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff81112a92: sbb [rbp+9], dh; mov eax, ebx; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff815a5b0f: sbb [rbp+9], dh; mov rax, rbx; add rsp, 0x20; pop rbx; ret;
0xffffffff8244a906: sbb [rbp+rax*4-0x7f], edx; xlat [rbx]; pop rsp; stosb [rdi]; ret;
0xffffffff823560a1: sbb [rbp-0x4c], dl; xchg [rdi+0x26d19189], esp; call far fword ptr [rdx-0x46];
0xffffffff816c2fd0: sbb [rbp-0x77], cl; and [rbx+0x41], ebx; pop rsp; pop r14; pop r15; ret;
0xffffffff8225d15c: sbb [rbx+0x19a40d2f], dl; lea ebx, [rdx]; stosb [rdi]; push rbp; xchg esp, eax; iretd;
0xffffffff8252b189: sbb [rbx+0x1a], dl; xchg esp, eax; jmp qword ptr [rbx-0xf266927];
0xffffffff810367d6: sbb [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff81000a9d: sbb [rbx+0x41], bl; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff8100d313: sbb [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81283f4a: sbb [rbx+0x41], ebx; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff8114459b: sbb [rbx+0x41], ebx; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff812e3d77: sbb [rbx+0x41], r11b; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff81143afa: sbb [rbx+0x41], r11b; pop rsp; pop r14; pop r15; ret;
0xffffffff81c75de1: sbb [rbx+rcx*4+0x74], cl; and al, 0x20; mov r13, [rsp+0x28]; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff8104549d: sbb [rbx], bh; pop rsp; add ebx, 0xf; or edi, [rax-1]; ret;
0xffffffff816bbed3: sbb [rbx], cl; add [rax], al; dec dword ptr [rdi]; xchg esp, eax; ret 0x4c8d;
0xffffffff823676a3: sbb [rbx], dh; cmp [rip-0x1f9e0aee], dl; out dx, eax; pop rsp; iretd;
0xffffffff822463df: sbb [rcx+0x22], di; or eax, 0x2cc03f2f; add esp, edx; pop rbp; pop rsi; ret 0x808c;
0xffffffff822463e0: sbb [rcx+0x22], edi; or eax, 0x2cc03f2f; add esp, edx; pop rbp; pop rsi; ret 0x808c;
0xffffffff82393ce4: sbb [rcx-0x54358f79], edx; xchg esp, eax; and eax, 0x80360cc0; iretd;
0xffffffff81048dec: sbb [rcx], dh; leave; bt [rip+0x2577c21], rax; setb cl; mov eax, ecx; ret;
0xffffffff81a7d6ec: sbb [rcx], dh; leave; cmp rax, 0xfffffffffffff001; cmovb eax, ecx; pop rbx; ret;
0xffffffff8182d9a4: sbb [rcx], esi; rol byte ptr [rbx+0x370bd], 0; add ecx, [rdi]; xchg esp, eax; sar byte ptr [rdx+4], 0x29; ret 0x8d48;
0xffffffff822a0b3b: sbb [rdi+0x1d31cad6], ch; stc; xchg esp, eax; ret;
0xffffffff822e6ed3: sbb [rdi+0x1e], ebp; leave; iretd;
0xffffffff823650bd: sbb [rdi+0x39eaf238], al; test [rdi-0x552bd26b], cl; int 0x3c; pop rsp; ret 0xa1ff;
0xffffffff811e469e: sbb [rdi+0x48000000], dh; sub eax, esi; add rax, 0x20; shr rax, 3; add rsp, 4; ret;
0xffffffff811e469d: sbb [rdi+0x48000000], sil; sub eax, esi; add rax, 0x20; shr rax, 3; add rsp, 4; ret;
0xffffffff8222c6c5: sbb [rdi+0x54327feb], ebx; adc esp, ebx; or ebx, [rbp-0xc2d6b71]; xchg [rbx-0x6d], ebp; iretd;
0xffffffff8222c6c4: sbb [rdi+0x54327feb], rbx; adc esp, ebx; or ebx, [rbp-0xc2d6b71]; xchg [rbx-0x6d], ebp; iretd;
0xffffffff823eec55: sbb [rdi+7], edi; xchg esp, eax; sahf; iretd;
0xffffffff811f0deb: sbb [rdi+rcx], al; xchg esp, eax; ret;
0xffffffff8265a665: sbb [rdi+rdi*8-0x6be6b1], edx; fistp word ptr [rax], st; xchg esp, eax; jmp far fword ptr [rdi+0x16];
0xffffffff82005f45: sbb [rdi+rdi*8], esi; enter 0x52f, 0xff; pop rsp; and bh, al; jmp qword ptr [rdx-0x4300cbe6];
0xffffffff8241a675: sbb [rdi-0x2c100543], ecx; pop rsp; or dword ptr [rcx+0x57ac8be6], 0xffffffff; sub [rbx+0x45], bl; mov ebp, 0x8415c2a3; iretd;
0xffffffff8241810a: sbb [rdi-0x4610d24a], dh; mov ch, bl; pop rsp; stosd [rdi]; ret;
0xffffffff8195dae0: sbb [rdi], cl; test [rdi+0x48000000], ecx; add esp, 0x20; ret;
0xffffffff81bfd866: sbb [rdi], cl; test [rsi+0x48000000], ebp; add esp, 0x20; ret;
0xffffffff8135db21: sbb [rdi], cl; xchg esp, eax; ret 0x5389;
0xffffffff8112354e: sbb [rdi], cl; xchg esp, eax; ret;
0xffffffff814d0cd0: sbb [rdi], r9b; xchg esp, eax; ret;
0xffffffff82256377: sbb [rdx+0x45d5e0d7], bl; cdq; add esp, edx; cmpsd [rsi], [rdi]; ret;
0xffffffff81e01371: sbb [rdx-0x64], dl; push 0x10; push 0xffffffff81e013a0; add rsp, 0x30; pop rdx; iretq;
0xffffffff8236ad09: sbb [rdx], edi; test eax, 0xa3dcb959; xchg esp, eax; iretd;
0xffffffff81b715a4: sbb [rip+0x415b0011], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8342d1e0: sbb [rsi+0xf40a8ff], esi; xchg esp, eax; ret;
0xffffffff822f3249: sbb [rsi-0x7d238cac], ah; movsxd eax, [rsi-0x6faa478b]; xchg esp, eax; ret 0x8abc;
0xffffffff8252748a: sbb ah, [rip+0x161fed76]; xchg esp, eax; iretd;
0xffffffff824dad3f: sbb ah, [rsi+0x29]; shl cl, 1; push rbp; leave; call qword ptr [rax];
0xffffffff8228d252: sbb ah, [rsi+rbx*4+0x23]; leave; shl byte ptr [rdx-0x1d], 0xe0; iretd;
0xffffffff825da83f: sbb ah, [rsi-0x3c]; fld st, dword ptr [rbp-0x22b1383]; push rax; xchg esp, eax; ret;
0xffffffff8252a823: sbb ah, dl; mov dl, [rsp+rdx+0xb]; pop rsp; ret;
0xffffffff8228d24f: sbb ah, dl; pop rbp; sbb ah, [rsi+rbx*4+0x23]; leave; shl byte ptr [rdx-0x1d], 0xe0; iretd;
0xffffffff8346d18f: sbb ah, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff82328ec9: sbb al, 0x16; cli; sub ch, ch; sbb dl, [rbp-0xa]; pop rsp; ret 0xdeb6;
0xffffffff81af3b96: sbb al, 0x18; add cl, ch; push 0xffffffffe8ffffff; lea esi, [rdi]; pop rsp; jmp qword ptr [rsi+0x66];
0xffffffff823a21f3: sbb al, 0x1b; mov bl, 0x14; xchg esp, eax; ret;
0xffffffff81c72c9c: sbb al, 0x24; mov r12, [rsp+8]; add rsp, 0x10; ret;
0xffffffff81c83081: sbb al, 0x24; push qword ptr [rsp]; popfq; add rsp, 8; pop rbx; ret;
0xffffffff822abe4e: sbb al, 0x28; leave; ret;
0xffffffff8144edbf: sbb al, 0x31; rol byte ptr [rcx-0x7d], cl; mov edi, 0xd4; add [rdi], cl; xchg esp, eax; ret 0x894c;
0xffffffff816e3b0d: sbb al, 0x41; pop rsp; pop rbx; ret;
0xffffffff81348ca8: sbb al, 0x48; add esp, 0x10; ret;
0xffffffff8179caf9: sbb al, 0x48; add esp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff81022a59: sbb al, 0x48; mov eax, ebx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff822cd201: sbb al, 0x48; sub [rdi], esp; pop rsp; mov ecx, 0x8b0a3dfe; iretd;
0xffffffff8152a014: sbb al, 0x4c; mov eax, esi; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8197f558: sbb al, 0x60; pop rsp; add [rax-0x39], ecx; ret 0x5578;
0xffffffff822404e8: sbb al, 0x62; and [rsi+rbp*2], esp; pop rsp; ret;
0xffffffff824b9c7a: sbb al, 0x6f; cmpsb [rsi], [rdi]; and [rbx-0x7b74d60c], ebp; xchg esp, eax; add al, 0x2c; ret;
0xffffffff826f34f6: sbb al, 0x71; leave; xor byte ptr [rdi-0x1b], 0xe1; outsb dx, [rsi]; or edx, [rsp+rdi*8+0x65]; jmp qword ptr [rsi-0x45];
0xffffffff8255896b: sbb al, 0x76; or eax, 0x5b4d27e5; pop rsp; ret;
0xffffffff82392a63: sbb al, 0x83; xchg esp, eax; ret;
0xffffffff824989b7: sbb al, 0x93; leave; cmpsb [rsi], [rdi]; ret 0xd614;
0xffffffff8222b3d4: sbb al, 0x95; getsec; pop rsp; ret 0xf322;
0xffffffff82287c2a: sbb al, 0x9e; shl dword ptr [rdi-0x6199aa69], cl; in al, dx; pop rsp; iretd;
0xffffffff823b9b84: sbb al, 0xaf; div dword ptr [rcx]; leave; ret;
0xffffffff81648380: sbb al, 0xb2; leave; jmp qword ptr [rsi+0x66];
0xffffffff82543609: sbb al, 0xb7; adc [rsi-0x9a7b773], bl; out 0x31, al; mov esp, edi; iretd;
0xffffffff8113fa22: sbb al, 0xcc; add [rax-0x75], cl; xchg [rax+0x48000000], esp; sub eax, esi; ret;
0xffffffff8348cdf4: sbb al, 0xd2; std; add rsp, 8; pop rbx; ret;
0xffffffff8346cdfe: sbb al, 0xd4; std; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff8226741c: sbb al, 0xda; pop rsp; iretd;
0xffffffff82648af1: sbb al, 0xe5; dec edi; sbb esp, ebp; jmp far fword ptr [rdi+0x1b];
0xffffffff819688d3: sbb al, 0xf; xchg esp, eax; ret 0x8b41;
0xffffffff81168cf2: sbb al, 0xf; xchg esp, eax; ret 0xc748;
0xffffffff81bef692: sbb al, 2; add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x349;
0xffffffff822374fa: sbb al, [r9]; int3; shl byte ptr [rdx], 2; leave; fwait; ret 0x1ed1;
0xffffffff82ac6a0e: sbb al, [rax]; add [rax], al; add [rax], al; xchg esp, eax; ret 0x1a;
0xffffffff82927ac0: sbb al, [rax]; add [rsi], al; add al, 0; add [rax], al; xchg esp, eax; ret;
0xffffffff824d0dbc: sbb al, [rbx]; pop rsp; iretd;
0xffffffff822374fb: sbb al, [rcx]; int3; shl byte ptr [rdx], 2; leave; fwait; ret 0x1ed1;
0xffffffff82439777: sbb al, ah; xchg esp, eax; iretd;
0xffffffff82408112: sbb al, bh; xor al, 0x69; xchg [rdx+0x78bc9cdf], edx; pop rsp; xor eax, 0x32b7034e; ret;
0xffffffff822de3a4: sbb al, bl; int1; pop rsp; ret 0x7d0c;
0xffffffff8184edc1: sbb al, ch; leave; push 0xffffffffffffffe6; dec dword ptr [rax-0x77]; ret 0x8b48;
0xffffffff8225c7ae: sbb bh, 0x9d; and ecx, 0xffffffd9; xchg esp, eax; cmpsb [rsi], [rdi]; ret;
0xffffffff824a799c: sbb bl, [rax+0x392a1045]; fwait; pop rsp; iretd;
0xffffffff82287c24: sbb bl, [rbp-0x59a1eb87]; sbb al, 0x9e; shl dword ptr [rdi-0x6199aa69], cl; in al, dx; pop rsp; iretd;
0xffffffff823dedc1: sbb bl, [rcx-0x21]; pop rsi; leave; sbb dh, [rbp+0x4eede1b5]; or al, 0xda; jmp qword ptr [rbp-0x2f];
0xffffffff8238d5dc: sbb bl, ah; leave; ret 0x298a;
0xffffffff82408242: sbb byte ptr [rbx+0x67bf9a59], 0xec; xchg esp, eax; xchg ebx, eax; push rax; push 0x4f; iretd;
0xffffffff82349937: sbb byte ptr [rcx-0x3490f0d1], 0xbf; and al, dh; sub [rbp-0x3f], edx; pop rsp; ret 0x8013;
0xffffffff826681d9: sbb byte ptr [rdi+rdi*8-0x41], 0x7f; pop rsp; call far fword ptr [rdi+0x7f];
0xffffffff810f735c: sbb byte ptr [rdx-0x47140001], 0x48; add esp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff82370f62: sbb byte ptr [rip+0x3704891e], 0xaf; leave; ret 0xb99f;
0xffffffff822e4373: sbb byte ptr [rsi+0x46], 0x58; adc edi, [rcx]; leave; iretd;
0xffffffff825226a9: sbb ch, al; leave; and dword ptr [rdx], 0xf8c32c0f; xchg edi, eax; push rbx; ret 0x5f50;
0xffffffff8256bade: sbb ch, al; push 0x6ba553f9; xchg esp, eax; iretd;
0xffffffff812acb21: sbb ch, bl; sub [rbx+0x41], ebx; pop rsp; pop r14; pop r15; ret;
0xffffffff824630b0: sbb ch, dh; pop sp; enter 0xb802, 0xc; push rax; ret 0xec51;
0xffffffff82384cd7: sbb cl, [rax+0x6ab14d8a]; and r9b, dil; xchg rsp, rax; ret 0x50d5;
0xffffffff823ac91f: sbb cl, [rbp-0x19]; leave; adc ax, 0xef47; iretd;
0xffffffff824478d7: sbb cl, [rbx-0x6d]; cmc; mov esp, [rip+0x4aa86203]; cld; mov edx, 0x271da1ee; ret;
0xffffffff8270842e: sbb cl, [rcx]; mov esp, [rbx+0x73]; ret;
0xffffffff8122869d: sbb cl, [rdi+rcx]; xchg esp, eax; ret;
0xffffffff816215a0: sbb cl, [rdi]; xchg esp, eax; ret;
0xffffffff826caf3b: sbb cl, [rdx+rcx*8]; stc; imul ebp, edi, 0x30353238; xchg esp, eax; out 0x74, eax; iretd;
0xffffffff8239a447: sbb cl, ah; adc esp, edi; iretd;
0xffffffff8243aeec: sbb cl, bh; xchg ebx, eax; pop rsp; jmp qword ptr [rsi];
0xffffffff817c984f: sbb cl, ch; leave; xchg r9d, eax; jmp qword ptr [rsi+0xf];
0xffffffff817c9851: sbb cl, ch; leave; xchg r9d, eax; jmp qword ptr [rsi+0xf];
0xffffffff822dbe91: sbb cl, ch; nop; pop rsp; mov [0x579d5ec8217bbc05], eax; ret;
0xffffffff824e7f82: sbb cl, dl; mov al, [0xcf6525c883636f2e]; pop rdi; pop rsp; ret 0xbef2;
0xffffffff82247f0b: sbb dh, bh; in eax, dx; leave; sar dword ptr [rdi-0x1f], 1; ret;
0xffffffff8357935a: sbb dh, dh; leave; cwde; ret;
0xffffffff82328ece: sbb dl, [rbp-0xa]; pop rsp; ret 0xdeb6;
0xffffffff824b78ef: sbb dl, [rbx-0x7f]; cld; mov r9d, 0x53a37392; pop rsp; cmc; iretd;
0xffffffff82226f01: sbb dl, [rcx+rbp*8-0x53729bee]; add ebp, ebp; xchg edx, eax; enter 0xf50c, 0x59; leave; ret 0x6a20;
0xffffffff826cf152: sbb dl, [rdi]; mov esp, [rbx+0x73]; ret;
0xffffffff8346d070: sbb dl, ah; std; add rsp, 8; pop rbx; ret;
0xffffffff8348d066: sbb dl, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff824e8b9c: sbb dword ptr [rbp-0x3e], 0x3d35f6d6; add dword ptr [r15+0x48], 0xa4730f56; movsb [rdi], [rsi]; leave; mov [rip-0x157eb449], edi; ret;
0xffffffff817bcb20: sbb dword ptr [rbx-0x17], 0xffffff89; xchg rsp, rax; jmp qword ptr [rsi+0xf];
0xffffffff8244af89: sbb dword ptr [rcx+rbp*4-0x5a], 0x13; in al, 0x4d; pop rsp; ret;
0xffffffff8232c1cc: sbb dword ptr [rcx], 0xfc126342; mov rbp, 0x7c7a12281d0690f1; mov eax, 0x14640aa9; leave; and ecx, esp; call qword ptr [rcx];
0xffffffff826681c9: sbb dword ptr [rdi+rdi*8-0x11], 0xffffff82; pop rsp; call far fword ptr [rdi+0x4fff5c82];
0xffffffff8226a986: sbb eax, 0x151119ac; leave; mov ebx, 0xe62809d3; push 0xffffffffffffffb1; out dx, al; iretd;
0xffffffff8265a655: sbb eax, 0x1b8fff94; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff82668311: sbb eax, 0x1cefff5c; pop rsp; jmp far fword ptr [rdi];
0xffffffff82370f63: sbb eax, 0x3704891e; scasd [rdi]; leave; ret 0xb99f;
0xffffffff824bc2aa: sbb eax, 0x38cb6a3f; mov esp, ecx; lea esp, [rcx+0x2f6f12d8]; ret 0x94aa;
0xffffffff824b4d0b: sbb eax, 0x3a980a1a; stosb [rdi]; cmp [rdx+0x152f41f2], r14; xchg esp, eax; ret;
0xffffffff81b715a5: sbb eax, 0x415b0011; pop rsp; pop r14; pop r15; ret;
0xffffffff8151761f: sbb eax, 0x4800000a; add esp, 8; pop rbx; pop r14; ret;
0xffffffff815b7edf: sbb eax, 0x480000b2; add esp, 0x10; ret;
0xffffffff824f4e78: sbb eax, 0x48a08027; or esi, [rdx]; pop rsp; ret;
0xffffffff8347d96f: sbb eax, 0x48fdd311; add esp, 8; pop rbx; ret;
0xffffffff8346d06f: sbb eax, 0x48fdd41a; add esp, 8; pop rbx; ret;
0xffffffff8101eeaf: sbb eax, 0x48fffffc; add esp, 8; pop rbx; pop r14; ret;
0xffffffff82474d9f: sbb eax, 0x4d87bb06; fld st, dword ptr [rsp+rsi*4-0x63]; mov al, 0x2f; pop rsp; iretd;
0xffffffff82319275: sbb eax, 0x5edc8493; leave; and esi, edi; mov eax, 0x339d3921; ret;
0xffffffff816e68ae: sbb eax, 0x7247c80; add cl, [rdi]; xchg esp, eax; ret;
0xffffffff82547edc: sbb eax, 0x7591be4f; sbb esp, esi; fwait; push rbp; ret 0xf670;
0xffffffff8251b382: sbb eax, 0x787ab394; leave; mov ebp, 0xa80eaecc; ret;
0xffffffff82277ed1: sbb eax, 0x7919db49; pop rsp; and [rax-0x736ef268], bh; ret;
0xffffffff8232c1d7: sbb eax, 0x7c7a1228; mov eax, 0x14640aa9; leave; and ecx, esp; call qword ptr [rcx];
0xffffffff822de39c: sbb eax, 0x96bbb8b1; fsub st(3), st; and ebx, [rax]; fdiv st, st(1); pop rsp; ret 0x7d0c;
0xffffffff82537740: sbb eax, 0xb5af1236; xchg [rsi+0x1b], esp; mov al, 0x26; fidiv st, word ptr [rax]; cmp rdx, [rbp-9]; iretd;
0xffffffff82537741: sbb eax, 0xb5af1236; xchg [rsi+0x1b], esp; mov al, 0x26; fidiv st, word ptr [rax]; cmp rdx, [rbp-9]; iretd;
0xffffffff825da83d: sbb eax, 0xc4661a5a; fld st, dword ptr [rbp-0x22b1383]; push rax; xchg esp, eax; ret;
0xffffffff82351c56: sbb eax, 0xf0d8a165; adc esp, ebp; mov edi, 0x5da29229; iretd;
0xffffffff835238f2: sbb eax, 0xffffff81; inc dword ptr [rax]; pop rsp; sbb eax, 0xffffff81; jmp qword ptr [rax];
0xffffffff82ad3b56: sbb eax, [rax]; add [rax], al; add [rcx+rbx], cl; xchg esp, eax; add [rax], eax; ret;
0xffffffff82ad434a: sbb eax, [rax]; add [rax], al; add [rdx+rbp*4], cl; xchg esp, eax; add [rax], eax; ret 0x1b56;
0xffffffff824e5348: sbb eax, [rbp+0x22]; pop rsp; push rsi; sub al, 0xb5; xchg ebp, eax; iretd;
0xffffffff81b2ff3f: sbb eax, [rbx+0x48]; shr eax, 0x32; add eax, ecx; bswap eax; add rsp, 0x18; ret;
0xffffffff82240b5f: sbb eax, [rbx-0x47]; pop rsp; fwait; call qword ptr [rbx-0x19dd51d7];
0xffffffff82007365: sbb eax, [rip-0x38e9e401]; inc dword ptr [rax]; xchg esp, eax; push rcx; jmp qword ptr [rax+0x15ff051b];
0xffffffff83470d09: sbb ebp, 0xffffffd3; std; add rsp, 8; pop rbx; ret;
0xffffffff823f7953: sbb ebp, [rax+0x695cd4c1]; or esi, [rbx]; leave; syscall;
0xffffffff824a4283: sbb ebp, [rdx-0x15]; pop rsp; ret 0x97b5;
0xffffffff83447e71: sbb ebp, [rsi+rdx*8-3]; add rsp, 8; pop rbx; ret;
0xffffffff81adf29e: sbb ebp, ebx; dec dword ptr [rcx-0x7a3fce3f]; leave; cmovns rax, rbx; pop rbx; ret;
0xffffffff81101094: sbb ebx, [rbx+0x41]; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff834848ea: sbb ebx, [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff8251b381: sbb ebx, [rip+0x787ab394]; leave; mov ebp, 0xa80eaecc; ret;
0xffffffff81c0f1ee: sbb ebx, eax; dec dword ptr [rcx-0x7a3fce3f]; leave; cmovns rax, rbx; pop rbx; ret;
0xffffffff83472773: sbb ebx, eax; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff825315b1: sbb ebx, edi; insb [rdi], dx; mov esp, [rcx]; iretd;
0xffffffff8195d01a: sbb ecx, [r8-0x77]; fucomip st, st(0); pop rsp; ret 0xffd1;
0xffffffff8195d01b: sbb ecx, [rax-0x77]; fucomip st, st(0); pop rsp; ret 0xffd1;
0xffffffff818ecb7b: sbb ecx, [rcx-0x75]; xchg esp, eax; and al, 0x90; add [rax], al; add dh, dh; ret 0x7501;
0xffffffff823b4b72: sbb ecx, eax; in al, 0xa2; xchg esp, eax; lodsb [rsi]; sub [rbp-0x3de8d60d], ebp; iretd;
0xffffffff82384dbd: sbb ecx, ebx; leave; sbb [rdx+0x27], ah; iretd;
0xffffffff824abf43: sbb edi, [rdi+0x7b]; pop rsp; xchg ebx, edi; push rsi; lahf; iretd;
0xffffffff824be815: sbb edi, [rdx-0x1973d26e]; fwait; out dx, al; leave; call qword ptr [rax+0x28];
0xffffffff8346ef71: sbb edi, ebx; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82289d5d: sbb edi, edi; leave; xor cl, [rax+rax*4]; mov ebx, 0xc5116742; iretd;
0xffffffff8246cba1: sbb edi, edx; movsd [rdi], [rsi]; leave; iretd;
0xffffffff8265a65d: sbb edx, [rdi+rdi*8-0x6be5e1]; out dx, eax; sbb [rdi+rdi*8-0x6be6b1], edx; fistp word ptr [rax], st; xchg esp, eax; jmp far fword ptr [rdi+0x16];
0xffffffff82541534: sbb edx, [rdi]; and ecx, [rax+4]; leave; ret 0xc39;
0xffffffff834a1771: sbb edx, ebx; sar ch, 1; add rsp, 8; ret;
0xffffffff82455718: sbb edx, ecx; mov esi, es; pop rsp; ret 0xf9f2;
0xffffffff8348d0ef: sbb edx, edx; std; add rsp, 8; pop rbx; ret;
0xffffffff8348cf4a: sbb edx, edx; std; add rsp, 8; pop rbx; ret;
0xffffffff8348d118: sbb edx, edx; std; add rsp, 8; ret;
0xffffffff8348cf77: sbb edx, edx; std; add rsp, 8; ret;
0xffffffff8344cee3: sbb edx, esi; std; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff8346cf51: sbb edx, esp; std; add rsp, 8; pop rbx; ret;
0xffffffff81b2ff3d: sbb esi, 0x1b; shr rax, 0x32; add eax, ecx; bswap eax; add rsp, 0x18; ret;
0xffffffff824d1ec5: sbb esi, [rbp+rbp+0x421614c5]; mov dh, 0x37; pop rsp; ficom st, dword ptr [rax+0x730c97fe]; jmp qword ptr [rbx+0x58c4d3f6];
0xffffffff8251e70e: sbb esi, [rcx-0x19]; cmp ebp, [rbp+0x6065e509]; fisubr st, dword ptr [rdx+0x3d]; pop rsp; shl ch, cl; iretd;
0xffffffff82570edd: sbb esi, [rip+0x330cb48d]; leave; fimul st, word ptr [rdx+rsi*8]; iretd;
0xffffffff81a826b9: sbb esi, esi; rcl dword ptr [rax], 0xf; xchg esp, eax; ret;
0xffffffff819c025b: sbb esp, 0x8548fffc; shl byte ptr [rdx+rax*2+0x48], 0x89; ret;
0xffffffff82371462: sbb esp, 0xffffffc8; xor esi, esi; pop rdi; push rcx; ret 0xff47;
0xffffffff822eae03: sbb esp, 0xffffffdc; iretd;
0xffffffff822acd5d: sbb esp, 0xfffffff8; sub edi, [rsp+rdi*4]; ret;
0xffffffff81589462: sbb esp, 2; add [rax], al; pop rbx; pop r14; ret;
0xffffffff8254f489: sbb esp, [rip-0x57dc9624]; bswap ecx; xchg esp, eax; jmp far fword ptr [rdi-0x3361e5d4];
0xffffffff812b580f: sbb esp, eax; jmp qword ptr [rsi+0x66];
0xffffffff823bcfce: sbb esp, eax; popfq; iretd;
0xffffffff810719aa: sbb esp, eax; ret 0xdd71;
0xffffffff8243a858: sbb esp, eax; sbb al, 0x9c; ret 0x34e8;
0xffffffff8252e7f7: sbb esp, eax; xchg edi, eax; sti; push rcx; ret 0x9776;
0xffffffff824505e7: sbb esp, eax; xchg esp, eax; push rbx; hlt; rol byte ptr [rax], 0xff; iretd;
0xffffffff8198b446: sbb esp, ebp; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsi; ret;
0xffffffff814739f1: sbb esp, ebp; dec dword ptr [rax-0x77]; ret;
0xffffffff822f5fb8: sbb esp, ebp; fiadd st, word ptr [rcx-0x615c2e46]; sub eax, [rcx]; imul esp, [rdi], 0x30; ret;
0xffffffff8224f0c7: sbb esp, ebp; fxch st, st(5); iretd;
0xffffffff8222977f: sbb esp, ebp; hlt; iretd;
0xffffffff8222977e: sbb esp, ebp; hlt; iretd;
0xffffffff825d610d: sbb esp, ebp; jmp far fword ptr [rcx+0x3b];
0xffffffff82648af5: sbb esp, ebp; jmp far fword ptr [rdi+0x1b];
0xffffffff82646d79: sbb esp, ebp; jmp far fword ptr [rdi-0x500013e8];
0xffffffff8252f15d: sbb esp, ebp; leave; iretd;
0xffffffff822c2710: sbb esp, ebp; mov [0x633b2abd796c1370], al; test [rbp-0x378175d9], ecx; mov ah, 0xa4; ret 0x13a5;
0xffffffff822ca061: sbb esp, ebp; ret 0x6313;
0xffffffff81103361: sbb esp, ebx; iretd;
0xffffffff8298a184: sbb esp, ebx; or al, 0; add [rax], al; add [rsi+rdi], cl; ret 0;
0xffffffff810bd993: sbb esp, ebx; or eax, 0x5e415b00; ret;
0xffffffff824188bc: sbb esp, ecx; adc edi, [rdi-0x2f]; iretd;
0xffffffff81a53561: sbb esp, ecx; cmp al, [rax]; mov dword ptr [rdi+0xd00], 0x7530; ret;
0xffffffff82649a31: sbb esp, ecx; dec dword ptr [rdi]; sbb esp, ecx; jmp far fword ptr [rdi+0x1a];
0xffffffff82649a35: sbb esp, ecx; jmp far fword ptr [rdi+0x1a];
0xffffffff8230b45d: sbb esp, ecx; pushfq; sbb eax, 0x73aca77a; test [rdi], bh; add al, 0x43; iretd;
0xffffffff8222dae3: sbb esp, ecx; ret 0xc600;
0xffffffff82519c2b: sbb esp, ecx; sub bl, [rdi+2]; ret 0x4f96;
0xffffffff8256444e: sbb esp, edi; add bh, 0x36; iretd;
0xffffffff8264816d: sbb esp, edi; call far fword ptr [rdi];
0xffffffff82642585: sbb esp, edi; call far fword ptr [rdi];
0xffffffff83428653: sbb esp, edi; cmp esi, 0xffffffb8; add [rax], eax; add [rax], al; ret;
0xffffffff82374f5a: sbb esp, edi; int3; xor bh, ah; add dword ptr [rbp+rsi*8+0x1efd7faa], 0x52; ret 0x4ac3;
0xffffffff82648169: sbb esp, edi; jmp far fword ptr [rdi+0x1fffe71b];
0xffffffff826c56cb: sbb esp, edi; jmp rdi;
0xffffffff822a87f9: sbb esp, edi; push rax; pop rsp; jmp qword ptr [rax-0x2bbfd25c];
0xffffffff822894a9: sbb esp, edi; ret 0x8d94;
0xffffffff8223101e: sbb esp, edi; test dh, bl; push rcx; push rax; ret 0x7705;
0xffffffff823a430e: sbb esp, edx; adc dh, [rsi+0x199d436b]; sysexit;
0xffffffff8264c5ed: sbb esp, edx; call far fword ptr [rdi+0x17];
0xffffffff81467e96: sbb esp, edx; dec dword ptr [rax-0x7b]; shl byte ptr [rsp+rdi+0x48], 0x89; ret;
0xffffffff814c2753: sbb esp, edx; jmp qword ptr [rsi+0x2e];
0xffffffff8160dfbe: sbb esp, edx; jmp qword ptr [rsi+0x66];
0xffffffff8245ead1: sbb esp, edx; mov ecx, [rdi+0x2132500]; push rdi; mov ebp, 0x9a9a71e7; iretd;
0xffffffff8228805c: sbb esp, edx; or [rdx+0x1ded883c], dh; iretd;
0xffffffff81b89111: sbb esp, edx; push rdx; jmp qword ptr [rsi+0x66];
0xffffffff8246c948: sbb esp, edx; sar byte ptr [rdx-0x1f65f566], 0xb7; mov eax, edi; iretd;
0xffffffff822ef4a8: sbb esp, edx; sub eax, 0xe136e6f9; mov al, [0x26d2f8204f55f2e8]; sub esi, edi; ret 0x6e07;
0xffffffff834804e3: sbb esp, esi; adc eax, [rax]; mov [rip+0x13f417], ecx; mov [rip+0x13f419], ecx; ret;
0xffffffff834804ef: sbb esp, esi; adc eax, [rax]; ret;
0xffffffff8172c04e: sbb esp, esi; add ebx, ebp; add eax, 0xffffffb8; jmp qword ptr [rbp+0x48];
0xffffffff82547ee1: sbb esp, esi; fwait; push rbp; ret 0xf670;
0xffffffff82644479: sbb esp, esi; jmp far fword ptr [rdi-0x30000be8];
0xffffffff8134885c: sbb esp, esi; jmp qword ptr [rbp+0x48];
0xffffffff8200ac48: sbb esp, esi; mov [0xc6fcbeff04e2c4ff], al; call rcx;
0xffffffff819bc2d1: sbb esp, esi; sar edi, 1; ret;
0xffffffff82564f5b: sbb esp, esp; cmc; leave; insb [rdi], dx; adc al, 0x1c; ret 0x9888;
0xffffffff81582ce3: sbb esp, esp; cmpsd [rsi], [rdi]; add [rax-0x77], cl; ret;
0xffffffff8127596e: sbb esp, esp; jmp qword ptr [rsi+0x66];
0xffffffff822e605a: sbb esp, esp; mov dr2, rax; ret;
0xffffffff8227b8b8: sbb esp, esp; ret;
0xffffffff8252f15c: sbb r12, r13; leave; iretd;
0xffffffff82649a30: sbb r12, r9; dec dword ptr [rdi]; sbb esp, ecx; jmp far fword ptr [rdi+0x1a];
0xffffffff82527489: sbb r12b, [rip+0x161fed76]; xchg esp, eax; iretd;
0xffffffff8346d249: sbb r12b, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff82ad3b55: sbb r8, [rax]; add [rax], al; add [rcx+rbx], cl; xchg esp, eax; add [rax], eax; ret;
0xffffffff825da83c: sbb rax, 0xffffffffc4661a5a; fld st, dword ptr [rbp-0x22b1383]; push rax; xchg esp, eax; ret;
0xffffffff817bcb1f: sbb word ptr [rbx-0x17], 0xff89; xchg rsp, rax; jmp qword ptr [rsi+0xf];
0xffffffff81713fbd: scasb [rdi]; add [rcx-0x7a3fce3f], cl; leave; setne al; ret;
0xffffffff820024e9: scasb [rdi]; add bh, bh; xchg esp, eax; push 5; jmp qword ptr [rcx];
0xffffffff82307da4: scasb [rdi]; and ebx, edx; leave; push rbp; cmc; iretd;
0xffffffff8342a8de: scasb [rdi]; fdivr st, st(5); add rsp, 8; pop rbx; ret;
0xffffffff825ccfb1: scasb [rdi]; in eax, dx; leave; ret 0x3b81;
0xffffffff82522b2a: scasb [rdi]; leave; call far fword ptr [rsi];
0xffffffff812ecc4e: scasb [rdi]; leave; hlt; dec dword ptr [rax-0x77]; ret;
0xffffffff8119a8ce: scasb [rdi]; leave; int1; dec dword ptr [rdi]; or edi, [rax-0x13]; ret;
0xffffffff8264ef1d: scasb [rdi]; leave; jmp far fword ptr [rdi-0x52];
0xffffffff824f5999: scasb [rdi]; leave; ret 0x5cac;
0xffffffff8225e978: scasb [rdi]; leave; sub edx, [rdx]; mov es, [rdx+0x3f]; ret 0xb79a;
0xffffffff823d496f: scasb [rdi]; mov eax, [0xf45fdb7838e66672]; mov ah, 0x31; pop rsp; iretd;
0xffffffff8222f31d: scasb [rdi]; mov esi, 0x24eb2619; mov esp, [rax-0x2c1cfda7]; mov r9b, 0x4a; ret;
0xffffffff823b9b82: scasb [rdi]; out dx, eax; sbb al, 0xaf; div dword ptr [rcx]; leave; ret;
0xffffffff82668115: scasb [rdi]; pop rsp; call far fword ptr [rdi-0x54];
0xffffffff8200d87c: scasb [rdi]; pop rsp; call qword ptr [rax-0x3b00fb4a];
0xffffffff82668111: scasb [rdi]; pop rsp; jmp far fword ptr [rdi-0x52];
0xffffffff81bd167e: scasb [rdi]; pop rsp; jmp qword ptr [rsi+0x66];
0xffffffff82003e38: scasb [rdi]; pop rsp; xchg esi, eax; jmp qword ptr [rdx+rdx*2+0x5da5ff05];
0xffffffff826cf0ee: scasb [rdi]; push 0xb73e26f; mov esp, [rbx+0x73]; ret;
0xffffffff822bf710: scasb [rdi]; push rdi; xchg ecx, eax; xchg esp, eax; mov bh, 0x70; iretd;
0xffffffff83473c20: scasb [rdi]; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff824f3b2a: scasb [rdi]; xchg [rsi], edi; pop rsp; imul ecx, ebp, 0x9cff6cc9; push rax; ret;
0xffffffff823d7a5d: scasb [rdi]; xchg esi, esp; jmp rbp;
0xffffffff8265a3d9: scasb [rdi]; xchg esp, eax; call far fword ptr [rdi+0x4fff94ae];
0xffffffff8265a3e0: scasb [rdi]; xchg esp, eax; call far fword ptr [rdi-0x70006b54];
0xffffffff8176c50c: scasb [rdi]; xchg esp, eax; call qword ptr [rax+0x69516be8];
0xffffffff82305d7e: scasb [rdi]; xchg esp, eax; cli; ret 0x9cff;
0xffffffff8265a3dd: scasb [rdi]; xchg esp, eax; dec dword ptr [rdi-0x52]; xchg esp, eax; call far fword ptr [rdi-0x70006b54];
0xffffffff8252ac45: scasb [rdi]; xchg esp, eax; mov fs, [rax-0x4fe84941]; ret;
0xffffffff82270936: scasb [rdi]; xchg esp, eax; ret 0x9bcf;
0xffffffff82307116: scasb [rdi]; xor dl, ah; leave; iretd;
0xffffffff82522b29: scasb es:[rdi]; leave; call far fword ptr [rsi];
0xffffffff822e91d3: scasd [rdi]; adc [rbx-0x605fa98a], dh; push rsp; pop rsp; cld; jmp far fword ptr [rdi];
0xffffffff824070f8: scasd [rdi]; adc al, 0xbf; xchg [rbp+0x4f], esp; iretd;
0xffffffff8264ab2c: scasd [rdi]; adc esp, ebx; call far fword ptr [rdi-0x400023f0];
0xffffffff82244549: scasd [rdi]; adc esp, edx; out dx, al; push rbp; imul dword ptr [rbx-4]; ret 0x249f;
0xffffffff82649020: scasd [rdi]; adc esp, esp; jmp far fword ptr [rdi+0x10];
0xffffffff8118b5dd: scasd [rdi]; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff826425dc: scasd [rdi]; add esp, edi; dec dword ptr [rdi-2]; sti; jmp far fword ptr [rdi];
0xffffffff8265a630: scasd [rdi]; and eax, 0x256fff94; xchg esp, eax; dec edi; and al, 0x94; jmp far fword ptr [rdi+0x3fff9424];
0xffffffff8264eda0: scasd [rdi]; clc; leave; jmp far fword ptr [rdi-0x60003609];
0xffffffff8265a234: scasd [rdi]; clc; xchg esp, eax; call far fword ptr [rdi-0x70006b08];
0xffffffff8264edac: scasd [rdi]; cmc; leave; jmp far fword ptr [rdi-0x5000360c];
0xffffffff834474ec: scasd [rdi]; dec dword ptr [rdi]; xchg esp, eax; ret;
0xffffffff823b9b85: scasd [rdi]; div dword ptr [rcx]; leave; ret;
0xffffffff8264edb0: scasd [rdi]; hlt; leave; jmp far fword ptr [rdi-0x7000360d];
0xffffffff8266821c: scasd [rdi]; insb [rdi], dx; pop rsp; call far fword ptr [rdi+0x6c];
0xffffffff8346f8dd: scasd [rdi]; int1; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff823748cd: scasd [rdi]; leave; cmc; sub [rbp-0x1f], eax; iretd;
0xffffffff8266a6ec: scasd [rdi]; leave; jmp far fword ptr [rdi-0x37];
0xffffffff816ba97d: scasd [rdi]; leave; lahf; jmp qword ptr [rsi+0x66];
0xffffffff82668de0: scasd [rdi]; leave; pop rax; call far fword ptr [rdi];
0xffffffff82370f68: scasd [rdi]; leave; ret 0xb99f;
0xffffffff8265a434: scasd [rdi]; mov [0xa17fff94a23fff94], eax; xchg esp, eax; call far fword ptr [rdi-0x5f];
0xffffffff810767be: scasd [rdi]; mov al, [0x14ef1121c4000000]; sbb esp, eax; ret 0xdd71;
0xffffffff8256e20f: scasd [rdi]; mov bh, 0x87; pop rsp; mov esp, 0x83a354d3; mov [rax+0x37], ebp; ret;
0xffffffff822dd1a3: scasd [rdi]; mov dh, 4; movsxd ebp, eax; leave; cmp eax, 0x852bff76; ret 0xa800;
0xffffffff826675f0: scasd [rdi]; mov esp, [rax-1]; mov r12, [r8-1]; iretd;
0xffffffff82648e18: scasd [rdi]; mov esp, fs; jmp far fword ptr [rdi];
0xffffffff826ee1dd: scasd [rdi]; not byte ptr [rbp+0x540a73e8]; xchg [rax+rbp*4], esp; jmp far fword ptr [rdi+0x73e895f6];
0xffffffff82291605: scasd [rdi]; or ah, [rcx+0x4b826ba8]; leave; in al, dx; iretd;
0xffffffff8346dfdd: scasd [rdi]; or dl, ah; std; add rsp, 8; pop rbx; ret;
0xffffffff8264f00c: scasd [rdi]; pop rbp; leave; jmp far fword ptr [rdi+0x5d];
0xffffffff82554bcd: scasd [rdi]; pop rcx; or bh, [rdx+0x7ca8231f]; xchg esp, eax; add al, 0xce; iretd;
0xffffffff8224a62d: scasd [rdi]; pop rsp; and al, 0x6d; in eax, dx; xchg [rdi-0x2718d3e7], ah; ret;
0xffffffff8165167d: scasd [rdi]; pop rsp; cmpsb [rsi], [rdi]; jmp qword ptr [rsi+0x66];
0xffffffff82667c70: scasd [rdi]; pop rsp; pop rsi; call far fword ptr [rdi+0x56];
0xffffffff8251a94d: scasd [rdi]; pop rsp; push rsi; bnd ret 0x9f7;
0xffffffff8264ef48: scasd [rdi]; popfq; leave; jmp far fword ptr [rdi];
0xffffffff82668268: scasd [rdi]; push rax; pop rsp; call far fword ptr [rdi-0x3000a3b0];
0xffffffff8265a54c: scasd [rdi]; push rcx; xchg esp, eax; call far fword ptr [rdi-0x70006bb3];
0xffffffff822b2ea6: scasd [rdi]; rcr dword ptr [rax-0x3136e61f], cl; mov sil, 0xc8; pop rsp; ret;
0xffffffff83473b5e: scasd [rdi]; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff83473b5f: scasd [rdi]; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8264816c: scasd [rdi]; sbb esp, edi; call far fword ptr [rdi];
0xffffffff8265a624: scasd [rdi]; sub [rdi+rdi*8-0x6bd791], dl; scasd [rdi]; xchg esp, eax; jmp far fword ptr [rdi+0x6fff9425];
0xffffffff82668128: scasd [rdi]; test eax, 0xa53fff5c; pop rsp; jmp far fword ptr [rdi-0x5c];
0xffffffff82551894: scasd [rdi]; xchg [rcx-0x50], esp; cmp al, 0xf6; ret;
0xffffffff8265a47c: scasd [rdi]; xchg edi, eax; xchg esp, eax; call far fword ptr [rdi];
0xffffffff8265a51c: scasd [rdi]; xchg esp, eax; call far fword ptr [rdi+0x64];
0xffffffff8265a510: scasd [rdi]; xchg esp, eax; jmp far fword ptr [rdi+0x66];
0xffffffff8265a62c: scasd [rdi]; xchg esp, eax; jmp far fword ptr [rdi+0x6fff9425];
0xffffffff82650db0: scasd [rdi]; xchg esp, eax; mov esi, 0xbe935fff; dec dword ptr [rdi-0x6d]; mov esi, 0xbe92afff; call far fword ptr [rdi];
0xffffffff82258291: scasd [rdi]; xchg esp, eax; ret 0xedae;
0xffffffff8264d1c0: scasd [rdi]; xchg esp, eax; sar edi, 1; call qword ptr [rdx-0x6ec0002f];
0xffffffff82654bc4: scasd [rdi]; xchg esp, eax; stosb [rdi]; call far fword ptr [rdi-0x6c];
0xffffffff825135a1: scasd [rdi]; xchg esp, eax; xchg edi, eax; sub al, 0xb8; adc bl, ch; iretd;
0xffffffff822b8a0f: scasd [rdi]; xor [rcx-0x33eb62f0], eax; pop rsp; ret 0xe458;
0xffffffff822dd1a2: scasq [rdi]; mov dh, 4; movsxd ebp, eax; leave; cmp eax, 0x852bff76; ret 0xa800;
0xffffffff81041dad: sete al; add rsp, 4; ret;
0xffffffff823e269f: setge dh; sub esi, [rsi+0x706dc8d2]; xchg esp, eax; adc ecx, [rsi+0x3476cb15]; call qword ptr [rsi-0x69e2c4ed];
0xffffffff824a21e8: setl [rdx-0x1c]; or eax, 0xfb268073; fcom st, dword ptr [rax]; pop rsp; out dx, al; iretd;
0xffffffff81039b5d: setne dh; add esi, ecx; mov [rdi+0xa], sil; add rsp, 4; pop rbx; ret;
0xffffffff81039b5c: setne sil; add esi, ecx; mov [rdi+0xa], sil; add rsp, 4; pop rbx; ret;
0xffffffff82330edf: shl al, cl; xor [rbx-0x2a], dh; sub [rdi], eax; leave; jmp qword ptr [rdi];
0xffffffff810ab4ac: shl bh, 0x15; add esp, eax; ret 0x69;
0xffffffff81572722: shl bh, cl; imul ebx; in eax, 0x31; leave; mov rax, rcx; ret;
0xffffffff81196fdc: shl bh, cl; rol dword ptr [rax], 0; str [rdi]; xchg esp, eax; ret 0xca83;
0xffffffff82569f5d: shl bl, 1; and [rbp-0x2e3901c3], ebx; fcom st, qword ptr [r13+0x1748e88c]; outsd dx, [rsi]; mov esp, [rcx]; call far fword ptr [rbx];
0xffffffff824aa3cc: shl bl, 1; pop rsp; ret 0x4e66;
0xffffffff8249a72d: shl byte ptr [r15], 0xde; xchg rsp, rax; ret 0x8bfe;
0xffffffff81553f3d: shl byte ptr [rax+0x41], 0xf; mov dh, 0x8f; xchg esp, eax; add [rax], al; add [rax-0x77], cl; ret 0xd348;
0xffffffff810c671d: shl byte ptr [rax+rcx+0x5b], 0x41; pop rsp; pop r14; pop r15; ret;
0xffffffff811542bf: shl byte ptr [rax+rcx-0x7d], 0x38; add [rdi], cl; xchg esp, eax; ret;
0xffffffff81c590d9: shl byte ptr [rax+rdi*4+0x5b], 0x41; pop rsp; pop r14; pop r15; ret;
0xffffffff8239fe0e: shl byte ptr [rax], 0x33; xchg [rbp+0x69], esp; movsxd edx, [rcx]; xchg [rdi], cl; or al, 0x85; iretd;
0xffffffff811e5078: shl byte ptr [rax], 0x48; shr eax, 3; add rsp, 4; ret;
0xffffffff811e46a8: shl byte ptr [rax], 0x48; shr eax, 3; add rsp, 4; ret;
0xffffffff823c209a: shl byte ptr [rax], cl; mov edx, 0x3673a95c; or ebx, [rbx]; xchg esp, eax; mov gs, [rcx]; ret 0xdf46;
0xffffffff8349c6b1: shl byte ptr [rbp+0x12], 0x48; add esp, 8; pop rbx; ret;
0xffffffff81034d2e: shl byte ptr [rbp+0xb], 0x48; add esp, 0xf0; pop rbx; pop r14; ret;
0xffffffff8149920a: shl byte ptr [rbp+0xf], 0x48; add esp, 8; pop rbx; pop r14; ret;
0xffffffff812dcce3: shl byte ptr [rbp+9], 0x85; fisttp dword ptr [rdi], st; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; ret;
0xffffffff81af3bd6: shl byte ptr [rbp-0x16], 0xeb; add dh, [rcx]; leave; mov rax, rcx; ret;
0xffffffff819f92cb: shl byte ptr [rbp-0x19], 0x31; rol bl, 0x31; leave; cmp [rax+0x38], esi; cmovne rax, rcx; ret;
0xffffffff810b3120: shl byte ptr [rbp-0x19], 0xeb; add dh, [rcx]; leave; mov rax, rcx; ret;
0xffffffff811f7a4b: shl byte ptr [rbp-0x1c], 0xeb; add dh, [rcx]; leave; mov rax, rcx; ret;
0xffffffff8199cd00: shl byte ptr [rbp-0x1d], 0xeb; or [rcx], dh; leave; mov rax, rcx; ret;
0xffffffff81a32d2f: shl byte ptr [rbp-0x4e], 0x31; leave; mov rax, rcx; ret;
0xffffffff824a5b71: shl byte ptr [rbx+0x1b], 1; adc cl, [rdi-0x38]; in al, dx; insb [rdi], dx; pop rsp; ret 0xf325;
0xffffffff82286738: shl byte ptr [rbx+0x547b49e], cl; stc; sub esp, [rcx+0x7daf2cbd]; leave; ret;
0xffffffff815623a5: shl byte ptr [rbx+0x5b815623], 0x41; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff818ecb79: shl byte ptr [rbx+rbx+0x49], 0x8b; xchg esp, eax; and al, 0x90; add [rax], al; add dh, dh; ret 0x7501;
0xffffffff8174b752: shl byte ptr [rbx+rcx+0x48], 0x8b; or [rax-0x7b], cl; leave; cmove rax, rcx; ret;
0xffffffff81c1295b: shl byte ptr [rbx+rdx+0x48], 0x8b; sub [rax-0x7b], cl; leave; mov rax, 0xffffffff8274bd30; cmovne rax, rcx; ret;
0xffffffff817df44e: shl byte ptr [rcx+0x5bffffff], 0x41; pop rsp; pop r14; pop r15; ret;
0xffffffff810fdb42: shl byte ptr [rcx+rcx+0x5b], 0x41; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff825d1783: shl byte ptr [rcx-0x29], 0xc6; pop rsp; lodsd [rsi]; stc; sbb dh, [rdx+0x74]; ret;
0xffffffff812804e5: shl byte ptr [rcx], 1; leave; test rax, rsi; mov eax, 0xffffffea; cmove eax, ecx; ret;
0xffffffff81329c76: shl byte ptr [rcx], 1; rol byte ptr [rbx+0xf01c07f], cl; xchg esp, eax; ret 0xc201;
0xffffffff818660c7: shl byte ptr [rcx], 1; ror byte ptr [rax-0x7d], cl; mov edi, 0x4c0; add [rdi], cl; xchg esp, eax; ret 0x8948;
0xffffffff81745f5f: shl byte ptr [rdi+rax-0x39], 0x40; pop rsp; pop rdi; pop rdi; pop rdi; ret;
0xffffffff810303e5: shl byte ptr [rdi+rcx*8+0x5b], 0x41; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff811f0d7b: shl byte ptr [rdi+rcx+0x49], 0x8b; adc [rax+0x3b], r9b; adc [rdi], cl; xchg esp, eax; ret;
0xffffffff8249a72e: shl byte ptr [rdi], 0xde; xchg rsp, rax; ret 0x8bfe;
0xffffffff8159abb4: shl byte ptr [rdx+0x5b8159ab], 0x41; pop rsp; pop r14; pop r15; ret;
0xffffffff8161be13: shl byte ptr [rdx+rax*4+0x5b], 0x41; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff81007243: shl byte ptr [rdx+rcx+0x5b], 0x41; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff8190606e: shl byte ptr [rdx+rdx*8+0x31], 0xc0; add rsp, 8; pop rbx; ret;
0xffffffff814208d0: shl byte ptr [rdx+rdx+0x5b], 0x41; pop rsp; pop r14; pop r15; ret;
0xffffffff823ee240: shl byte ptr [rdx-0x31], cl; xor [rbx], ch; xchg sp, ax; iretd;
0xffffffff823c1788: shl byte ptr [rdx], 1; cmp al, [rdx]; add ebp, [rip-0x6c493091]; cmp bl, [rdi+0x7edb1203]; pop rsp; ret;
0xffffffff822374fe: shl byte ptr [rdx], 2; leave; fwait; ret 0x1ed1;
0xffffffff8182a099: shl byte ptr [rip+0x80], 0xf; xchg esp, eax; rol dword ptr [rcx-0x80], 0xf8; dec dword ptr [rdi]; xchg esp, eax; ret 0x474;
0xffffffff8182a04e: shl byte ptr [rip+0x80], 0xf; xchg esp, eax; rol dword ptr [rcx-0x80], 0xf8; dec dword ptr [rdi]; xchg esp, eax; ret 0x4f74;
0xffffffff81a6b943: shl byte ptr [rsi+0x41], 1; mov [rsi], eax; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81657bb3: shl byte ptr [rsi+0x5b], 0x41; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff8236ee24: shl byte ptr [rsi-0x761b296b], cl; add al, 0xfe; xchg esp, eax; ret;
0xffffffff834f0e2d: shl byte ptr [rsi-9], 0xd8; add sp, 0x58; pop si; pop di; pop bx; data16 ret;
0xffffffff8169ace2: shl byte ptr [rsp+rax*8+0x5b], 0x41; pop rsp; pop r14; pop r15; ret;
0xffffffff8110a889: shl byte ptr [rsp+rbx*8+0x48], 0x89; or [rax-0x77], cl; add [rbp+0x31], eax; leave; mov eax, r9d; ret;
0xffffffff8346f4bc: shl ch, 1; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff823ac19d: shl ch, cl; pop rsp; ret;
0xffffffff824dad42: shl cl, 1; push rbp; leave; call qword ptr [rax];
0xffffffff81a82011: shl dh, 0x41; add cl, [rdi]; xchg esp, eax; sar dword ptr [rax], 0xc1; setne al; ret;
0xffffffff81337d98: shl dh, 0x43; pop rsp; add dh, [rbp+4]; pop rbx; pop r14; ret;
0xffffffff81059769: shl dh, 0xc1; add [rdi], ecx; xchg esp, eax; ret 0xc220;
0xffffffff81299c18: shl dh, 0xc2; add [rdi], ecx; xchg esp, eax; ret;
0xffffffff8113ccf0: shl dh, cl; add al, 0xf; xchg esp, eax; ret 0x8b48;
0xffffffff812016bc: shl dh, cl; cmp eax, 0; add [rax], al; add al, 0xf; xchg esp, eax; ret 0xc148;
0xffffffff816f76a3: shl dh, cl; xchg ecx, esi; add eax, 0xf400000; xchg esp, eax; ret 0x8948;
0xffffffff82522555: shl dl, cl; rcr dword ptr [rcx], cl; leave; xor al, 0x5b; ret 0x7106;
0xffffffff82522554: shl dl, cl; rcr dword ptr [rcx], cl; leave; xor al, 0x5b; ret 0x7106;
0xffffffff81999f50: shl dword ptr [rax+0x50816bb9], 0xe8; add eax, 0x48000000; add esp, 8; ret;
0xffffffff824e7f83: shl dword ptr [rax-0x7c9c90d2], 1; enter 0x6525, 0xcf; pop rdi; pop rsp; ret 0xbef2;
0xffffffff824a1c6a: shl dword ptr [rbp-0x732882c3], cl; leave; call rax;
0xffffffff82507212: shl dword ptr [rbx+0x19], 0xbb; leave; out dx, al; ret;
0xffffffff81704ae9: shl dword ptr [rbx+7], 0x80; mov esp, [rsi+rax+0x5b400000]; pop r14; pop r15; ret;
0xffffffff834786b9: shl dword ptr [rbx-0x2d], cl; std; add rsp, 8; pop rbx; ret;
0xffffffff822bb671: shl dword ptr [rdi+rbp*8+0x7d], 0x41; leave; mov esi, [rcx]; pop rsp; iretd;
0xffffffff824b1a14: shl dword ptr [rdi-0x35aea140], 1; xchg esp, eax; bswap ebp; shl dword ptr [rax], 1; movsb [rdi], [rsi]; iretd;
0xffffffff82287c2c: shl dword ptr [rdi-0x6199aa69], cl; in al, dx; pop rsp; iretd;
0xffffffff82418359: shl dword ptr [rdi-0x6e28a2be], 0xd; imul eax, [rsi], 0xcc47f114; xchg esp, eax; pop rsi; sahf; ret;
0xffffffff8235cf9c: shl dword ptr [rdi], 0xfb; cmp ebp, 0xfffffff1; add esp, edx; movsd [rdi], [rsi]; sbb ebp, [rcx]; ret 0xb141;
0xffffffff834677b9: shl dword ptr [rdx-0x2c], cl; std; add rsp, 8; pop rbx; ret;
0xffffffff826fa7f0: shl dword ptr [rdx-0x63], cl; pop rsp; iretd;
0xffffffff8142505b: shl dword ptr [rdx], 1; leave; call qword ptr [rax-0x6239e418];
0xffffffff823e6f17: shl dword ptr [rip+0x56999f80], 0xfa; leave; adc [rsi+0x66a926ce], ebp; insb [rdi], dx; xlat [rbx]; iretd;
0xffffffff816e49eb: shl dword ptr [rip+0xf0], 0x3d; add byte ptr [rax], 0; add [rdi], cl; xchg esp, eax; ret 0xc031;
0xffffffff823fae4a: shl dword ptr [rsi+0x36e91038], 0x89; ror ecx, 0xe4; pop rsp; add al, 1; call qword ptr [rbx-0x3e];
0xffffffff82458852: shl dword ptr [rsi-0x23bf8aca], cl; leave; int1; add eax, 0xd721ef53; mov ecx, 0x86c80e2d; iretd;
0xffffffff816e48dc: shl dword ptr [rsi-0x7d], 0xf8; or cl, [rdi]; xchg esp, eax; ror byte ptr [rax], 0xc8; ret;
0xffffffff82316c49: shl dword ptr [rsi], 1; mov dh, [rcx-0x527586ed]; leave; ret;
0xffffffff811c80e9: shl dword ptr [rsp+rsi*8+0x48], 0x85; leave; sete al; ret;
0xffffffff8126394f: shl eax, 0xd; or rax, 1; mov [rip+0x23b61b3], rax; add rsp, 4; ret;
0xffffffff8112a560: shl eax, cl; add rax, 0xffffffffffffffff; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff812c3cfb: shl eax, cl; add rsp, 8; ret;
0xffffffff812558d6: shl eax, cl; mov [rip+0x1d3cfd1], rax; xor eax, eax; add rsp, 8; ret;
0xffffffff81041da7: shl eax, cl; not eax; test eax, edi; sete al; add rsp, 4; ret;
0xffffffff8232e101: shl ebp, 0x4b; xor eax, edi; xchg esp, eax; ret 0x79dd;
0xffffffff822691d9: shl edi, 1; stc; leave; ret;
0xffffffff822691da: shl edi, 1; stc; leave; ret;
0xffffffff816c2c82: shl edi, cl; mov rax, rdi; add rsp, 0x20; ret;
0xffffffff816c2e34: shl edx, 0x20; or rdx, rcx; or rax, rdx; add rsp, 4; ret;
0xffffffff81a7de6c: shl esi, 0x45; or al, [rdi+rcx]; xchg esp, eax; ret 0xca30;
0xffffffff81287f0b: shl esi, 0xc3; add [rdi], ecx; xchg esp, eax; ret 0xca20;
0xffffffff823b4b73: shl esp, 0xa2; xchg esp, eax; lodsb [rsi]; sub [rbp-0x3de8d60d], ebp; iretd;
0xffffffff8126394e: shl rax, 0xd; or rax, 1; mov [rip+0x23b61b3], rax; add rsp, 4; ret;
0xffffffff8112a55f: shl rax, cl; add rax, 0xffffffffffffffff; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff812c3cfa: shl rax, cl; add rsp, 8; ret;
0xffffffff812558d5: shl rax, cl; mov [rip+0x1d3cfd1], rax; xor eax, eax; add rsp, 8; ret;
0xffffffff816c2c81: shl rdi, cl; mov rax, rdi; add rsp, 0x20; ret;
0xffffffff816c2e33: shl rdx, 0x20; or rdx, rcx; or rax, rdx; add rsp, 4; ret;
0xffffffff826fa7ef: shl word ptr [rdx-0x63], cl; pop rsp; iretd;
0xffffffff834634ad: shr al, 0x2d; pop rsp; out dx, al; std; xor eax, eax; ret;
0xffffffff8172021f: shr al, 0x4b; pop rsp; std; dec dword ptr [rax-0x7b]; shl byte ptr [rsp+rax*2+0x48], 0x89; ret;
0xffffffff8346348b: shr al, 0x4f; pop rsp; out dx, al; std; xor eax, eax; ret;
0xffffffff83463469: shr al, 0x71; pop rsp; out dx, al; std; xor eax, eax; ret;
0xffffffff83463428: shr al, 0xb2; pop rsp; out dx, al; std; xor eax, eax; ret;
0xffffffff83463406: shr al, 0xd4; pop rsp; out dx, al; std; xor eax, eax; ret;
0xffffffff81713fba: shr al, 0xf0; scasb [rdi]; add [rcx-0x7a3fce3f], cl; leave; setne al; ret;
0xffffffff8197fbdf: shr al, cl; cmp edi, [rip-0x3414002a]; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff81117c71: shr al, cl; leave; int 0xff; jmp qword ptr [rbp+0x48];
0xffffffff813b498e: shr al, cl; pop rsp; and al, ah; push rsi; ret;
0xffffffff81c20a8e: shr al, cl; pop rsp; pop rdi; pop rcx; push rsi; ret;
0xffffffff813b978e: shr al, cl; pop rsp; rcr bh, cl; push rsi; ret;
0xffffffff813633cf: shr al, cl; sub ebx, ebp; leave; add [rbx+0x47303f8], al; ret;
0xffffffff813591b6: shr al, cl; xchg esp, eax; mov edx, 0x8548ffff; shl byte ptr [rdi+rbx+0x48], 0x89; ret;
0xffffffff8154e056: shr al, cl; xchg esp, eax; mov esi, eax; push rsi; ret;
0xffffffff823bcfcc: shr bh, 1; sbb esp, eax; popfq; iretd;
0xffffffff8220d5ce: shr bl, 5; mov eax, 0xffffffde; add rsp, 4; pop rbx; ret;
0xffffffff82519b1b: shr byte ptr [r14+rax*8+0x5b0cd18c], 0xd7; cmc; xchg esp, eax; fisubr st, dword ptr [rax]; mov rsp, 0x67b63207dbc4a3e9; ret;
0xffffffff82280257: shr byte ptr [rax+0x27cbf409], cl; xchg esp, eax; iretd;
0xffffffff819d2999: shr byte ptr [rax+0x30], 0x97; popfq; sub eax, 0xff7e60bc; add rsp, 8; ret;
0xffffffff819d332c: shr byte ptr [rax+rax], 1; add rsp, 0x10; ret;
0xffffffff819d2255: shr byte ptr [rax-0x40], 0x96; popfq; sub eax, 0xff7e6800; add rsp, 8; ret;
0xffffffff8255af43: shr byte ptr [rax-0x6f], 0xb; mov dl, 0x60; add [rax-0x9a70c36], ebp; pop rsp; ret;
0xffffffff81c6390a: shr byte ptr [rax], 0x48; add esp, 8; pop rbx; pop r14; ret;
0xffffffff82384ccd: shr byte ptr [rbx+0x435c243f], 0x32; push rax; sbb cl, [rax+0x6ab14d8a]; and r9b, dil; xchg rsp, rax; ret 0x50d5;
0xffffffff8241b419: shr byte ptr [rbx], 1; cmp [rdx-0x35a4c15f], eax; pop rsp; sbb ebp, [rbp+0x5312b4ac]; iretd;
0xffffffff81190c23: shr byte ptr [rdx], 0xe8; mov ch, 0x34; add [rax], al; add rsp, 8; ret;
0xffffffff817144d5: shr byte ptr [rdx], 0xe8; pop rsp; in eax, dx; add al, [rax]; add rsp, 8; ret;
0xffffffff8347bfbc: shr byte ptr [rdx], 1; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff822688c4: shr byte ptr [rsi+0x55], 0x34; xchg ecx, eax; and dh, [rbp+0x33]; pushfq; pop rsp; iretd;
0xffffffff825d6ff3: shr byte ptr [rsi+rax*2+0x414f1ec8], cl; xchg r8d, eax; rol dword ptr [rcx-0x13], 1; pop rsp; in eax, dx; ret 0x299d;
0xffffffff82519b1c: shr byte ptr [rsi+rax*8+0x5b0cd18c], 0xd7; cmc; xchg esp, eax; fisubr st, dword ptr [rax]; mov rsp, 0x67b63207dbc4a3e9; ret;
0xffffffff814c2750: shr cl, cl; stosb [rdi]; sbb esp, edx; jmp qword ptr [rsi+0x2e];
0xffffffff810abdac: shr dh, 0x15; add esp, eax; ret 0x69;
0xffffffff81031516: shr dh, 0x31; shr dh, 0x81; leave; ret 0;
0xffffffff81031519: shr dh, 0x81; leave; ret 0;
0xffffffff823bcfcb: shr dil, 1; sbb esp, eax; popfq; iretd;
0xffffffff810ac1ac: shr dl, 0x15; add esp, eax; ret 0x49;
0xffffffff824b095f: shr dl, 1; xchg esp, eax; ret 0x7f45;
0xffffffff8254307a: shr dword ptr [rbp-0x7f], cl; leave; div dword ptr [rbx-0x32]; ret 0x1b10;
0xffffffff815b9dee: shr dword ptr [rcx+0x1000], 0xf; xchg esp, eax; ret;
0xffffffff81297702: shr dword ptr [rcx+0x181], 0xf; xchg esp, eax; ret 0xbd;
0xffffffff8124abdc: shr dword ptr [rcx+0x181], 0xf; xchg esp, eax; ret 0xd184;
0xffffffff82284604: shr dword ptr [rcx+0x22], cl; xchg esp, eax; adc eax, 0xeb364aef; iret;
0xffffffff816a6c2d: shr dword ptr [rcx+0x60800], 0xf; xchg esp, eax; ret;
0xffffffff8346bacb: shr dword ptr [rdi], 0xd4; std; add rsp, 8; pop rbx; ret;
0xffffffff82232965: shr dword ptr [rsi+rax*8+0x42f3ec93], cl; xchg [rbx+rax*4], esp; or al, 0x1a; iretd;
0xffffffff81c732bf: shr eax, 0x10; add rsp, 4; ret;
0xffffffff819cd396: shr eax, 0x10; not eax; mov [rdi], ax; add rsp, 0x18; ret;
0xffffffff81bafc6a: shr eax, 0x16; add rsp, 0x10; pop rbx; ret;
0xffffffff81a6a798: shr eax, 0x20; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff81a4e053: shr eax, 0x20; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81b2ff42: shr eax, 0x32; add eax, ecx; bswap eax; add rsp, 0x18; ret;
0xffffffff81ba7f79: shr eax, 1; add rsp, 0x88; pop rbx; pop r14; ret;
0xffffffff81ae4dbc: shr eax, 1; add rsp, 0xa8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8170de89: shr eax, 1; and eax, 1; add rsp, 0x10; ret;
0xffffffff811e46ab: shr eax, 3; add rsp, 4; ret;
0xffffffff816e7f15: shr eax, 4; add rsp, 0x10; ret;
0xffffffff8199ee07: shr eax, 6; add eax, ebx; add rsp, 0x38; pop rbx; ret;
0xffffffff8183b7fd: shr eax, 8; and r8d, 1; mov eax, r8d; add rsp, 4; ret;
0xffffffff82464223: shr eax, cl; leave; mov ecx, 0xa548a3f3; pop rsi; or al, 0x36; iretd;
0xffffffff815bbbce: shr eax, cl; pop rsp; mov bh, 0xaf; jmp qword ptr [rsi+0x66];
0xffffffff822fce18: shr ebp, 0xa3; mov eax, [0x2525a734f79152c8]; push rsp; mov esp, [rax-0x20d41d83]; movsd [rdi], [rsi]; ret;
0xffffffff83441d01: shr ebx, 1; add dh, [rcx]; leave; mov [rax*8-0x7ca47000], rcx; call qword ptr [0xffffffff82e339e0];
0xffffffff819cd54a: shr edx, 0x10; not edx; mov [rdi], dx; add rsp, 0xc; ret;
0xffffffff8183b7fa: shr r8d, 8; and r8d, 1; mov eax, r8d; add rsp, 4; ret;
0xffffffff81a6a797: shr rax, 0x20; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff81a4e052: shr rax, 0x20; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81b2ff40: shr rax, 0x32; add eax, ecx; bswap eax; add rsp, 0x18; ret;
0xffffffff811e46aa: shr rax, 3; add rsp, 4; ret;
0xffffffff8199ee06: shr rax, 6; add eax, ebx; add rsp, 0x38; pop rbx; ret;
0xffffffff826680b4: shufps xmm3, [rdi+rdi*8+0xf], 0xc5; pop rsp; dec dword ptr [rdi+0x1fff5cc4]; ret 0xff5c;
0xffffffff816556ee: sldt [rax]; add al, ch; leave; ret 0xffff;
0xffffffff82875999: sldt [rax]; pop rsp; ret 1;
0xffffffff82875a11: sldt [rax]; pop rsp; ret;
0xffffffff823b8dab: stc; adc [rdx+0x6e], dh; mov rax, 0xbbff7c3cb7ef5bb1; mov esp, [rdx+0x1f695e30]; xor edx, [rdx-0x5c65ad67]; call rax;
0xffffffff817c884f: stc; adc cl, [rdi]; xchg esp, eax; ret 0xc148;
0xffffffff8172f85c: stc; adc ebx, [rbx]; add [rdi], cl; xchg esp, eax; ret 0xca83;
0xffffffff81811efd: stc; adc esi, [rdi+0xa]; mov eax, ecx; mov rax, [rax*8-0x7da03300]; add rsp, 4; ret;
0xffffffff813fe8f1: stc; add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x448b;
0xffffffff81035a8c: stc; add [rdi], ecx; xchg esp, eax; ret 0xc208;
0xffffffff8192f45e: stc; add [rdi], ecx; xchg esp, eax; rol dword ptr [rbx-0x6bf0fb08], 0xc0; or al, cl; ret;
0xffffffff817e7531: stc; add al, 0xf; xchg esp, eax; ret 0x8941;
0xffffffff813282c7: stc; add cl, [rdi]; xchg esp, eax; ret 0x7c89;
0xffffffff81ba4d40: stc; add cl, [rdi]; xchg esp, eax; ret 0xf631;
0xffffffff81c74b1c: stc; add cl, [rdi]; xchg esp, eax; ret 0xf748;
0xffffffff8105d944: stc; add cl, [rdi]; xchg esp, eax; rol dword ptr [rbx-0x6bf0fe08], 0xc0; or al, cl; ret;
0xffffffff81af80d2: stc; add ecx, [rdi]; xchg esp, eax; ret 0x73c;
0xffffffff816841f0: stc; add ecx, [rdi]; xchg esp, eax; ret 0xb70f;
0xffffffff81894e60: stc; and [rcx+rax*2], cl; add [rdi], ecx; xchg esp, eax; ret 0xf631;
0xffffffff824fc41c: stc; cmp [rdx-0x47], ebp; xchg esp, eax; mov [0xa9f8ac24466f05f5], eax; adc [rbp-0x66], edx; jmp qword ptr [rcx];
0xffffffff813f2161: stc; cmp eax, [rcx+0xf]; xchg esp, eax; ret;
0xffffffff8234bbce: stc; cmp esi, ebp; pop rsp; iretd;
0xffffffff8243b8fb: stc; fldcw [rsi+0x7d]; leave; fidiv st, dword ptr [rbx+0x4b]; mov al, 0xf5; ret;
0xffffffff826caf3e: stc; imul ebp, edi, 0x30353238; xchg esp, eax; out 0x74, eax; iretd;
0xffffffff81644a91: stc; leave; jmp qword ptr [rsi+0x66];
0xffffffff81417944: stc; leave; jmp qword ptr [rsi+0xf];
0xffffffff822691dc: stc; leave; ret;
0xffffffff822cec95: stc; mov ecx, 0xba554b71; pop rsp; mov dh, dl; ret 0x81fd;
0xffffffff8268d42a: stc; movsxd ebp, [rax-0x6b30f90c]; in eax, 0x61; pop rsp; iretd;
0xffffffff826e96f6: stc; or [rbp+rdx*8+0x66], esi; xchg esp, eax; cmc; sti; iretd;
0xffffffff8181c8dd: stc; or [rdi], cl; xchg esp, eax; ret 0x2040;
0xffffffff811d6042: stc; or [rdi], cl; xchg esp, eax; ret 0x728d;
0xffffffff8185dbe8: stc; or [rdi], cl; xchg esp, eax; ret 0xeab8;
0xffffffff81a788e3: stc; or [rdi], cl; xchg esp, eax; ret 0xf280;
0xffffffff81c68855: stc; or cl, [rdi]; xchg esp, eax; ret 0x2041;
0xffffffff8191c1cc: stc; or cl, [rdi]; xchg esp, eax; ret 0x3c80;
0xffffffff8191c464: stc; or cl, [rdi]; xchg esp, eax; ret 0xc031;
0xffffffff826db42a: stc; outsb dx, [rsi]; out dx, eax; xchg esp, eax; out 0x74, eax; iretd;
0xffffffff8248e0a7: stc; pop rsp; cmp bl, [rcx+0x77911ada]; ret;
0xffffffff826b0ff4: stc; pop rsp; out 0x66, al; jmp far fword ptr [rdi+0x2f1174f6];
0xffffffff8346f130: stc; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8243a857: stc; sbb esp, eax; sbb al, 0x9c; ret 0x34e8;
0xffffffff823eb365: stc; sub [rsi-0x20c59437], ah; mov esi, 0xbde33bd4; pop rsp; cmp eax, 0xd4fb9c62; ret 0xfed6;
0xffffffff81c5dc43: stc; sub al, 0xf; xchg esp, eax; ret 0x8d48;
0xffffffff8228673e: stc; sub esp, [rcx+0x7daf2cbd]; leave; ret;
0xffffffff8243aeed: stc; xchg ebx, eax; pop rsp; jmp qword ptr [rsi];
0xffffffff8265a22d: stc; xchg esp, eax; dec dword ptr [rdi-7]; xchg esp, eax; jmp far fword ptr [rdi-0x60006b08];
0xffffffff82538d69: stc; xchg esp, eax; in eax, dx; iretd;
0xffffffff8265a230: stc; xchg esp, eax; jmp far fword ptr [rdi-0x60006b08];
0xffffffff822a0b41: stc; xchg esp, eax; ret;
0xffffffff82384cdf: stc; xchg rsp, rax; ret 0x50d5;
0xffffffff81b8adbf: std; adc al, 0xf; xchg esp, eax; ret;
0xffffffff835aa72f: std; add [rdi+rcx*8-0x306b1303], dl; std; hlt; xchg esp, eax; iretd;
0xffffffff8243120f: std; add al, [rsi+0x36684780]; mov esp, [rbx]; ret;
0xffffffff81bc69b5: std; add cl, [rdi]; xchg esp, eax; ret 0x5d8d;
0xffffffff81aa3ea6: std; add cl, [rdi]; xchg esp, eax; ret 0xca08;
0xffffffff8122bc68: std; add cl, [rdi]; xchg esp, eax; ret;
0xffffffff835a8ebb: std; add ebx, 0xfffffffd; and eax, 0xedfdc384; xchg esp, eax; ret;
0xffffffff8108dc98: std; add esp, eax; ret;
0xffffffff834278cb: std; add rsp, 0x10; mov byte ptr [rip+0xc4769], 1; ret;
0xffffffff834277e6: std; add rsp, 0x10; ret;
0xffffffff83450382: std; add rsp, 8; mov [rip-0xc68dfe], rax; ret;
0xffffffff83463222: std; add rsp, 8; mov [rip-0xc7b89e], rax; ret;
0xffffffff83449f27: std; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff834276d5: std; add rsp, 8; pop rbx; ret;
0xffffffff83427650: std; add rsp, 8; ret;
0xffffffff8249e1e7: std; and al, 0xaa; pop rsp; movsb [rdi], [rsi]; cmp dh, [rsi+rbp*4]; iretd;
0xffffffff835a8ebf: std; and eax, 0xedfdc384; xchg esp, eax; ret;
0xffffffff835aa73b: std; cli; xchg esp, eax; iretd;
0xffffffff813f283d: std; cmp ecx, [rdi]; xchg esp, eax; ret;
0xffffffff819b1dcf: std; dec dword ptr [rcx-0x7a3fce3f]; leave; cmovns rax, rbx; pop rbx; ret;
0xffffffff8178e776: std; dec dword ptr [rdi]; xchg esp, eax; ret 0xb60f;
0xffffffff815d389f: std; dec dword ptr [rdi]; xchg esp, eax; ret 0xdaf7;
0xffffffff81716b4e: std; dec dword ptr [rdi]; xchg esp, eax; ret;
0xffffffff82526b5d: std; enter 0xee59, 0xe1; xor bh, [rsi+0x127f7cb6]; sbb esp, esp; ret;
0xffffffff835aa737: std; hlt; xchg esp, eax; iretd;
0xffffffff835aa733: std; in al, dx; xchg esp, eax; iretd;
0xffffffff835a8ec3: std; in eax, dx; xchg esp, eax; ret;
0xffffffff81a22536: std; inc dword ptr [rcx-0x75]; xchg esp, ecx; add eax, [rax]; add [rax+0x39], cl; ret;
0xffffffff8235cfa0: std; int1; add esp, edx; movsd [rdi], [rsi]; sbb ebp, [rcx]; ret 0xb141;
0xffffffff82288056: std; lahf; mov [rcx], dl; sbb esp, edx; or [rdx+0x1ded883c], dh; iretd;
0xffffffff835a8dff: std; leave; adc eax, edx; std; rcl dword ptr [rbx], cl; ret 0xf8fd;
0xffffffff835ac2cf: std; leave; add al, 0xdf; std; iretd;
0xffffffff81417591: std; leave; call qword ptr [rax-0x6f6f6f70];
0xffffffff8224ee43: std; leave; iretd;
0xffffffff826a9507: std; leave; jmp qword ptr [rbx+3];
0xffffffff8142252f: std; leave; jmp qword ptr [rsi+0x66];
0xffffffff835ade5b: std; leave; mov al, [0xa8b7fdf1a0cafdf1]; int1; std; iretd;
0xffffffff835aa79f: std; leave; mov eax, 0xb909fdcf; iretd;
0xffffffff835aa7af: std; leave; mov ecx, 0xbaa6fdcf; iretd;
0xffffffff835a96cb: std; leave; rol bh, 0xfd; push rcx; ret 0xfdc7;
0xffffffff8268c536: std; leave; std; movsxd edi, edi; mov esp, 0xe9f6cb8; call rbx;
0xffffffff826f04d4: std; leave; std; movsxd esi, [rbx+rcx+0x54]; xchg [rsi-0x4b], esi; iretd;
0xffffffff835aa637: std; lodsd [rsi]; pop rsp; iretd;
0xffffffff8228d248: std; mov [0x5de21ace2f47ed89], eax; sbb ah, [rsi+rbx*4+0x23]; leave; shl byte ptr [rdx-0x1d], 0xe0; iretd;
0xffffffff835aa633: std; mov [0xbdfdcf5cadfdcf5c], eax; pop rsp; iretd;
0xffffffff82562433: std; mov cl, 0x99; sub esp, edi; iretd;
0xffffffff835aa63b: std; mov ebp, 0xeafdcf5c; pop rsp; iretd;
0xffffffff82670b8b: std; mov edi, 0x1bfdba5c; pop rsp; mov edx, 0xba5c06fd; std; ret 0xba5b;
0xffffffff823a7f14: std; mov edi, 0xc3c5a7c2; leave; ret 0x2c99;
0xffffffff82343b22: std; mov esp, ebx; iretd;
0xffffffff8236d3e7: std; mov esp, ecx; ror byte ptr [rbp+rdx*8+0xa3c7214], 1; adc ebp, 0x63; ret;
0xffffffff8227f536: std; mul byte ptr [rbx-0x8f6f876]; nop; xchg esp, eax; ret 0xfc21;
0xffffffff82270932: std; or ebx, esi; scasb [rdi]; xchg esp, eax; ret 0x9bcf;
0xffffffff8251455a: std; pop rdi; rol byte ptr [rbx-0x50], 0xbc; pop rsp; iretd;
0xffffffff835ab397: std; pop rsp; and al, 0xd7; std; ret 0xd724;
0xffffffff822cfb6c: std; pop rsp; fst dword ptr [rbx-3], st; sbb [rdx+r9*8-0x74], rax; add [rsp+0x2a0151da], bh; ret 0xfe6f;
0xffffffff8234fba4: std; pop rsp; mov bh, 0x8c; out dx, eax; ret 0x72a1;
0xffffffff835a8857: std; pop rsp; mov esp, 0xbc466efd; std; iretd;
0xffffffff82670d63: std; pop rsp; or edi, [rdx-0x45f4e303]; std; ret 0xba0a;
0xffffffff822340d2: std; pop rsp; pop rbx; push rbp; ret 0x548b;
0xffffffff822fb25f: std; pop rsp; ret 0xae5b;
0xffffffff824fdae7: std; pop rsp; scasb [rdi]; iretd;
0xffffffff824975d5: std; popfq; xchg esp, eax; or dil, [r15+0x2c]; xor al, 0x9b; iretd;
0xffffffff825da847: std; push rax; xchg esp, eax; ret;
0xffffffff826885a4: std; sahf; sub [rdi-0xb], dh; mov esi, 0x7561540a; leave; jmp qword ptr [rdi+rcx*8-2];
0xffffffff8346ed82: std; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff826cd73e: std; sbb esp, edi; jmp rdi;
0xffffffff82688195: std; xchg [rcx+0x76], ch; or gs:[rcx+0x75], dh; leave; jmp qword ptr [rdx-4];
0xffffffff822e52a4: std; xchg esp, eax; mov al, [0x9e5bb01895bb1816]; iretd;
0xffffffff817ee90f: std; xchg esp, eax; mov dh, 0xff; cdqe; ret;
0xffffffff824661cf: std; xchg esp, eax; mov esi, 0x3263578e; xchg edi, eax; pop rsi; ret;
0xffffffff835abcc7: std; xchg esp, eax; ret;
0xffffffff835aa80b: std; xchg esp, ecx; iretd;
0xffffffff8268817a: std; xlat [rbx]; or [rcx+0x75], dh; leave; jmp far fword ptr [rdx+0x7409bfff];
0xffffffff8342ecc5: std; xlat [rbx]; std; add rsp, 8; pop rbx; ret;
0xffffffff835a8eb7: std; xor bl, [rdx+rax*8-3]; add ebx, 0xfffffffd; and eax, 0xedfdc384; xchg esp, eax; ret;
0xffffffff834a4034: std; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8345a3d9: std; xor ebx, ebx; mov eax, ebx; add rsp, 8; pop rbx; ret;
0xffffffff81c2b61c: sti; adc [rdi], ecx; xchg esp, eax; ret 0xc283;
0xffffffff8156cce5: sti; add [rdi], ecx; xchg esp, eax; ret 0xca83;
0xffffffff817d549a: sti; add al, 0xf; xchg esp, eax; ror byte ptr [rax-0x3f], 0xe9; sbb al, [rax-0x6bf0fd06]; ret 0xc220;
0xffffffff823465ab: sti; add esp, eax; adc al, 0x15; ret;
0xffffffff818edf5c: sti; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff824f5846: sti; cld; pop rsp; pop rdx; ret;
0xffffffff8235cf9e: sti; cmp ebp, 0xfffffff1; add esp, edx; movsd [rdi], [rsi]; sbb ebp, [rcx]; ret 0xb141;
0xffffffff81bbc8cc: sti; dec dword ptr [rcx-0x7a3fce3f]; leave; setne al; ret;
0xffffffff82642a2e: sti; dec edi; pop rsp; sti; call far fword ptr [rdi+0x5c];
0xffffffff824a21f0: sti; fcom st, dword ptr [rax]; pop rsp; out dx, al; iretd;
0xffffffff824a21ef: sti; fcom st, dword ptr [rax]; pop rsp; out dx, al; iretd;
0xffffffff823c2095: sti; fldenv [rax+0x5cba30d2]; test eax, 0x1b0b3673; xchg esp, eax; mov gs, [rcx]; ret 0xdf46;
0xffffffff81a24c81: sti; leave; cmp eax, 0x468b4800; ret;
0xffffffff8264ed99: sti; leave; dec edi; clc; leave; jmp far fword ptr [rdi-0x50003608];
0xffffffff823b97de: sti; leave; mov ch, 0x87; int1; ret 0xa6be;
0xffffffff82462101: sti; leave; ret;
0xffffffff822a9458: sti; leave; sub al, 0x35; add esp, 0xffffffd1; ret;
0xffffffff823e2f59: sti; mov [0x75d063183f064dd8], eax; xchg esp, eax; ret;
0xffffffff812cc943: sti; mov [rdi], cs; xchg esp, eax; ret;
0xffffffff813c8a81: sti; mov esp, [rbx-0x3f38b700]; ror byte ptr [rbx-0x60167ec4], 2; bnd jmp qword ptr [rsi+0x66];
0xffffffff822db35c: sti; movsb [rdi], [rsi]; add [rbp+0x5609e91a], esp; pop rsp; iretd;
0xffffffff8252510e: sti; or al, 0xc; xchg ebp, eax; pop rsp; ret;
0xffffffff81c6892b: sti; or cl, [rdi]; xchg esp, eax; ret;
0xffffffff82413db8: sti; out dx, al; leave; fisttp word ptr [rbp-0x1e2221c7], st; ret;
0xffffffff824e2672: sti; pop rbp; int3; pop rsp; push rbx; ret 0x3c3d;
0xffffffff8245e426: sti; pop rsp; fcmovu st, st(2); ret;
0xffffffff824e3fcc: sti; pop rsp; movsd [rdi], [rsi]; test ebp, esp; ret;
0xffffffff8248cfd1: sti; pop rsp; sub al, 0x30; mov [0x1c5081dacd34c6de], al; fwait; iretd;
0xffffffff822b5bff: sti; push rdi; test bh, ch; data16 leave; ret;
0xffffffff8250a08e: sti; rcl byte ptr [rbx+0x3e], 0x67; push rax; rcl dword ptr [rsi+0x4310f399], cl; leave; ret;
0xffffffff82421f2f: sti; rcl esi, 1; leave; iretd;
0xffffffff8346ef72: sti; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff826f04bc: sti; sub eax, 0x96576f9; cmpsd [rsi], [rdi]; xchg esp, eax; out 0x63, al; call far fword ptr [rbp+0x540d74f6];
0xffffffff8255af41: sti; sub eax, eax; push 0x60b20b91; add [rax-0x9a70c36], ebp; pop rsp; ret;
0xffffffff82009ca1: sti; xchg esp, eax; jmp far fword ptr [rdx+rsi*8+4];
0xffffffff83475591: sti; xchg esp, eax; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82545123: sti; xchg esp, eax; xor [rbp-0x57], esp; mov edi, 0x9fb8f87c; ret 0x9a26;
0xffffffff824375ef: stosb [rdi]; add al, 0x6c; mov eax, [0xbcdf7b21c1ffc71a]; xchg edx, eax; pop rsp; ret;
0xffffffff82328a7a: stosb [rdi]; and dword ptr [rax-0x3b], 0x10; mov edi, 0xbb8faa99; pop rbp; xchg edi, esp; iretd;
0xffffffff824b4d10: stosb [rdi]; cmp [rdx+0x152f41f2], r14; xchg esp, eax; ret;
0xffffffff822ae20e: stosb [rdi]; cmp eax, 0xe5806c5e; mov esi, 0x73deedbd; leave; ret 0xaffc;
0xffffffff82654bca: stosb [rdi]; dec dword ptr [rdi]; xchg esp, eax; stosb [rdi]; call far fword ptr [rdi-0x6d];
0xffffffff823d21f7: stosb [rdi]; fimul st, dword ptr [rcx-0x21]; xchg esp, eax; iretd;
0xffffffff8245f576: stosb [rdi]; fsubr st, st(4); hlt; adc eax, 0x7ad7b233; leave; ret 0x94ff;
0xffffffff82336dd9: stosb [rdi]; hlt; mov esp, [rcx-0x71bb9aff]; sbb [rax+0x1cc91183], bh; shl dword ptr [rbx-0x2ad49c63], 0x3d; iretd;
0xffffffff823650c8: stosb [rdi]; int 0x3c; pop rsp; ret 0xa1ff;
0xffffffff822f3246: stosb [rdi]; int3; sbb [rsi-0x7d238cac], ah; movsxd eax, [rsi-0x6faa478b]; xchg esp, eax; ret 0x8abc;
0xffffffff8264ef29: stosb [rdi]; leave; call far fword ptr [rdi-0x58];
0xffffffff8227c1a6: stosb [rdi]; leave; mov byte ptr [rdi], 0xd4; ret;
0xffffffff82480088: stosb [rdi]; leave; mov ch, 8; and [rsp+rax-0x56], dh; ret 0x4a5;
0xffffffff829281cc: stosb [rdi]; leave; or [rax], al; add al, 0; add [rax], al; ret;
0xffffffff825565e4: stosb [rdi]; mov [0x5ecc7ba0751f097c], al; xchg esi, eax; xchg esp, eax; iretd;
0xffffffff82557ec5: stosb [rdi]; or ebx, [rcx]; xchg esp, eax; iretd;
0xffffffff822cfa34: stosb [rdi]; out 0xff, al; leave; or [rsi], ecx; ret 0xa168;
0xffffffff8249e1e9: stosb [rdi]; pop rsp; movsb [rdi], [rsi]; cmp dh, [rsi+rbp*4]; iretd;
0xffffffff8225d164: stosb [rdi]; push rbp; xchg esp, eax; iretd;
0xffffffff8241f348: stosb [rdi]; push rbx; add al, 0xea; xchg esp, eax; xor [rdi-0x360d4531], esp; iretd;
0xffffffff82316c46: stosb [rdi]; sar dword ptr [rbx-0x2f], 1; mov dh, [rcx-0x527586ed]; leave; ret;
0xffffffff83474046: stosb [rdi]; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff814c2752: stosb [rdi]; sbb esp, edx; jmp qword ptr [rsi+0x2e];
0xffffffff8243a856: stosb [rdi]; stc; sbb esp, eax; sbb al, 0x9c; ret 0x34e8;
0xffffffff8236fa94: stosb [rdi]; sub eax, 0x2740f9eb; lahf; fimul st, dword ptr [rdi+0x493c0d2e]; pop rsp; iretd;
0xffffffff811f4982: stosb [rdi]; sub esp, ebp; jmp qword ptr [rsi+0x2e];
0xffffffff82ad4350: stosb [rdi]; xchg esp, eax; add [rax], eax; ret 0x1b56;
0xffffffff82531c96: stosb [rdi]; xchg esp, eax; ret 0x8cec;
0xffffffff823bd13f: stosb [rdi]; xchg esp, eax; ret;
0xffffffff823f7754: stosb [rdi]; xchg esp, eax; shl byte ptr [rcx-0x3d], 1; mov esi, 0x2ada426e; ret;
0xffffffff822dea45: stosd [rdi]; adc dl, [rsi]; leave; ret;
0xffffffff822fe8b2: stosd [rdi]; add [rbp-0x21d0995e], dil; mov ah, 0x16; adc esp, edi; ret;
0xffffffff811b63a7: stosd [rdi]; add [rcx-0x7a3fce3f], cl; leave; sete al; ret;
0xffffffff8135db1a: stosd [rdi]; add [rcx], esi; ror byte ptr [rax+0x3b], cl; sbb [r15], cl; xchg esp, eax; ret 0x5389;
0xffffffff822baf46: stosd [rdi]; and eax, 0xce259b97; fcomp st, st(3); leave; iretd;
0xffffffff82567382: stosd [rdi]; fild st, dword ptr [rax+0xf4c7b5]; leave; ret;
0xffffffff8182b0d8: stosd [rdi]; fucomp st, st(3); mov [rbp-0x7b], eax; in al, 0xf; xchg esp, eax; ret;
0xffffffff8182c4a6: stosd [rdi]; fucomp st, st(3); mov eax, [rbp-0x7b]; in al, 0xf; xchg esp, eax; ret;
0xffffffff822b59cc: stosd [rdi]; imul ebx, esp, 0x6c; idiv dword ptr [rbx+0x7aac6826]; leave; cdq; iretd;
0xffffffff824cb44f: stosd [rdi]; imul esi, [rip-0x1004ba25], 0xffffffa9; xchg esp, eax; ret 0x3c8c;
0xffffffff822d73a6: stosd [rdi]; in al, 0x1b; xchg ebp, eax; pop rsp; ret 0xfc8e;
0xffffffff828fb77c: stosd [rdi]; insb [rdi], dx; add [rax], al; pop rsp; sysret;
0xffffffff822c50d0: stosd [rdi]; leave; and ebp, eax; int 0x80;
0xffffffff823b80fc: stosd [rdi]; leave; iretd;
0xffffffff82554375: stosd [rdi]; leave; pop rax; add eax, ecx; iretq;
0xffffffff822dd302: stosd [rdi]; movsb [rdi], [rsi]; pop rsp; xor eax, 0x77fa3eaf; ret 0x145e;
0xffffffff823f569f: stosd [rdi]; out 0xa8, eax; mov ch, 0x1a; leave; ret;
0xffffffff8266811d: stosd [rdi]; pop rsp; jmp far fword ptr [rdi-0x55];
0xffffffff8142b9d1: stosd [rdi]; pop rsp; popfq; add [rax-0x2729], bh; ret;
0xffffffff822bdc71: stosd [rdi]; pop rsp; push rdx; mov dh, 0x4b; ret;
0xffffffff83473f28: stosd [rdi]; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82393ce9: stosd [rdi]; xchg esp, eax; and eax, 0x80360cc0; iretd;
0xffffffff8265a3ed: stosd [rdi]; xchg esp, eax; call far fword ptr [rdi-0x40006b56];
0xffffffff8265a3e9: stosd [rdi]; xchg esp, eax; dec dword ptr [rdi]; stosd [rdi]; xchg esp, eax; call far fword ptr [rdi-0x40006b56];
0xffffffff8176c7c1: stosd [rdi]; xchg esp, eax; jmp qword ptr [rsi+0x66];
0xffffffff82371c89: stosd [rdi]; xchg esp, eax; push rdx; mov [rdi+0x2018ab16], gs; lodsb [rsi]; ret;
0xffffffff825234fa: stosd [rdi]; xchg esp, eax; ret;
0xffffffff82301fdb: stosd [rdi]; xchg esp, eax; scasb [rdi]; mov ebx, 0xef1d9f5f; ret;
0xffffffff82516b85: stosd [rdi]; xor ebx, ecx; dec dword ptr [rdx]; leave; iretd;
0xffffffff83473f27: stosd es:[rdi]; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff81b8d2bb: str [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff81196fe1: str [rdi]; xchg esp, eax; ret 0xca83;
0xffffffff81b14fad: sub [r11+0x41], bl; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff8239d50e: sub [r8+0x60], al; add ebp, [rbp+0x30]; pop rsp; ret 0x8f8;
0xffffffff815e6db6: sub [r9], r14b; leave; sub rax, [rsi+0x158]; cmovae rcx, rax; mov [rdi+0x30], rcx; ret;
0xffffffff82278236: sub [rax+0x17], esp; leave; sub dword ptr [rsi], 0xe563c0b9; or cl, ch; iretd;
0xffffffff823b6640: sub [rax+0x5f], edi; xchg ebp, eax; leave; adc esp, [rsi]; dec dh; iretd;
0xffffffff8239d50f: sub [rax+0x60], al; add ebp, [rbp+0x30]; pop rsp; ret 0x8f8;
0xffffffff818282d9: sub [rax+rax+0x48], al; cwde; add rsp, 8; pop rbx; ret;
0xffffffff81828289: sub [rax+rax+0x48], eax; cwde; add rsp, 8; pop rbx; ret;
0xffffffff824679b1: sub [rax-0x186b2d4b], al; xchg esp, eax; pop rsp; mov ebp, 0x9843c639; cdqe; ret 0x6397;
0xffffffff8346aa63: sub [rax-0x2c], eax; std; add rsp, 8; pop rbx; ret;
0xffffffff817ba844: sub [rax-0x76b7ffb4], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff81c3617b: sub [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff81c3617a: sub [rax-0x77], r9b; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff81c12960: sub [rax-0x7b], cl; leave; mov rax, 0xffffffff8274bd30; cmovne rax, rcx; ret;
0xffffffff813de852: sub [rbp+0x10], dh; add rsp, 0x30; pop rbx; pop r14; pop rbp; ret;
0xffffffff81913a99: sub [rbp+0x11], dh; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff81686830: sub [rbp+0x12], dh; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff81129c12: sub [rbp+0x13], dh; add rsp, 0x30; pop rbx; ret;
0xffffffff811220a1: sub [rbp+0x14], dh; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff8196881d: sub [rbp+0x14], dh; cdqe; add rsp, 0x30; pop rbx; pop r14; ret;
0xffffffff816bd92a: sub [rbp+0x15], dh; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff8143c068: sub [rbp+0x15], dh; add rsp, 0x30; pop rbx; pop r14; pop rbp; ret;
0xffffffff81439558: sub [rbp+0x16], dh; add rsp, 0x30; pop rbx; pop r14; pop rbp; ret;
0xffffffff8143a6c8: sub [rbp+0x18], dh; add rsp, 0x30; pop rbx; pop r14; pop rbp; ret;
0xffffffff819add23: sub [rbp+0x1e], dh; mov eax, ebp; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff81309931: sub [rbp+0x20], dh; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff81416b1a: sub [rbp+0x23], dh; add rsp, 0x30; pop rbx; pop r14; ret;
0xffffffff81416c71: sub [rbp+0x27], dh; add rsp, 0x30; pop rbx; pop r14; ret;
0xffffffff811ae21c: sub [rbp+0x2f], dh; mov rax, r14; add rsp, 0x30; pop rbx; pop r14; ret;
0xffffffff8104f370: sub [rbp+0x34], dh; mov eax, edx; add rsp, 0x30; ret;
0xffffffff81b0ce2a: sub [rbp+0x37], dh; add rsp, 0x30; ret;
0xffffffff81b0496b: sub [rbp+0x3c], dh; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff81029dbf: sub [rbp+0x3e], dh; add rsp, 0x30; pop rbx; pop r14; ret;
0xffffffff813bf883: sub [rbp+0x415bffdd], edi; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff81b06523: sub [rbp+0x43], dh; add rsp, 0x30; ret;
0xffffffff818b1b12: sub [rbp+0x44], dh; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff8104f216: sub [rbp+0x48], dh; mov eax, 1; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff81afb685: sub [rbp+0x4e], dh; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff81a288db: sub [rbp+0x56], dh; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff8142b62b: sub [rbp+0x5d], dh; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff81a62eed: sub [rbp+0x5e], dh; add rsp, 0x30; ret;
0xffffffff8155bc4d: sub [rbp+0x64], dh; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff817635b0: sub [rbp+0x79], dh; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff810b5a57: sub [rbp+0xa], dh; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff81adf852: sub [rbp+0xa], dh; add rsp, 0x30; pop rbx; ret;
0xffffffff81763304: sub [rbp+0xb], dh; add rsp, 0x30; ret;
0xffffffff810d2d7a: sub [rbp+0xb], dh; mov rax, rbx; add rsp, 0x30; pop rbx; pop r14; ret;
0xffffffff8143a89f: sub [rbp+0xe], dh; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff81263033: sub [rbp+5], dh; add rsp, 0x30; ret;
0xffffffff8115abec: sub [rbp+5], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff812627d5: sub [rbp+6], dh; add rsp, 0x30; pop rbx; ret;
0xffffffff810478e1: sub [rbp+7], dh; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff81c5bb71: sub [rbp+7], dh; cdqe; add rsp, 0x30; ret;
0xffffffff81931487: sub [rbp+7], dh; mov al, cl; mov rsp, rbp; pop rbp; ret;
0xffffffff812c27d8: sub [rbp+8], dh; add rsp, 0x30; pop rbx; pop r14; ret;
0xffffffff818e1cb2: sub [rbp+8], dh; cdqe; add rsp, 0x30; pop rbx; ret;
0xffffffff812fa7be: sub [rbp+8], dh; mov eax, ebx; add rsp, 0x30; pop rbx; ret;
0xffffffff819fbe58: sub [rbp+8], dh; mov eax, ecx; add rsp, 0x30; pop rbx; ret;
0xffffffff812f706f: sub [rbp+8], dh; mov rax, r8; mov rsp, rbp; pop rbp; ret;
0xffffffff812f6a90: sub [rbp+8], dh; mov rax, rdi; mov rsp, rbp; pop rbp; ret;
0xffffffff819de990: sub [rbp+8], dh; movsxd rax, ecx; mov rsp, rbp; pop rbp; ret;
0xffffffff817c43ad: sub [rbp+8], dh; xor eax, eax; add rsp, 0x30; pop rbx; ret;
0xffffffff81047aa7: sub [rbp+9], dh; add rsp, 0x30; pop rbx; pop r14; pop rbp; ret;
0xffffffff8171506a: sub [rbp+9], dh; mov eax, ebp; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff8114c809: sub [rbp+9], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff82349940: sub [rbp-0x3f], edx; pop rsp; ret 0x8013;
0xffffffff82349941: sub [rbp-0x3f], edx; pop rsp; ret 0x8013;
0xffffffff8236fa8f: sub [rbp-0x5542125b], ch; sub eax, 0x2740f9eb; lahf; fimul st, dword ptr [rdi+0x493c0d2e]; pop rsp; iretd;
0xffffffff81034c24: sub [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff81123b64: sub [rbx+0x41], bl; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff810e123e: sub [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff812acb23: sub [rbx+0x41], ebx; pop rsp; pop r14; pop r15; ret;
0xffffffff81bc4273: sub [rbx+0xf00147b], eax; xchg esp, eax; ret;
0xffffffff81c75deb: sub [rbx+rcx*4+0x7c], cl; and al, 0x30; add rsp, 0x38; ret;
0xffffffff81661f4d: sub [rbx-0x17], bl; pop rsp; fsin; jmp qword ptr [rsi+0x66];
0xffffffff82450a7b: sub [rbx-0x215488b5], dl; xchg [rbx], esp; adc eax, 0xe5281a3d; dec dword ptr [rbx-0x116993bb]; ret 0x3d55;
0xffffffff82510d60: sub [rbx-0x3d57ddd4], eax; pop rsp; fadd st, st(1); sub [rdi+5], eax; jmp qword ptr [rsi-0x7b];
0xffffffff822f7603: sub [rbx], ebp; or ebp, [rbp-0x80]; leave; iretd;
0xffffffff822f7602: sub [rbx], ebp; or ebp, [rbp-0x80]; leave; iretd;
0xffffffff8222c55a: sub [rcx+0x2ab69eb8], ah; leave; fnstcw [rdx-0x25]; cwde; sbb al, 0x21; ret 0x8f09;
0xffffffff81c62581: sub [rcx+rcx*4-0x10], eax; add rsp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff8252f245: sub [rcx+rdi*2-0x5a], ebp; xchg esp, eax; lodsb [rsi]; ret 0x1b5d;
0xffffffff812a1a7a: sub [rcx], dh; leave; mov rax, rcx; ret;
0xffffffff815e6db7: sub [rcx], dh; leave; sub rax, [rsi+0x158]; cmovae rcx, rax; mov [rdi+0x30], rcx; ret;
0xffffffff8246b10a: sub [rcx], eax; leave; ret 0x26ca;
0xffffffff8235607d: sub [rcx], ebx; leave; iretd;
0xffffffff822514fc: sub [rdi+0x38], ch; pop rsp; call qword ptr [rcx-0x67f22c67];
0xffffffff811e506e: sub [rdi+0x48000000], dh; sub eax, esi; add rax, 0x30; shr rax, 3; add rsp, 4; ret;
0xffffffff811e506d: sub [rdi+0x48000000], sil; sub eax, esi; add rax, 0x30; shr rax, 3; add rsp, 4; ret;
0xffffffff824fdadf: sub [rdi+0x5d], ch; lodsb [rsi]; mov ebp, 0xfd0f9690; pop rsp; scasb [rdi]; iretd;
0xffffffff8265a61d: sub [rdi+rdi*8-0x6bd721], edx; scasd [rdi]; sub [rdi+rdi*8-0x6bd791], dl; scasd [rdi]; xchg esp, eax; jmp far fword ptr [rdi+0x6fff9425];
0xffffffff8265a625: sub [rdi+rdi*8-0x6bd791], dl; scasd [rdi]; xchg esp, eax; jmp far fword ptr [rdi+0x6fff9425];
0xffffffff826885a6: sub [rdi-0xb], dh; mov esi, 0x7561540a; leave; jmp qword ptr [rdi+rcx*8-2];
0xffffffff81638cbd: sub [rdi], cl; xchg esp, eax; ret;
0xffffffff82330ee4: sub [rdi], eax; leave; jmp qword ptr [rdi];
0xffffffff822cd203: sub [rdi], esp; pop rsp; mov ecx, 0x8b0a3dfe; iretd;
0xffffffff822cd202: sub [rdi], rsp; pop rsp; mov ecx, 0x8b0a3dfe; iretd;
0xffffffff8223e262: sub [rip-0x4450339a], esi; xchg esp, eax; mov ebx, 0xe661c075; sub r9b, [rax+rbx*4+0x4a]; ret 0x8d38;
0xffffffff823fb276: sub [rsi+0x5907e599], esp; pop rsp; push 0xffffffffe194b6f2; xchg esi, eax; imul esi, esp, 0x5c; ret 0x3e0f;
0xffffffff823eb366: sub [rsi-0x20c59437], ah; mov esi, 0xbde33bd4; pop rsp; cmp eax, 0xd4fb9c62; ret 0xfed6;
0xffffffff8226b95b: sub [rsi-0x775673c1], bl; leave; ret 0x49ff;
0xffffffff824a0342: sub [rsi], ebx; adc al, 0xc7; xchg esp, eax; or byte ptr [rdx], 0x8e; in al, dx; ret 0x8ae3;
0xffffffff810b0576: sub [rsp+0x10], ch; mov rsi, [rsp+8]; mov cr0, rsi; mov rsp, [rsp]; pop rbp; ret;
0xffffffff826cfc3c: sub [rsp+rcx*4+0xe], ch; mov esp, [rbx+0x73]; ret;
0xffffffff8346a664: sub [rsp+rdx*8-3], al; add rsp, 8; pop rbx; ret;
0xffffffff8256737e: sub ah, [rbp+0x16]; mov al, [0xf4c7b580db44ab]; leave; ret;
0xffffffff82252d94: sub ah, [rdi]; leave; mov ebx, 0x2ba48262; insb [rdi], dx; ret 0x4ec0;
0xffffffff82325790: sub ah, [rip-0x5b624b91]; fmul st, dword ptr [rax]; push rdx; add esp, esp; scasd [rdi]; ret 0xae7;
0xffffffff82564448: sub ah, dh; xlat [rbx]; sub dh, [rdi-0x65]; sbb esp, edi; add bh, 0x36; iretd;
0xffffffff8346c274: sub ah, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff822f3241: sub al, 0x17; mov [rcx-0x3355b8c8], bl; sbb [rsi-0x7d238cac], ah; movsxd eax, [rsi-0x6faa478b]; xchg esp, eax; ret 0x8abc;
0xffffffff82510d62: sub al, 0x22; test al, 0xc2; pop rsp; fadd st, st(1); sub [rdi+5], eax; jmp qword ptr [rsi-0x7b];
0xffffffff82257ea1: sub al, 0x23; pop rsp; pop rax; iretd;
0xffffffff822a945a: sub al, 0x35; add esp, 0xffffffd1; ret;
0xffffffff814af1fc: sub al, 0x48; add esp, 0x10; pop rbx; pop r14; ret;
0xffffffff817e1449: sub al, 0x48; add esp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff813699a8: sub al, 0x48; add esp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff81126d61: sub al, 0x48; add esp, 0x18; pop rbx; ret;
0xffffffff814ae8a7: sub al, 0x48; add esp, 0x2b8; pop rbx; pop rbp; ret;
0xffffffff823f742a: sub al, 0x4c; xchg [rcx-0x47], ebp; pop rdx; xchg esp, eax; or [rbx-0x17], esi; ret 0x8bf3;
0xffffffff83477b60: sub al, 0x6f; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82370f61: sub al, 0x80; sbb eax, 0x3704891e; scasd [rdi]; leave; ret 0xb99f;
0xffffffff818e6d20: sub al, 0x85; leave; cmove eax, ecx; ret;
0xffffffff81c73053: sub al, 0x89; adc al, 0x24; add eax, [rsp]; adc eax, 0; add rsp, 0xc; ret;
0xffffffff8265a609: sub al, 0x94; dec dword ptr [rdi+0x2c]; xchg esp, eax; dec dword ptr [rdi]; sub al, 0x94; call far fword ptr [rdi+0x2b];
0xffffffff8239fb49: sub al, 0xa7; xchg r8d, eax; insb [rdi], dx; insb [rdi], dx; pop rsp; iretd;
0xffffffff826cfca4: sub al, 0xa; mov esp, [rbx+0x73]; ret;
0xffffffff822c481d: sub al, 0xb5; mov esi, 0xc66ad8e5; pop rsp; ret;
0xffffffff825d81e9: sub al, 0xc2; and eax, 0xf8878656; pushfq; xchg ecx, esp; and al, 0x94; ret 0x1d3c;
0xffffffff823693d2: sub al, 0xc9; cmc; xchg esi, esp; iretd;
0xffffffff826cfd3e: sub al, 0xc; mov esp, [rbx+0x73]; ret;
0xffffffff8238cd2b: sub al, 0xca; xchg esp, eax; ret;
0xffffffff8348bdbe: sub al, 0xd2; std; add rsp, 8; pop rbx; ret;
0xffffffff8347bda2: sub al, 0xd3; std; add rsp, 8; pop rbx; ret;
0xffffffff8346bdce: sub al, 0xd4; std; add rsp, 8; pop rbx; ret;
0xffffffff8344bdaf: sub al, 0xd6; std; add rsp, 8; pop rbx; ret;
0xffffffff82648a81: sub al, 0xe5; dec dword ptr [rdi+0xfffe52b]; sub esp, ebp; call far fword ptr [rdi+0xfffe52a];
0xffffffff817b7462: sub al, 0xe8; xchg esp, eax; add [rax-0x7d], cl; ret;
0xffffffff81ace16f: sub al, 0xec; dec dword ptr [rcx-0x7a3fce3f]; leave; cmovns rax, rbx; pop rbx; ret;
0xffffffff8227fb0b: sub al, 0xec; leave; iretd;
0xffffffff8244bc56: sub al, 0xf5; outsd dx, [rsi]; xchg ebx, esp; jmp far fword ptr [rbp-0x6613a3f];
0xffffffff8148b1fd: sub al, 0xf; leave; mov [rax+0x10], ecx; xor eax, eax; pop rbx; ret;
0xffffffff813dfb66: sub al, 0xf; leave; not ecx; and [rax+0x28], ecx; ret;
0xffffffff81c5dc44: sub al, 0xf; xchg esp, eax; ret 0x8d48;
0xffffffff8343d28f: sub al, 0xf; xchg esp, eax; rol byte ptr [rax+0xf00073c], 0x84; ret 1;
0xffffffff82403cfa: sub al, 2; xchg esp, eax; ret 0xc691;
0xffffffff815b87d1: sub al, [rcx-0x75]; xchg esp, eax; and al, 0x3c; add eax, [rax]; add [rax+1], cl; ret 0xd348;
0xffffffff819962c2: sub al, [rdi-1]; push qword ptr [rcx]; leave; mov rax, rcx; pop rbx; ret;
0xffffffff81b250d6: sub al, [rsi]; add [rdi], cl; xchg esp, eax; ret 0xd338;
0xffffffff8234909f: sub al, bh; and rax, 0x3470b76; adc eax, 0xd0fb7c76; leave; ret;
0xffffffff8248f410: sub al, ch; leave; ret;
0xffffffff822547bc: sub ax, 0x2b15; int 0x2d; xchg esp, eax; cdq; ret;
0xffffffff824bf48c: sub ax, 0xab4; sub dword ptr [rdi], 0xc9ee3a31; pop rsp; add eax, 0xf8261b62; cld; ret;
0xffffffff824dad40: sub ax, dx; int1; push rbp; leave; call qword ptr [rax];
0xffffffff82299ed5: sub bh, [rax]; pop rsp; fwait; ret;
0xffffffff824a79a0: sub bh, [rcx]; fwait; pop rsp; iretd;
0xffffffff8346eb62: sub bh, bh; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82494d86: sub bl, [rax-0x7615f7eb]; fist word ptr [rdi+rbx*8+0x7389e187], st; leave; iretd;
0xffffffff8130b1df: sub bl, [rbx+0x41]; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff811037c1: sub bl, [rbx+0x41]; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff824205c3: sub bl, [rsi+0x7ed55f9e]; fistp dword ptr [rcx+0x518f4fc2], st; or ecx, ebp; pop rsp; iretd;
0xffffffff82311bf2: sub bl, dh; xchg esp, eax; ret 0xd61f;
0xffffffff8347c20a: sub bl, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff8231f7ae: sub byte ptr [rcx-0x28510aa9], 0x9e; pop rsp; sub ebx, [rdi]; movsxd esp, [rdx-0x7de9a372]; cmp eax, 0x401299bb; ret 0x12d5;
0xffffffff8231f7ad: sub byte ptr [rcx-0x28510aa9], 0x9e; pop rsp; sub ebx, [rdi]; movsxd esp, [rdx-0x7de9a372]; cmp eax, 0x401299bb; ret 0x12d5;
0xffffffff82540e22: sub ch, [rdx]; xchg esp, eax; add dh, ah; or ebx, [rsi]; ret;
0xffffffff822a514f: sub ch, [rip-0x610a5ed5]; add [rdx-0xc299244], ebx; cmp ecx, [rsi]; xchg edx, eax; pop rsp; ret;
0xffffffff82339ce1: sub ch, [rsi]; mov ebp, 0x9003dcd1; leave; adc ch, [rdx]; iretd;
0xffffffff822bf164: sub ch, ch; fsubr st, dword ptr [rsi-0x25275972]; mov eax, 0x1e83e7c6; pop rsp; iretd;
0xffffffff82328ecc: sub ch, ch; sbb dl, [rbp-0xa]; pop rsp; ret 0xdeb6;
0xffffffff822bf162: sub cl, 0x2a; in eax, dx; fsubr st, dword ptr [rsi-0x25275972]; mov eax, 0x1e83e7c6; pop rsp; iretd;
0xffffffff81892e9d: sub cl, [rcx+0x415b081c]; pop rsp; pop r14; pop r15; ret;
0xffffffff81628d59: sub cl, [rdi]; xchg esp, eax; ret;
0xffffffff822e7f95: sub cl, [rdx+0x60ae4e7c]; rcr dword ptr [rsi+rcx*4-0xa653168], 0xda; leave; ret 0xad63;
0xffffffff81c11d6d: sub cl, bpl; pop rsp; imul eax, [rax], 0; ret;
0xffffffff81c11d6e: sub cl, ch; pop rsp; imul eax, [rax], 0; ret;
0xffffffff8256444b: sub dh, [rdi-0x65]; sbb esp, edi; add bh, 0x36; iretd;
0xffffffff82420219: sub dh, [rdx-0x1e]; mov byte ptr [rsi-0xa1604aa], 0xe2; pop rsp; iretd;
0xffffffff83439eed: sub dh, bh; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8245fe87: sub dh, cl; pop rsp; ret;
0xffffffff81159045: sub dl, 0; add rsp, 8; ret;
0xffffffff818cb4f8: sub dl, [rcx+0xf0101da]; xchg esp, eax; ret 0xc220;
0xffffffff8346c008: sub dl, ah; std; add rsp, 8; pop rbx; ret;
0xffffffff8347bfbd: sub dl, bl; std; add rsp, 8; pop rbx; ret;
0xffffffff8344c089: sub dl, dh; std; add rsp, 8; pop rbx; ret;
0xffffffff8347c209: sub dword ptr [rax], 0xffffffd3; std; add rsp, 8; pop rbx; ret;
0xffffffff82460d00: sub dword ptr [rbp+0x45], 0x2ff18345; xchg esp, eax; ret;
0xffffffff823ba80e: sub dword ptr [rcx+0x36], 0x24; xchg esp, eax; fsubr st, qword ptr [rip+0x51c2350a]; mov ebp, 0x8af32a53; scasd [rdi]; ret 0x57c;
0xffffffff816116d2: sub dword ptr [rdi+0x5bd889ff], 0x41; pop rsp; pop r14; pop r15; ret;
0xffffffff824bf490: sub dword ptr [rdi], 0xc9ee3a31; pop rsp; add eax, 0xf8261b62; cld; ret;
0xffffffff834277de: sub dword ptr [rdx], 0xffffffe8; fld st, dword ptr [rbp-0x35]; std; add rsp, 0x10; ret;
0xffffffff815f9f28: sub dword ptr [rsi+0x68949ff], 0x415be889; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff8254f47e: sub dword ptr [rsi-0x15d51238], 0x3fc87c1e; movsb [rdi], [rsi]; sbb esp, [rip-0x57dc9624]; bswap ecx; xchg esp, eax; jmp far fword ptr [rdi-0x3361e5d4];
0xffffffff823a7e28: sub eax, 0x12a2adbc; add esp, esp; fucomp st, st(7); mov dh, 0x5f; jmp qword ptr [rbx+0xe];
0xffffffff823a7e27: sub eax, 0x12a2adbc; add esp, esp; fucomp st, st(7); mov dh, 0x5f; jmp qword ptr [rbx+0xe];
0xffffffff823eb5cb: sub eax, 0x14e566c7; leave; leave; sbb ebx, [rdx]; ret 0xdbff;
0xffffffff8245afd6: sub eax, 0x18f060b; mov [0x1847e1be9049ed28], al; pop rsp; mov esp, 0xd6f6f6f5; iretd;
0xffffffff82471dcb: sub eax, 0x1c5c999a; in eax, 0x8d; leave; iretd;
0xffffffff8236fa95: sub eax, 0x2740f9eb; lahf; fimul st, dword ptr [rdi+0x493c0d2e]; pop rsp; iretd;
0xffffffff826682dd: sub eax, 0x2d5fff5c; pop rsp; jmp far fword ptr [rdi];
0xffffffff826682d9: sub eax, 0x2d7fff5c; pop rsp; call far fword ptr [rdi+0x2d];
0xffffffff822547bd: sub eax, 0x2dcd2b15; xchg esp, eax; cdq; ret;
0xffffffff82475555: sub eax, 0x3465fcdc; sub esp, esp; jmp far fword ptr [rcx-0x2d7c53bc];
0xffffffff8243120a: sub eax, 0x359725c7; std; add al, [rsi+0x36684780]; mov esp, [rbx]; ret;
0xffffffff823650c6: sub eax, 0x3ccdaad4; pop rsp; ret 0xa1ff;
0xffffffff824d1ec7: sub eax, 0x421614c5; mov dh, 0x37; pop rsp; ficom st, dword ptr [rax+0x730c97fe]; jmp qword ptr [rbx+0x58c4d3f6];
0xffffffff817a25bf: sub eax, 0x48000001; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff83493fb8: sub eax, 0x48f0894c; add esp, 0x10; pop rbx; pop r14; ret;
0xffffffff8342e85f: sub eax, 0x48fdd802; add esp, 8; pop rbx; ret;
0xffffffff82255753: sub eax, 0x5b6c02e8; cwde; leave; fld st, dword ptr [rbp+0x72]; iretd;
0xffffffff822a6e76: sub eax, 0x63860295; xchg esp, eax; xor bl, [rsi+0x5b]; fist dword ptr [rax-0x3febe00f], st; ret;
0xffffffff82286733: sub eax, 0x66bd4a0; shl byte ptr [rbx+0x547b49e], cl; stc; sub esp, [rcx+0x7daf2cbd]; leave; ret;
0xffffffff8252bf80: sub eax, 0x8afa0d6c; leave; pfcmpge mm4, mm2; fiadd st, dword ptr [r9+0x2b5adb5f]; out dx, al; ret;
0xffffffff820098b8: sub eax, 0x92ffc704; xchg esp, eax; cmp edi, 0x50; test byte ptr [rdi+rdi*8], 0x27; add al, 0xc7; call far fword ptr [rax+0x44ff8394];
0xffffffff823c178e: sub eax, 0x93b6cf6f; cmp bl, [rdi+0x7edb1203]; pop rsp; ret;
0xffffffff826f04bd: sub eax, 0x96576f9; cmpsd [rsi], [rdi]; xchg esp, eax; out 0x63, al; call far fword ptr [rbp+0x540d74f6];
0xffffffff8256a054: sub eax, 0x9c7c441f; pop rsp; push rsp; out 0xb8, al; ret 0x8d5b;
0xffffffff822a5150: sub eax, 0x9ef5a12b; add [rdx-0xc299244], ebx; cmp ecx, [rsi]; xchg edx, eax; pop rsp; ret;
0xffffffff8224f0c1: sub eax, 0xb1e0f244; movsb [rdi], [rsi]; sbb esp, ebp; fxch st, st(5); iretd;
0xffffffff825593dd: sub eax, 0xb761c6ed; or [rdx+0x7e], ch; leave; iretd;
0xffffffff810c09ad: sub eax, 0xcad; add rsp, 0x10; ret;
0xffffffff82338fbb: sub eax, 0xd0370ff8; xchg esp, eax; mov [rcx-0x46], gs; xchg bh, bl; iretd;
0xffffffff810c090d: sub eax, 0xd4d; add rsp, 0x10; ret;
0xffffffff8241810d: sub eax, 0xdd88b9ef; pop rsp; stosd [rdi]; ret;
0xffffffff810c087d: sub eax, 0xddd; add rsp, 0x10; ret;
0xffffffff82003358: sub eax, 0xe4ffffd5; pop rsp; add eax, 0xacad1ff; jmp far fword ptr [rax];
0xffffffff82543603: sub eax, 0xeb1387dd; add ebx, [rdi+rsi*4]; adc [rsi-0x9a7b773], bl; out 0x31, al; mov esp, edi; iretd;
0xffffffff824be818: sub eax, 0xee9be68c; leave; call qword ptr [rax+0x28];
0xffffffff819d299e: sub eax, 0xff7e60bc; add rsp, 8; ret;
0xffffffff819d225a: sub eax, 0xff7e6800; add rsp, 8; ret;
0xffffffff8240c67e: sub eax, [rax+0x2e]; leave; pop r9; ret 0x3c8e;
0xffffffff8255af42: sub eax, eax; push 0x60b20b91; add [rax-0x9a70c36], ebp; pop rsp; ret;
0xffffffff8147b486: sub eax, ebx; add rsp, 0x18; pop rbx; ret;
0xffffffff816bc495: sub eax, ecx; add rsp, 4; ret;
0xffffffff81bafc62: sub eax, ecx; imul eax, 0x61c88647; shr eax, 0x16; add rsp, 0x10; pop rbx; ret;
0xffffffff819410a7: sub eax, ecx; mov [rdi+0xa0], eax; xor eax, eax; add rsp, 4; ret;
0xffffffff81a499b0: sub eax, edx; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff824dad41: sub eax, edx; int1; push rbp; leave; call qword ptr [rax];
0xffffffff8249b2f5: sub eax, edx; or eax, 0x48c29a5d; and eax, 0x73984614; pop rsp; iretd;
0xffffffff811e46a4: sub eax, esi; add rax, 0x20; shr rax, 3; add rsp, 4; ret;
0xffffffff811e5074: sub eax, esi; add rax, 0x30; shr rax, 3; add rsp, 4; ret;
0xffffffff823f38a1: sub ebp, [rbx]; xchg esp, eax; pop rdi; sbb cl, [0xffffffffdeef9641]; inc dword ptr [rbp-0x5e]; jmp far fword ptr [rax+0x4d];
0xffffffff82558967: sub ebp, [rdi+rbx*8+0xd761c96]; in eax, 0x27; pop r11; pop rsp; ret;
0xffffffff817bdd33: sub ebx, [rbx+0x41]; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff813633d1: sub ebx, ebp; leave; add [rbx+0x47303f8], al; ret;
0xffffffff8347c117: sub ebx, edx; std; add rsp, 8; pop rbx; ret;
0xffffffff8229885c: sub ecx, [rbx]; xchg esp, eax; out dx, al; iretd;
0xffffffff818361c7: sub ecx, [rcx+rcx*4-0x10]; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff8220d4ba: sub ecx, [rcx-0x77]; rol byte ptr [rcx+0xf], 1; xchg esp, eax; ret 0x149;
0xffffffff8229d7cd: sub ecx, ecx; pop rsp; cdq; iretd;
0xffffffff824f7bc1: sub ecx, esp; push rsp; pop rsp; ret 0xca40;
0xffffffff822354db: sub edi, [rax-0x5e]; xchg esp, eax; mov cl, [rbp-1]; mov ebx, 0xf171d008; scasb [rdi]; ret 0x563a;
0xffffffff823748c7: sub edi, [rcx-0x43ec70ce]; scasd [rdi]; leave; cmc; sub [rbp-0x1f], eax; iretd;
0xffffffff824c373a: sub edi, [rdx]; xor eax, 0xeec05843; mov esp, [rcx-0x52]; ret;
0xffffffff8265a619: sub edx, [rdi+rdi*8-0x6bd681]; fild st, qword ptr [rax]; xchg esp, eax; jmp far fword ptr [rdi+0x6fff9428];
0xffffffff822e0f90: sub edx, [rdi]; cmp al, ch; leave; sub eax, [rcx]; mov al, 0x17; ret 0x7e90;
0xffffffff8171351f: sub edx, [rsi]; add rsp, 0x10; pop rbx; ret;
0xffffffff8347be95: sub edx, ebx; std; add rsp, 8; pop rbx; ret;
0xffffffff8348bf0c: sub edx, edx; std; add rsp, 8; pop rbx; ret;
0xffffffff8344be9f: sub edx, esi; std; add rsp, 8; pop rbx; ret;
0xffffffff8346bf7c: sub edx, esp; std; add rsp, 8; pop rbx; ret;
0xffffffff825372ff: sub esi, [rdi-0x3722ff24]; adc esp, ebp; xchg [rbx], esp; mov eax, [0x62d1c52f6f46ac58]; iretd;
0xffffffff823e26a2: sub esi, [rsi+0x706dc8d2]; xchg esp, eax; adc ecx, [rsi+0x3476cb15]; call qword ptr [rsi-0x69e2c4ed];
0xffffffff823a944d: sub esi, eax; fistp word ptr [r14], st; cmp ebp, [rdi+0x4f]; mov ebp, 0x83708415; pop rsp; iretd;
0xffffffff82245eb1: sub esi, ebp; xchg [rdi], esp; iretd;
0xffffffff8344c128: sub esi, edx; std; add rsp, 8; ret;
0xffffffff8344c127: sub esi, edx; std; add rsp, 8; ret;
0xffffffff81726f00: sub esp, 0; add [rax], al; add dh, [rbp+3]; pop rbx; pop rbp; ret;
0xffffffff81156092: sub esp, 0; add [rax], al; xor eax, eax; pop rbx; pop r14; ret;
0xffffffff825159c8: sub esp, 0x7528680f; pop rdi; ret 0xd111;
0xffffffff8196446b: sub esp, 0x89480031; ret;
0xffffffff812a08c4: sub esp, 0xffffffff; jmp qword ptr [rbp+0x48];
0xffffffff8347c661: sub esp, [rbx+rdx*8]; std; add rsp, 8; pop rbx; ret;
0xffffffff824bb867: sub esp, [rbx-0x2562a68a]; pop rsp; ret;
0xffffffff8228673f: sub esp, [rcx+0x7daf2cbd]; leave; ret;
0xffffffff8269ffcf: sub esp, [rsi+0x63]; xchg esp, eax; out 0xff, eax; iretd;
0xffffffff8264fc45: sub esp, eax; dec dword ptr [rdi]; and al, 0xc4; call far fword ptr [rdi+0x2fffc422];
0xffffffff823be43d: sub esp, eax; push 0xffffffffa1da213e; xchg esp, eax; iretd;
0xffffffff82522902: sub esp, eax; ret;
0xffffffff82236d5d: sub esp, eax; xor [rax+0x1a5570f2], al; iretd;
0xffffffff82813494: sub esp, ebp; add al, [rax]; add [rax], al; add [rax], al; add al, 0x2e; jmp qword ptr [r15+0x2e4];
0xffffffff82648a89: sub esp, ebp; call far fword ptr [rdi+0xfffe52a];
0xffffffff82648a85: sub esp, ebp; dec dword ptr [rdi]; sub esp, ebp; call far fword ptr [rdi+0xfffe52a];
0xffffffff811f4983: sub esp, ebp; jmp qword ptr [rsi+0x2e];
0xffffffff8240319f: sub esp, ebp; mov bl, 9; pop rax; adc [rbp+0x30], cl; ret;
0xffffffff8280bbf5: sub esp, ebx; call far fword ptr [rdx+0x1a4];
0xffffffff824dcc76: sub esp, ebx; or bh, [rcx-0x399e2a9a]; cmp esp, ebx; ret;
0xffffffff8229a35d: sub esp, ebx; out dx, eax; ret;
0xffffffff824a35c1: sub esp, ebx; ret 0x2f39;
0xffffffff822f48b0: sub esp, ebx; ret 0x6f50;
0xffffffff823d0526: sub esp, ebx; test al, 0x18; test [rdi+0x66], esp; ret;
0xffffffff82391e33: sub esp, ecx; call far fword ptr [rbp-0x5753e353];
0xffffffff823eacdc: sub esp, edi; add eax, 0x42896b20; ret 0x3039;
0xffffffff82562436: sub esp, edi; iretd;
0xffffffff81bd4267: sub esp, edi; jmp qword ptr [rbp+0x48];
0xffffffff822dea7f: sub esp, edx; add [rcx-0x47], ecx; cmp eax, 0x1f00b700; and [rbx+0x2a], ecx; in al, dx; iretd;
0xffffffff8240a4e5: sub esp, edx; and eax, 0xfa8f1ddc; enter 0x744b, 0xa9; ret 0x4af8;
0xffffffff819d9f03: sub esp, edx; insd [rdi], dx; jmp qword ptr [rsi+0xf];
0xffffffff8245f216: sub esp, edx; pop rsi; or [rbx], bh; or al, 0x4f; pop rsi; ret;
0xffffffff822ea3b8: sub esp, edx; ret 0x370d;
0xffffffff82490f50: sub esp, edx; ret;
0xffffffff8346c0c6: sub esp, edx; std; add rsp, 8; pop rbx; ret;
0xffffffff829c0774: sub esp, esi; add [rax], al; ret 0xefe;
0xffffffff82644411: sub esp, esi; call far fword ptr [rdi];
0xffffffff8254b239: sub esp, esi; cld; call far fword ptr [rcx-0x79];
0xffffffff82270fe9: sub esp, esi; iretd;
0xffffffff82281c9a: sub esp, esi; iretd;
0xffffffff82644415: sub esp, esi; jmp far fword ptr [rdi];
0xffffffff8238ec00: sub esp, esi; push rsi; add [rcx], bh; cmpsd [rsi], [rdi]; iretd;
0xffffffff825333d1: sub esp, esi; ret 0x8c4f;
0xffffffff82400385: sub esp, esi; ret;
0xffffffff8240a9fc: sub esp, esi; ret;
0xffffffff822ada31: sub esp, esi; std; out 0x33, eax; scasd [rdi]; ret;
0xffffffff829c18e4: sub esp, esp; add [rax], al; add [rax], al; add [rax], al; iretd;
0xffffffff823253f0: sub esp, esp; cmc; lodsb [rsi]; stosw [rdi]; ret 0x362b;
0xffffffff823f3dad: sub esp, esp; iretd;
0xffffffff8247555a: sub esp, esp; jmp far fword ptr [rcx-0x2d7c53bc];
0xffffffff823f3a0b: sub esp, esp; jmp qword ptr [rdi+0x26f0b8fe];
0xffffffff8241fda0: sub esp, esp; out 0xe4, eax; int 0x19; jmp rdi;
0xffffffff8241fda1: sub esp, esp; out 0xe4, eax; int 0x19; jmp rdi;
0xffffffff823a55aa: sub esp, esp; sub [rbp+0x3c], esi; xor al, 6; stosb [rdi]; xor al, 0x88; ret;
0xffffffff82281c99: sub esp, r14d; iretd;
0xffffffff824bb866: sub r12d, [rbx-0x2562a68a]; pop rsp; ret;
0xffffffff81892e9c: sub r9b, [r9+0x415b081c]; pop rsp; pop r14; pop r15; ret;
0xffffffff8147b485: sub rax, rbx; add rsp, 0x18; pop rbx; ret;
0xffffffff811e46a3: sub rax, rsi; add rax, 0x20; shr rax, 3; add rsp, 4; ret;
0xffffffff811e5073: sub rax, rsi; add rax, 0x30; shr rax, 3; add rsp, 4; ret;
0xffffffff81bd4266: sub sp, di; jmp qword ptr [rbp+0x48];
0xffffffff822ada30: sub sp, si; std; out 0x33, eax; scasd [rdi]; ret;
0xffffffff818049a5: test [rax+0x48000000], ebx; add esp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff816e439f: test [rax+0x48000000], ebx; add esp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff812de348: test [rax+0x48000000], edx; add esp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff8195d285: test [rax+0x48000000], esi; add esp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8172c32a: test [rax+0x48000001], eax; add esp, 0x10; pop rbx; pop r14; ret;
0xffffffff817d528f: test [rax+0x48000002], ecx; add esp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff823a869e: test [rax+0x63], ecx; xor bh, 0x1b; leave; iretd;
0xffffffff83432ffd: test [rax+1], ebx; add [rax], al; add rsp, 0x18; pop rbx; ret;
0xffffffff8116a079: test [rax+rax*4], ah; add [rax], al; add [rbp+9], dh; add rsp, 0x88; pop rbx; ret;
0xffffffff81ae4db7: test [rax+rax-0x172f0000], eax; add rsp, 0xa8; pop rbx; pop r14; pop rbp; ret;
0xffffffff81b5d949: test [rax+rax-0x17770000], ebp; add rsp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff81752a43: test [rax+rax-0x17770000], esi; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8345ec66: test [rax+rax-0x27770000], esp; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81036ab5: test [rax+rbp*4], ah; add [rax], al; add [rbp+5], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff81c28ed4: test [rax+rbx*4], ah; add [rax], al; add [rbp+0x2a], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff819ac887: test [rax+rbx*4], ah; add [rax], al; add [rbp+5], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff8343dd2a: test [rax+rbx*4], ah; add [rax], al; add [rbp+9], dh; add rsp, 0xa0; pop rbx; ret;
0xffffffff81849ee2: test [rax+rcx], ah; add [rax], eax; add [rbp+5], dh; mov rsp, rbp; pop rbp; ret;
0xffffffff818ff81f: test [rax+rdx*4], ah; add [rax], al; add [rbp+8], dh; add rsp, 0x98; ret;
0xffffffff8187e40d: test [rax+rsi*4], ah; add [rax], al; add [rbp+8], dh; add rsp, 0xb8; ret;
0xffffffff812117f4: test [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff81b98f89: test [rax-0x7c000002], cl; cli; add ecx, [rdi]; xchg esp, eax; ret 0xd008;
0xffffffff823a9457: test [rax-0x7d], dh; pop rsp; iretd;
0xffffffff811f9cd5: test [rax], ah; add [rax], al; add [rbp+9], dh; add rsp, 0xa8; pop rbx; ret;
0xffffffff81702b16: test [rax], eax; add [rax], al; add rsp, 0x10; pop rbx; ret;
0xffffffff81702b15: test [rbp+0x48000000], eax; add esp, 0x10; pop rbx; ret;
0xffffffff818e4490: test [rbp+0x48000000], ebx; add esp, 0x70; pop rbx; pop r14; pop r15; ret;
0xffffffff818e4661: test [rbp+0x48000000], ebx; add esp, 0x88; pop rbx; pop r14; pop r15; ret;
0xffffffff818979f7: test [rbp+0x48000000], ecx; add esp, 0x10; pop rbx; ret;
0xffffffff816ab065: test [rbp+0x48000000], ecx; add esp, 0x18; pop rbx; ret;
0xffffffff810eb721: test [rbp+0x48000000], ecx; add esp, 0x40; pop rbx; pop r14; pop r15; ret;
0xffffffff8127176e: test [rbp+0x48000000], esi; add esp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff81641151: test [rbp+0x48000000], esi; add esp, 0x18; pop rbx; pop r14; ret;
0xffffffff81325ab4: test [rbp+0x48000001], eax; add esp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8170529c: test [rbp+0x48000001], ebp; add esp, 0x10; pop rbx; pop r14; ret;
0xffffffff8232ec25: test [rbp+0x7e], bh; leave; out dx, al; iretd;
0xffffffff818ab0ee: test [rbp+1], esp; add [rax], al; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff823e83d7: test [rbp-0x41], cl; pop rsp; movsd [rdi], [rsi]; add esp, edi; movsb [rdi], [rsi]; iretd;
0xffffffff818015a5: test [rbx+0x48000000], ebp; add esp, 0x18; pop rbx; pop rbp; ret;
0xffffffff817f6eef: test [rbx+0x48000000], ebx; add esp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff8170d6dc: test [rbx+0x48000000], edx; add esp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff812a691e: test [rbx+0x48000001], edi; add esp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff83477707: test [rbx-0x2d], esi; std; add rsp, 8; pop rbx; ret;
0xffffffff83496f08: test [rbx-0x2f], bh; std; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff8241f0db: test [rbx-0x6f679e10], ebp; xchg [rsp+rcx*2+0x41ec8be0], esp; adc al, 0xa9; stosb [rdi]; iretd;
0xffffffff8241f0dc: test [rbx-0x6f679e10], ebp; xchg [rsp+rcx*2+0x41ec8be0], esp; adc al, 0xa9; stosb [rdi]; iretd;
0xffffffff812a279a: test [rbx], al; add [rax], eax; add al, ch; pop rsp; ret;
0xffffffff826cf0a6: test [rbx], cl; mov esp, [rbx+0x73]; ret;
0xffffffff823dea81: test [rbx], dl; xchg ebx, eax; cmp dh, [rax+0x50]; pop rsp; ret 0x2fe7;
0xffffffff82433635: test [rbx], ebx; fucomi st, st(1); xchg esp, eax; xchg ebx, eax; iretd;
0xffffffff816bdd77: test [rbx], esi; xchg esp, eax; add [rbx+0x4d8b0075], cl; add al, 0x8d; push rsi; jmp qword ptr [rcx];
0xffffffff81552427: test [rcx+0x415bffc4], edx; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff83435e01: test [rcx+0x48000000], eax; add esp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81b55acd: test [rcx+0x48000000], ecx; add esp, 0x40; pop rbx; pop r14; pop rbp; ret;
0xffffffff817030c8: test [rcx+0x48000000], edi; add esp, 0x10; pop rbx; ret;
0xffffffff818eb46a: test [rcx+0x48000000], edx; add esp, 0x10; pop rbx; pop r14; ret;
0xffffffff83445d63: test [rcx+0x48000000], edx; add esp, 0x28; pop rbx; ret;
0xffffffff81bb1041: test [rcx+0x48000000], esi; add esp, 0x18; ret;
0xffffffff819862ce: test [rcx+0x48000000], esp; add esp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff816186d0: test [rcx+0x48000000], esp; add esp, 0x40; pop rbx; pop r14; pop r15; ret;
0xffffffff814c2880: test [rcx+0x48000001], ebx; add esp, 0x20; pop rbx; pop r14; pop rbp; ret;
0xffffffff818aad88: test [rcx+1], edi; add [rax], al; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81025fff: test [rcx+1], esp; add [rax], al; add rsp, 0x10; pop rbx; ret;
0xffffffff818ddef2: test [rcx+1], esp; add [rax], al; add rsp, 0x38; pop rbx; ret;
0xffffffff83468908: test [rcx-0x2c], ah; std; add rsp, 8; pop rbx; ret;
0xffffffff824e6931: test [rcx-1], ah; lahf; adc esp, esi; ret 0xec62;
0xffffffff8254a415: test [rcx-8], al; xchg [rbp+rdx-0x90653af], esp; mov ch, 0x31; or rax, 0x7384b2c; ret;
0xffffffff8238a310: test [rcx], dh; leave; mov dh, 0x88; pop rsi; adc eax, ecx; iretd;
0xffffffff826886b3: test [rdi+0x12], bl; or gs:[rcx+0x75], edx; leave; jmp far fword ptr [rax+0xc6512ff];
0xffffffff8191ff78: test [rdi+0x48000000], eax; add esp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff8195dae2: test [rdi+0x48000000], ecx; add esp, 0x20; ret;
0xffffffff81b18f9b: test [rdi+0x48000000], ecx; add esp, 0x38; ret;
0xffffffff81703a5e: test [rdi+0x48000000], edi; add esp, 0x10; pop rbx; ret;
0xffffffff810ef734: test [rdi+0x48000000], edx; add esp, 0x18; pop rbx; pop r14; ret;
0xffffffff82235357: test [rdi+rbx*4], dh; pop rsp; iretd;
0xffffffff82379521: test [rdi+rdx*4-0x17], dh; xchg esp, eax; mov bl, 0x89; shr dl, cl; ret;
0xffffffff823650c3: test [rdi-0x552bd26b], cl; int 0x3c; pop rsp; ret 0xa1ff;
0xffffffff82569800: test [rdi], cl; cmc; xchg esp, eax; call qword ptr [rax];
0xffffffff818d5bf7: test [rdx+0x415bffff], edx; pop rsp; pop r14; pop r15; ret;
0xffffffff81bbf440: test [rdx+0x48000000], ebp; add esp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff8170d503: test [rdx+0x48000000], ebx; add esp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff834468c2: test [rdx+0x48000000], esi; add esp, 0x10; pop rbx; pop r14; ret;
0xffffffff818eeeb4: test [rdx+0x48000000], esi; add esp, 0x10; pop rbx; ret;
0xffffffff816a54e5: test [rdx+0x48000000], esp; add esp, 0x18; pop rbx; pop r14; ret;
0xffffffff83492089: test [rdx+0x48000001], eax; add esp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff825521f9: test [rdx+0x48], al; xchg esi, esp; ret;
0xffffffff82527484: test [rdx+0x4e5d966d], dl; sbb ah, [rip+0x161fed76]; xchg esp, eax; iretd;
0xffffffff819d4e5f: test [rdx+rax], bl; add [rbx-0x7af0de01], al; leave; add [rax], eax; add [rax-0x39], cl; ret;
0xffffffff824d0f72: test [rdx+rdx*2-0x6d0f1d48], ebx; xchg esp, eax; mov esp, 0x2b354330; ret;
0xffffffff83487808: test [rdx-0x2e], dh; std; add rsp, 8; pop rbx; ret;
0xffffffff825256ae: test [rdx-0x592d9035], ebx; mov ah, 0xda; add sp, di; and eax, 0xcd32345; mov al, bh; ret 0x5d82;
0xffffffff822ab744: test [rdx-0x7d920688], bh; in eax, dx; pop rsp; ret;
0xffffffff82460cff: test [rdx-0x7f], eax; insd [rdi], dx; xor r9d, 0x2f; xchg esp, eax; ret;
0xffffffff82236684: test [rdx], edi; leave; pop rax; iretd;
0xffffffff8226a985: test [rip+0x151119ac], bl; leave; mov ebx, 0xe62809d3; push 0xffffffffffffffb1; out dx, al; iretd;
0xffffffff815d9920: test [rip+0x48000001], eax; add esp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff817a25be: test [rip+0x48000001], ebp; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff82543602: test [rip-0x14ec7823], ebp; add ebx, [rdi+rsi*4]; adc [rsi-0x9a7b773], bl; out 0x31, al; mov esp, edi; iretd;
0xffffffff81a3b05c: test [rsi+0x31000001], esi; fild st, dword ptr [rcx-0x7d]; cld; add [rdi], ecx; xchg esp, eax; ret;
0xffffffff81bfd868: test [rsi+0x48000000], ebp; add esp, 0x20; ret;
0xffffffff81721881: test [rsi+0x48000000], ecx; add esp, 0x10; pop rbx; pop r14; ret;
0xffffffff81170fd1: test [rsi+0x48000000], ecx; add esp, 0x18; pop rbx; ret;
0xffffffff811abd80: test [rsi+0x48000000], edx; add esp, 0x18; ret;
0xffffffff818a897b: test [rsi+0x48000000], esi; add esp, 0x10; pop rbx; ret;
0xffffffff8133cf0a: test [rsi+0x48000000], esi; add esp, 0x40; pop rbx; pop rbp; ret;
0xffffffff82284571: test [rsi+0x61529f67], dl; lfs esi, [rbx-0x3e4d8a4b]; mov eax, [rbx+0x65]; xchg esp, eax; or edi, edi; ret 0x62cb;
0xffffffff826beeac: test [rsi+0x71], esp; xchg esp, eax; cmc; sti; iretd;
0xffffffff818aa2c3: test [rsi+1], edi; add [rax], al; add rsp, 0x10; pop rbx; ret;
0xffffffff823ef2a0: test [rsi-0x16bc8126], esp; mov esi, 0xd62665c4; pop rsp; ret;
0xffffffff823dedbe: test [rsi-0x20a6e562], esp; pop rsi; leave; sbb dh, [rbp+0x4eede1b5]; or al, 0xda; jmp qword ptr [rbp-0x2f];
0xffffffff8228f741: test [rsi-0x64], bh; lahf; xchg edx, eax; cli; mov esp, ss; ret;
0xffffffff8223140a: test [rsi-0x735b2155], ebx; fiadd st, dword ptr [rbx+0x68]; leave; xor [rsi], ch; movsxd ebp, edi; ret 0xd175;
0xffffffff8229d7cb: test [rsi], dl; sub ecx, ecx; pop rsp; cdq; iretd;
0xffffffff82319277: test ah, bl; pop rsi; leave; and esi, edi; mov eax, 0x339d3921; ret;
0xffffffff823aa581: test ah, ch; movsx rsp, byte ptr [r14+rcx*8+0x25]; leave; push rcx; cdq; ret;
0xffffffff83466682: test ah, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff81281905: test al, 0; add [rax], al; add [rdi], ecx; xchg esp, eax; ret 0x8548;
0xffffffff8147704a: test al, 0x1a; add [rax], al; add cl, [rdi]; xchg esp, eax; ret 0x498b;
0xffffffff822636d6: test al, 0x3c; leave; int1; and al, 0xf1; ret 0x7909;
0xffffffff822636d4: test al, 0x3c; leave; int1; and al, 0xf1; ret 0x7909;
0xffffffff823446c6: test al, 0x4f; mov dh, [rcx+0x4c]; cmpsb [rsi], [rdi]; leave; mov dl, 0xa3; iretd;
0xffffffff822dd183: test al, 0x50; fwait; leave; and eax, 0x3c4dd143; adc dl, [rdi-0x3c]; iretd;
0xffffffff82310479: test al, 0x58; xchg esp, eax; mov edx, 0xb4a0140; ret 0x16f8;
0xffffffff8227783a: test al, 0x64; out 0x21, al; adc dl, al; leave; cmp [rax-0x33], ah; ret 0x7d56;
0xffffffff823bef94: test al, 0x71; fldcw [rsi-0x13f593c2]; push rsi; leave; outsb dx, [rsi]; ret;
0xffffffff826cf0dc: test al, 0x74; or [rbx+0x40c37363], ecx; push 0xa73e26f; mov esp, [rbx+0x73]; ret;
0xffffffff82554bd4: test al, 0x7c; xchg esp, eax; add al, 0xce; iretd;
0xffffffff827076e1: test al, 0x7e; fimul st, dword ptr [rax]; xchg esp, eax; out 0x74, eax; iretd;
0xffffffff8265a409: test al, 0x94; dec edi; cmpsd [rsi], [rdi]; xchg esp, eax; jmp far fword ptr [rdi-0x59];
0xffffffff82336dd8: test al, 0xaa; hlt; mov esp, [rcx-0x71bb9aff]; sbb [rax+0x1cc91183], bh; shl dword ptr [rbx-0x2ad49c63], 0x3d; iretd;
0xffffffff82510d64: test al, 0xc2; pop rsp; fadd st, st(1); sub [rdi+5], eax; jmp qword ptr [rsi-0x7b];
0xffffffff82230948: test al, 0xcc; cmp dh, [rdi]; pop rsp; sub cl, cl; ret;
0xffffffff834717e4: test al, 0xd2; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff834641c1: test al, 0xd4; std; add rsp, 8; pop rbx; ret;
0xffffffff834641ea: test al, 0xd4; std; add rsp, 8; ret;
0xffffffff834541b4: test al, 0xd5; std; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff82437ac8: test al, 0xda; cli; pop rsp; xor al, 0x12; insb [rdi], dx; ret;
0xffffffff82507815: test al, 0xe0; xchg esp, eax; shl eax, cl; or eax, 0xd18bdd6b; ret;
0xffffffff8236e43e: test al, 0xe4; lodsd [rsi]; pop rsp; and dh, cl; cmp [rbx], bl; ret 0x40da;
0xffffffff8254f48e: test al, 0xf; leave; xchg esp, eax; jmp far fword ptr [rdi-0x3361e5d4];
0xffffffff8224ee42: test al, 0xfd; leave; iretd;
0xffffffff8223961b: test al, bh; xchg esp, eax; mov cl, 2; xor al, [rax+0x2742569c]; adc edi, [rdx+0x62]; iretd;
0xffffffff81979474: test bh, bh; add rsp, 0x38; pop rbx; ret;
0xffffffff8197949b: test bh, bh; add rsp, 8; ret;
0xffffffff822b5c03: test bh, ch; data16 leave; ret;
0xffffffff835a8ec1: test bl, al; std; in eax, dx; xchg esp, eax; ret;
0xffffffff8245e425: test bl, bh; pop rsp; fcmovu st, st(2); ret;
0xffffffff822cdae0: test bl, ch; pop rsp; ret;
0xffffffff834765c8: test bl, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff824a06ce: test byte ptr [rbp-0x662c2bc], 0xf6; xchg esp, eax; ret 0xd982;
0xffffffff81039b59: test byte ptr [rbp-0x6af0bf30], 0xc6; add esi, ecx; mov [rdi+0xa], sil; add rsp, 4; pop rbx; ret;
0xffffffff82002c81: test byte ptr [rbx], 0xff; pop rsp; add eax, 0x3f96cff; jmp far fword ptr [rdx-7];
0xffffffff813c5433: test byte ptr [rcx+rcx*4-0x16], 0xe8; xchg esp, eax; mov edi, edi; jmp qword ptr [rsi+0x39];
0xffffffff81662d33: test byte ptr [rcx+rcx*4-6], 0xe8; xchg esp, eax; sar esi, 1; dec dword ptr [rax-0x7b]; sar byte ptr [rax-0x4a], 0xf; ret;
0xffffffff81240ee8: test byte ptr [rcx-0x3194b740], 0x70; mov rax, [rcx+rax*8-0x7d818900]; add rsp, 4; ret;
0xffffffff810250ad: test byte ptr [rcx], 0x31; leave; and rax, rcx; or rax, rdi; ret;
0xffffffff8122959b: test byte ptr [rcx], 0x83; cmp eax, 0x23f0194; add [rdi], cl; xchg esp, eax; ret 0x2040;
0xffffffff81281ef1: test byte ptr [rdi], 0x95; rol dword ptr [rax-0xa], 0xc6; add [rdi], ecx; xchg esp, eax; ret 0xca20;
0xffffffff826fa7ec: test byte ptr [rsi], 0x8e; shl word ptr [rdx-0x63], cl; pop rsp; iretd;
0xffffffff8241cd11: test ch, 3; leave; ret;
0xffffffff82440efd: test ch, cl; leave; ret;
0xffffffff82343950: test ch, cl; xchg [rbx+0x63], esp; mov ch, 0; push rdi; pop rbx; ret;
0xffffffff83456650: test ch, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff834565bf: test ch, dl; std; add rsp, 8; ret;
0xffffffff8264eda9: test cl, 0xff; scasd [rdi]; cmc; leave; jmp far fword ptr [rdi-0x5000360c];
0xffffffff823f9477: test dh, 0x24; and edx, [rdi-0x5e9b7053]; leave; ret 0x95a6;
0xffffffff8200bd61: test dh, 0xff; adc esp, 0xffffffb6; jmp far fword ptr [rax+0x3bff04d1];
0xffffffff8200bd55: test dh, 0xff; and eax, 0xb4ffb6d3; rol dword ptr [rdi+rdi*8], 1; test r14b, 0xff; adc esp, 0xffffffb6; jmp far fword ptr [rax+0x3bff04d1];
0xffffffff822ad90a: test dh, al; pop rsp; xor [rax-0x3b86c7c7], bh; iretd;
0xffffffff81b0708f: test dl, dh; add [rax], al; add [rax-0x7b], cl; ror byte ptr [rdi], cl; xchg esp, eax; ret;
0xffffffff82349936: test dword ptr [rax+0x6f0f2f99], 0xc622bfcb; sub [rbp-0x3f], edx; pop rsp; ret 0x8013;
0xffffffff81271563: test dword ptr [rax-0x77], 0x1b04e8c6; mov eax, [0x415bd88901e38000]; pop rsp; pop r14; pop r15; ret;
0xffffffff8116cc1c: test dword ptr [rcx-0x77], 0xe8ff31fe; leave; xor edi, edi; dec dword ptr [rax-0x7b]; shl byte ptr [rdx+rsi*2+0x48], 0x89; ret;
0xffffffff8268825f: test dword ptr [rcx], 0x7561540b; leave; jmp far fword ptr [rbp-0xb];
0xffffffff812ddc9c: test dword ptr [rdi], 0x415bc09e; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff82303aa8: test dword ptr [rdx], 0x6894d7f; fndisi; and ebx, [rsi-0x4c]; xchg esp, eax; and al, 0x17; ret 0x808f;
0xffffffff823c209e: test eax, 0x1b0b3673; xchg esp, eax; mov gs, [rcx]; ret 0xdf46;
0xffffffff8162366d: test eax, 0x415bc031; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff824bb862: test eax, 0x446c2ea9; sub esp, [rbx-0x2562a68a]; pop rsp; ret;
0xffffffff83474ce3: test eax, 0x48fdd39d; add esp, 8; pop rbx; ret;
0xffffffff8346c9e3: test eax, 0x48fdd420; add esp, 8; pop rbx; ret;
0xffffffff83465ae3: test eax, 0x48fdd48f; add esp, 8; pop rbx; ret;
0xffffffff8244af8b: test eax, 0x4de413a6; pop rsp; ret;
0xffffffff82297b8c: test eax, 0x54719914; popfq; fcom st, dword ptr [rcx+0x26]; xchg [rcx-7], esp; rcpps xmm1, [rbp+0x54964d40]; ret;
0xffffffff824a1c65: test eax, 0x6e0575a3; shl dword ptr [rbp-0x732882c3], cl; leave; call rax;
0xffffffff822ffabe: test eax, 0x728c13d4; xchg ecx, eax; out 0x10, eax; outsb dx, [rsi]; pop rsp; iretd;
0xffffffff823bcd68: test eax, 0x8498b2f6; insb [rdi], dx; pop rsp; fwait; cdq; ret;
0xffffffff8249b657: test eax, 0x90dada70; leave; or eax, 0x5c6067a; or byte ptr [rdx], 0x89; push rdx; iretd;
0xffffffff8236ad0c: test eax, 0xa3dcb959; xchg esp, eax; iretd;
0xffffffff8236ad0b: test eax, 0xa3dcb959; xchg esp, eax; iretd;
0xffffffff82668129: test eax, 0xa53fff5c; pop rsp; jmp far fword ptr [rdi-0x5c];
0xffffffff82516702: test eax, 0xa55f5f22; leave; call rcx;
0xffffffff8296d854: test eax, 0xa6000b; add [rax], al; leave; or eax, [rax]; ret;
0xffffffff8265a3f9: test eax, 0xa87fff94; xchg esp, eax; call far fword ptr [rdi-0x58];
0xffffffff8230c6c4: test eax, 0xc56f3e40; xchg esp, eax; push rbp; fsubr st, qword ptr [rbx+0xf]; fsincos; ret 0xe748;
0xffffffff823d60e2: test eax, 0xd8c7064c; xchg esp, eax; ret 0xbde0;
0xffffffff8222ee81: test eax, 0xe53a8b4f; pop rsp; xor byte ptr [rcx-0xa87b68b], 0xb8; iretd;
0xffffffff82384db7: test eax, 0xe9ff3186; sbb ecx, ebx; leave; sbb [rdx+0x27], ah; iretd;
0xffffffff82384db8: test eax, 0xe9ff3186; sbb ecx, ebx; leave; sbb [rdx+0x27], ah; iretd;
0xffffffff8243d94f: test eax, eax; adc eax, 0x68a99735; xchg esp, eax; test al, 0x21; int3; iretd;
0xffffffff81b229f6: test eax, eax; cmovg ecx, edx; mov eax, ecx; add rsp, 0x10; ret;
0xffffffff81041dab: test eax, edi; sete al; add rsp, 4; ret;
0xffffffff83456517: test ebp, edx; std; add rsp, 8; pop rbx; ret;
0xffffffff823eb7bd: test ebx, ebx; enter 0xb425, 0xcd; leave; iretd;
0xffffffff834a0f07: test ebx, ebx; sar ch, 1; add rsp, 8; pop rbx; ret;
0xffffffff81689823: test ecx, ecx; cmovs eax, edx; add rsp, 4; ret;
0xffffffff81738529: test ecx, esi; add [rax], al; add [rax+0x39], cl; ror byte ptr [rdi], 1; xchg esp, eax; ret;
0xffffffff8265e56e: test edi, edi; outsd dx, [rsi]; xchg esp, eax; test edi, edi; sete [rbp-0x7a6c1001]; jmp far fword ptr [rdi-0x70007a6e];
0xffffffff822cdade: test edx, esp; test bl, ch; pop rsp; ret;
0xffffffff822f6b85: test esi, ebx; pop rsp; ret;
0xffffffff823eb5c9: test esi, edi; sub eax, 0x14e566c7; leave; leave; sbb ebx, [rdx]; ret 0xdbff;
0xffffffff8200bd60: test r14b, 0xff; adc esp, 0xffffffb6; jmp far fword ptr [rax+0x3bff04d1];
0xffffffff8200bd54: test r14b, 0xff; and eax, 0xb4ffb6d3; rol dword ptr [rdi+rdi*8], 1; test r14b, 0xff; adc esp, 0xffffffb6; jmp far fword ptr [rax+0x3bff04d1];
0xffffffff816c2c7b: tzcnt rcx, [rsp]; shl rdi, cl; mov rax, rdi; add rsp, 0x20; ret;
0xffffffff824e902d: unpckhps xmm7, [rsi]; push rsi; xchg esp, eax; or ecx, [rdi+0x3d]; call far fword ptr [rsi-0x7b77430a];
0xffffffff824d5b86: vaddss xmm14, xmm8, [rbx]; leave; xor esi, ebx; and edx, edi; cmpsd [rsi], [rdi]; call rsp;
0xffffffff815fe8f2: vhaddps xmm4, xmm15, [rsp+rcx]; add [rdi], cl; xchg esp, eax; ret;
0xffffffff823b8688: vmwrite rbx, rdi; leave; ret 0x4171;
0xffffffff812102ef: vpsubsb xmm3, xmm14, [rbx+0x41]; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff824945be: xadd [rcx+0x14dffe20], eax; mov ebp, 0x8839d69a; xchg esp, eax; call qword ptr [rsi+0x58];
0xffffffff8197e593: xadd ebx, esp; add al, 9; ret;
0xffffffff81476c4d: xadd edi, esp; jmp qword ptr [rsi+0x66];
0xffffffff8264f864: xadd esp, eax; call far fword ptr [rdi];
0xffffffff826ee1d1: xchg [0xfffffffff66cc7e6], esp; or [rdi+rax*4+0x24], edx; int 0xaf; not byte ptr [rbp+0x540a73e8]; xchg [rax+rbp*4], esp; jmp far fword ptr [rdi+0x73e895f6];
0xffffffff823f73b3: xchg [r13-0x65e2aecd], bl; in eax, dx; mov rsp, r8; ret;
0xffffffff8224fde7: xchg [rax+0x2f07b80b], esp; push rdx; hlt; ror dl, 1; sbb eax, 0xb8b5d557; iretd;
0xffffffff81608332: xchg [rax+0x31000000], edx; leave; cmp rax, [rsi+8]; mov eax, 0xffffffea; cmovae eax, ecx; ret;
0xffffffff81899961: xchg [rax+0x3100000d], edx; leave; mov [rax+0xc4], ecx; mov eax, ecx; ret;
0xffffffff814959d4: xchg [rax+0x39000000], esp; ret 0xe272;
0xffffffff8184b043: xchg [rax+0x41000001], esp; or ecx, 0x20000; mov [rdi+0x28], r9d; ret;
0xffffffff823f4752: xchg [rax+0x46], esp; in eax, 0x81; mov bl, 0xcf; adc [rax+rbp-0x57ddcc58], edi; sub eax, 0x65c4bc36; ret 0x421b;
0xffffffff819cd412: xchg [rax+0x48000000], cl; add esp, 0x18; ret;
0xffffffff8198f77e: xchg [rax+0x48000000], esp; mov eax, [rsi+0xa8]; mov [rdi+0xa8], rax; mov rax, [rsi+0xb0]; mov [rdi+0xb0], rax; ret;
0xffffffff8113c147: xchg [rax+0x48000000], esp; sub eax, esi; ret;
0xffffffff819bbfc7: xchg [rax+0x48000002], esp; mov [rdi+0x2a0], eax; mov [rdi+0x2a8], rax; mov dword ptr [rdi+0x2b0], 0; ret;
0xffffffff819bbfce: xchg [rax+0x48000002], esp; mov [rdi+0x2a8], eax; mov dword ptr [rdi+0x2b0], 0; ret;
0xffffffff81bc8f87: xchg [rax+0x48000007], esp; mov dword ptr [rax], 0; mov byte ptr [rax+0x28], 1; ret;
0xffffffff81a44647: xchg [rax+0x4800000d], esp; mov [rdi+0xda0], eax; mov [rdi+0xda8], rax; xor eax, eax; ret;
0xffffffff81a4464e: xchg [rax+0x4800000d], esp; mov [rdi+0xda8], eax; xor eax, eax; ret;
0xffffffff8119212e: xchg [rax+0x4800001c], esp; mov [rdi+0x1ca8], eax; lea rax, [rdi+0x1cb0]; mov [rdi+0x1cb0], rax; mov [rdi+0x1cb8], rax; ret;
0xffffffff82498ed5: xchg [rax+0x521d1543], esp; cmp al, 0x8c; stosd [rdi]; ret;
0xffffffff8225d662: xchg [rax+0x52], esp; and cl, [rax+rdi*8]; mov edx, 0x376c2655; iretd;
0xffffffff81a5733e: xchg [rax+0xd], esp; add [rax], al; mov [rdi+0xd68], rax; mov rax, 0x2bf2000007530; mov [rdi+0xd70], rax; ret;
0xffffffff81389fb3: xchg [rax+0xf000000], ebp; xchg esp, eax; shl byte ptr [rcx+rax], 0xf; mov dh, 0xc0; ret;
0xffffffff8195dba0: xchg [rax+0xf000000], esp; mov cl, ch; ret;
0xffffffff8102f216: xchg [rax+0xf00000a], esp; mov bh, 0xc0; ret;
0xffffffff812abd27: xchg [rax+1], esp; add [rax], al; shl rax, 0xc; ret;
0xffffffff819ac6e0: xchg [rax+2], esp; add [rax], al; xor eax, eax; ret;
0xffffffff81730462: xchg [rax+4], esp; add [rax], al; ret;
0xffffffff81b53f7f: xchg [rax+6], esp; add [rax], al; ret;
0xffffffff81aff79f: xchg [rax+7], esp; add [rax], al; cmp ecx, eax; cmovb eax, ecx; ret;
0xffffffff81b18557: xchg [rax+7], esp; add [rax], al; cmp r8d, eax; cmovb eax, r8d; mov [rdi+0x758], eax; ret;
0xffffffff819b89bc: xchg [rax+rax-0x15], esp; add eax, 0xffffa1b8; jmp qword ptr [rbp+0x48];
0xffffffff8116227c: xchg [rax+rax-0x74b80000], dl; xchg esp, eax; ret 0x1a0;
0xffffffff826ee1e4: xchg [rax+rbp*4], esp; jmp far fword ptr [rdi+0x73e895f6];
0xffffffff826ee217: xchg [rax+rbp*4], esp; jmp qword ptr [rdx+0x79];
0xffffffff81af3b95: xchg [rax+rbx], ebx; add cl, ch; push 0xffffffffe8ffffff; lea esi, [rdi]; pop rsp; jmp qword ptr [rsi+0x66];
0xffffffff810fb847: xchg [rax+rcx+0x415b0000], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff824fd480: xchg [rax-0x14], esp; ret;
0xffffffff8182efd7: xchg [rax-0x16fffffe], esp; pop rdi; mov bl, 0xfe; jmp qword ptr [rsi+0x66];
0xffffffff824138ab: xchg [rax-0x21bf4f82], esp; outsb dx, [rsi]; ret 0x5039;
0xffffffff82393ce6: xchg [rax-0x36], esi; stosd [rdi]; xchg esp, eax; and eax, 0x80360cc0; iretd;
0xffffffff81611e4e: xchg [rax-0x3d000000], esp; mov rax, [rdi+0xb0]; ret;
0xffffffff81c488bb: xchg [rax-0x40000000], ebx; mov esp, eax; add dword ptr [rcx+rcx*4-0x10], 0x415c415b; pop rsi; pop r15; ret;
0xffffffff822dd300: xchg [rax-0x55], bl; movsb [rdi], [rsi]; pop rsp; xor eax, 0x77fa3eaf; ret 0x145e;
0xffffffff825019ca: xchg [rax-0x60], esp; ret;
0xffffffff8251a798: xchg [rax-0x6d], esp; iretd;
0xffffffff8198c01d: xchg [rax-0x76ffffff], esp; ret 0xfad1;
0xffffffff8355baf9: xchg [rax-0x7f], esp; jmp qword ptr [rax-0x7e5f78];
0xffffffff822ecc54: xchg [rax], cl; xchg esp, eax; iretd;
0xffffffff8162b9d2: xchg [rax], esp; add [rax], eax; add [rax+0x39], cl; ret;
0xffffffff81b3f49d: xchg [rax], esp; add al, 0; add [rbp+0x31], al; in al, 0x83; ret;
0xffffffff8101ad86: xchg [rax], esp; add al, [rax]; add bh, al; xchg [rcx+rax], dl; add [rax], al; ret;
0xffffffff827fb4e5: xchg [rax], esp; call qword ptr [rdx+7];
0xffffffff81105475: xchg [rax], esp; or al, [rax]; add [rbx+0x74005878], al; add ebx, eax; mov dword ptr [rax+0x58], 1; ret;
0xffffffff82564c10: xchg [rax], esp; or eax, 0x67d89e40; xor dh, [rax+0x49]; add al, 1; or ah, bh; jmp far fword ptr [rdx-0x51];
0xffffffff81a556e4: xchg [rax], esp; or eax, 0x87c70000; sub [rip-0x56800000], cl; add eax, [rax]; ret;
0xffffffff8236de2c: xchg [rbp+0x248698fb], esp; add esp, eax; add al, 0x61; call far fword ptr [rax+rcx*2+0x16101936];
0xffffffff8245129e: xchg [rbp+0x40777e1e], esp; or [rcx], ch; fcom st, dword ptr [rbp-0x6e]; ret 0xd70;
0xffffffff8200dc78: xchg [rbp+0x43], esi; add esp, esi; mov bl, 4; jmp far fword ptr [rax];
0xffffffff81810516: xchg [rbp+0x46], esp; add [rax+4], bh; pop rbx; ret;
0xffffffff824070fc: xchg [rbp+0x4f], esp; iretd;
0xffffffff82514556: xchg [rbp+0x5ffd10d4], cl; rol byte ptr [rbx-0x50], 0xbc; pop rsp; iretd;
0xffffffff8239fe11: xchg [rbp+0x69], esp; movsxd edx, [rcx]; xchg [rdi], cl; or al, 0x85; iretd;
0xffffffff8254a418: xchg [rbp+rdx-0x90653af], esp; mov ch, 0x31; or rax, 0x7384b2c; ret;
0xffffffff82442c70: xchg [rbp-0x24aa8fae], esp; notrack call rdi;
0xffffffff82474da2: xchg [rbp-0x27], ecx; mov spl, 0x9d; mov al, 0x2f; pop rsp; iretd;
0xffffffff822f3250: xchg [rbp-0x48], dh; push rbp; nop; xchg esp, eax; ret 0x8abc;
0xffffffff825735b5: xchg [rbp-0x61], esp; setae al; sub [rsi-9], al; cld; jmp rcx;
0xffffffff8241d16b: xchg [rbp-0x64099363], esp; ret 0x1f99;
0xffffffff823f73b5: xchg [rbp-0x65e2aecd], bl; in eax, dx; mov rsp, r8; ret;
0xffffffff81b312a9: xchg [rbp-0x76fffffe], esp; iretd;
0xffffffff8355db39: xchg [rbp-0x7f], esp; push rax; mov [rbp-0x7f], ah; inc eax; lea esp, [rbp-0x7f]; call qword ptr [rax-0x7e5a72];
0xffffffff8180ded8: xchg [rbx+0x41], ebx; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff82343952: xchg [rbx+0x63], esp; mov ch, 0; push rdi; pop rbx; ret;
0xffffffff823f09e7: xchg [rbx+0x7896b3ab], cl; pop rsp; push rsi; iretd;
0xffffffff82320d00: xchg [rbx+0xab1a68], esp; xchg [rdx+0x65746c4], dh; jmp qword ptr [rax-0x20];
0xffffffff8223296b: xchg [rbx+r8*4], esp; or al, 0x1a; iretd;
0xffffffff8223296c: xchg [rbx+rax*4], esp; or al, 0x1a; iretd;
0xffffffff823f9471: xchg [rbx+rcx*4-0x59], ch; out 0x94, eax; test dh, 0x24; and edx, [rdi-0x5e9b7053]; leave; ret 0x95a6;
0xffffffff8243e312: xchg [rbx-0x12], esp; ret 0xcc20;
0xffffffff824453ce: xchg [rbx-0x23], esp; ret 0x5952;
0xffffffff824453cd: xchg [rbx-0x23], esp; ret 0x5952;
0xffffffff82475106: xchg [rbx-0x74ae53f3], esp; ret;
0xffffffff82284150: xchg [rbx-0xa], ebx; pop rsp; insd [rdi], dx; xchg ebx, eax; add r10b, [rax-0x3f]; iretd;
0xffffffff81bc8f82: xchg [rbx], ah; add [rax-0x75], cl; xchg [rax+0x48000007], esp; mov dword ptr [rax], 0; mov byte ptr [rax+0x28], 1; ret;
0xffffffff818c7308: xchg [rbx], bh; add [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff82450a81: xchg [rbx], esp; adc eax, 0xe5281a3d; dec dword ptr [rbx-0x116993bb]; ret 0x3d55;
0xffffffff81bd2e15: xchg [rbx], esp; add [rax], al; add eax, ebp; pop rbx; pop rbp; ret;
0xffffffff81331edc: xchg [rbx], esp; add eax, 0x894c0000; ret;
0xffffffff823657da: xchg [rbx], esp; and [rdi+rdi*8], edi; xchg [rcx+0x73], cl; or al, 0xdc; ret 0x8a46;
0xffffffff826f6b73: xchg [rbx], esp; iretd;
0xffffffff82537307: xchg [rbx], esp; mov eax, [0x62d1c52f6f46ac58]; iretd;
0xffffffff82431590: xchg [rbx], esp; mov ebp, 0xd2179ddf; ret 0x90d6;
0xffffffff8246d9cd: xchg [rbx], esp; popfq; and ah, [rbx+0x2f]; add ebx, ebx; iretd;
0xffffffff82415e5b: xchg [rbx], esp; ret 0xca41;
0xffffffff824b1266: xchg [rcx+0x1989cf4f], esp; add al, 0xe3; ret 0x941a;
0xffffffff8223e25d: xchg [rcx+0x290cc86b], dh; xor eax, 0xbbafcc66; xchg esp, eax; mov ebx, 0xe661c075; sub r9b, [rax+rbx*4+0x4a]; ret 0x8d38;
0xffffffff8247c55b: xchg [rcx+0x67], esp; iretd;
0xffffffff82688196: xchg [rcx+0x76], ch; or gs:[rcx+0x75], dh; leave; jmp qword ptr [rdx-4];
0xffffffff8231ff18: xchg [rcx+0x7f], esp; iretd;
0xffffffff819ac8f1: xchg [rcx+2], esp; add [rax], al; xor eax, eax; ret;
0xffffffff81b8d2d6: xchg [rcx+rax-0x3f7d0000], esp; dec dword ptr [rax-0x68]; ret;
0xffffffff8198b162: xchg [rcx+rax-0x77f10000], ah; leave; out dx, al; add [rbx+0x41], bl; pop rsi; ret;
0xffffffff8198b43f: xchg [rcx+rax-0x77f10000], ah; sbb esp, ebp; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsi; ret;
0xffffffff81904819: xchg [rcx+rax], esp; add [rax], al; ret;
0xffffffff818948da: xchg [rcx+rcx-0x1f460000], esp; add eax, 0xa30f0000; ret 0x820f;
0xffffffff82371fe0: xchg [rcx+rsi], eax; xchg esp, esi; ret 0x50b6;
0xffffffff822731f5: xchg [rcx-0x3d], esp; mov ebp, 0x59f8d502; mov al, [rdi-0x1d]; ret 0x95ea;
0xffffffff823f742c: xchg [rcx-0x47], ebp; pop rdx; xchg esp, eax; or [rbx-0x17], esi; ret 0x8bf3;
0xffffffff823f742b: xchg [rcx-0x47], r13; pop rdx; xchg esp, eax; or [rbx-0x17], esi; ret 0x8bf3;
0xffffffff82551895: xchg [rcx-0x50], esp; cmp al, 0xf6; ret;
0xffffffff82274a1a: xchg [rcx-0x50], esp; push rdi; iretd;
0xffffffff82353f84: xchg [rcx-0x55], esp; in al, 0xaa; or [rsi-0x157dd3e8], ecx; ret;
0xffffffff8241f346: xchg [rcx-0x56], edi; push rbx; add al, 0xea; xchg esp, eax; xor [rdi-0x360d4531], esp; iretd;
0xffffffff81703686: xchg [rcx-0x57fffffa], esp; adc [rbp+1], dh; ret;
0xffffffff82656a2d: xchg [rcx-0x5e7a2001], esp; jmp far fword ptr [rdi-0x40005e7e];
0xffffffff82297b96: xchg [rcx-7], esp; rcpps xmm1, [rbp+0x54964d40]; ret;
0xffffffff82297b95: xchg [rcx-7], esp; rcpps xmm1, [rbp+0x54964d40]; ret;
0xffffffff826cf4ea: xchg [rcx], cl; mov esp, [rbx+0x73]; ret;
0xffffffff818a5f3b: xchg [rcx], esp; ret 0x40be;
0xffffffff8231e9b5: xchg [rcx], esp; sti; cmp esi, edx; stosd [rdi]; ret 0xf7e7;
0xffffffff823560a4: xchg [rdi+0x26d19189], esp; call far fword ptr [rdx-0x46];
0xffffffff8243ad53: xchg [rdi+0x46], esp; ret 0x4a53;
0xffffffff822db914: xchg [rdi+8], esp; test [rsi-0x495e4aac], sil; mov dl, 0xd2; enter 0x224a, 0x30; clc; jmp far fword ptr [rdx+5];
0xffffffff82008ee5: xchg [rdi+rdi*8+0x28], esp; add [rip-0x38f76a01], al; call qword ptr [rbp+0x1cff648a];
0xffffffff81bdb9e6: xchg [rdi+rdi*8-1], esp; jmp qword ptr [rax+0x74];
0xffffffff816d1b52: xchg [rdi+rdx], esp; add [rax], al; add eax, 0xfffffff8; mov [rdi+0x1724], eax; mov dword ptr [rdi+0x171c], 7; ret;
0xffffffff816d1b5b: xchg [rdi+rdx], esp; add [rax], al; mov dword ptr [rdi+0x171c], 7; ret;
0xffffffff823c96df: xchg [rdi-0x49cd6aba], esp; ret;
0xffffffff8226276b: xchg [rdi-0x5e], esp; push 0xffffffffffffffc1; xchg edi, eax; pop rax; ret;
0xffffffff82485ec4: xchg [rdi-0x7d506d03], cl; xchg esp, eax; mov [rsi], dh; iretd;
0xffffffff8355e811: xchg [rdi-0x7f], esp; push qword ptr [rax]; mov [rdi-0x7f], ah; call qword ptr [rax-0x78];
0xffffffff8355e808: xchg [rdi-0x7f], esp; push rax; xchg [rdi-0x7f], esp; push qword ptr [rax]; mov [rdi-0x7f], ah; call qword ptr [rax-0x78];
0xffffffff83443dde: xchg [rdi], esp; dec byte ptr [rax-0x77]; ret;
0xffffffff82245eb3: xchg [rdi], esp; iretd;
0xffffffff81883bbf: xchg [rdx+0x39000009], esp; ret;
0xffffffff82478c7b: xchg [rdx+0x53964eea], ebp; xchg esp, eax; ret 0xf015;
0xffffffff81b12606: xchg [rdx+0x66000000], dh; mov [rsi+0x88], eax; mov word ptr [rsi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff81b1257d: xchg [rdx+0x66000000], esi; mov [rdi+0x88], eax; mov word ptr [rdi+0x8a], 0x10; add rsp, 0xc; ret;
0xffffffff82408116: xchg [rdx+0x78bc9cdf], edx; pop rsp; xor eax, 0x32b7034e; ret;
0xffffffff8102f1d8: xchg [rdx+0xf00000a], esp; mov bh, 0xc0; ret;
0xffffffff8147dfa1: xchg [rdx+rax], esp; add [rax], al; mov eax, 1; ret;
0xffffffff824b4d01: xchg [rdx+rsi+0x4683d74], edx; mov al, [0xaa3a980a1a1d987d]; cmp [rdx+0x152f41f2], r14; xchg esp, eax; ret;
0xffffffff8242e9e2: xchg [rdx-0x4e], esp; push 0x37bc25a7; sbb ah, [rdi+rax*2+0x4d]; call rsp;
0xffffffff823f21dc: xchg [rdx-0x5c], ah; xchg esp, eax; iretd;
0xffffffff8232a516: xchg [rdx-0x5d], dl; adc esp, ebx; mov edx, 0xb098683d; leave; out dx, eax; ret 0xe221;
0xffffffff8176be25: xchg [rdx-1], esp; jmp far fword ptr [rax+0x1e850f80];
0xffffffff8100cace: xchg [rdx], eax; add [rdx-0x7df1ef3], cl; add esi, esi; rcl dword ptr [rax], 0xf; xchg esp, eax; ret 0xd038;
0xffffffff8227fb06: xchg [rip+0x2c9bfe79], dl; in al, dx; leave; iretd;
0xffffffff8253f45f: xchg [rip+0x79121f05], esp; push rax; push rdi; ret;
0xffffffff82406f2c: xchg [rip-0x13531720], esp; iretd;
0xffffffff823ecf91: xchg [rip-0x76a7431d], esp; sbb al, 0xbb; iretd;
0xffffffff835262e1: xchg [rip-0x7f], esp; call qword ptr [rax-0x7eda76];
0xffffffff81933891: xchg [rip-0x8ffffff], esp; ret;
0xffffffff82537747: xchg [rsi+0x1b], esp; mov al, 0x26; fidiv st, word ptr [rax]; cmp rdx, [rbp-9]; iretd;
0xffffffff81883f37: xchg [rsi+0x39000000], esp; ret;
0xffffffff81883dab: xchg [rsi+0x39000009], esp; ret;
0xffffffff82373b8a: xchg [rsi+0x3d], eax; xchg esp, eax; xchg esi, eax; ret 0x94bd;
0xffffffff82301fd5: xchg [rsi+0x4d6fd01], esp; stosd [rdi]; xchg esp, eax; scasb [rdi]; mov ebx, 0xef1d9f5f; ret;
0xffffffff82404564: xchg [rsi+0x978b3e9], ebp; leave; pop rbp; iretd;
0xffffffff8102f22f: xchg [rsi+0xf00000a], esp; mov bh, 0xc0; ret;
0xffffffff8234c9b6: xchg [rsi+rbp*4+0x745b8d66], esp; iretd;
0xffffffff824928d5: xchg [rsi-0x1df31290], esp; xchg ebp, eax; lahf; sub byte ptr [rdx], 0xe3; in al, 0x8d; ret 0xf54e;
0xffffffff82709d46: xchg [rsi-0x45], esp; mov [0x540dbfec695404bf], al; cld; jmp far fword ptr gs:[rax-0x1c];
0xffffffff823bc55b: xchg [rsi-0x4b], esp; ret 0xfac0;
0xffffffff816ee122: xchg [rsi-0x57000000], ecx; add [rax+rax], al; add [rdi], cl; xchg esp, eax; ret 0xd184;
0xffffffff8231e5f3: xchg [rsi-0x6ebb9c2c], esp; iretd;
0xffffffff8355dff1: xchg [rsi-0x7f], ah; push qword ptr [rax]; xchg [rsi-0x7f], esp; jmp qword ptr [rax-0x7e5979];
0xffffffff82629c21: xchg [rsi-0x7f], esp; call qword ptr [rax];
0xffffffff8355dff9: xchg [rsi-0x7f], esp; jmp qword ptr [rax-0x7e5979];
0xffffffff82665f0d: xchg [rsi-1], esp; out dx, eax; xchg [rsi-1], ah; scasd [rdi]; test [rsi-1], ah; iretd;
0xffffffff824f3b2b: xchg [rsi], edi; pop rsp; imul ecx, ebp, 0x9cff6cc9; push rax; ret;
0xffffffff81269a9f: xchg [rsi], esp; add [rax], eax; add [rax+0x63], cl; ret 0xd231;
0xffffffff8255f0f0: xchg [rsi], esp; fisub st, dword ptr [rsi+0x680865cc]; iretd;
0xffffffff8239ea4f: xchg [rsi], esp; iretd;
0xffffffff81627d48: xchg [rsi], esp; or [rax], al; add [rax+0x63], cl; ret;
0xffffffff81681b41: xchg [rsp+rax], esp; add dh, al; xchg [rsi+4], ecx; ret;
0xffffffff8250b068: xchg [rsp+rbp-0x28], esp; jmp qword ptr [rcx-0xdb14e02];
0xffffffff8241f0e3: xchg [rsp+rcx*2+0x41ec8be0], esp; adc al, 0xa9; stosb [rdi]; iretd;
0xffffffff822f48ae: xchg ah, cl; sub esp, ebx; ret 0x6f50;
0xffffffff81a7fd4b: xchg bh, bh; add rsp, 0x20; ret;
0xffffffff82321513: xchg bh, cl; cld; xchg esp, eax; movsb [rdi], [rsi]; ret 0xe5f4;
0xffffffff822a9457: xchg bl, bh; leave; sub al, 0x35; add esp, 0xffffffd1; ret;
0xffffffff83476444: xchg bl, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff834563ba: xchg ch, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff81a7fd4a: xchg dil, dil; add rsp, 0x20; ret;
0xffffffff825d81ee: xchg eax, edi; pushfq; xchg ecx, esp; and al, 0x94; ret 0x1d3c;
0xffffffff81904b42: xchg eax, esp; add [rax], al; add [rax-0x77], cl; ret 0xc148;
0xffffffff818d05ef: xchg eax, esp; add [rax], al; add [rbx+0x39449004], cl; shl byte ptr [rbx+rcx+0x48], 0x83; ret 0x4901;
0xffffffff817d5810: xchg eax, esp; add [rax], al; add [rbx-0x7876f7ba], cl; enter 0, 0; ret;
0xffffffff81b0dc0b: xchg eax, esp; add [rax], al; add [rcx-0x8152e3e], cl; rol byte ptr [rcx+0xfeffca], cl; add [rcx], ah; ret 0x4166;
0xffffffff8192f3c5: xchg eax, esp; add [rax], al; add bl, al; xor eax, eax; ret;
0xffffffff812d0ad5: xchg eax, esp; or [rax], eax; add [rax+0x39], cl; ret 0xf48;
0xffffffff8187480f: xchg eax, esp; or [rax], eax; add [rax+0x46c60846], cl; or edi, edi; xor eax, eax; ret;
0xffffffff823bb9f0: xchg ebp, eax; adc dword ptr [rdi-0x476bdc98], 0x64; pop rsp; and ecx, edi; ret;
0xffffffff8247ab3f: xchg ebp, eax; add al, [rax]; mov eax, [0xb3d3a8804cbb6e0d]; push 0x30c1d559; leave; ret;
0xffffffff82659ff6: xchg ebp, eax; dec dword ptr [rdi]; xchg esp, eax; xchg ebp, eax; jmp far fword ptr [rdi-0x6d];
0xffffffff8228b535: xchg ebp, eax; fist dword ptr [rdi+0x2255e399], st; pop rsp; test al, 0xa8; xchg ebx, eax; iretd;
0xffffffff83470af7: xchg ebp, eax; fstp st(3), st; std; add rsp, 8; pop rbx; ret;
0xffffffff8222b3d5: xchg ebp, eax; getsec; pop rsp; ret 0xf322;
0xffffffff826cff30: xchg ebp, eax; insb [rdi], dx; fimul st, dword ptr [rsi]; mov esp, [rbx+0x73]; ret;
0xffffffff823b6643: xchg ebp, eax; leave; adc esp, [rsi]; dec dh; iretd;
0xffffffff81039b5e: xchg ebp, eax; mov byte ptr [rcx], 0xce; mov [rdi+0xa], sil; add rsp, 4; pop rbx; ret;
0xffffffff823101f9: xchg ebp, eax; mov ch, 0x21; add esp, eax; ret;
0xffffffff8252f158: xchg ebp, eax; mov dl, [rbx-0x1ae4b0c3]; leave; iretd;
0xffffffff83475ff7: xchg ebp, eax; mov dl, bl; std; add rsp, 8; pop rbx; ret;
0xffffffff8166c624: xchg ebp, eax; mov dword ptr [rbp-4], 0; mov eax, [rbp-4]; add rsp, 0x30; pop rbp; ret;
0xffffffff82655ec9: xchg ebp, eax; movsb [rdi], [rsi]; dec edi; xchg esp, eax; movsb [rdi], [rsi]; jmp far fword ptr [rdi-0x6d];
0xffffffff814959cd: xchg ebp, eax; nop; add [rax], al; add [rcx-0x75], al; xchg [rax+0x39000000], esp; ret 0xe272;
0xffffffff8254454d: xchg ebp, eax; nop; leave; xchg esi, eax; ret 0x5780;
0xffffffff8257217f: xchg ebp, eax; pop rdi; pop rsp; jmp qword ptr [rsi-0x281434b8];
0xffffffff81af3d8e: xchg ebp, eax; pop rsp; jmp qword ptr [rsi+0x66];
0xffffffff822d73a9: xchg ebp, eax; pop rsp; ret 0xfc8e;
0xffffffff82525112: xchg ebp, eax; pop rsp; ret;
0xffffffff822c9594: xchg ebp, eax; pop rsp; sbb [rdx+0x1fc3fa21], edi; mov ecx, 0xc8d7745c; outsd dx, [rsi]; iretd;
0xffffffff823ca93c: xchg ebp, eax; pop rsp; xor [rbx+0x24d526cc], edx; push rcx; jmp qword ptr [rcx-0x51];
0xffffffff82310477: xchg ebp, eax; push rsi; test al, 0x58; xchg esp, eax; mov edx, 0xb4a0140; ret 0x16f8;
0xffffffff81298e3e: xchg ebp, eax; rol byte ptr [rcx-0xa], 0xc4; add [rdi], ecx; xchg esp, eax; ret 0xc220;
0xffffffff81281ef3: xchg ebp, eax; rol dword ptr [rax-0xa], 0xc6; add [rdi], ecx; xchg esp, eax; ret 0xca20;
0xffffffff81ae8035: xchg ebp, eax; rol dword ptr [rbx+0x1c247c], 0xf; xchg esp, eax; ret;
0xffffffff81718f02: xchg ebp, eax; rol dword ptr [rbx+0x1d8bb], 0; add [rdi], cl; xchg esp, eax; ret 0xd138;
0xffffffff8197dde3: xchg ebp, eax; rol dword ptr [rbx-0x3bc33bc3], 1; add [rdi], cl; xchg esp, eax; ret 0xca20;
0xffffffff81260ebd: xchg ebp, eax; rol dword ptr [rcx-0xa], 0xc1; add [rdi], ecx; xchg esp, eax; ret;
0xffffffff81298f8d: xchg ebp, eax; rol dword ptr [rcx-0xa], 0xc4; add [rdi], ecx; xchg esp, eax; ret 0xca20;
0xffffffff819a9c84: xchg ebp, eax; ror dword ptr [rax-0x7d], 0xe6; dec byte ptr [rdi]; xchg esp, eax; ret;
0xffffffff8264d5fd: xchg ebp, eax; sar bh, 1; lahf; xchg esp, eax; sar bh, 1; iretd;
0xffffffff8264d1bd: xchg ebp, eax; sar edi, 1; scasd [rdi]; xchg esp, eax; sar edi, 1; call qword ptr [rdx-0x6ec0002f];
0xffffffff81059768: xchg ebp, eax; shl dh, 0xc1; add [rdi], ecx; xchg esp, eax; ret 0xc220;
0xffffffff81299c17: xchg ebp, eax; shl dh, 0xc2; add [rdi], ecx; xchg esp, eax; ret;
0xffffffff81287f0a: xchg ebp, eax; shl esi, 0xc3; add [rdi], ecx; xchg esp, eax; ret 0xca20;
0xffffffff81297701: xchg ebp, eax; shr dword ptr [rcx+0x181], 0xf; xchg esp, eax; ret 0xbd;
0xffffffff8124abdb: xchg ebp, eax; shr dword ptr [rcx+0x181], 0xf; xchg esp, eax; ret 0xd184;
0xffffffff816a6c2c: xchg ebp, eax; shr dword ptr [rcx+0x60800], 0xf; xchg esp, eax; ret;
0xffffffff8227f535: xchg ebp, eax; std; mul byte ptr [rbx-0x8f6f876]; nop; xchg esp, eax; ret 0xfc21;
0xffffffff8226b95a: xchg ebp, eax; sub [rsi-0x775673c1], bl; leave; ret 0x49ff;
0xffffffff823650c5: xchg ebp, eax; sub eax, 0x3ccdaad4; pop rsp; ret 0xa1ff;
0xffffffff8224f0c0: xchg ebp, eax; sub eax, 0xb1e0f244; movsb [rdi], [rsi]; sbb esp, ebp; fxch st, st(5); iretd;
0xffffffff826c4037: xchg ebp, eax; xchg esp, eax; lahf; or esp, [rbp+0x736dc363]; ret;
0xffffffff8224a4ab: xchg ebp, eax; xchg esp, eax; scasd [rdi]; fiadd st, dword ptr [rdx+rbp*4+0x13]; iretd;
0xffffffff8252fabf: xchg ebp, eax; xchg esp, eax; sub al, 0x35; out 0x6e, eax; pop rcx; ret 0x45a1;
0xffffffff82335fb1: xchg ebp, eax; xchg esp, eax; xor bl, [rbx+rdi*8+0x5ebe2c20]; push rcx; sub eax, [rsi+rsi*2]; iretd;
0xffffffff8196933b: xchg ebp, esp; add [rax], al; add [rbx+0x39042454], cl; ret 0x7e77;
0xffffffff8249d18d: xchg ebp, esp; iretd;
0xffffffff826d684a: xchg ebp, esp; push qword ptr [rax-0x1b]; call far fword ptr [rbp-0x488c000a];
0xffffffff826d6836: xchg ebp, esp; push qword ptr [rax-0x1b]; jmp qword ptr [rcx+0x75];
0xffffffff822bbd3b: xchg ebp, esp; ret 0xb6e9;
0xffffffff82260bef: xchg ebp, esp; sub [rbx+rsi*8], ah; ret;
0xffffffff82389e94: xchg ebx, eax; adc ah, [rdx]; xchg esp, eax; push rdi; ret;
0xffffffff82420869: xchg ebx, eax; adc eax, 0x397fba45; pop rsp; ret 0x77c3;
0xffffffff822d25fc: xchg ebx, eax; add [rdi], esp; pop rsp; ret;
0xffffffff82288608: xchg ebx, eax; and cl, [rsi]; leave; ret;
0xffffffff824478d9: xchg ebx, eax; cmc; mov esp, [rip+0x4aa86203]; cld; mov edx, 0x271da1ee; ret;
0xffffffff823c1792: xchg ebx, eax; cmp bl, [rdi+0x7edb1203]; pop rsp; ret;
0xffffffff823dea83: xchg ebx, eax; cmp dh, [rax+0x50]; pop rsp; ret 0x2fe7;
0xffffffff8352f581: xchg ebx, eax; cmp eax, 0xffffff81; inc dword ptr [rax]; xchg esp, eax; cmp eax, 0xffffff81; call qword ptr [rax-0x69];
0xffffffff834a0cf9: xchg ebx, eax; fst st(0), st; std; add rsp, 8; pop rbx; ret;
0xffffffff8250501f: xchg ebx, eax; imul eax, [rcx-0x8a2fbf0], 0x23; pop rsp; iretd;
0xffffffff82505020: xchg ebx, eax; imul eax, [rcx-0x8a2fbf0], 0x23; pop rsp; iretd;
0xffffffff8232e0ff: xchg ebx, eax; insb [rdi], dx; shl ebp, 0x4b; xor eax, edi; xchg esp, eax; ret 0x79dd;
0xffffffff824989b8: xchg ebx, eax; leave; cmpsb [rsi], [rdi]; ret 0xd614;
0xffffffff8141e00e: xchg ebx, eax; leave; jmp qword ptr [rsi+0x66];
0xffffffff834535f9: xchg ebx, eax; mov ah, 0xd5; std; add rsp, 8; pop rbx; ret;
0xffffffff82270011: xchg ebx, eax; mov dh, 0xd8; xchg esp, eax; iretd;
0xffffffff816e46ea: xchg ebx, eax; mov eax, [0x100c1f7000006]; add [rdi], cl; xchg esp, eax; ret;
0xffffffff8238eb30: xchg ebx, eax; mov esp, es; ret 0x3f43;
0xffffffff822f8683: xchg ebx, eax; or eax, 0x96774c70; xchg esp, eax; cmp dword ptr [rip+0x5422469b], 4; ret;
0xffffffff823a37bf: xchg ebx, eax; pop rsp; cli; ret;
0xffffffff824cfc22: xchg ebx, eax; pop rsp; iretq;
0xffffffff8243aeee: xchg ebx, eax; pop rsp; jmp qword ptr [rsi];
0xffffffff8243aeef: xchg ebx, eax; pop rsp; jmp qword ptr [rsi];
0xffffffff8234f341: xchg ebx, eax; pop rsp; push 0xffffffff934f7585; iretd;
0xffffffff81980312: xchg ebx, eax; push qword ptr [rcx]; leave; mov rax, rcx; pop rbx; ret;
0xffffffff83475778: xchg ebx, eax; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82522553: xchg ebx, eax; shl dl, cl; rcr dword ptr [rcx], cl; leave; xor al, 0x5b; ret 0x7106;
0xffffffff816d06f0: xchg ebx, eax; xchg esp, eax; add [rax], al; add [rax+0x29], cl; ret 0x8948;
0xffffffff816cff6a: xchg ebx, eax; xchg esp, eax; add [rax], al; add [rax+0x29], cl; ret 0xc931;
0xffffffff82337f1c: xchg ebx, eax; xchg esp, eax; iretd;
0xffffffff8230f682: xchg ebx, eax; xchg esp, eax; ret 0x1450;
0xffffffff83476325: xchg ebx, edx; std; add rsp, 8; pop rbx; ret;
0xffffffff823ebfe6: xchg ebx, esi; pop rsp; mov [0x913aa19dd1e0047f], eax; iretd;
0xffffffff8244bc5a: xchg ebx, esp; jmp far fword ptr [rbp-0x6613a3f];
0xffffffff824d90bd: xchg ebx, esp; pop rsi; xchg edx, eax; ret 0x2ba0;
0xffffffff824a6e44: xchg ebx, esp; pushfq; adc al, 0xdd; stosb [rdi]; iretd;
0xffffffff8234bbc9: xchg ebx, esp; xor al, 0xa6; xchg ecx, edi; cmp esi, ebp; pop rsp; iretd;
0xffffffff8223070d: xchg ecx, eax; adc al, 0x54; xor ecx, [rax+0x17911e00]; lahf; pop rsp; ret 0x5a29;
0xffffffff8344d5fb: xchg ecx, eax; adc al, 0xd6; std; add rsp, 8; pop rbx; ret;
0xffffffff817a9e63: xchg ecx, eax; add [r11+0x41], r11b; pop rsp; pop r14; pop r15; ret;
0xffffffff822f14da: xchg ecx, eax; add al, 0xac; pop rsp; mov [0x5dc18f50a7e99f14], eax; imul edx; call rsp;
0xffffffff822688c8: xchg ecx, eax; and dh, [rbp+0x33]; pushfq; pop rsp; iretd;
0xffffffff818cb4f9: xchg ecx, eax; fiadd st, dword ptr [rcx]; add [rdi], ecx; xchg esp, eax; ret 0xc220;
0xffffffff81916c87: xchg ecx, eax; hlt; xor eax, 0xc7c74800; mov eax, 0xe882f3f0; leave; ret;
0xffffffff8346f3fb: xchg ecx, eax; not bl; std; add rsp, 8; pop rbx; ret;
0xffffffff822ffac3: xchg ecx, eax; out 0x10, eax; outsb dx, [rsi]; pop rsp; iretd;
0xffffffff822edb05: xchg ecx, eax; pop rbp; mov eax, 0xf03754ea; xchg esp, eax; iretd;
0xffffffff8253e467: xchg ecx, eax; pop rsp; iretd;
0xffffffff822b898c: xchg ecx, eax; pop rsp; ret;
0xffffffff822f8d1e: xchg ecx, eax; popfq; leave; iretd;
0xffffffff81c3acf8: xchg ecx, eax; push 0xffffffffffffffff; add rsp, 8; xor eax, eax; ret;
0xffffffff834758f7: xchg ecx, eax; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8222c6c2: xchg ecx, eax; sbb [rdi+0x54327feb], rbx; adc esp, ebx; or ebx, [rbp-0xc2d6b71]; xchg [rbx-0x6d], ebp; iretd;
0xffffffff8134885b: xchg ecx, eax; sbb esp, esi; jmp qword ptr [rbp+0x48];
0xffffffff82526b5c: xchg ecx, eax; std; enter 0xee59, 0xe1; xor bh, [rsi+0x127f7cb6]; sbb esp, esp; ret;
0xffffffff82393ce5: xchg ecx, eax; xchg [rax-0x36], esi; stosd [rdi]; xchg esp, eax; and eax, 0x80360cc0; iretd;
0xffffffff823bb9ef: xchg ecx, eax; xchg ebp, eax; adc dword ptr [rdi-0x476bdc98], 0x64; pop rsp; and ecx, edi; ret;
0xffffffff8265a4a1: xchg ecx, eax; xchg esp, eax; call far fword ptr [rdi+0x3fff9491];
0xffffffff8265a49d: xchg ecx, eax; xchg esp, eax; dec edi; xchg ecx, eax; xchg esp, eax; call far fword ptr [rdi+0x3fff9491];
0xffffffff82370644: xchg ecx, eax; xchg esp, eax; iretd;
0xffffffff822bf713: xchg ecx, eax; xchg esp, eax; mov bh, 0x70; iretd;
0xffffffff8239141c: xchg ecx, eax; xchg esp, eax; mov edi, 0xed1c448c; ret;
0xffffffff823dea7d: xchg ecx, eax; xor bl, dl; adc al, [rbx+rdx+0x50703a93]; pop rsp; ret 0x2fe7;
0xffffffff8234bbcd: xchg ecx, edi; cmp esi, ebp; pop rsp; iretd;
0xffffffff816f76a5: xchg ecx, esi; add eax, 0xf400000; xchg esp, eax; ret 0x8948;
0xffffffff82483a0c: xchg ecx, esi; xchg edx, esp; iretd;
0xffffffff824cb5cf: xchg ecx, esp; adc eax, 0x251897d7; cmp al, 0xdb; ret;
0xffffffff81750dea: xchg ecx, esp; add [rax], al; add [rcx-0x73], cl; add [rax-0x7d], r9d; ret;
0xffffffff825d81f2: xchg ecx, esp; and al, 0x94; ret 0x1d3c;
0xffffffff825d81f1: xchg ecx, esp; and al, 0x94; ret 0x1d3c;
0xffffffff823240fa: xchg ecx, esp; iretd;
0xffffffff82494d8f: xchg ecx, esp; mov [rbx+0x41], esi; leave; iretd;
0xffffffff8256a542: xchg ecx, esp; or [rdi+rsi*8-0x69], ah; movsb [rdi], [rsi]; ret 0x2004;
0xffffffff8235e61f: xchg ecx, esp; ret 0x7a85;
0xffffffff8346d9f5: xchg edi, eax; adc ah, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff82281d8c: xchg edi, eax; and cl, [rsi+rsi*2-0x3c26b522]; adc al, 0xe8; pop rsp; iretd;
0xffffffff8249a82c: xchg edi, eax; in eax, 0xb3; xor [rcx], eax; pop rsp; ret 0xb686;
0xffffffff8236b66a: xchg edi, eax; leave; mov ecx, 0x17183f3d; mov esp, 0xba52a105; scasd [rdi]; ret 0x9f55;
0xffffffff82343c42: xchg edi, eax; leave; mov esi, 0xe3246aae; iretd;
0xffffffff8256820b: xchg edi, eax; leave; pop rbx; popfq; jmp qword ptr [rdi-0x72fca4eb];
0xffffffff8241e8fb: xchg edi, eax; mov esp, edx; cwde; iretd;
0xffffffff826678a9: xchg edi, eax; pop rdi; dec edi; xchg esp, eax; pop rdi; jmp far fword ptr [rdi+0x4fff5f94];
0xffffffff8227e6fa: xchg edi, eax; pop rdx; leave; jmp far fword ptr [rax+0x23];
0xffffffff819d299c: xchg edi, eax; popfq; sub eax, 0xff7e60bc; add rsp, 8; ret;
0xffffffff823bb9f2: xchg edi, eax; push 0x64b89423; pop rsp; and ecx, edi; ret;
0xffffffff82287c2e: xchg edi, eax; push rbp; sahf; in al, dx; pop rsp; iretd;
0xffffffff82485ec3: xchg edi, eax; xchg [rdi-0x7d506d03], cl; xchg esp, eax; mov [rsi], dh; iretd;
0xffffffff823ecef8: xchg edi, eax; xchg esp, eax; and ecx, [rax-0x54]; ret 0xdf6a;
0xffffffff8265a47d: xchg edi, eax; xchg esp, eax; call far fword ptr [rdi];
0xffffffff8239d32f: xchg edi, eax; xchg esp, eax; ret;
0xffffffff8239d32e: xchg edi, eax; xchg esp, eax; ret;
0xffffffff81a71ecb: xchg edi, edi; add rsp, 0x10; xor eax, eax; ret;
0xffffffff820099c6: xchg edi, edi; cmc; add al, 0xff; leave; add eax, edi; jmp qword ptr [rdx+0x3cff8712];
0xffffffff814461fd: xchg edi, esp; add eax, [rax]; add [rax-0x47], cl; iretd;
0xffffffff8123eb37: xchg edi, esp; call qword ptr [rax-0x6f6f6f70];
0xffffffff82328a85: xchg edi, esp; iretd;
0xffffffff8237b536: xchg edx, eax; adc al, 0x1c; xchg esp, eax; ret 0x3690;
0xffffffff8228f746: xchg edx, eax; cli; mov esp, ss; ret;
0xffffffff82226f0a: xchg edx, eax; enter 0xf50c, 0x59; leave; ret 0x6a20;
0xffffffff824a2434: xchg edx, eax; leave; and rsi, [r14]; xchg edx, eax; mov [0x4b3e0be1b3c44600], al; ret;
0xffffffff82250e21: xchg edx, eax; leave; cmp al, 0x57; iretd;
0xffffffff815f23bf: xchg edx, eax; leave; dec dword ptr [rax-0x7b]; shl byte ptr [rsp+rdi+0x48], 0x89; ret;
0xffffffff825db0aa: xchg edx, eax; leave; fsin; add r11, [rdi+0x5a]; ret 0xfb04;
0xffffffff8226e955: xchg edx, eax; lodsd [rsi]; push 0x773b32c0; cmpsd [rsi], [rdi]; xchg esp, eax; iretd;
0xffffffff8231f6e9: xchg edx, eax; movsb [rdi], [rsi]; pop rsp; mov ah, 0x22; ret 0x9a7c;
0xffffffff826e3869: xchg edx, eax; or dh, [rcx+0x75]; leave; jmp qword ptr [rsi+0x64];
0xffffffff828e1418: xchg edx, eax; pop rsp; add [rax], al; ret 0x85;
0xffffffff8141591a: xchg edx, eax; pop rsp; fdivr st, st(7); pop rbx; pop r14; ret;
0xffffffff822a515d: xchg edx, eax; pop rsp; ret;
0xffffffff812b23bf: xchg edx, eax; rol dword ptr [rcx-0x75], 0x45; or al, 0xa8; add al, 0xf; xchg esp, eax; ret 0xca08;
0xffffffff83475836: xchg edx, eax; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8238d5db: xchg edx, eax; sbb bl, ah; leave; ret 0x298a;
0xffffffff8251b380: xchg edx, eax; sbb ebx, [rip+0x787ab394]; leave; mov ebp, 0xa80eaecc; ret;
0xffffffff82522b28: xchg edx, eax; scasb es:[rdi]; leave; call far fword ptr [rsi];
0xffffffff81a7de6b: xchg edx, eax; shl esi, 0x45; or al, [rdi+rcx]; xchg esp, eax; ret 0xca30;
0xffffffff824be817: xchg edx, eax; sub eax, 0xee9be68c; leave; call qword ptr [rax+0x28];
0xffffffff82273bf1: xchg edx, eax; xchg esp, eax; adc eax, 0xdd3cacc8; ret;
0xffffffff820098bc: xchg edx, eax; xchg esp, eax; cmp edi, 0x50; test byte ptr [rdi+rdi*8], 0x27; add al, 0xc7; call far fword ptr [rax+0x44ff8394];
0xffffffff824d0f78: xchg edx, eax; xchg esp, eax; mov esp, 0x2b354330; ret;
0xffffffff82546f8d: xchg edx, eax; xchg esp, eax; xor dl, al; call word ptr [rax];
0xffffffff8256340c: xchg edx, eax; xor dh, [rbx+0x23]; sbb [rax+0x22da8466], eax; adc rsp, rax; sbb esi, edi; ret 0xb5a7;
0xffffffff8252431a: xchg edx, ebx; leave; xor esp, [rsi]; ret;
0xffffffff82483a0e: xchg edx, esp; iretd;
0xffffffff824936f5: xchg edx, esp; sbb [r10-0x6324f08e], rsi; mov eax, 0x12e0b00f; ret;
0xffffffff822f7600: xchg esi, eax; adc [rsi], bh; sub [rbx], ebp; or ebp, [rbp-0x80]; leave; iretd;
0xffffffff82498eb8: xchg esi, eax; add [rcx-0x61], esi; cmp [rbp+0x72], ebx; leave; iretd;
0xffffffff824e80f3: xchg esi, eax; add eax, 0xa6c52ee6; mov es, [rbx+0x1c598b87]; pop rsp; sub edi, esi; iretd;
0xffffffff825480f1: xchg esi, eax; cli; mov esp, [rdi+rbp+0xf575933]; mov esi, 0xcdd355e2; call qword ptr [rcx+rcx*8+0x50];
0xffffffff822cae5b: xchg esi, eax; cmpsd [rsi], [rdi]; xchg esp, eax; pop rdx; xchg ecx, eax; call far fword ptr [rax+0x20];
0xffffffff82659cbe: xchg esi, eax; dec dword ptr [rdi+0x4fff965c]; pop rsp; xchg esi, eax; jmp far fword ptr [rdi];
0xffffffff822de3a0: xchg esi, eax; fsub st(3), st; and ebx, [rax]; fdiv st, st(1); pop rsp; ret 0x7d0c;
0xffffffff82248154: xchg esi, eax; int1; enter 0x7e69, 0xb0; xchg esp, eax; ret 0x9b00;
0xffffffff81448b60: xchg esi, eax; leave; dec dword ptr [rax-0x7b]; shl byte ptr [rdx+rdi+0x48], 0x89; ret;
0xffffffff813651c6: xchg esi, eax; leave; ret 0x7301;
0xffffffff819cd5af: xchg esi, eax; mov [rax], al; add [rax], al; add rsp, 0xc; ret;
0xffffffff82245eae: xchg esi, eax; mov cl, 0xf; sub esi, ebp; xchg [rdi], esp; iretd;
0xffffffff823ecf8b: xchg esi, eax; mov edi, 0x6468c15d; xchg [rip-0x76a7431d], esp; sbb al, 0xbb; iretd;
0xffffffff82433ab1: xchg esi, eax; mov edx, 0x5d83c24f; imul eax, edx, 0xffffff8b; mov cl, 0x60; mov esp, ss; ret;
0xffffffff82439ca7: xchg esi, eax; out 0x4f, eax; mov edi, 0xf69f9ff9; adc esp, edx; popfq; ret 0xe42;
0xffffffff82645b29: xchg esi, eax; out dx, eax; dec dword ptr [rdi]; xchg esp, eax; out dx, eax; jmp far fword ptr [rdi+0x6fffef93];
0xffffffff82527487: xchg esi, eax; pop rbp; sbb r12b, [rip+0x161fed76]; xchg esp, eax; iretd;
0xffffffff81aedc70: xchg esi, eax; pop rsp; jmp qword ptr [rsi+0x66];
0xffffffff81af0b96: xchg esi, eax; pop rsp; jmp qword ptr [rsi+0xf];
0xffffffff810610b2: xchg esi, eax; pop rsp; sub ebx, 0xffffffc9; pop rbx; pop rbp; ret;
0xffffffff823be3e2: xchg esi, eax; pop rsp; test ch, al; ret;
0xffffffff819d2258: xchg esi, eax; popfq; sub eax, 0xff7e6800; add rsp, 8; ret;
0xffffffff82003e2e: xchg esi, eax; push qword ptr [rax-0x4f00faae]; pop rsp; xchg esi, eax; jmp far fword ptr [rsi-0x5b0069a4];
0xffffffff82478c7f: xchg esi, eax; push rbx; xchg esp, eax; ret 0xf015;
0xffffffff824c9b29: xchg esi, eax; rol dword ptr [rcx], cl; pop rsp; add eax, 0x2d90bd12; mov esp, 0x5712dda7; iretd;
0xffffffff83475441: xchg esi, eax; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8255896a: xchg esi, eax; sbb al, 0x76; or eax, 0x5b4d27e5; pop rsp; ret;
0xffffffff82433634: xchg esi, eax; test [rbx], ebx; fucomi st, st(1); xchg esp, eax; xchg ebx, eax; iretd;
0xffffffff834758f6: xchg esi, eax; xchg ecx, eax; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff822f8688: xchg esi, eax; xchg esp, eax; cmp dword ptr [rip+0x5422469b], 4; ret;
0xffffffff8161ef56: xchg esi, eax; xchg esp, eax; int3; inc dword ptr [rbp+0x5b0274c0]; ret;
0xffffffff825565ee: xchg esi, eax; xchg esp, eax; iretd;
0xffffffff823b25a1: xchg esi, eax; xchg esp, eax; ret 0x2449;
0xffffffff824026e5: xchg esi, eax; xchg esp, eax; ret;
0xffffffff8251373a: xchg esi, eax; xchg sp, ax; ret 0x29;
0xffffffff824f187a: xchg esi, ebp; pop rsp; mov esi, 0x95cd3e03; push rbp; lodsb [rsi]; ret 0xa35e;
0xffffffff8144a684: xchg esi, esp; add eax, [rax]; add [rax-0x77], cl; ret;
0xffffffff823693d5: xchg esi, esp; iretd;
0xffffffff823d7a5e: xchg esi, esp; jmp rbp;
0xffffffff824bd4ae: xchg esi, esp; mov [0x6302687b442355c9], al; sbb [rdx-0xdc52e61], edi; or dl, [rdx]; ret 0x191a;
0xffffffff823b623c: xchg esi, esp; mov r12d, 0xdef724e6; or dl, [rsi]; push rbp; pop rcx; ret 0xdf95;
0xffffffff825521fc: xchg esi, esp; ret;
0xffffffff82268dac: xchg esi, esp; xchg esi, eax; out dx, eax; jmp qword ptr [rbx-0x661896ca];
0xffffffff8143f523: xchg esp, eax; adc [rax-0x7d], cl; ret 0x4801;
0xffffffff825ce35e: xchg esp, eax; adc [rbp+0x45], eax; iretd;
0xffffffff82240282: xchg esp, eax; adc [rbx+0xe], dl; or [rbx+rsi*8+0x74], bh; ret;
0xffffffff8242ca1f: xchg esp, eax; adc al, 0x71; call qword ptr [r9-0x2c];
0xffffffff8228ae8d: xchg esp, eax; adc al, [rax-6]; lahf; cmp [rcx-0x4108543a], dh; pop rdx; ret;
0xffffffff82007c7c: xchg esp, eax; adc al, [rip-0x38ee9801]; jmp qword ptr [rdi-0x48];
0xffffffff82007a04: xchg esp, eax; adc al, bh; jmp rdi;
0xffffffff823f94f4: xchg esp, eax; adc bh, bl; fnsave [rsi+rcx*2-0x6c890d00]; scasd [rdi]; ret;
0xffffffff82273bf2: xchg esp, eax; adc eax, 0xdd3cacc8; ret;
0xffffffff82284607: xchg esp, eax; adc eax, 0xeb364aef; iret;
0xffffffff8154a888: xchg esp, eax; adc eax, ebp; jmp qword ptr [rbp+0x48];
0xffffffff823e26a8: xchg esp, eax; adc ecx, [rsi+0x3476cb15]; call qword ptr [rsi-0x69e2c4ed];
0xffffffff82004b64: xchg esp, eax; adc edx, [rcx]; jmp far fword ptr [rax-0x3600fabd];
0xffffffff8222d63a: xchg esp, eax; adc edx, ebp; mov bl, 0x66; xor al, 0xdf; sub ah, [rdx]; ret;
0xffffffff824fe182: xchg esp, eax; adc esp, [rax]; fadd st, qword ptr [rax]; call far fword ptr [rsi-0x74980156];
0xffffffff822e3af9: xchg esp, eax; add [edx], dl; iretd;
0xffffffff817fc1f6: xchg esp, eax; add [r9-0x75], r9b; cmp [r10+0x9088], r9b; add [rax-0x75], cl; sbb byte ptr [rax+0x48000000], 0x89; ret 0xc148;
0xffffffff81334277: xchg esp, eax; add [rax+0x63], cl; ret;
0xffffffff813389c3: xchg esp, eax; add [rax-0x39], cl; mov eax, 0xe882e0a6; jmp qword ptr [rbp-0x76bbff6c];
0xffffffff81334fc9: xchg esp, eax; add [rax-0x39], cl; ret;
0xffffffff816b5cdf: xchg esp, eax; add [rax-0x77], cl; fimul st, word ptr [rax-0x77]; ret;
0xffffffff8132523c: xchg esp, eax; add [rax-0x77], cl; ret;
0xffffffff8197443c: xchg esp, eax; add [rax-0x77], ecx; ret 0xc148;
0xffffffff813359ee: xchg esp, eax; add [rax-0x7d], cl; ret;
0xffffffff816d06f1: xchg esp, eax; add [rax], al; add [rax+0x29], cl; ret 0x8948;
0xffffffff816cff6b: xchg esp, eax; add [rax], al; add [rax+0x29], cl; ret 0xc931;
0xffffffff815d59e8: xchg esp, eax; add [rax], al; add [rax+rax*8+0x415b0474], al; pop rsi; ret;
0xffffffff8173d4c6: xchg esp, eax; add [rax], al; add [rax-0x39], cl; ret 0x1816;
0xffffffff81a4f169: xchg esp, eax; add [rax], al; add [rax-0x39], cl; ret 0x85e9;
0xffffffff81737a2c: xchg esp, eax; add [rax], al; add [rax-0x39], cl; ret 0x9c3;
0xffffffff81a4f08c: xchg esp, eax; add [rax], al; add [rax-0x39], cl; ret 0x9cce;
0xffffffff817313a8: xchg esp, eax; add [rax], al; add [rax-0x39], cl; ret 0xfdf2;
0xffffffff810cfc84: xchg esp, eax; add [rax], al; add [rax-0x39], cl; ret;
0xffffffff8114b3d4: xchg esp, eax; add [rax], al; add [rax-0x75], cl; or [rax-0x77], cl; ret 0xc1f6;
0xffffffff81165872: xchg esp, eax; add [rax], al; add [rax-0x75], cl; pushfq; ret;
0xffffffff8116227d: xchg esp, eax; add [rax], al; add [rax-0x75], cl; xchg esp, eax; ret 0x1a0;
0xffffffff81553f44: xchg esp, eax; add [rax], al; add [rax-0x77], cl; ret 0xd348;
0xffffffff81819750: xchg esp, eax; add [rax], al; add [rax-0x77], cl; ret;
0xffffffff81482e12: xchg esp, eax; add [rax], al; add [rax-0x7d], cl; ret;
0xffffffff81a2553f: xchg esp, eax; add [rax], al; add [rax-0x7f], cl; ret;
0xffffffff8281296d: xchg esp, eax; add [rax], al; add [rax], al; add [rax], al; call far fword ptr [r9-0x10];
0xffffffff8220c02b: xchg esp, eax; add [rax], al; add [rcx+1], al; iretd;
0xffffffff815d307c: xchg esp, eax; add [rax], al; add [rcx-0x7f], cl; ret 0x200;
0xffffffff81b49871: xchg esp, eax; add [rax], al; add [rcx], dh; rcr byte ptr [rbx+0x41], 0x5e; ret;
0xffffffff81c71068: xchg esp, eax; add [rax], al; add [rdi], cl; mov dh, 0x47; adc cl, [rax-0x75]; ret 0x4828;
0xffffffff8101a238: xchg esp, eax; add [rax], al; add al, ch; jmp qword ptr [rdi+0x44f6006c];
0xffffffff815155fa: xchg esp, eax; add [rax], al; add dh, dh; ret;
0xffffffff825b1a98: xchg esp, eax; add [rax], al; rol byte ptr [rax], 0; add [rax], al; ret;
0xffffffff815a7fbb: xchg esp, eax; add [rax], eax; add [rbx+0x41], bl; pop rsi; pop r15; ret;
0xffffffff82ad49a1: xchg esp, eax; add [rax], eax; call far fword ptr [rbx+0x1b];
0xffffffff82ad4351: xchg esp, eax; add [rax], eax; ret 0x1b56;
0xffffffff82ad3b5d: xchg esp, eax; add [rax], eax; ret;
0xffffffff818315f0: xchg esp, eax; add [rax], ebx; add [rax], eax; add [rbx+0x1180184], cl; add [rax], al; ret;
0xffffffff8292f518: xchg esp, eax; add [rax], r8b; add byte ptr [rax], 0; add al, ah; ret 4;
0xffffffff82930598: xchg esp, eax; add [rax], r8b; add byte ptr [rax], 0; add al, dl; ret 8;
0xffffffff8292fcec: xchg esp, eax; add [rax], r8b; rol byte ptr [rax], 0; add [rbx], dh; ret 7;
0xffffffff8238ee48: xchg esp, eax; add [rbx+0x437f31fd], esp; iretd;
0xffffffff816bdd79: xchg esp, eax; add [rbx+0x4d8b0075], cl; add al, 0x8d; push rsi; jmp qword ptr [rcx];
0xffffffff82462bf4: xchg esp, eax; add [rbx+rax*4-0x32], edi; and [rdi-0x45f2e787], esp; ret 0x275;
0xffffffff8133451a: xchg esp, eax; add [rcx+0x5c415be8], cl; pop r14; pop r15; pop rbp; ret;
0xffffffff8133431d: xchg esp, eax; add [rcx+0x5e415be8], cl; pop r15; pop rbp; ret;
0xffffffff81830361: xchg esp, eax; add [rcx+rax], eax; add dh, dh; ret 0xf02;
0xffffffff835168a9: xchg esp, eax; add [rcx-1], eax; rcl byte ptr [rcx+rax-0x7f], 1; call qword ptr [rax];
0xffffffff82008e7c: xchg esp, eax; add [rip-0x38f73401], al; jmp far fword ptr [rax-0x77009b96];
0xffffffff8132ca36: xchg esp, eax; add [rsp+rax+0x5b], dh; pop r14; ret;
0xffffffff815178d8: xchg esp, eax; add al, 0; add [rax-0x77], cl; ret;
0xffffffff819315dd: xchg esp, eax; add al, 0; add [rcx], dh; rol byte ptr [rcx+0x3b], 8; setne al; ret;
0xffffffff824b9c83: xchg esp, eax; add al, 0x2c; ret;
0xffffffff8268f850: xchg esp, eax; add al, 0x3e; out dx, al; adc [rdi+rsi*2+0x2a], dh; iretd;
0xffffffff82412df0: xchg esp, eax; add al, 0xb3; rol byte ptr [rbx+rax], cl; cwde; sbb al, al; iretd;
0xffffffff82554bd6: xchg esp, eax; add al, 0xce; iretd;
0xffffffff812783c8: xchg esp, eax; add al, [rax]; add [rax-0x75], cl; or [rax-0x77], cl; ret 0xc1f6;
0xffffffff82809b59: xchg esp, eax; add al, [rax]; add [rax], al; add [rax], al; mov [rdi+rbx*8], ch; jmp far fword ptr [rsi-0x7a];
0xffffffff824bd840: xchg esp, eax; add ch, [rsi]; ret;
0xffffffff82540e24: xchg esp, eax; add dh, ah; or ebx, [rsi]; ret;
0xffffffff814b26a3: xchg esp, eax; add dh, dh; add eax, 0x21d9058; add dh, [rbp+1]; ret;
0xffffffff814b1753: xchg esp, eax; add dh, dh; add eax, 0x21d9fa8; add dh, [rbp+3]; xor eax, eax; ret;
0xffffffff8132cab9: xchg esp, eax; add dh, dh; ret;
0xffffffff82456240: xchg esp, eax; add dl, [rcx+0x8ef3e60]; fidiv st, word ptr [rcx]; imul eax, [rax], 0x3c; mov dh, 0x3c; ret 0x9b2d;
0xffffffff81b0fde2: xchg esp, eax; add eax, 0; add [rax], al; pop rbx; pop r14; ret;
0xffffffff81b6a76c: xchg esp, eax; add eax, 0; add [rax], al; ret;
0xffffffff81186284: xchg esp, eax; add eax, 0x2490252; mov eax, 1; ret;
0xffffffff8232837f: xchg esp, eax; add eax, 0x9856eb60; mov [0xfa2fbf89026148af], al; ret 0x1a8;
0xffffffff823abac8: xchg esp, eax; add eax, 0xbca93a51; ret;
0xffffffff824df94e: xchg esp, eax; add eax, 0xd2863e75; cmpsb [rsi], [rdi]; sti; cli; ret 0x8ddb;
0xffffffff83519f99: xchg esp, eax; add eax, 0xffffff81; inc dword ptr [rax]; xchg ebp, eax; add eax, 0xffffff81; jmp qword ptr [rax-0x7efa6b];
0xffffffff812aa9ee: xchg esp, eax; add eax, [rax]; xor eax, eax; pop rbx; pop r14; ret;
0xffffffff835180d9: xchg esp, eax; add eax, [rcx-1]; adc byte ptr [rdi-0x7efd], 0xff; call qword ptr [rax];
0xffffffff8342e43c: xchg esp, eax; add eax, edi; sldt [rax]; pop rbx; pop r14; ret;
0xffffffff815727c5: xchg esp, eax; add ebx, [rbx+0x41]; pop rsi; ret;
0xffffffff8197f9bf: xchg esp, eax; add ecx, [rax-0x7d]; ret;
0xffffffff82432ac6: xchg esp, eax; add esp, [rbx]; ret 0x7a74;
0xffffffff8200455c: xchg esp, eax; add rax, 0xffffffffc71466ff; jmp far fword ptr [rsp+rdx-0x39];
0xffffffff82006d7c: xchg esp, eax; and [rip-0x38e6f201], eax; call qword ptr [rsp+rcx];
0xffffffff8251514c: xchg esp, eax; and ah, ch; adc ch, al; lea ebx, [rbp-0x502f442f]; ret 0x8a64;
0xffffffff812d030e: xchg esp, eax; and al, 0; adc [rax], al; add [rax+0x39], cl; ret 0x2a73;
0xffffffff8192d240: xchg esp, eax; and al, 0; add [rax], eax; add [rax-0x7d], cl; ret 0x4848;
0xffffffff82303ab3: xchg esp, eax; and al, 0x17; ret 0x808f;
0xffffffff81b7e779: xchg esp, eax; and al, 0x20; add al, [rax]; add [rcx-0x77], cl; iretd;
0xffffffff816ca1d0: xchg esp, eax; and al, 0x32; add [rax], eax; add [rax], dh; ret 0xca08;
0xffffffff82005fbc: xchg esp, eax; and al, 0x34; call qword ptr [rax+0x2f];
0xffffffff816ca1fe: xchg esp, eax; and al, 0x36; add [rax], eax; add [rax], dh; ret 0xca08;
0xffffffff816ca218: xchg esp, eax; and al, 0x38; add [rax], eax; add [rax], dh; ret 0x8a41;
0xffffffff822d9774: xchg esp, eax; and al, 0x38; shl bl, cl; ret 0x56bc;
0xffffffff816ca22e: xchg esp, eax; and al, 0x3a; add [rax], eax; add [rax], dh; ret 0xda08;
0xffffffff815b8bd0: xchg esp, eax; and al, 0x3c; add eax, [rax]; add [rax+1], cl; ret 0x8a41;
0xffffffff815b87d4: xchg esp, eax; and al, 0x3c; add eax, [rax]; add [rax+1], cl; ret 0xd348;
0xffffffff815af95b: xchg esp, eax; and al, 0x3c; add eax, [rax]; add [rax-0x7f], cl; ret 0;
0xffffffff816ca252: xchg esp, eax; and al, 0x3d; add [rax], eax; add [rax], dh; ret 0xca08;
0xffffffff816ca26a: xchg esp, eax; and al, 0x3f; add [rax], eax; add [rax], dh; ret 0xca08;
0xffffffff82554272: xchg esp, eax; and al, 0x52; rol dword ptr [rdi+0x3647567e], 0xea; ret 0xff00;
0xffffffff819e3374: xchg esp, eax; and al, 0x58; add [rax], eax; add [rcx-0x75], al; or [r8+0x63], r9b; ret 0xc748;
0xffffffff8104dbb0: xchg esp, eax; and al, 0x80; add [rax], al; add [rax+1], cl; ret 0x394c;
0xffffffff813f624a: xchg esp, eax; and al, 0x80; add [rax], al; add [rcx-0x50f0b738], cl; ret 0x148;
0xffffffff813719e9: xchg esp, eax; and al, 0x80; add [rax], al; add [rcx], al; ret 0x8966;
0xffffffff8129e5cc: xchg esp, eax; and al, 0x88; add [rax], eax; add [rax-9], cl; ret 0xff9f;
0xffffffff818ecb7e: xchg esp, eax; and al, 0x90; add [rax], al; add dh, dh; ret 0x7501;
0xffffffff813aaaac: xchg esp, eax; and al, 0x98; add [rax], al; add [rax-0x7d], cl; ret 0x48ff;
0xffffffff817c8846: xchg esp, eax; and al, 0x98; add [rax], al; add [rcx], dh; rol byte ptr [rbx-0x6bf0ed07], cl; ret 0xc148;
0xffffffff81be336b: xchg esp, eax; and al, 0x9a; add [rax], al; add [rcx], bh; ror byte ptr [rdi], 1; ret 0x8d48;
0xffffffff81b432f4: xchg esp, eax; and al, 0xa0; add eax, [rax]; add dh, dh; ret 0x7504;
0xffffffff819435a9: xchg esp, eax; and al, 0xa8; add [rax], al; add [rbx+0x94803e2], al; ret 0x8949;
0xffffffff81bdcca0: xchg esp, eax; and al, 0xb0; add [rax], al; add [rsi-0x3f], ah; ret 0x4808;
0xffffffff82406706: xchg esp, eax; and al, 0xb6; iretd;
0xffffffff819393d5: xchg esp, eax; and al, 0xb8; add [rax], al; add [rax-0x7d], cl; ret 0x4801;
0xffffffff822f9d7d: xchg esp, eax; and al, 0xb9; ret 0xe7d1;
0xffffffff811475d5: xchg esp, eax; and al, 0xbc; add [rax], al; add [rcx], al; ret 0x8403;
0xffffffff81594f91: xchg esp, eax; and al, 0xc4; add [rax], al; add [rcx], ch; ret 0x9489;
0xffffffff8126bbca: xchg esp, eax; and al, 0xc8; add al, [rax]; add [rcx], al; ret 0xb9;
0xffffffff8167232b: xchg esp, eax; and al, 0xe0; add [rax], al; add [rbx+0x94803e2], al; ret 0x8948;
0xffffffff8194366c: xchg esp, eax; and al, 0xe8; add [rax], al; add [rbx+0x94803e2], al; ret 0x8949;
0xffffffff814e8313: xchg esp, eax; and al, 0xe8; add [rax], al; add al, ch; push rdx; iretd;
0xffffffff81b75a53: xchg esp, eax; and al, 0xf0; add [rax], al; add [rbx+0x94803e2], al; ret 0x8948;
0xffffffff811cb52c: xchg esp, eax; and al, 0xf5; add [rax], al; add [rax+0x31], cl; ret 0x948;
0xffffffff82006a7c: xchg esp, eax; and al, 5; call far fword ptr [rdx+rbx+0x4dbffc7];
0xffffffff81115c89: xchg esp, eax; and al, 8; add [rax], eax; add [rax-0x7d], cl; ret 0x4808;
0xffffffff82005af0: xchg esp, eax; and al, bh; call qword ptr [rsi];
0xffffffff822cb3e8: xchg esp, eax; and bl, [rdi]; imul dword ptr [rdx+0x51]; call far fword ptr [rcx+4];
0xffffffff827fed0c: xchg esp, eax; and bl, [rdx]; jmp qword ptr [rax];
0xffffffff81b25d78: xchg esp, eax; and ch, al; jmp qword ptr [rbp+0x48];
0xffffffff824a17e9: xchg esp, eax; and ch, dl; scasb [rdi]; ret 0xf250;
0xffffffff822fd00a: xchg esp, eax; and dword ptr [rdi-0x67], 0xfcc5a337; pop rsp; iretd;
0xffffffff823fbef6: xchg esp, eax; and eax, 0x38c24df8; jmp qword ptr [rbx+0x5a090c50];
0xffffffff82393cea: xchg esp, eax; and eax, 0x80360cc0; iretd;
0xffffffff81432276: xchg esp, eax; and eax, 0x850f2002; sbb eax, 0xf6000003; ret;
0xffffffff82373f6a: xchg esp, eax; and ebp, [rsi+0x131b0396]; lahf; ret 0x1c64;
0xffffffff8256b002: xchg esp, eax; and ebx, [rbx-0x2c]; out dx, al; add bh, [rax+0x4c]; ret;
0xffffffff823ecef9: xchg esp, eax; and ecx, [rax-0x54]; ret 0xdf6a;
0xffffffff82005cd0: xchg esp, eax; and edi, eax; call far fword ptr [rdx-0x2f];
0xffffffff82501738: xchg esp, eax; and edx, [rbx+0x7e]; mov al, [0xb43894119bef6f83]; xchg esp, eax; cmp [rdi], edx; iretd;
0xffffffff824b1a1a: xchg esp, eax; bswap ebp; shl dword ptr [rax], 1; movsb [rdi], [rsi]; iretd;
0xffffffff81552de7: xchg esp, eax; call far fword ptr [rbx+0x41];
0xffffffff817c3286: xchg esp, eax; call far fword ptr [rbx+0x41];
0xffffffff815b0468: xchg esp, eax; call far fword ptr [rcx+rax+0x74ed8548];
0xffffffff824fecd6: xchg esp, eax; call far fword ptr [rcx-0x3d16dea0];
0xffffffff8265a41a: xchg esp, eax; call far fword ptr [rdi+0x1fff94a6];
0xffffffff8265a386: xchg esp, eax; call far fword ptr [rdi+0x1fff94be];
0xffffffff8265a612: xchg esp, eax; call far fword ptr [rdi+0x2b];
0xffffffff8265a6d2: xchg esp, eax; call far fword ptr [rdi+0x2fff9404];
0xffffffff8265a5ce: xchg esp, eax; call far fword ptr [rdi+0x2fff9434];
0xffffffff8265a4e2: xchg esp, eax; call far fword ptr [rdi+0x2fff947e];
0xffffffff8265a4da: xchg esp, eax; call far fword ptr [rdi+0x2fff9483];
0xffffffff8265a212: xchg esp, eax; call far fword ptr [rdi+0x2fff94ff];
0xffffffff8265a592: xchg esp, eax; call far fword ptr [rdi+0x3a];
0xffffffff8265a582: xchg esp, eax; call far fword ptr [rdi+0x3b];
0xffffffff8265a4a2: xchg esp, eax; call far fword ptr [rdi+0x3fff9491];
0xffffffff8265a3da: xchg esp, eax; call far fword ptr [rdi+0x4fff94ae];
0xffffffff8265a542: xchg esp, eax; call far fword ptr [rdi+0x58];
0xffffffff8265a53e: xchg esp, eax; call far fword ptr [rdi+0x5fff945b];
0xffffffff8265a51e: xchg esp, eax; call far fword ptr [rdi+0x64];
0xffffffff8265a51d: xchg esp, eax; call far fword ptr [rdi+0x64];
0xffffffff8265a516: xchg esp, eax; call far fword ptr [rdi+0x65];
0xffffffff8265a4ee: xchg esp, eax; call far fword ptr [rdi+0x75];
0xffffffff8266b911: xchg esp, eax; call far fword ptr [rdi+0x7fff4894];
0xffffffff8265a52e: xchg esp, eax; call far fword ptr [rdi+0x7fff9463];
0xffffffff8265a442: xchg esp, eax; call far fword ptr [rdi+0x7fff949f];
0xffffffff8265a5de: xchg esp, eax; call far fword ptr [rdi+0xfff9431];
0xffffffff8265a35e: xchg esp, eax; call far fword ptr [rdi+0xfff94cb];
0xffffffff8265a2ba: xchg esp, eax; call far fword ptr [rdi+0xfff94e2];
0xffffffff8265a6c6: xchg esp, eax; call far fword ptr [rdi+5];
0xffffffff8265a6ba: xchg esp, eax; call far fword ptr [rdi+6];
0xffffffff8265a28e: xchg esp, eax; call far fword ptr [rdi-0x16];
0xffffffff8265a29a: xchg esp, eax; call far fword ptr [rdi-0x18];
0xffffffff8265a2b2: xchg esp, eax; call far fword ptr [rdi-0x1d];
0xffffffff8265a2da: xchg esp, eax; call far fword ptr [rdi-0x24];
0xffffffff8265a2ee: xchg esp, eax; call far fword ptr [rdi-0x26];
0xffffffff8265a30a: xchg esp, eax; call far fword ptr [rdi-0x29];
0xffffffff8265a356: xchg esp, eax; call far fword ptr [rdi-0x34];
0xffffffff8265a3c6: xchg esp, eax; call far fword ptr [rdi-0x40006b4b];
0xffffffff8265a3ee: xchg esp, eax; call far fword ptr [rdi-0x40006b56];
0xffffffff8265a472: xchg esp, eax; call far fword ptr [rdi-0x40006b67];
0xffffffff8265a3fe: xchg esp, eax; call far fword ptr [rdi-0x58];
0xffffffff8265a43e: xchg esp, eax; call far fword ptr [rdi-0x5f];
0xffffffff8265a44e: xchg esp, eax; call far fword ptr [rdi-0x63];
0xffffffff8265a33a: xchg esp, eax; call far fword ptr [rdi-0x6b31];
0xffffffff8265a236: xchg esp, eax; call far fword ptr [rdi-0x70006b08];
0xffffffff8265a3e2: xchg esp, eax; call far fword ptr [rdi-0x70006b54];
0xffffffff8265a54e: xchg esp, eax; call far fword ptr [rdi-0x70006bb3];
0xffffffff8265a6fe: xchg esp, eax; call far fword ptr [rdi];
0xffffffff8264f941: xchg esp, eax; call far fword ptr [rdi];
0xffffffff8266d8f9: xchg esp, eax; call far fword ptr [rdi];
0xffffffff8265a23e: xchg esp, eax; call far fword ptr [rdi];
0xffffffff82009c72: xchg esp, eax; call far fword ptr [rdx+rsi*8+0x2e4ff04];
0xffffffff823db9b8: xchg esp, eax; call far fword ptr [rsi-0x30];
0xffffffff8266628d: xchg esp, eax; call far fword ptr gs:[rdi];
0xffffffff8281460c: xchg esp, eax; call qword ptr [r15];
0xffffffff817746ad: xchg esp, eax; call qword ptr [rax+0x68cfcbe8];
0xffffffff8176c50d: xchg esp, eax; call qword ptr [rax+0x69516be8];
0xffffffff81767add: xchg esp, eax; call qword ptr [rax+0x699b9be8];
0xffffffff82a3db84: xchg esp, eax; call qword ptr [rax+rax];
0xffffffff82009c7e: xchg esp, eax; call qword ptr [rax-0x1e00fb0e];
0xffffffff81774a01: xchg esp, eax; call qword ptr [rax-0x6f6f6f70];
0xffffffff82569803: xchg esp, eax; call qword ptr [rax];
0xffffffff82431e1e: xchg esp, eax; call qword ptr [rbp-0x15];
0xffffffff82478a38: xchg esp, eax; call qword ptr [rbp-0x2d];
0xffffffff8228a77c: xchg esp, eax; call qword ptr [rbx+rdx*4];
0xffffffff823c545b: xchg esp, eax; call qword ptr [rcx+0x5eb8a65e];
0xffffffff824945ca: xchg esp, eax; call qword ptr [rsi+0x58];
0xffffffff823925e3: xchg esp, eax; call qword ptr [rsi];
0xffffffff81a6deb8: xchg esp, eax; call qword ptr fs:[rax-0x6f6f6f70];
0xffffffff822a17b9: xchg esp, eax; call rbx;
0xffffffff82237c1e: xchg esp, eax; call rsi;
0xffffffff82658d81: xchg esp, eax; cdq; call far fword ptr [rdi+0xfff9994];
0xffffffff81c5d998: xchg esp, eax; cdq; call qword ptr [r8+0x55909090];
0xffffffff82658d7d: xchg esp, eax; cdq; dec edi; xchg esp, eax; cdq; call far fword ptr [rdi+0xfff9994];
0xffffffff8248a35c: xchg esp, eax; cdq; fxch st, st(7); iretd;
0xffffffff823581fa: xchg esp, eax; cdq; imul edx, [rbx+0x5c], 5; sbb al, 1; ret 0x997f;
0xffffffff8171de94: xchg esp, eax; cdq; jmp qword ptr [rsi+0xf];
0xffffffff822e3524: xchg esp, eax; cdq; ret 0xe9c6;
0xffffffff822e3523: xchg esp, eax; cdq; ret 0xe9c6;
0xffffffff822547c2: xchg esp, eax; cdq; ret;
0xffffffff8169d240: xchg esp, eax; clc; cld; add [rax-0x7f], ecx; ret;
0xffffffff8112de60: xchg esp, eax; clc; jmp qword ptr [rsi+0x66];
0xffffffff8255df9a: xchg esp, eax; clc; mov bh, 8; movsb [rdi], [rsi]; fwait; ret;
0xffffffff82407750: xchg esp, eax; clc; movsd [rdi], [rsi]; test al, 0x3a; ret 0x92b3;
0xffffffff822ca4a0: xchg esp, eax; clc; sar bl, 1; call qword ptr [rbx];
0xffffffff82524318: xchg esp, eax; clc; xchg edx, ebx; leave; xor esp, [rsi]; ret;
0xffffffff8264233d: xchg esp, eax; cld; call far fword ptr [rdi];
0xffffffff82642339: xchg esp, eax; cld; dec dword ptr [rdi-0x6c]; cld; call far fword ptr [rdi];
0xffffffff812204f8: xchg esp, eax; cld; fidivr st, word ptr [rsi-0x18]; iretd;
0xffffffff82547c58: xchg esp, eax; cld; iretd;
0xffffffff82642331: xchg esp, eax; cld; jmp far fword ptr [rdi+0x7ffffc94];
0xffffffff82642341: xchg esp, eax; cld; jmp far fword ptr [rdi-0x6d];
0xffffffff823532c5: xchg esp, eax; cld; ret 0x6e3d;
0xffffffff8229b992: xchg esp, eax; cld; ret;
0xffffffff8226e76d: xchg esp, eax; cli; and eax, 0xcbdd2e95; add [rdx+rax*2+0x2e], edi; ret 0x77ae;
0xffffffff82480e3c: xchg esp, eax; cli; call far fword ptr [rcx+0x54];
0xffffffff822d3e79: xchg esp, eax; cli; cmpsb [rsi], [rdi]; ret;
0xffffffff82642e99: xchg esp, eax; cli; jmp far fword ptr [rdi];
0xffffffff82305d7f: xchg esp, eax; cli; ret 0x9cff;
0xffffffff81242815: xchg esp, eax; cmc; jmp qword ptr [rbp+0x48];
0xffffffff826fb093: xchg esp, eax; cmc; mov al, [0x63aae8f46cefd50b]; jmp rdx;
0xffffffff826fb094: xchg esp, eax; cmc; mov al, [0x63aae8f46cefd50b]; jmp rdx;
0xffffffff826dd803: xchg esp, eax; cmc; mov al, [0xe5fa79825fbe7b0a]; jmp qword ptr [rbx-0x48];
0xffffffff824822fd: xchg esp, eax; cmc; mov sil, 0x51; xchg edi, eax; call far fword ptr [rdx+0x37b0060a];
0xffffffff826beeaf: xchg esp, eax; cmc; sti; iretd;
0xffffffff827ffa48: xchg esp, eax; cmp [rax+rax], eax; add [rax], al; add [rax], al; jmp qword ptr [r13+0x439];
0xffffffff818f9b83: xchg esp, eax; cmp [rax], al; mov rax, rbx; pop rbx; pop r14; ret;
0xffffffff82501745: xchg esp, eax; cmp [rdi], edx; iretd;
0xffffffff82478bb5: xchg esp, eax; cmp [rdx-0x3b2ac921], ebp; and cl, [rbp+rbp*2-0x66736c65]; mov dl, 0xbc; ret;
0xffffffff824e82cb: xchg esp, eax; cmp al, 0x85; int 0xae; iretd;
0xffffffff82362922: xchg esp, eax; cmp al, 0x8b; mov [rbp+0x17], cs; ret;
0xffffffff827fe814: xchg esp, eax; cmp al, 0xd8; call qword ptr [rdi+0xf];
0xffffffff8228f606: xchg esp, eax; cmp al, 0xe6; push rsi; iretd;
0xffffffff824c0a5b: xchg esp, eax; cmp bl, [r15+0x4b]; or bh, [rdx-0x73906a75]; scasd [rdi]; push r11; iretd;
0xffffffff823c72ef: xchg esp, eax; cmp ch, [rbx-0xeab6d5]; cmp r10, [r10+0x5d256594]; iretd;
0xffffffff82515747: xchg esp, eax; cmp cl, [rdi+0x2d]; iretd;
0xffffffff8238df87: xchg esp, eax; cmp dl, [rsi-0x5a]; ret;
0xffffffff823bf965: xchg esp, eax; cmp dl, [rsp+rcx*8]; push rbx; mov cl, al; ret;
0xffffffff822f8689: xchg esp, eax; cmp dword ptr [rip+0x5422469b], 4; ret;
0xffffffff8231174a: xchg esp, eax; cmp eax, 0x1c1d5fd3; iretd;
0xffffffff8266dd4d: xchg esp, eax; cmp eax, 0x3d94cfff; jmp far fword ptr [rdi+0x7fff3d94];
0xffffffff82275392: xchg esp, eax; cmp eax, 0xb10874b8; push rsi; sbb [rbp-0x50], bh; and al, 0x30; ret 0x28ec;
0xffffffff8352f589: xchg esp, eax; cmp eax, 0xffffff81; call qword ptr [rax-0x69];
0xffffffff8225f2f1: xchg esp, eax; cmp ebp, [rsi+0x62d2d0]; adc [rax-0x130bb0f], bh; xchg ebp, eax; add [rbp+0x48b5fb95], ecx; ret;
0xffffffff822e22c6: xchg esp, eax; cmp ebx, [rdi-0x32]; jmp qword ptr [rdi];
0xffffffff820098c9: xchg esp, eax; cmp edi, 0x44; test byte ptr [rdi+rdi*8], 0x20; add al, 0xc7; call rdi;
0xffffffff820098bd: xchg esp, eax; cmp edi, 0x50; test byte ptr [rdi+rdi*8], 0x27; add al, 0xc7; call far fword ptr [rax+0x44ff8394];
0xffffffff820098b1: xchg esp, eax; cmp edi, 0x5c; test byte ptr [rdi+rdi*8], 0x2d; add al, 0xc7; call qword ptr [rdx+0x50ff8394];
0xffffffff83555d1a: xchg esp, eax; cmp edi, 0x70ffffff; call qword ptr [rcx+rax*4-1];
0xffffffff83555a0a: xchg esp, eax; cmp edi, 0x70ffffff; ret 0x8194;
0xffffffff835558e2: xchg esp, eax; cmp edi, 0x80ffffff; mov dl, [rcx+rax*4-1]; or byte ptr [rdi-0x7e6c], 0xff; jmp rax;
0xffffffff83555a12: xchg esp, eax; cmp edi, 0xc0ffffff; ret 0x8194;
0xffffffff824fd293: xchg esp, eax; cmp edi, [rbx-0x3f]; mov dh, 0x52; ret 0xbd4e;
0xffffffff8342ab08: xchg esp, eax; cmp edi, edi; or qword ptr [rsi+rax+0xfd8], 4; pop rbx; ret;
0xffffffff825291e9: xchg esp, eax; cmp r10d, [r13+0x5e27d300]; movsb [rdi], [rsi]; ret;
0xffffffff8225c7b4: xchg esp, eax; cmpsb [rsi], [rdi]; ret;
0xffffffff822a6bed: xchg esp, eax; cmpsb [rsi], [rdi]; xchg ecx, eax; ret 0x5dcf;
0xffffffff824ef7f4: xchg esp, eax; cmpsd [rsi], [rdi]; iretd;
0xffffffff82416ab2: xchg esp, eax; cmpsd [rsi], [rdi]; mov bh, 0x6b; std; cmp ebx, [rdi-0x52]; iretd;
0xffffffff81910e18: xchg esp, eax; cmpsd [rsi], [rdi]; mov bh, bh; pop rbx; pop r14; ret;
0xffffffff824d08f3: xchg esp, eax; cmpsd [rsi], [rdi]; or [rax-0x33558751], ecx; ret;
0xffffffff825d5978: xchg esp, eax; cmpsd [rsi], [rdi]; ret 0xd5ef;
0xffffffff822f13fd: xchg esp, eax; cmpsd [rsi], [rdi]; ret;
0xffffffff834742f8: xchg esp, eax; cmpsd [rsi], [rdi]; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8247dedd: xchg esp, eax; cwde; sbb al, dl; ret 0xb59f;
0xffffffff8266cda9: xchg esp, eax; dec dword ptr [r15-0x71]; jmp far fword ptr [r15];
0xffffffff8266c105: xchg esp, eax; dec dword ptr [r15-0xba6d]; xchg edx, eax; jmp far fword ptr [r15-0x70];
0xffffffff81c7de17: xchg esp, eax; dec dword ptr [r15]; or ebx, [rbx+0x41]; pop rsi; pop r15; ret;
0xffffffff81798438: xchg esp, eax; dec dword ptr [rax-0x77]; ret;
0xffffffff819fb045: xchg esp, eax; dec dword ptr [rax-0x7b]; sar byte ptr [rax-0xc], 0xf; ret;
0xffffffff818fc5a6: xchg esp, eax; dec dword ptr [rax-0x7b]; shl byte ptr [rax+rax*2+0x48], 0x89; ret;
0xffffffff819472af: xchg esp, eax; dec dword ptr [rax-0x7b]; shl byte ptr [rax+rdi+0x48], 0x89; ret;
0xffffffff81947493: xchg esp, eax; dec dword ptr [rax-0x7b]; shl byte ptr [rbp+rdx*2+0x48], 0x89; ret;
0xffffffff8193dcda: xchg esp, eax; dec dword ptr [rax-0x7b]; shl byte ptr [rbx+rcx*2+0x48], 0x89; ret;
0xffffffff8193e17a: xchg esp, eax; dec dword ptr [rax-0x7b]; shl byte ptr [rdi+rbp*2+0x48], 0x89; ret;
0xffffffff8193e41f: xchg esp, eax; dec dword ptr [rax-0x7b]; shl byte ptr [rdi+rcx*2+0x48], 0x89; ret;
0xffffffff8193f322: xchg esp, eax; dec dword ptr [rax-0x7b]; shl byte ptr [rsi+rcx*2+0x48], 0x89; ret;
0xffffffff8179869c: xchg esp, eax; dec dword ptr [rax-0x7d]; ret;
0xffffffff817bea56: xchg esp, eax; dec dword ptr [rcx+0x5e415be8]; pop r15; pop rbp; ret;
0xffffffff817bea57: xchg esp, eax; dec dword ptr [rcx+0x5e415be8]; pop r15; pop rbp; ret;
0xffffffff8265a60a: xchg esp, eax; dec dword ptr [rdi+0x2c]; xchg esp, eax; dec dword ptr [rdi]; sub al, 0x94; call far fword ptr [rdi+0x2b];
0xffffffff8265a64e: xchg esp, eax; dec dword ptr [rdi+0x2fff941d]; sbb eax, 0x1b8fff94; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff8265a5ae: xchg esp, eax; dec dword ptr [rdi+0x38]; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff8265a3e6: xchg esp, eax; dec dword ptr [rdi+0xfff94ab]; stosd [rdi]; xchg esp, eax; call far fword ptr [rdi-0x40006b56];
0xffffffff8265a6f6: xchg esp, eax; dec dword ptr [rdi+1]; xchg esp, eax; call far fword ptr [rdi];
0xffffffff8265a2a6: xchg esp, eax; dec dword ptr [rdi-0x1c]; xchg esp, eax; call far fword ptr [rdi];
0xffffffff8265a3de: xchg esp, eax; dec dword ptr [rdi-0x52]; xchg esp, eax; call far fword ptr [rdi-0x70006b54];
0xffffffff8265a22e: xchg esp, eax; dec dword ptr [rdi-7]; xchg esp, eax; jmp far fword ptr [rdi-0x60006b08];
0xffffffff8265a2d6: xchg esp, eax; dec dword ptr [rdi]; fst qword ptr [rdi+rdi*8-0x6b23a1], st; fstp st(3), st; xchg esp, eax; jmp far fword ptr [rdi+0x1fff94db];
0xffffffff8265a53a: xchg esp, eax; dec dword ptr [rdi]; pop rbp; xchg esp, eax; call far fword ptr [rdi+0x5fff945b];
0xffffffff8265a3ea: xchg esp, eax; dec dword ptr [rdi]; stosd [rdi]; xchg esp, eax; call far fword ptr [rdi-0x40006b56];
0xffffffff8265a60e: xchg esp, eax; dec dword ptr [rdi]; sub al, 0x94; call far fword ptr [rdi+0x2b];
0xffffffff8265a5ca: xchg esp, eax; dec dword ptr [rdi]; xor eax, 0x349fff94; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff8265a4d6: xchg esp, eax; dec edi; adc dword ptr [rdi+rdi*8-0x6b7c61], 0x2f; adc dword ptr [rdi+rdi*8-0x6b8161], 0xff947b2f; iretd;
0xffffffff8265a636: xchg esp, eax; dec edi; and al, 0x94; jmp far fword ptr [rdi+0x3fff9424];
0xffffffff8265a40a: xchg esp, eax; dec edi; cmpsd [rsi], [rdi]; xchg esp, eax; jmp far fword ptr [rdi-0x59];
0xffffffff8265a502: xchg esp, eax; dec edi; insb [rdi], dx; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff8265a346: xchg esp, eax; dec edi; int 0x94; jmp far fword ptr [rdi];
0xffffffff8265a44a: xchg esp, eax; dec edi; popfq; xchg esp, eax; call far fword ptr [rdi-0x63];
0xffffffff8265a456: xchg esp, eax; dec edi; pushfq; xchg esp, eax; jmp far fword ptr [rdi-0x64];
0xffffffff8265a49e: xchg esp, eax; dec edi; xchg ecx, eax; xchg esp, eax; call far fword ptr [rdi+0x3fff9491];
0xffffffff8266b661: xchg esp, eax; dec qword ptr [r15-0x6e]; jmp far fword ptr [r15+0x3fff498e];
0xffffffff8173f732: xchg esp, eax; enter 0, 0x48; add esp, 8; pop rbx; pop r14; ret;
0xffffffff825494e8: xchg esp, eax; enter 0x2ee9, 0xcc; mov [0xb2735fc37fe3a0a], al; lea esp, [rax-0x58e2fe0c]; jmp rsp;
0xffffffff812363df: xchg esp, eax; enter 0x3c08, 0; add al, dh; add [r9*8-0x7d1f5c00], r10; ret;
0xffffffff824f5996: xchg esp, eax; enter 0x4480, 0xae; leave; ret 0x5cac;
0xffffffff8123606a: xchg esp, eax; enter 0x5c0, 0; add al, dh; add [r9*8-0x7d1f5cc0], rdx; mov gs:[rcx+r9+0x4f], al; ret;
0xffffffff823954fd: xchg esp, eax; enter 0xfb53, 0xa8; movsxd edi, [rbx-0x54645965]; ret;
0xffffffff820030dc: xchg esp, eax; enter 0xff0a, 0x10; pop rdi; add eax, 0xac7adff; call qword ptr [rdx+0x4ff0ac8];
0xffffffff8226c2bc: xchg esp, eax; fcom st, qword ptr [rax+rax*2+0x23b16abe]; test edi, esi; imul rbp, rbx, 0x49c8bf68; iretd;
0xffffffff825505b4: xchg esp, eax; fcomi st, st(0); ret;
0xffffffff823c3172: xchg esp, eax; fdiv st, qword ptr [rsi-0x47]; idiv spl; movsxd edx, eax; iretd;
0xffffffff82ab235c: xchg esp, eax; fiadd st, word ptr [rax]; add ch, ch; call far fword ptr [rcx];
0xffffffff82814538: xchg esp, eax; fiadd st, word ptr [rdx]; add [rax], al; add [rax], al; add [rax+0x57], al; jmp far fword ptr [r15+0x2d6];
0xffffffff822e3aad: xchg esp, eax; fidivr st, dword ptr [rax-0x2d]; jmp rdx;
0xffffffff810481e2: xchg esp, eax; fild st, dword ptr [rax]; mov eax, 1; ret;
0xffffffff82494d8d: xchg esp, eax; fild st, word ptr [rdi+0x417389e1]; leave; iretd;
0xffffffff8233f45f: xchg esp, eax; fistp word ptr [rbx-0x7b3b85c6], st; in eax, 0xa1; iretd;
0xffffffff827fdc5c: xchg esp, eax; fistp word ptr [rbx], st; inc edi; ret;
0xffffffff82519b25: xchg esp, eax; fisubr st, dword ptr [rax]; mov rsp, 0x67b63207dbc4a3e9; ret;
0xffffffff823e4848: xchg esp, eax; fld st, tbyte ptr [rbx+0x2d]; push rsi; cmp [rdx], esp; ret 0x2f51;
0xffffffff822c0f84: xchg esp, eax; fldenv [rbx+rax*4-2]; sub edi, esp; or al, 0x8b; call far fword ptr [rdi];
0xffffffff82345292: xchg esp, eax; fnstcw [rbx+rbx*4+7]; iretd;
0xffffffff823cb048: xchg esp, eax; fst qword ptr [rcx-0x22], st; and ecx, [rsi]; ret 0x8d4a;
0xffffffff82471bde: xchg esp, eax; fstp qword ptr [rbp+0x7c], st; stosb [rdi]; ret 0xd81f;
0xffffffff823ba812: xchg esp, eax; fsubr st, qword ptr [rip+0x51c2350a]; mov ebp, 0x8af32a53; scasd [rdi]; ret 0x57c;
0xffffffff8359cf70: xchg esp, eax; fucomi st, st(7); jmp qword ptr [rsi-0x23001025];
0xffffffff822e6ecf: xchg esp, eax; fwait; ret;
0xffffffff82229c08: xchg esp, eax; fwait; xchg [rsi+rax+0x2f258bfd], edx; ret 0xfa53;
0xffffffff823e2cf6: xchg esp, eax; fwait; xchg esi, eax; ret;
0xffffffff823e3d42: xchg esp, eax; fxch st, st(3); shr byte ptr [rcx+6], 1; sahf; jmp rbx;
0xffffffff819ac55c: xchg esp, eax; hlt; add byte ptr [rax], 0; add [rbp+rcx*4+0x46], al; add [rax-0x77], ecx; ret 0x65e9;
0xffffffff819ac392: xchg esp, eax; hlt; add byte ptr [rax], 0; add [rbp+rcx*4+0x46], al; add [rax-0x77], ecx; ret 0x66e9;
0xffffffff81bca2eb: xchg esp, eax; hlt; jmp qword ptr [rsi+0x41];
0xffffffff828163ac: xchg esp, eax; idiv byte ptr [rdi]; call far fword ptr [rbp+0x2b1];
0xffffffff82270005: xchg esp, eax; idiv eax; sub eax, 0x5b16bdba; movsxd edi, ebx; test [rip-0x6b27496d], ecx; iretd;
0xffffffff82361bfb: xchg esp, eax; imul eax, [rdi-0x69], 0x13; ret;
0xffffffff8254abb5: xchg esp, eax; imul ebp, [rsi-0x51], 0x9319be1c; pushfq; fcmovbe st, st(6); in eax, 0xdc; call rdi;
0xffffffff822d5a33: xchg esp, eax; imul ebx, esi, 0x5a5ab7f0; iretd;
0xffffffff8226d526: xchg esp, eax; imul ecx, [rbx], 0x42b391b2; cmp [rdx], dh; std; shr dword ptr [rax+0x4fde5054], 1; ret 0x443a;
0xffffffff823c6859: xchg esp, eax; imul edi, [rcx+0x16230111], 0x5e4305a; iretd;
0xffffffff8244e608: xchg esp, eax; imul edi, [rdx+0x7a5667f6], 0xffffffa3; iretd;
0xffffffff83478bb3: xchg esp, eax; in al, 0x1e; add [rcx], al; xor eax, eax; ret;
0xffffffff824acf50: xchg esp, eax; in al, 0xb3; mov esi, 0xe982d88e; ror byte ptr [rdi+0x55], 0x4e; ret;
0xffffffff8230b1e2: xchg esp, eax; in al, 0xbe; pop rsp; ret 0x4679;
0xffffffff82568ace: xchg esp, eax; in al, 0xee; push rcx; iretd;
0xffffffff819293e8: xchg esp, eax; in al, 0xff; dec dword ptr [rax-0x77]; ret;
0xffffffff824d9384: xchg esp, eax; in al, dx; mov ebx, 0x336bfa24; mov bh, 0x42; ret;
0xffffffff822d2b9d: xchg esp, eax; in al, dx; mov ebx, 0x68cb2c87; ret 0x81c3;
0xffffffff824bee32: xchg esp, eax; in al, dx; sbb [rbp-0x30a12b6], dl; iretd;
0xffffffff823b9bb2: xchg esp, eax; in eax, 0x46; int3; mov ebp, 0x78bc018; mov [rdi+0x24], dh; ret;
0xffffffff823e2f57: xchg esp, eax; in eax, 0x4a; sti; mov [0x75d063183f064dd8], eax; xchg esp, eax; ret;
0xffffffff8268d445: xchg esp, eax; in eax, 0x61; pop rsp; and bl, [rbx+0x6d50d65]; iretd;
0xffffffff8268d430: xchg esp, eax; in eax, 0x61; pop rsp; iretd;
0xffffffff8268d4c6: xchg esp, eax; in eax, 0x61; pop rsp; test [rax*4+0x6f46670], cl; iretd;
0xffffffff82361388: xchg esp, eax; in eax, 0xe4; ret 0xf60a;
0xffffffff823b850b: xchg esp, eax; in eax, 0xef; mov eax, [0x9c3b194fbe916fd2]; idiv byte ptr [rbp-0x48]; mov [0x432148974a0a38c9], eax; iretd;
0xffffffff826cf9b1: xchg esp, eax; in eax, 0xfe; sbb eax, 0xec6dbbfe; iretd;
0xffffffff815f0738: xchg esp, eax; in eax, dx; iretd;
0xffffffff8177f7ce: xchg esp, eax; inc dword ptr [rax+rax*8-0x38b7eb8b]; ret;
0xffffffff8177f7cf: xchg esp, eax; inc dword ptr [rax+rax*8-0x38b7eb8b]; ret;
0xffffffff8180b387: xchg esp, eax; inc dword ptr [rax+rax*8-0x7eb7ed8c]; ret;
0xffffffff817dbb66: xchg esp, eax; inc dword ptr [rbp+0xfee79c0]; or edi, [rax-0xc]; ret;
0xffffffff8200a5a8: xchg esp, eax; inc esi; call rcx;
0xffffffff8101a50d: xchg esp, eax; insb [rdi], dx; add [rbx+0x5d], bl; ret;
0xffffffff826644f1: xchg esp, eax; insb [rdi], dx; call far fword ptr [rdi-0x1000936e];
0xffffffff822dc3f0: xchg esp, eax; insb [rdi], dx; iretd;
0xffffffff8227b2c4: xchg esp, eax; insb [rdi], dx; sub dl, [rcx-0x78]; mov eax, [0xe12f01615c73e513]; mov ecx, 0x494de6; ret;
0xffffffff8252df51: xchg esp, eax; int 0x40; iretq;
0xffffffff8252df52: xchg esp, eax; int 0x40; iretq;
0xffffffff8253eabf: xchg esp, eax; int 0x76; xchg ebx, eax; ret 0x7a2e;
0xffffffff824c697a: xchg esp, eax; int 0xa8; mov esp, 0xc4025d61; call qword ptr [rax-0x14];
0xffffffff82643280: xchg esp, eax; int 0xf9; call qword ptr [rax+0x77fff9cd];
0xffffffff82308ee4: xchg esp, eax; int1; imul ecx, [rbp-0x12], 0xdab09bb6; xor [rcx+rcx*8+0x2762ace5], esp; stosd [rdi]; iretd;
0xffffffff823f66ee: xchg esp, eax; int3; call qword ptr [rsi+rcx*4-0x24];
0xffffffff824458b8: xchg esp, eax; int3; fcmovnb st, st(7); xor ecx, [rcx]; mov bh, 0x5b; iretd;
0xffffffff824df311: xchg esp, eax; int3; ficomp st, word ptr [rdi+0x10]; iretd;
0xffffffff8161ef57: xchg esp, eax; int3; inc dword ptr [rbp+0x5b0274c0]; ret;
0xffffffff823ba999: xchg esp, eax; int3; push 0x19; call far fword ptr [rdx-0x53f0601b];
0xffffffff823ba99a: xchg esp, eax; int3; push 0x19; call far fword ptr [rdx-0x53f0601b];
0xffffffff822a1074: xchg esp, eax; int3; xchg ecx, eax; ret;
0xffffffff82337f1d: xchg esp, eax; iretd;
0xffffffff823ee247: xchg esp, eax; iretd;
0xffffffff8255947d: xchg esp, eax; iretd;
0xffffffff82395a22: xchg esp, eax; iretd;
0xffffffff81015945: xchg esp, eax; iretd;
0xffffffff82446c94: xchg esp, eax; iretq;
0xffffffff82009c66: xchg esp, eax; jmp far fword ptr [rax-0x1800fb0e];
0xffffffff82285f0f: xchg esp, eax; jmp far fword ptr [rbp+0x2c];
0xffffffff824144b3: xchg esp, eax; jmp far fword ptr [rbx+0x3c];
0xffffffff811a8228: xchg esp, eax; jmp far fword ptr [rbx+0x5e894900];
0xffffffff822d7230: xchg esp, eax; jmp far fword ptr [rcx+0x5d];
0xffffffff8107c168: xchg esp, eax; jmp far fword ptr [rcx+1];
0xffffffff8265a66e: xchg esp, eax; jmp far fword ptr [rdi+0x16];
0xffffffff8265a68e: xchg esp, eax; jmp far fword ptr [rdi+0x1fff940b];
0xffffffff8265a47a: xchg esp, eax; jmp far fword ptr [rdi+0x1fff9497];
0xffffffff8265a36a: xchg esp, eax; jmp far fword ptr [rdi+0x1fff94c4];
0xffffffff8265a2e2: xchg esp, eax; jmp far fword ptr [rdi+0x1fff94db];
0xffffffff8265a632: xchg esp, eax; jmp far fword ptr [rdi+0x25];
0xffffffff8265a626: xchg esp, eax; jmp far fword ptr [rdi+0x28];
0xffffffff8265a5ea: xchg esp, eax; jmp far fword ptr [rdi+0x30];
0xffffffff8265a5b6: xchg esp, eax; jmp far fword ptr [rdi+0x37];
0xffffffff8265a5aa: xchg esp, eax; jmp far fword ptr [rdi+0x38];
0xffffffff8265a63a: xchg esp, eax; jmp far fword ptr [rdi+0x3fff9424];
0xffffffff8265a432: xchg esp, eax; jmp far fword ptr [rdi+0x3fff94a3];
0xffffffff8265a546: xchg esp, eax; jmp far fword ptr [rdi+0x56];
0xffffffff8265a6c2: xchg esp, eax; jmp far fword ptr [rdi+0x5fff9405];
0xffffffff8265a6b6: xchg esp, eax; jmp far fword ptr [rdi+0x5fff9406];
0xffffffff8265a51a: xchg esp, eax; jmp far fword ptr [rdi+0x5fff9464];
0xffffffff8265a519: xchg esp, eax; jmp far fword ptr [rdi+0x5fff9464];
0xffffffff8265a2ae: xchg esp, eax; jmp far fword ptr [rdi+0x5fff94e3];
0xffffffff8265a511: xchg esp, eax; jmp far fword ptr [rdi+0x66];
0xffffffff8265a62d: xchg esp, eax; jmp far fword ptr [rdi+0x6fff9425];
0xffffffff8265a62e: xchg esp, eax; jmp far fword ptr [rdi+0x6fff9425];
0xffffffff8265a622: xchg esp, eax; jmp far fword ptr [rdi+0x6fff9428];
0xffffffff8265a50e: xchg esp, eax; jmp far fword ptr [rdi+0x6fff9467];
0xffffffff8265a4c2: xchg esp, eax; jmp far fword ptr [rdi+0x6fff9488];
0xffffffff8265a4ca: xchg esp, eax; jmp far fword ptr [rdi+0x7fff9487];
0xffffffff8265a6f2: xchg esp, eax; jmp far fword ptr [rdi+1];
0xffffffff8265a6ae: xchg esp, eax; jmp far fword ptr [rdi+7];
0xffffffff8265a21e: xchg esp, eax; jmp far fword ptr [rdi-0x10006b04];
0xffffffff8265a5bd: xchg esp, eax; jmp far fword ptr [rdi-0x10006bca];
0xffffffff8265a5be: xchg esp, eax; jmp far fword ptr [rdi-0x10006bca];
0xffffffff823eba80: xchg esp, eax; jmp far fword ptr [rdi-0x1b8eb9ad];
0xffffffff8265a2a2: xchg esp, eax; jmp far fword ptr [rdi-0x1c];
0xffffffff8265a6e6: xchg esp, eax; jmp far fword ptr [rdi-0x20006bfe];
0xffffffff8265a2c6: xchg esp, eax; jmp far fword ptr [rdi-0x21];
0xffffffff8265a56a: xchg esp, eax; jmp far fword ptr [rdi-0x30006bc0];
0xffffffff8265a342: xchg esp, eax; jmp far fword ptr [rdi-0x32];
0xffffffff8254f491: xchg esp, eax; jmp far fword ptr [rdi-0x3361e5d4];
0xffffffff8265a62a: xchg esp, eax; jmp far fword ptr [rdi-0x50006bda];
0xffffffff8265a40e: xchg esp, eax; jmp far fword ptr [rdi-0x59];
0xffffffff8265a426: xchg esp, eax; jmp far fword ptr [rdi-0x5b];
0xffffffff8265a232: xchg esp, eax; jmp far fword ptr [rdi-0x60006b08];
0xffffffff8265a54a: xchg esp, eax; jmp far fword ptr [rdi-0x60006baf];
0xffffffff8265a5da: xchg esp, eax; jmp far fword ptr [rdi-0x60006bce];
0xffffffff8265a45a: xchg esp, eax; jmp far fword ptr [rdi-0x64];
0xffffffff8266d8fd: xchg esp, eax; jmp far fword ptr [rdi-0x6d];
0xffffffff8265a4be: xchg esp, eax; jmp far fword ptr [rdi-0x76];
0xffffffff8265a4c6: xchg esp, eax; jmp far fword ptr [rdi-0x78];
0xffffffff8265a21a: xchg esp, eax; jmp far fword ptr [rdi-2];
0xffffffff8265a521: xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff8265a216: xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff82568590: xchg esp, eax; jmp far fword ptr [rdx+0x48];
0xffffffff82009ca2: xchg esp, eax; jmp far fword ptr [rdx+rsi*8+4];
0xffffffff82397db4: xchg esp, eax; jmp far fword ptr [rdx-0xbca9cef];
0xffffffff81c1deee: xchg esp, eax; jmp qword ptr [r14+0x66];
0xffffffff817bc69a: xchg esp, eax; jmp qword ptr [rbp+0x48];
0xffffffff82343677: xchg esp, eax; jmp qword ptr [rbp-0x33];
0xffffffff8252b18c: xchg esp, eax; jmp qword ptr [rbx-0xf266927];
0xffffffff8234b62e: xchg esp, eax; jmp qword ptr [rdi-0x38cabc8f];
0xffffffff81767844: xchg esp, eax; jmp qword ptr [rsi+0x2e];
0xffffffff81767c23: xchg esp, eax; jmp qword ptr [rsi+0x66];
0xffffffff81770e45: xchg esp, eax; jmp qword ptr [rsi+0xf];
0xffffffff81770e44: xchg esp, eax; jmp qword ptr [rsi+0xf];
0xffffffff8146eb94: xchg esp, eax; jmp qword ptr [rsi+0xf];
0xffffffff8176bd2c: xchg esp, eax; jmp qword ptr [rsi-0x70];
0xffffffff81a5deb4: xchg esp, eax; jmp qword ptr gs:[rsi+0xf];
0xffffffff824c62f3: xchg esp, eax; jmp rbp;
0xffffffff8253ec6e: xchg esp, eax; lahf; iretd;
0xffffffff8234dd4b: xchg esp, eax; lahf; jmp qword ptr [rax+0x54];
0xffffffff8268ebc3: xchg esp, eax; lahf; or al, 0x54; iretd;
0xffffffff826c690c: xchg esp, eax; lahf; or edx, [rbx]; push 0x69f964ad; sub [rax+0x63], dh; ret;
0xffffffff826c4038: xchg esp, eax; lahf; or esp, [rbp+0x736dc363]; ret;
0xffffffff826a63ce: xchg esp, eax; lahf; popfq; hlt; add esi, [rbx+0xc]; call rbx;
0xffffffff826a63cd: xchg esp, eax; lahf; popfq; hlt; add esi, [rbx+0xc]; call rbx;
0xffffffff826a36dc: xchg esp, eax; lahf; popfq; or [rip-0x1f12654b], eax; outsd dx, [rsi]; call rsi;
0xffffffff81355a38: xchg esp, eax; lahf; xchg edx, eax; add [rcx+0x5e415bd8], cl; pop r15; ret;
0xffffffff823d7383: xchg esp, eax; lea eax, [rdi-0x11]; adc byte ptr [rax], 0xe7; iretd;
0xffffffff8129611f: xchg esp, eax; leave; iretd;
0xffffffff8359cedc: xchg esp, eax; leave; out dx, eax; jmp qword ptr [rcx-0x51001037];
0xffffffff815ede7c: xchg esp, eax; lodsb [rsi]; call qword ptr [rax-0x7ec80418];
0xffffffff824820e5: xchg esp, eax; lodsb [rsi]; in eax, 0x40; pop rbp; iretd;
0xffffffff8252f249: xchg esp, eax; lodsb [rsi]; ret 0x1b5d;
0xffffffff823b4b76: xchg esp, eax; lodsb [rsi]; sub [rbp-0x3de8d60d], ebp; iretd;
0xffffffff82654065: xchg esp, eax; lodsd [rsi]; call far fword ptr [rdi-0x2000526c];
0xffffffff8254875e: xchg esp, eax; lodsd [rsi]; int 0xc0; fstp tbyte ptr [rdi+0x7d], st; add al, 0x33; iretd;
0xffffffff815ddf24: xchg esp, eax; lodsd [rsi]; jmp qword ptr [rsi+0xf];
0xffffffff8240ba17: xchg esp, eax; lodsd [rsi]; push 0xfffffffffffffff9; ret 0x2c19;
0xffffffff8280602c: xchg esp, eax; mov [0x319e3ff17], eax; add [rax], al; cwde; and al, 0x18; jmp rax;
0xffffffff82359c34: xchg esp, eax; mov [0x3e5236c98fcd6711], eax; ret 0x402f;
0xffffffff81b53749: xchg esp, eax; mov [0x850f04c2f6000000], al; ret;
0xffffffff824fc420: xchg esp, eax; mov [0xa9f8ac24466f05f5], eax; adc [rbp-0x66], edx; jmp qword ptr [rcx];
0xffffffff8242039b: xchg esp, eax; mov [0xacac4e752fda18b4], al; and sil, [rip-0x6596467a]; call far fword ptr [rcx-0x30];
0xffffffff8242eff8: xchg esp, eax; mov [rax-0x5c], dh; sbb al, 0x34; out dx, eax; ret 0x8dd6;
0xffffffff8156e580: xchg esp, eax; mov [rax-0x7d000000], cs; ret 0x4101;
0xffffffff82275ceb: xchg esp, eax; mov [rbx-0x22653a0a], bh; sub al, bl; mov cl, 0xef; iretd;
0xffffffff822983bc: xchg esp, eax; mov [rbx-0x54], ebp; mov ebx, 0x713b3448; ret 0xc28;
0xffffffff82338fc0: xchg esp, eax; mov [rcx-0x46], gs; xchg bh, bl; iretd;
0xffffffff82342ea4: xchg esp, eax; mov [rdx+0x19ed01cb], edx; fldenv [rdx-0x1b304ecd]; iretd;
0xffffffff82342ea3: xchg esp, eax; mov [rdx+0x19ed01cb], edx; fldenv [rdx-0x1b304ecd]; iretd;
0xffffffff822bdfcf: xchg esp, eax; mov [rdx-0x23b11fb7], cs; xor ch, [rax]; push rcx; iretd;
0xffffffff82485eca: xchg esp, eax; mov [rsi], dh; iretd;
0xffffffff82306419: xchg esp, eax; mov ah, 0x41; and [rsi-0x12124aa3], ebx; test byte ptr [rcx+0x59], 0xc; push rax; iretd;
0xffffffff8265c5bc: xchg esp, eax; mov ah, 0x8c; call rax;
0xffffffff814d31a8: xchg esp, eax; mov ah, dl; jmp qword ptr [rbp+0x48];
0xffffffff823a986b: xchg esp, eax; mov al, [0x187649510607c45e]; sahf; iretd;
0xffffffff822899cb: xchg esp, eax; mov al, [0x5fb6977491959f48]; sub [rsi+0x404f53], cl; iretd;
0xffffffff822e52a5: xchg esp, eax; mov al, [0x9e5bb01895bb1816]; iretd;
0xffffffff8234d1e6: xchg esp, eax; mov al, [0xf374567608d1455]; mov bpl, 0x81; xchg esi, eax; ret;
0xffffffff8234d1e7: xchg esp, eax; mov al, [0xf374567608d1455]; mov bpl, 0x81; xchg esi, eax; ret;
0xffffffff82809f5c: xchg esp, eax; mov al, [rax]; call far fword ptr [rbx+rax*4+2];
0xffffffff825cd75f: xchg esp, eax; mov al, [rbp+0x45]; iretd;
0xffffffff8247ae55: xchg esp, eax; mov al, [rbx-0x23]; xchg [rcx+rax*2+0x75], ecx; iretd;
0xffffffff82610149: xchg esp, eax; mov al, [rcx-1]; mov al, 0x7e; mov al, [rcx-1]; adc [rdx+rcx*4-0x7f], dl; call rax;
0xffffffff822bf714: xchg esp, eax; mov bh, 0x70; iretd;
0xffffffff825233ab: xchg esp, eax; mov bh, 0x8c; ret 0x5e0b;
0xffffffff822993bd: xchg esp, eax; mov bh, 0xff; iretd;
0xffffffff8247acea: xchg esp, eax; mov bl, 0x1b; ret;
0xffffffff826c462e: xchg esp, eax; mov bl, 0x73; iretd;
0xffffffff8267462e: xchg esp, eax; mov bl, 0x73; mov bh, 0xc; call far fword ptr [rdi-0x26];
0xffffffff82379525: xchg esp, eax; mov bl, 0x89; shr dl, cl; ret;
0xffffffff8200db2c: xchg esp, eax; mov bl, 4; call rdi;
0xffffffff8177ae58: xchg esp, eax; mov byte ptr [rax-0xa], 0xc7; or cl, [rdi]; xchg ebp, eax; ret 0x8440;
0xffffffff814a006b: xchg esp, eax; mov byte ptr [rcx+rcx*4-0x10], 0x5b; pop r14; pop rbp; ret;
0xffffffff82004dc8: xchg esp, eax; mov ch, 0x15; inc dword ptr [rcx+rax*2+5]; jmp qword ptr [rcx-0x2d0038d8];
0xffffffff8226e82c: xchg esp, eax; mov ch, 0x4a; sysexit;
0xffffffff8252da63: xchg esp, eax; mov ch, 0x68; cmp [rsi-0x34ff5b1], bh; lodsd [rsi]; ret 0x809d;
0xffffffff8236e87a: xchg esp, eax; mov cl, 0x4b; ret 0x4ea7;
0xffffffff8223961d: xchg esp, eax; mov cl, 2; xor al, [rax+0x2742569c]; adc edi, [rdx+0x62]; iretd;
0xffffffff822354de: xchg esp, eax; mov cl, [rbp-1]; mov ebx, 0xf171d008; scasb [rdi]; ret 0x563a;
0xffffffff8249a847: xchg esp, eax; mov cl, [rbx]; or al, 0x69; in eax, dx; mov al, 0xad; iretd;
0xffffffff824a1cc7: xchg esp, eax; mov dh, 0x35; imul ebp, [rbx], 0x59; in al, dx; ret;
0xffffffff82347945: xchg esp, eax; mov dh, 0x73; sahf; jmp far fword ptr [rdx-0x602d3d64];
0xffffffff82274c28: xchg esp, eax; mov dh, 0x74; sbb [rbx-0x3a], edi; outsb dx, [rsi]; iret;
0xffffffff817ee910: xchg esp, eax; mov dh, 0xff; cdqe; ret;
0xffffffff820016c8: xchg esp, eax; mov dl, 0; call qword ptr [rdx+0x10ff00b2];
0xffffffff8229ed0f: xchg esp, eax; mov dl, 0x13; mov [rdi+rdi*4], dl; ret;
0xffffffff827fa68c: xchg esp, eax; mov dl, 0x47; call far fword ptr [rdx+rbx*4+4];
0xffffffff815f7bc8: xchg esp, eax; mov dl, 0xcd; jmp qword ptr [rbp+0x48];
0xffffffff8299d308: xchg esp, eax; mov dl, 0xd; add [rax], al; add [rax], al; or al, 0x33; iretd;
0xffffffff8265343d: xchg esp, eax; mov dl, 0xff; fist word ptr [rdx+rsi*4-0x4d6b3001], st; jmp far fword ptr [rdi];
0xffffffff82653441: xchg esp, eax; mov dl, 0xff; iretd;
0xffffffff817e50d5: xchg esp, eax; mov dword ptr [rcx+rcx*4-8], 0x415e415b; pop rdi; pop rbp; ret;
0xffffffff8172d219: xchg esp, eax; mov dword ptr [rcx-0x3f], 0x834106e7; iretd;
0xffffffff812668e5: xchg esp, eax; mov dword ptr [rcx], 0x83fa29d2; ret 0x8302;
0xffffffff823b36ab: xchg esp, eax; mov eax, 0x108f8409; stc; out 0xd2, eax; stc; ret 0x870b;
0xffffffff82553be5: xchg esp, eax; mov eax, 0x5275549f; call qword ptr [rbx+0x7d];
0xffffffff82553be4: xchg esp, eax; mov eax, 0x5275549f; call qword ptr [rbx+0x7d];
0xffffffff825d9e20: xchg esp, eax; mov eax, 0x60957806; stosb [rdi]; call qword ptr [rdi-0x6989a0f7];
0xffffffff8226b389: xchg esp, eax; mov eax, 0x8b005fdb; xchg [rcx+0x60], dh; ret 0xab8d;
0xffffffff826520d9: xchg esp, eax; mov eax, 0xb893bfff; call far fword ptr [rdi+0x1fffb893];
0xffffffff81235fa6: xchg esp, eax; mov eax, 0xf0000005; add [r8*8-0x7d1f5cc0], rdx; mov gs:[rax+r8+0x4f], cl; ret;
0xffffffff823bb9f5: xchg esp, eax; mov eax, 0xf9215c64; ret;
0xffffffff83563ff0: xchg esp, eax; mov eax, 0xffffff81; call rax;
0xffffffff83563ff9: xchg esp, eax; mov eax, 0xffffff81; jmp qword ptr [rax];
0xffffffff826569ed: xchg esp, eax; mov eax, [0xa1931fffa193cfff]; call far fword ptr [rdi+0x2fffa192];
0xffffffff82337e24: xchg esp, eax; mov eax, [0xa3473a57b021b309]; jmp far fword ptr [rcx+rax+0x10];
0xffffffff82569ec8: xchg esp, eax; mov eax, [rbx]; stosd [rdi]; and [rdx], dl; ret;
0xffffffff82396f13: xchg esp, eax; mov eax, esi; iretd;
0xffffffff812681c0: xchg esp, eax; mov ebp, 0x39480157; shl dword ptr [rdi+0x21], 0x48; mov edx, 0xffffffff; call far fword ptr [rdi];
0xffffffff8251ea20: xchg esp, eax; mov ebp, 0x457b7f05; outsd dx, [rsi]; sbb [rbx], bh; or [rbx+0x7d], ebx; ret 0x8d2e;
0xffffffff823671fe: xchg esp, eax; mov ebp, 0x5cf3e705; and al, 0x62; in eax, 0x52; ret 0x1255;
0xffffffff82399bc7: xchg esp, eax; mov ebp, 0xbf82a990; sahf; outsd dx, [rsi]; ret 0x1789;
0xffffffff83565c81: xchg esp, eax; mov ebp, 0xffffff81; call qword ptr [rax-0x7e4268];
0xffffffff822d1718: xchg esp, eax; mov ebx, 0x1b1522; imul eax, [rdi-0x4a], 0x5687dd7d; and qword ptr [rbx], 0xffffffffffffffea; or eax, 0x74727d40; jmp qword ptr [rax-0x5d01e814];
0xffffffff82269ed1: xchg esp, eax; mov ebx, 0x3eeaaf01; iretd;
0xffffffff8200ce81: xchg esp, eax; mov ebx, 0x4c08cff; call far fword ptr [rdx-0x11];
0xffffffff8239b064: xchg esp, eax; mov ebx, 0xb33cf630; fisubr st, word ptr [rax-0x23710d77]; ret;
0xffffffff8223e268: xchg esp, eax; mov ebx, 0xe661c075; sub r9b, [rax+rbx*4+0x4a]; ret 0x8d38;
0xffffffff83564ff9: xchg esp, eax; mov ebx, 0xffffff81; jmp rax;
0xffffffff82250da3: xchg esp, eax; mov ecx, 0x31d04670; ret;
0xffffffff822681cb: xchg esp, eax; mov ecx, 0xa8a00f0d; iretd;
0xffffffff8249877f: xchg esp, eax; mov ecx, 0xaf7c4b3; iretq;
0xffffffff82510618: xchg esp, eax; mov ecx, 0xb62fbfdf; or [rdx+0x4cfa2db7], bh; iretd;
0xffffffff811a8c98: xchg esp, eax; mov ecx, 0xc0310013; pop rbx; pop r14; pop r15; ret;
0xffffffff8112efc3: xchg esp, eax; mov edi, 0xe1f748d6; mov rax, rdx; shr rax, 0x17; ret;
0xffffffff8239141d: xchg esp, eax; mov edi, 0xed1c448c; ret;
0xffffffff83566889: xchg esp, eax; mov edi, 0xffffff81; call qword ptr [rax-0x7e4069];
0xffffffff83566881: xchg esp, eax; mov edi, 0xffffff81; call rax;
0xffffffff813c5438: xchg esp, eax; mov edi, edi; jmp qword ptr [rsi+0x39];
0xffffffff824294ba: xchg esp, eax; mov edx, 0x40664dc0; imul edx, [rcx+rdx*2-0x56c17167], 0x2e3fc556; ret;
0xffffffff813591b8: xchg esp, eax; mov edx, 0x8548ffff; shl byte ptr [rdi+rbx+0x48], 0x89; ret;
0xffffffff8231047b: xchg esp, eax; mov edx, 0xb4a0140; ret 0x16f8;
0xffffffff82651a29: xchg esp, eax; mov edx, 0xba936fff; call far fword ptr [rdi-0x6e];
0xffffffff8249f3f2: xchg esp, eax; mov edx, 0xeba0d745; int1; push rdx; sub al, 0xe9; ret;
0xffffffff82441bf9: xchg esp, eax; mov es, bp; out 0x92, eax; and dword ptr [rax-0x47], 0x87812144; mov dh, cl; ret 0x5740;
0xffffffff824661d2: xchg esp, eax; mov esi, 0x3263578e; xchg edi, eax; pop rsi; ret;
0xffffffff8226c2be: xchg esp, eax; mov esi, 0x8523b16a; test dword ptr [rax+0x69], 0xc8bf68eb; iretq;
0xffffffff82650db1: xchg esp, eax; mov esi, 0xbe935fff; dec dword ptr [rdi-0x6d]; mov esi, 0xbe92afff; call far fword ptr [rdi];
0xffffffff8154e058: xchg esp, eax; mov esi, eax; push rsi; ret;
0xffffffff824d0f79: xchg esp, eax; mov esp, 0x2b354330; ret;
0xffffffff8240c3f0: xchg esp, eax; mov esp, fs; adc al, 9; in eax, 0xa7; sbb edx, [rip+0x37717af3]; call qword ptr [rcx-0x17a4a787];
0xffffffff8252ac46: xchg esp, eax; mov fs, [rax-0x4fe84941]; ret;
0xffffffff823c20a3: xchg esp, eax; mov gs, [rcx]; ret 0xdf46;
0xffffffff823dca94: xchg esp, eax; mov gs, di; ret;
0xffffffff81b62321: xchg esp, eax; mov ss, [rcx]; add [rcx+0x5e415bd8], cl; pop r15; ret;
0xffffffff8196c848: xchg esp, eax; mov ss, ax; add [rax-0x39], ecx; ret;
0xffffffff82655ecd: xchg esp, eax; movsb [rdi], [rsi]; jmp far fword ptr [rdi-0x6d];
0xffffffff82321516: xchg esp, eax; movsb [rdi], [rsi]; ret 0xe5f4;
0xffffffff82655b51: xchg esp, eax; movsd [rdi], [rsi]; call far fword ptr [rdi+0x6fffa592];
0xffffffff8234bd4f: xchg esp, eax; movsd [rdi], [rsi]; call qword ptr [rbp-0x62];
0xffffffff8230da3e: xchg esp, eax; movsd [rdi], [rsi]; cld; ret 0x11bd;
0xffffffff823b7a1e: xchg esp, eax; movsd [rdi], [rsi]; in al, 0x8d; xor ebp, [rdx]; ret 0xe319;
0xffffffff823553c2: xchg esp, eax; movsd [rdi], [rsi]; in eax, dx; out dx, al; mov eax, [0x2246011076bf88f4]; iretd;
0xffffffff82655b4d: xchg esp, eax; movsd [rdi], [rsi]; jmp far fword ptr [rdi];
0xffffffff8251a121: xchg esp, eax; movsd [rdi], [rsi]; mov ecx, [rbx+0x50]; ret;
0xffffffff823ec14f: xchg esp, eax; movsd [rdi], [rsi]; push rbx; mov cl, 0x98; sbb eax, 0x6c73a863; ret;
0xffffffff82442538: xchg esp, eax; movsxd eax, [rbx-0x5a]; imul ebp, edi, 0xffffff8f; scasb [rdi]; ret 0x684c;
0xffffffff823d8c50: xchg esp, eax; movsxd eax, esp; iretd;
0xffffffff82518ab5: xchg esp, eax; movsxd edx, [rcx-0x66]; fld st, qword ptr [rdi-0x2aadfe0a]; push 0xffffffffd02c4fb5; ret 0xaeb9;
0xffffffff823f0fe1: xchg esp, eax; movsxd esi, [rbp+0xa7d5c23]; call qword ptr [rax-0x10e18ee];
0xffffffff823d9f85: xchg esp, eax; nop; adc al, [rdx+0x63c96f3c]; cmp dword ptr [rsi+0x52bba03a], 0x6d; ret;
0xffffffff8242670b: xchg esp, eax; nop; mov cl, 0xc2; cmp al, 0x3e; cmp al, 0xa7; ret;
0xffffffff824a4638: xchg esp, eax; nop; or [rax+0x7d], r13; ret 0xc7b;
0xffffffff8187bb6b: xchg esp, eax; or [rax+0x258260cb], ecx; ret 0xffff;
0xffffffff81431b62: xchg esp, eax; or [rax-0x7d], cl; ret 0x4801;
0xffffffff818313c5: xchg esp, eax; or [rax], bl; add [rax], eax; add [rbx+0x1180884], cl; add [rax], al; ret;
0xffffffff81bb1dcb: xchg esp, eax; or [rax], eax; add [rcx], bh; enter 0xe075, 0x41; mov [rax+0x24], edx; ret;
0xffffffff823f7430: xchg esp, eax; or [rbx-0x17], esi; ret 0x8bf3;
0xffffffff824e4325: xchg esp, eax; or [rbx-0x47b6d60a], esi; mov bl, 0x90; iretd;
0xffffffff8182fcdd: xchg esp, eax; or [rcx+rax], dl; add [rax], al; ret;
0xffffffff8230c0ee: xchg esp, eax; or [rdi+9], ecx; push rax; push rsp; and [rdx], al; iretd;
0xffffffff823b0e36: xchg esp, eax; or [rdx-0x5a806802], ecx; ret;
0xffffffff8243af5c: xchg esp, eax; or [rip+0x5eb9f0fe], ah; fisttp qword ptr [rdx], st; xchg rsi, rax; fxch st, st(2); iretd;
0xffffffff8349c6f8: xchg esp, eax; or al, 0x4f; dec byte ptr [rax-0x39]; ret;
0xffffffff820086dc: xchg esp, eax; or al, 0xc7; jmp rsp;
0xffffffff8281124c: xchg esp, eax; or bl, al; jmp far fword ptr [rsi];
0xffffffff824a0346: xchg esp, eax; or byte ptr [rdx], 0x8e; in al, dx; ret 0x8ae3;
0xffffffff824975d7: xchg esp, eax; or dil, [r15+0x2c]; xor al, 0x9b; iretd;
0xffffffff82999abd: xchg esp, eax; or eax, 0; or al, 0xe5; ret;
0xffffffff8351c009: xchg esp, eax; or eax, 0xffffff81; call qword ptr [rax];
0xffffffff8351c001: xchg esp, eax; or eax, 0xffffff81; push rax; xchg esp, eax; or eax, 0xffffff81; call qword ptr [rax];
0xffffffff824e3490: xchg esp, eax; or ebx, [rax-0x65c126c1]; ret;
0xffffffff824e9031: xchg esp, eax; or ecx, [rdi+0x3d]; call far fword ptr [rsi-0x7b77430a];
0xffffffff82533852: xchg esp, eax; or edi, [rax+0x55]; and dword ptr [rsi-0x60], 0x95627173; iretd;
0xffffffff8231ba09: xchg esp, eax; or edi, ebx; or ebx, [rcx]; sub eax, 0x6f73c65d; ret;
0xffffffff8228457f: xchg esp, eax; or edi, edi; ret 0x62cb;
0xffffffff82284581: xchg esp, eax; or edi, edi; ret 0x62cb;
0xffffffff8230258a: xchg esp, eax; or esi, 0xffffff8d; ret 0xc451;
0xffffffff82452621: xchg esp, eax; or esp, [rax+0x44]; sub [rcx+rcx+0x16e93ae8], ebx; imul byte ptr [rbp+3]; ret 0xa953;
0xffffffff822432ae: xchg esp, eax; or fs:[rdi-0x31], edx; rcr dword ptr [rsi+0x18884966], cl; enter 0x25b3, 0xe3; xor al, 0xa9; iretd;
0xffffffff823fc43e: xchg esp, eax; or r12b, spl; mov cl, 0x8a; ret 0xdd7d;
0xffffffff824c898d: xchg esp, eax; or rax, 0xffffffff812a5999; mov cl, 0xd5; or esi, [rbx]; clc; iretd;
0xffffffff826f04c3: xchg esp, eax; out 0x63, al; call far fword ptr [rbp+0x540d74f6];
0xffffffff826ceeb0: xchg esp, eax; out 0x74, eax; adc [rax+0x733ccc93], edx; ret;
0xffffffff826ceeaf: xchg esp, eax; out 0x74, eax; adc [rax+0x733ccc93], edx; ret;
0xffffffff826ce352: xchg esp, eax; out 0x74, eax; adc [rcx+rax-0x7e], dh; iretd;
0xffffffff826cee9e: xchg esp, eax; out 0x74, eax; adc [rdi], al; xchg ecx, eax; cmp al, 0x73; ret;
0xffffffff826cee9f: xchg esp, eax; out 0x74, eax; adc [rdi], al; xchg ecx, eax; cmp al, 0x73; ret;
0xffffffff826cef24: xchg esp, eax; out 0x74, eax; adc bh, bh; shl dword ptr [rax-0x6f], cl; cmp al, 0x73; ret;
0xffffffff826cef23: xchg esp, eax; out 0x74, eax; adc bh, bh; shl dword ptr [rax-0x6f], cl; cmp al, 0x73; ret;
0xffffffff826cf03f: xchg esp, eax; out 0x74, eax; adc edi, [rbp+0x60dfb093]; cmp al, 0x73; ret;
0xffffffff826cf03e: xchg esp, eax; out 0x74, eax; adc edi, [rbp+0x60dfb093]; cmp al, 0x73; ret;
0xffffffff82672a88: xchg esp, eax; out 0x74, eax; iretd;
0xffffffff82682e7c: xchg esp, eax; out 0x74, eax; iretd;
0xffffffff826ee078: xchg esp, eax; out 0x74, eax; or [rdx], dl; movsxd esi, esi; call rsi;
0xffffffff826dbcf2: xchg esp, eax; out 0x74, eax; or [rsp+rdi*8-0x58], dh; call rsi;
0xffffffff826f0807: xchg esp, eax; out 0x74, eax; or bh, dh; jmp qword ptr [rbx-0x58];
0xffffffff826eb9e2: xchg esp, eax; out 0x74, eax; or ch, dl; jmp qword ptr [rbx-0x58];
0xffffffff826f07d7: xchg esp, eax; out 0x74, eax; or edi, esi; jmp qword ptr [rbx-0x7d];
0xffffffff826a019c: xchg esp, eax; out 0x74, eax; or esi, [rdx-0x19]; jmp far fword ptr [rcx-0x22970497];
0xffffffff8268bae3: xchg esp, eax; out 0x74, eax; sysret;
0xffffffff8249c1ff: xchg esp, eax; out 0x8f, al; iretd;
0xffffffff824679b5: xchg esp, eax; out 0x94, eax; pop rsp; mov ebp, 0x9843c639; cdqe; ret 0x6397;
0xffffffff825232e0: xchg esp, eax; out 0x9f, eax; ret;
0xffffffff82542431: xchg esp, eax; out 0xb8, al; test al, 0xaf; jmp far fword ptr [rcx];
0xffffffff8226b048: xchg esp, eax; out 0xe3, al; in eax, dx; ret;
0xffffffff8264838d: xchg esp, eax; out 0xff, al; call qword ptr [rbx-0x6c20001a];
0xffffffff81c6dbf8: xchg esp, eax; out 0xff, al; dec dword ptr [rax-0x77]; ret 0xc148;
0xffffffff8269ffd2: xchg esp, eax; out 0xff, eax; iretd;
0xffffffff8269f13c: xchg esp, eax; out 0xff, eax; sub eax, 0x91676f9; call rbx;
0xffffffff82647f8d: xchg esp, eax; out 0xff, eax; xchg r10, rax; out 0xff, eax; setb bh; call far fword ptr [rdi-0x70];
0xffffffff8200a07c: xchg esp, eax; out dx, al; add al, 0xff; scasd [rdi]; add edi, eax; call rsp;
0xffffffff8229885e: xchg esp, eax; out dx, al; iretd;
0xffffffff810e4198: xchg esp, eax; out dx, al; mov ecx, 0x458b4900; add [rax-0x7b], cl; shl byte ptr [rsp+rbp+0x48], 0x89; ret;
0xffffffff82a35c0c: xchg esp, eax; out dx, eax; add [rax], al; ret;
0xffffffff82494244: xchg esp, eax; out dx, eax; iretd;
0xffffffff82645b2d: xchg esp, eax; out dx, eax; jmp far fword ptr [rdi+0x6fffef93];
0xffffffff8225bc4c: xchg esp, eax; out dx, eax; shr byte ptr [rbx-0xddc3149], 1; push rax; pop rbx; ret;
0xffffffff8280e51c: xchg esp, eax; outsb dx, [rsi]; call far fword ptr [rcx-7];
0xffffffff82663dbd: xchg esp, eax; outsb dx, [rsi]; call far fword ptr [rdi];
0xffffffff82453c1a: xchg esp, eax; outsb dx, [rsi]; iretd;
0xffffffff82663db9: xchg esp, eax; outsb dx, [rsi]; jmp far fword ptr [rdi-0x6c];
0xffffffff824177ce: xchg esp, eax; outsb dx, [rsi]; ret 0x6a69;
0xffffffff823c1f05: xchg esp, eax; outsb dx, [rsi]; scasb [rdi]; clc; ret;
0xffffffff823ee6dd: xchg esp, eax; outsb dx, [rsi]; xchg [rbp-0x1c], al; sub esi, ecx; hlt; ret;
0xffffffff8253782c: xchg esp, eax; outsd dx, [rsi]; pop rbx; iretd;
0xffffffff811d584b: xchg esp, eax; pop qword ptr [rax-0x76fffffa]; fdiv st, st(7); fdivr st, dword ptr [rcx]; ret 0xe73;
0xffffffff823b0c24: xchg esp, eax; pop rax; add [rdx], dh; out dx, eax; cld; jmp far fword ptr [rdx];
0xffffffff81b2de8c: xchg esp, eax; pop rax; call qword ptr [rax+0x2d37ebe8];
0xffffffff82561d4c: xchg esp, eax; pop rax; cwde; pop rbp; ret;
0xffffffff82668f09: xchg esp, eax; pop rax; dec dword ptr [rdi]; xchg esp, eax; pop rax; jmp far fword ptr [rdi-0x6d];
0xffffffff82668f0d: xchg esp, eax; pop rax; jmp far fword ptr [rdi-0x6d];
0xffffffff82667ecd: xchg esp, eax; pop rbp; dec dword ptr [rdi-0x3000a26d]; xchg edx, eax; pop rbp; call far fword ptr [rdi-0x70];
0xffffffff8236f96a: xchg esp, eax; pop rbp; fdivr st, qword ptr [rax]; out 0xb9, al; leave; ret 0xd7dd;
0xffffffff82667ec9: xchg esp, eax; pop rbp; jmp far fword ptr [rdi];
0xffffffff82342520: xchg esp, eax; pop rbp; or al, 0x2f; rcl dword ptr [rdx-0x7a], cl; ret 0x5bb0;
0xffffffff824cf3c7: xchg esp, eax; pop rbp; shr ah, 1; ret;
0xffffffff82314403: xchg esp, eax; pop rbx; out 0x2f, al; nop; iretd;
0xffffffff81046c83: xchg esp, eax; pop rbx; pop r14; pop r15; ret;
0xffffffff81207a19: xchg esp, eax; pop rbx; pop r14; pop rbp; ret;
0xffffffff8105122a: xchg esp, eax; pop rbx; ret;
0xffffffff8248ad56: xchg esp, eax; pop rbx; xchg ebp, eax; iretd;
0xffffffff816dc1dd: xchg esp, eax; pop rcx; add [rax-0x7d], cl; ret;
0xffffffff824466ee: xchg esp, eax; pop rcx; or [rcx-0x20], ebx; sbb [rdi-0x421356a7], ecx; iretd;
0xffffffff82571828: xchg esp, eax; pop rcx; scasd [rdi]; in eax, 0x71; ret 0x155e;
0xffffffff826678b9: xchg esp, eax; pop rdi; call far fword ptr [rdi+0x3fff5f93];
0xffffffff8241a8a0: xchg esp, eax; pop rdi; iretd;
0xffffffff826678ad: xchg esp, eax; pop rdi; jmp far fword ptr [rdi+0x4fff5f94];
0xffffffff823f38a3: xchg esp, eax; pop rdi; sbb cl, [0xffffffffdeef9641]; inc dword ptr [rbp-0x5e]; jmp far fword ptr [rax+0x4d];
0xffffffff82521e2b: xchg esp, eax; pop rdi; test [rsi+0x623d33dd], edx; ret 0xd3ed;
0xffffffff8226407e: xchg esp, eax; pop rdx; adc eax, 0x4ad517a4; ret 0x9033;
0xffffffff8266891d: xchg esp, eax; pop rdx; call far fword ptr [rdi-0x6e];
0xffffffff822b7890: xchg esp, eax; pop rdx; push rcx; call rdx;
0xffffffff822cae5e: xchg esp, eax; pop rdx; xchg ecx, eax; call far fword ptr [rax+0x20];
0xffffffff81a17ca8: xchg esp, eax; pop rsi; add [rax-0x77], cl; ret;
0xffffffff8225688f: xchg esp, eax; pop rsi; ret 0x1ef;
0xffffffff82418366: xchg esp, eax; pop rsi; sahf; ret;
0xffffffff824b0e82: xchg esp, eax; pop rsi; xchg edx, eax; in eax, 0x2e; call rsp;
0xffffffff8241bbfa: xchg esp, eax; pop rsp; adc al, 0x32; iretd;
0xffffffff82452912: xchg esp, eax; pop rsp; fbld st, tbyte ptr [rax+0x2cf2e8de]; iretd;
0xffffffff824679b7: xchg esp, eax; pop rsp; mov ebp, 0x9843c639; cdqe; ret 0x6397;
0xffffffff812916fa: xchg esp, eax; popfq; add [rax-0x68], cl; ret;
0xffffffff81775bb7: xchg esp, eax; popfq; dec dword ptr [rax-0x39]; ret;
0xffffffff823be7fd: xchg esp, eax; popfq; fldcw [rdi]; insb [rdi], dx; jmp far fword ptr [rsi+0x3e];
0xffffffff82254b1d: xchg esp, eax; popfq; iretd;
0xffffffff8235ab08: xchg esp, eax; popfq; ret;
0xffffffff814469a8: xchg esp, eax; popfq; sti; dec dword ptr [rax-0x77]; ret;
0xffffffff823d8abd: xchg esp, eax; psllq mm1, [rbp-0x4c]; xchg ebx, eax; iretd;
0xffffffff8254654d: xchg esp, eax; punpckhwd mm6, [rbx]; iretd;
0xffffffff8228d2f6: xchg esp, eax; push 0x23b4b257; ret 0x64ce;
0xffffffff81092d09: xchg esp, eax; push 0x7f79c501; iretd;
0xffffffff83540a39: xchg esp, eax; push 0xffffffffffffff81; jmp qword ptr [rax-0x6a];
0xffffffff820024ec: xchg esp, eax; push 5; jmp qword ptr [rcx];
0xffffffff82006cdd: xchg esp, eax; push qword ptr [r8]; and al, [rip-0x38e69e01]; inc dword ptr [rbx]; xchg ebp, eax; jmp qword ptr [r10];
0xffffffff823f2618: xchg esp, eax; push qword ptr [rcx+0x71]; iretd;
0xffffffff81713ea6: xchg esp, eax; push qword ptr [rcx]; rcr byte ptr [rbx+0x41], 0x5e; pop rbp; ret;
0xffffffff82529def: xchg esp, eax; push rax; mov dl, 0xd3; mov ah, 0x83; ret 0xbee6;
0xffffffff82349999: xchg esp, eax; push rax; push rbp; cmp al, 0xb6; ret 0x930d;
0xffffffff8228a539: xchg esp, eax; push rax; ret 0xc336;
0xffffffff8345187b: xchg esp, eax; push rax; xor dword ptr [rcx], 0xffffffc0; ret;
0xffffffff828ae69c: xchg esp, eax; push rbp; add al, 0; ret;
0xffffffff8230c6ca: xchg esp, eax; push rbp; fsubr st, qword ptr [rbx+0xf]; fsincos; ret 0xe748;
0xffffffff8230c6c9: xchg esp, eax; push rbp; fsubr st, qword ptr [rbx+0xf]; fsincos; ret 0xe748;
0xffffffff82669a91: xchg esp, eax; push rbx; call far fword ptr [rdi-0x70];
0xffffffff824505e9: xchg esp, eax; push rbx; hlt; rol byte ptr [rax], 0xff; iretd;
0xffffffff82362bb6: xchg esp, eax; push rbx; push 0xffffffffab580769; ret 0xfc68;
0xffffffff82007379: xchg esp, eax; push rcx; call qword ptr [rbx+rbx+0x160fff05];
0xffffffff81980c48: xchg esp, eax; push rcx; iretd;
0xffffffff8200736d: xchg esp, eax; push rcx; jmp qword ptr [rax+0x15ff051b];
0xffffffff82547739: xchg esp, eax; push rdi; ret 0xddcb;
0xffffffff82389e97: xchg esp, eax; push rdi; ret;
0xffffffff82003ddc: xchg esp, eax; push rdx; add eax, 0x96455bff; call far fword ptr [rcx+0x45];
0xffffffff824d00c7: xchg esp, eax; push rdx; cwde; push rcx; ret 0xf383;
0xffffffff82371c8a: xchg esp, eax; push rdx; mov [rdi+0x2018ab16], gs; lodsb [rsi]; ret;
0xffffffff82264dd9: xchg esp, eax; push rdx; mov edi, [rbx]; insb [rdi], dx; ret 0x3278;
0xffffffff8233c218: xchg esp, eax; push rdx; outsb dx, [rsi]; out dx, al; cwde; ret 0x8ffc;
0xffffffff825229c4: xchg esp, eax; push rdx; push 0x3bcf46b0; ret;
0xffffffff822ab9b8: xchg esp, eax; push rsi; clc; ret 0xc9ed;
0xffffffff81040a84: xchg esp, eax; push rsi; ret;
0xffffffff8252dfc0: xchg esp, eax; push rsi; stosb [rdi]; ret 0xa91e;
0xffffffff8237f421: xchg esp, eax; push rsp; jmp rax;
0xffffffff822caae0: xchg esp, eax; push rsp; mov ds, [rbx-0x4f]; sahf; iretq;
0xffffffff824183ec: xchg esp, eax; push rsp; or eax, 0x9eabec45; iretd;
0xffffffff8238f76f: xchg esp, eax; push rsp; push 0x64; cmp al, 0x78; fidivr st, dword ptr [rbx]; iretd;
0xffffffff8255ce6e: xchg esp, eax; push rsp; xchg ebx, eax; iretd;
0xffffffff82657ff9: xchg esp, eax; pushfq; call far fword ptr [rdi-0x1000636d];
0xffffffff818c4d58: xchg esp, eax; pushfq; dec dword ptr [rax-0x39]; ret;
0xffffffff82657ff5: xchg esp, eax; pushfq; dec dword ptr [rdi-0x6c]; pushfq; call far fword ptr [rdi-0x1000636d];
0xffffffff82470ee7: xchg esp, eax; pushfq; iretd;
0xffffffff82289a33: xchg esp, eax; pushfq; lodsd [rsi]; iretd;
0xffffffff82497a1f: xchg esp, eax; pushfq; pop rcx; ret;
0xffffffff823c7cc5: xchg esp, eax; pushfq; sysret;
0xffffffff82366f7a: xchg esp, eax; rcl byte ptr [rax-0x44], cl; ret 0x462f;
0xffffffff8239b1c4: xchg esp, eax; rcl dword ptr [rax-0x53efe10], cl; mov ch, 8; ficom st, word ptr [rsi]; ret;
0xffffffff811239d9: xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5c; pop r13; pop r14; pop r15; ret;
0xffffffff81890ee3: xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5c; pop r14; pop r15; pop rbp; ret;
0xffffffff811e3659: xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5c; pop r14; pop r15; ret;
0xffffffff81058ea3: xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; pop r15; pop rbp; ret;
0xffffffff8104d560: xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; pop r15; ret;
0xffffffff810c2c96: xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; pop rbp; ret;
0xffffffff811b7a4a: xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5e; ret;
0xffffffff824f79e7: xchg esp, eax; rcr byte ptr [rdi], 0xe1; and esi, [rdx]; sbb ch, [rsi*4-0x1f2d887f]; ret;
0xffffffff8237ae6a: xchg esp, eax; rcr ch, 1; ret;
0xffffffff827ff1ec: xchg esp, eax; rcr dword ptr [rcx], cl; call rdi;
0xffffffff81478183: xchg esp, eax; ret 0x1088;
0xffffffff815c433c: xchg esp, eax; ret 0x10b9;
0xffffffff82427ca1: xchg esp, eax; ret 0x12f6;
0xffffffff811dfef0: xchg esp, eax; ret 0x141;
0xffffffff8177d3a5: xchg esp, eax; ret 0x1422;
0xffffffff8230f683: xchg esp, eax; ret 0x1450;
0xffffffff8124dfd6: xchg esp, eax; ret 0x148d;
0xffffffff8220d4c0: xchg esp, eax; ret 0x149;
0xffffffff8126b7e4: xchg esp, eax; ret 0x14c;
0xffffffff824f8bb0: xchg esp, eax; ret 0x1641;
0xffffffff81162283: xchg esp, eax; ret 0x1a0;
0xffffffff82ac6a14: xchg esp, eax; ret 0x1a;
0xffffffff81700ec1: xchg esp, eax; ret 0x1b0;
0xffffffff8119fcc2: xchg esp, eax; ret 0x1be;
0xffffffff825d81f5: xchg esp, eax; ret 0x1d3c;
0xffffffff812295a5: xchg esp, eax; ret 0x2040;
0xffffffff81c68858: xchg esp, eax; ret 0x2041;
0xffffffff8105c029: xchg esp, eax; ret 0x2044;
0xffffffff81a2ccb1: xchg esp, eax; ret 0x2175;
0xffffffff823b25a2: xchg esp, eax; ret 0x2449;
0xffffffff8104ab57: xchg esp, eax; ret 0x245;
0xffffffff81105c4a: xchg esp, eax; ret 0x2548;
0xffffffff8168493f: xchg esp, eax; ret 0x2941;
0xffffffff8251373c: xchg esp, eax; ret 0x29;
0xffffffff8182eacf: xchg esp, eax; ret 0x2a8;
0xffffffff812c788c: xchg esp, eax; ret 0x2b8;
0xffffffff81ae8f16: xchg esp, eax; ret 0x2b9;
0xffffffff815a974b: xchg esp, eax; ret 0x2eb;
0xffffffff81bcd148: xchg esp, eax; ret 0x30a8;
0xffffffff811d6fb4: xchg esp, eax; ret 0x3145;
0xffffffff822ec451: xchg esp, eax; ret 0x3302;
0xffffffff8125724f: xchg esp, eax; ret 0x33eb;
0xffffffff81bef698: xchg esp, eax; ret 0x349;
0xffffffff8254e577: xchg esp, eax; ret 0x35af;
0xffffffff8237b539: xchg esp, eax; ret 0x3690;
0xffffffff8224a6f9: xchg esp, eax; ret 0x378b;
0xffffffff81a81f5d: xchg esp, eax; ret 0x3840;
0xffffffff818d8ec5: xchg esp, eax; ret 0x3944;
0xffffffff8103b89c: xchg esp, eax; ret 0x3948;
0xffffffff812331ff: xchg esp, eax; ret 0x394c;
0xffffffff81234207: xchg esp, eax; ret 0x394d;
0xffffffff81bda366: xchg esp, eax; ret 0x3a41;
0xffffffff816c19f9: xchg esp, eax; ret 0x3c80;
0xffffffff824cb457: xchg esp, eax; ret 0x3c8c;
0xffffffff819ddc24: xchg esp, eax; ret 0x3d48;
0xffffffff82332e4f: xchg esp, eax; ret 0x3fd5;
0xffffffff8253888d: xchg esp, eax; ret 0x4160;
0xffffffff81bb7891: xchg esp, eax; ret 0x41f0;
0xffffffff813fe8f7: xchg esp, eax; ret 0x448b;
0xffffffff81630cad: xchg esp, eax; ret 0x450f;
0xffffffff81621ff4: xchg esp, eax; ret 0x474;
0xffffffff818ede0e: xchg esp, eax; ret 0x48d;
0xffffffff81645480: xchg esp, eax; ret 0x48ff;
0xffffffff81477050: xchg esp, eax; ret 0x498b;
0xffffffff825d7cc5: xchg esp, eax; ret 0x4af3;
0xffffffff8102fd03: xchg esp, eax; ret 0x4b9;
0xffffffff811efd73: xchg esp, eax; ret 0x4c8b;
0xffffffff816bbed9: xchg esp, eax; ret 0x4c8d;
0xffffffff814881da: xchg esp, eax; ret 0x4eeb;
0xffffffff8182a05c: xchg esp, eax; ret 0x4f74;
0xffffffff81a7dd15: xchg esp, eax; ret 0x5039;
0xffffffff81546a52: xchg esp, eax; ret 0x5089;
0xffffffff82384ce1: xchg esp, eax; ret 0x50d5;
0xffffffff81a81afa: xchg esp, eax; ret 0x5139;
0xffffffff8135db23: xchg esp, eax; ret 0x5389;
0xffffffff81935e28: xchg esp, eax; ret 0x5484;
0xffffffff813c4b89: xchg esp, eax; ret 0x5489;
0xffffffff814bada9: xchg esp, eax; ret 0x548d;
0xffffffff822fc485: xchg esp, eax; ret 0x5bdb;
0xffffffff81bc69b8: xchg esp, eax; ret 0x5d8d;
0xffffffff82448ea5: xchg esp, eax; ret 0x6573;
0xffffffff82467926: xchg esp, eax; ret 0x67c0;
0xffffffff8247738f: xchg esp, eax; ret 0x689e;
0xffffffff81a4cf7b: xchg esp, eax; ret 0x6b48;
0xffffffff824b5600: xchg esp, eax; ret 0x6be2;
0xffffffff822a738f: xchg esp, eax; ret 0x7055;
0xffffffff81b1d665: xchg esp, eax; ret 0x7175;
0xffffffff824ba272: xchg esp, eax; ret 0x7282;
0xffffffff811d6045: xchg esp, eax; ret 0x728d;
0xffffffff81af80d5: xchg esp, eax; ret 0x73c;
0xffffffff8245a70f: xchg esp, eax; ret 0x7699;
0xffffffff81296776: xchg esp, eax; ret 0x774;
0xffffffff827ecc94: xchg esp, eax; ret 0x78;
0xffffffff81a7e26b: xchg esp, eax; ret 0x7980;
0xffffffff8232e106: xchg esp, eax; ret 0x79dd;
0xffffffff81c73614: xchg esp, eax; ret 0x7a0;
0xffffffff81a51516: xchg esp, eax; ret 0x7c83;
0xffffffff813282ca: xchg esp, eax; ret 0x7c89;
0xffffffff824b0961: xchg esp, eax; ret 0x7f45;
0xffffffff8158eb83: xchg esp, eax; ret 0x8040;
0xffffffff811da94a: xchg esp, eax; ret 0x8041;
0xffffffff8104c768: xchg esp, eax; ret 0x804;
0xffffffff8126cd70: xchg esp, eax; ret 0x8341;
0xffffffff81276214: xchg esp, eax; ret 0x8348;
0xffffffff817631ef: xchg esp, eax; ret 0x8349;
0xffffffff823af9e1: xchg esp, eax; ret 0x8386;
0xffffffff8112ba25: xchg esp, eax; ret 0x840;
0xffffffff8157be3e: xchg esp, eax; ret 0x840f;
0xffffffff81269c21: xchg esp, eax; ret 0x841;
0xffffffff81255bd3: xchg esp, eax; ret 0x8440;
0xffffffff8103308d: xchg esp, eax; ret 0x844;
0xffffffff811283a6: xchg esp, eax; ret 0x8548;
0xffffffff8187e62d: xchg esp, eax; ret 0x854d;
0xffffffff81b30c71: xchg esp, eax; ret 0x8566;
0xffffffff8226d635: xchg esp, eax; ret 0x86fc;
0xffffffff8114ffd0: xchg esp, eax; ret 0x8941;
0xffffffff816a88d6: xchg esp, eax; ret 0x8944;
0xffffffff810f27d4: xchg esp, eax; ret 0x8948;
0xffffffff81024386: xchg esp, eax; ret 0x894c;
0xffffffff82405101: xchg esp, eax; ret 0x896b;
0xffffffff8171ed14: xchg esp, eax; ret 0x8a40;
0xffffffff817dc729: xchg esp, eax; ret 0x8a41;
0xffffffff822f3255: xchg esp, eax; ret 0x8abc;
0xffffffff8154380a: xchg esp, eax; ret 0x8b41;
0xffffffff819695bd: xchg esp, eax; ret 0x8b44;
0xffffffff8100c8a5: xchg esp, eax; ret 0x8b48;
0xffffffff8144eaaf: xchg esp, eax; ret 0x8b49;
0xffffffff81903d19: xchg esp, eax; ret 0x8b4c;
0xffffffff813ff31b: xchg esp, eax; ret 0x8b4d;
0xffffffff8155c13e: xchg esp, eax; ret 0x8b8b;
0xffffffff8249a732: xchg esp, eax; ret 0x8bfe;
0xffffffff82531c98: xchg esp, eax; ret 0x8cec;
0xffffffff815f0990: xchg esp, eax; ret 0x8d44;
0xffffffff811955ef: xchg esp, eax; ret 0x8d48;
0xffffffff8156e269: xchg esp, eax; ret 0x8d4b;
0xffffffff81bb91a1: xchg esp, eax; ret 0x8fe9;
0xffffffff81924122: xchg esp, eax; ret 0x9389;
0xffffffff82246d96: xchg esp, eax; ret 0x9395;
0xffffffff822afb87: xchg esp, eax; ret 0x940a;
0xffffffff81b7f925: xchg esp, eax; ret 0x948;
0xffffffff817500d5: xchg esp, eax; ret 0x950f;
0xffffffff810fd279: xchg esp, eax; ret 0x9529;
0xffffffff8224815c: xchg esp, eax; ret 0x9b00;
0xffffffff82270937: xchg esp, eax; ret 0x9bcf;
0xffffffff8227779c: xchg esp, eax; ret 0x9ca9;
0xffffffff8249a299: xchg esp, eax; ret 0xa0ee;
0xffffffff81ba33ee: xchg esp, eax; ret 0xa889;
0xffffffff825173b9: xchg esp, eax; ret 0xa91e;
0xffffffff8254abb0: xchg esp, eax; ret 0xb5df;
0xffffffff81526366: xchg esp, eax; ret 0xb60f;
0xffffffff815a8f16: xchg esp, eax; ret 0xb70f;
0xffffffff810cae1b: xchg esp, eax; ret 0xb74;
0xffffffff81297709: xchg esp, eax; ret 0xbd;
0xffffffff823d60e7: xchg esp, eax; ret 0xbde0;
0xffffffff81677567: xchg esp, eax; ret 0xbe;
0xffffffff824aa8d4: xchg esp, eax; ret 0xbf22;
0xffffffff819da734: xchg esp, eax; ret 0xbf41;
0xffffffff8125e54c: xchg esp, eax; ret 0xbf48;
0xffffffff816e49f7: xchg esp, eax; ret 0xc031;
0xffffffff8176a497: xchg esp, eax; ret 0xc085;
0xffffffff8100a67a: xchg esp, eax; ret 0xc148;
0xffffffff8136967f: xchg esp, eax; ret 0xc183;
0xffffffff816a7944: xchg esp, eax; ret 0xc1f7;
0xffffffff81329c7e: xchg esp, eax; ret 0xc201;
0xffffffff81035a8f: xchg esp, eax; ret 0xc208;
0xffffffff8105976e: xchg esp, eax; ret 0xc220;
0xffffffff812e4f64: xchg esp, eax; ret 0xc230;
0xffffffff8149f394: xchg esp, eax; ret 0xc231;
0xffffffff81736e48: xchg esp, eax; ret 0xc280;
0xffffffff81b1f27d: xchg esp, eax; ret 0xc283;
0xffffffff82545c44: xchg esp, eax; ret 0xc345;
0xffffffff823c8088: xchg esp, eax; ret 0xc3be;
0xffffffff81b5de92: xchg esp, eax; ret 0xc689;
0xffffffff82403cfc: xchg esp, eax; ret 0xc691;
0xffffffff81168cf5: xchg esp, eax; ret 0xc748;
0xffffffff810be6e8: xchg esp, eax; ret 0xc75;
0xffffffff81a7e134: xchg esp, eax; ret 0xc789;
0xffffffff816a6fe4: xchg esp, eax; ret 0xc7f7;
0xffffffff8171fdf9: xchg esp, eax; ret 0xc808;
0xffffffff813daeb9: xchg esp, eax; ret 0xc8d;
0xffffffff8103cab1: xchg esp, eax; ret 0xc931;
0xffffffff8142cb40: xchg esp, eax; ret 0xc985;
0xffffffff81364e68: xchg esp, eax; ret 0xc9;
0xffffffff8112d708: xchg esp, eax; ret 0xca01;
0xffffffff810b0363: xchg esp, eax; ret 0xca08;
0xffffffff8147df8e: xchg esp, eax; ret 0xca0f;
0xffffffff810596f1: xchg esp, eax; ret 0xca20;
0xffffffff813548b5: xchg esp, eax; ret 0xca30;
0xffffffff81a808d5: xchg esp, eax; ret 0xca38;
0xffffffff81196fe4: xchg esp, eax; ret 0xca83;
0xffffffff82321b8a: xchg esp, eax; ret 0xcd9e;
0xffffffff81b631ec: xchg esp, eax; ret 0xce89;
0xffffffff81b32f56: xchg esp, eax; ret 0xceb;
0xffffffff819d6092: xchg esp, eax; ret 0xcf39;
0xffffffff81b632c4: xchg esp, eax; ret 0xcf89;
0xffffffff81b959df: xchg esp, eax; ret 0xd008;
0xffffffff81a826d1: xchg esp, eax; ret 0xd020;
0xffffffff8100cadb: xchg esp, eax; ret 0xd038;
0xffffffff815405dc: xchg esp, eax; ret 0xd084;
0xffffffff81718f0c: xchg esp, eax; ret 0xd138;
0xffffffff8124abe3: xchg esp, eax; ret 0xd184;
0xffffffff8171ed3e: xchg esp, eax; ret 0xd189;
0xffffffff823abd6e: xchg esp, eax; ret 0xd1f2;
0xffffffff81561987: xchg esp, eax; ret 0xd284;
0xffffffff8134f726: xchg esp, eax; ret 0xd301;
0xffffffff81b250da: xchg esp, eax; ret 0xd338;
0xffffffff815c39cf: xchg esp, eax; ret 0xd384;
0xffffffff82311bf4: xchg esp, eax; ret 0xd61f;
0xffffffff822d0eb9: xchg esp, eax; ret 0xd64d;
0xffffffff8104c72d: xchg esp, eax; ret 0xd73c;
0xffffffff8177b80a: xchg esp, eax; ret 0xd75;
0xffffffff8137482c: xchg esp, eax; ret 0xd939;
0xffffffff824a06d5: xchg esp, eax; ret 0xd982;
0xffffffff81013614: xchg esp, eax; ret 0xda08;
0xffffffff81282972: xchg esp, eax; ret 0xda20;
0xffffffff815d38a2: xchg esp, eax; ret 0xdaf7;
0xffffffff824aa2e6: xchg esp, eax; ret 0xdbcc;
0xffffffff818dd75c: xchg esp, eax; ret 0xdd01;
0xffffffff823eef2d: xchg esp, eax; ret 0xdfc2;
0xffffffff8184139b: xchg esp, eax; ret 0xe074;
0xffffffff8187a730: xchg esp, eax; ret 0xe0bf;
0xffffffff81ae6023: xchg esp, eax; ret 0xe0c1;
0xffffffff816f0a58: xchg esp, eax; ret 0xe180;
0xffffffff811d07cb: xchg esp, eax; ret 0xe183;
0xffffffff8100cc4c: xchg esp, eax; ret 0xe2c1;
0xffffffff8185dbeb: xchg esp, eax; ret 0xeab8;
0xffffffff81287de4: xchg esp, eax; ret 0xed31;
0xffffffff82258292: xchg esp, eax; ret 0xedae;
0xffffffff8232908c: xchg esp, eax; ret 0xefd6;
0xffffffff82478c81: xchg esp, eax; ret 0xf015;
0xffffffff811dde5f: xchg esp, eax; ret 0xf180;
0xffffffff811d607c: xchg esp, eax; ret 0xf201;
0xffffffff81a788e6: xchg esp, eax; ret 0xf280;
0xffffffff81630cd4: xchg esp, eax; ret 0xf41;
0xffffffff811f8b29: xchg esp, eax; ret 0xf44;
0xffffffff811f8c94: xchg esp, eax; ret 0xf45;
0xffffffff816b8748: xchg esp, eax; ret 0xf48;
0xffffffff816b7324: xchg esp, eax; ret 0xf49;
0xffffffff81894e66: xchg esp, eax; ret 0xf631;
0xffffffff81356a5f: xchg esp, eax; ret 0xf641;
0xffffffff82551dc2: xchg esp, eax; ret 0xf738;
0xffffffff812ba002: xchg esp, eax; ret 0xf741;
0xffffffff81c74b1f: xchg esp, eax; ret 0xf748;
0xffffffff822411da: xchg esp, eax; ret 0xf7c4;
0xffffffff81c74ddc: xchg esp, eax; ret 0xf980;
0xffffffff81018af0: xchg esp, eax; ret 0xf983;
0xffffffff8164dab0: xchg esp, eax; ret 0xfa01;
0xffffffff81598bd4: xchg esp, eax; ret 0xfa83;
0xffffffff811a82a0: xchg esp, eax; ret 0xfb83;
0xffffffff8227f53e: xchg esp, eax; ret 0xfc21;
0xffffffff8227b6a9: xchg esp, eax; ret 0xfd34;
0xffffffff8345b098: xchg esp, eax; ret 0xfdc5;
0xffffffff827f85dc: xchg esp, eax; ret 0xfef0;
0xffffffff8158fd14: xchg esp, eax; ret 0xff04;
0xffffffff81630c3c: xchg esp, eax; ret 0xff31;
0xffffffff83567e71: xchg esp, eax; ret 0xff81;
0xffffffff8227daab: xchg esp, eax; ret 0xffd4;
0xffffffff82809744: xchg esp, eax; ret 1;
0xffffffff828ce9dc: xchg esp, eax; ret 5;
0xffffffff8293beac: xchg esp, eax; ret 9;
0xffffffff81aa2d18: xchg esp, eax; ret;
0xffffffff8100c8ec: xchg esp, eax; ret;
0xffffffff8238cd2e: xchg esp, eax; ret;
0xffffffff81179614: xchg esp, eax; rol bl, 0x31; sar byte ptr [rcx], 0xd7; setb al; ret;
0xffffffff817a288e: xchg esp, eax; rol bl, 0x40; cmp dh, 0x40; sete al; ret;
0xffffffff817a2886: xchg esp, eax; rol bl, 0x40; cmp dh, 0xc0; sete al; ret;
0xffffffff81a8040d: xchg esp, eax; rol bl, 0x40; cmp dh, [rcx+1]; setb al; ret;
0xffffffff81a80474: xchg esp, eax; rol bl, 0x41; mov al, [rax+rsi+7]; cmp al, [rcx+1]; setb al; ret;
0xffffffff8156e11f: xchg esp, eax; rol bl, 0x48; cmp dword ptr [rsi], 0xffffffff; sete al; ret;
0xffffffff8196e6c2: xchg esp, eax; rol bl, 0x48; cmp edi, esi; sete al; ret;
0xffffffff8171ed75: xchg esp, eax; rol bl, 0x48; mov dword ptr [rsi+0x18], 0; xor eax, eax; ret;
0xffffffff811b8c6d: xchg esp, eax; rol bl, 0x48; mov eax, 0xfffffff9; ret;
0xffffffff8164d853: xchg esp, eax; rol bl, 0x66; nop [rax+rax]; cmp edi, esi; seta al; ret;
0xffffffff810289bf: xchg esp, eax; rol bl, 0x66; nop [rax+rax]; nop [rax]; movzx eax, byte ptr [rip+0x1f67ab5]; ret;
0xffffffff81051a9f: xchg esp, eax; rol bl, 0x66; nop [rax+rax]; nop [rax]; xor eax, eax; ret;
0xffffffff811b247b: xchg esp, eax; rol bl, 0x66; nop; xor eax, eax; ret;
0xffffffff819d5490: xchg esp, eax; rol bl, 0x83; call qword ptr [rbx];
0xffffffff81a846e4: xchg esp, eax; rol byte ptr [rax+0x30], 0xc5; mov eax, ebp; pop rbx; pop rbp; ret;
0xffffffff81a7e288: xchg esp, eax; rol byte ptr [rax+0xf000279], 0x95; ret 0xd030;
0xffffffff8343d291: xchg esp, eax; rol byte ptr [rax+0xf00073c], 0x84; ret 1;
0xffffffff81104c6f: xchg esp, eax; rol byte ptr [rbp-0x3d60f037], 0x20; ret 0x5488;
0xffffffff814df75e: xchg esp, eax; rol byte ptr [rbx+0x5b901fe], 0; add [rax], al; cmovne ecx, eax; mov [rdi+0x84], ecx; ret;
0xffffffff810068ae: xchg esp, eax; rol byte ptr [rbx-0x77d66c3], 1; add cl, [rdi]; xchg ebp, eax; ret 0xc230;
0xffffffff81625f7a: xchg esp, eax; rol byte ptr [rcx-0x73], 0x4d; jmp qword ptr [rsi-0x7d];
0xffffffff8191a797: xchg esp, eax; rol byte ptr [rcx-0x7d], 0x79; or [rbx+0xf], bl; xchg edx, eax; ret;
0xffffffff817c1bfa: xchg esp, eax; rol byte ptr [rcx-0x80], 0xf2; add [rcx+8], eax; ret 0x1575;
0xffffffff8180e799: xchg esp, eax; rol byte ptr [rcx], 0xc0; ret;
0xffffffff8117974f: xchg esp, eax; rol byte ptr [rcx], 0xd0; sub eax, ebx; pop rbx; ret;
0xffffffff810bec1a: xchg esp, eax; rol cl, 0xe0; add al, 0x83; shl al, 0x5b; pop r14; ret;
0xffffffff817cd42e: xchg esp, eax; rol cl, 0xe0; add al, 0x83; shl al, 0x5b; ret;
0xffffffff81b0df59: xchg esp, eax; rol cl, 0xe7; add eax, [rcx+0x10502cf]; add [rdi], ecx; iretd;
0xffffffff8164e984: xchg esp, eax; rol dword ptr [rax+0x208247c], 0xf; xchg ebp, eax; ret 0xc085;
0xffffffff81b12180: xchg esp, eax; rol dword ptr [rax+0x208247c], 0xf; xchg edx, eax; ret 0xca20;
0xffffffff81a7e1d1: xchg esp, eax; rol dword ptr [rax+0xf000178], 0x95; shl byte ptr [rax], 0xc8; ret;
0xffffffff82989478: xchg esp, eax; rol dword ptr [rax], 0; scasb [rdi]; iretd;
0xffffffff81ba33e4: xchg esp, eax; rol dword ptr [rbx+0x1acb8], 0; add [rdi], cl; xchg esp, eax; ret 0xa889;
0xffffffff8188f990: xchg esp, eax; rol dword ptr [rbx+0x60247c], 0xf; xchg ebp, eax; ret 0xca20;
0xffffffff817bde4d: xchg esp, eax; rol dword ptr [rbx-0x14ddd5c3], 1; setne al; and al, cl; ret;
0xffffffff8192f461: xchg esp, eax; rol dword ptr [rbx-0x6bf0fb08], 0xc0; or al, cl; ret;
0xffffffff8174ac4e: xchg esp, eax; rol dword ptr [rbx-0x6bf0fc02], 0xc0; and al, cl; ret;
0xffffffff8105d947: xchg esp, eax; rol dword ptr [rbx-0x6bf0fe08], 0xc0; or al, cl; ret;
0xffffffff81975306: xchg esp, eax; rol dword ptr [rbx-0x74b6fe10], 0x4c; iretd;
0xffffffff81746070: xchg esp, eax; rol dword ptr [rbx-0x7c4039], 0x1a; setb al; or al, cl; ret;
0xffffffff81858abc: xchg esp, eax; rol dword ptr [rcx+0x2003f1], 0; mov eax, ecx; ret;
0xffffffff814e5372: xchg esp, eax; rol dword ptr [rcx+rcx*4-0x3e], 0xf6; rol byte ptr [rdx+rcx*8+0x1494b75], cl; ret 0xc031;
0xffffffff81ba303f: xchg esp, eax; rol dword ptr [rcx+rcx*4-0x49], 0x40; add [rax], eax; add [rax], bh; enter 0xd074, 0xe8; iretd;
0xffffffff81be98af: xchg esp, eax; rol dword ptr [rcx-0x7d], 0xcc; or [rcx], dh; inc dword ptr [rcx+rcx*8+0xfe38944]; fild st, word ptr [r9]; ret;
0xffffffff8182a0a0: xchg esp, eax; rol dword ptr [rcx-0x80], 0xf8; dec dword ptr [rdi]; xchg esp, eax; ret 0x474;
0xffffffff8182a055: xchg esp, eax; rol dword ptr [rcx-0x80], 0xf8; dec dword ptr [rdi]; xchg esp, eax; ret 0x4f74;
0xffffffff81a808cd: xchg esp, eax; rol dword ptr [rcx-0xa], 0x45; add cl, [rdi]; xchg esp, eax; ret 0xca38;
0xffffffff81372846: xchg esp, eax; rol dword ptr [rcx-0xa], 0xc7; cmp [rdi], cl; xchg esp, eax; ret 0xc748;
0xffffffff817330f1: xchg esp, eax; rol dword ptr [rcx], 0; mov ebx, 0x14; mov eax, ebx; pop rbx; ret;
0xffffffff8269b8eb: xchg esp, eax; rol dword ptr [rdi], 0x74; cld; call rsi;
0xffffffff8267d8c8: xchg esp, eax; rol dword ptr [rdx], 0xf7; sub al, 8; call far fword ptr [rdi-0x66];
0xffffffff826eb9cc: xchg esp, eax; rol dword ptr [rsi], 0xd5; call rsi;
0xffffffff81c06834: xchg esp, eax; rol ecx, 0xe1; add edi, [rip+0x81]; mov eax, 4; cmovne eax, ecx; ret;
0xffffffff815ab911: xchg esp, eax; rol ecx, 0xe1; or al, [rcx-0xc0037]; jmp qword ptr [rcx];
0xffffffff810b031d: xchg esp, eax; ror byte ptr [rax+0x39], 0x3d; ficom st, dword ptr [rbx-0x12]; add [rdi], ecx; xchg esp, eax; ret 0xc208;
0xffffffff81811c9f: xchg esp, eax; ror byte ptr [rax-0x3f], 0xe0; add ecx, [rax+9]; ret;
0xffffffff810114c2: xchg esp, eax; ror byte ptr [rax-0x3f], 0xe0; or ecx, [rax+9]; fmul st, dword ptr [rax-0x7d]; enter 0x4801, 0x39; ret;
0xffffffff817d549d: xchg esp, eax; ror byte ptr [rax-0x3f], 0xe9; sbb al, [rax-0x6bf0fd06]; ret 0xc220;
0xffffffff81be5cf4: xchg esp, eax; ror byte ptr [rax-0x7b], 0xd2; setne cl; and cl, al; movzx eax, cl; ret;
0xffffffff8171fdf2: xchg esp, eax; ror byte ptr [rax-0x7d], 0xfa; dec dword ptr [rdi]; xchg esp, eax; ret 0xc808;
0xffffffff810b03b7: xchg esp, eax; ror byte ptr [rax], 0xc8; or al, dl; and al, 1; ret;
0xffffffff8173c830: xchg esp, eax; ror byte ptr [rax], 0xc8; pop rbx; pop rbp; ret;
0xffffffff8105d94d: xchg esp, eax; ror byte ptr [rax], 0xc8; ret;
0xffffffff819d3fea: xchg esp, eax; ror byte ptr [rax], 0xd0; or al, sil; and al, 1; ret;
0xffffffff811cabaa: xchg esp, eax; ror byte ptr [rax], 0xd0; ret;
0xffffffff81c82173: xchg esp, eax; ror byte ptr [rbp-0x37afc], 0xff; jmp qword ptr [rbp+0x48];
0xffffffff815ea53b: xchg esp, eax; ror byte ptr [rbp-0x3e7cfff4], 2; test edi, edi; mov eax, 1; cmovne eax, ecx; ret;
0xffffffff81c272cc: xchg esp, eax; ror byte ptr [rbp-0x3f7c7ffc], 0xfb; ret;
0xffffffff81b633be: xchg esp, eax; ror byte ptr [rcx+0x1e280ca], 0x38; ret 0x3274;
0xffffffff811aab95: xchg esp, eax; ror byte ptr [rcx+0x46dc3b05], 2; xor eax, eax; ret;
0xffffffff815385cc: xchg esp, eax; ror byte ptr [rcx-0x2844163a], 0xff; jmp qword ptr [rsi+0x66];
0xffffffff8177d4ba: xchg esp, eax; ror byte ptr [rcx-0x3f1c7f0d], 0x80; sti; or byte ptr [rdi], 0x95; ret;
0xffffffff8129453a: xchg esp, eax; ror byte ptr [rcx-0x7cbbdb94], 0xfd; add ecx, [rax-0x77]; fisttp word ptr [rdi], st; xchg edx, eax; ret;
0xffffffff811de762: xchg esp, eax; ror byte ptr [rdi], 0x95; ret 0x8445;
0xffffffff8156de62: xchg esp, eax; ror byte ptr [rdi], 0xb6; rcr byte ptr [rbx+0x41], 0x5e; pop rbp; ret;
0xffffffff81190879: xchg esp, eax; ror byte ptr [rdi], 0xb6; rcr byte ptr [rbx+0x41], 0x5e; ret;
0xffffffff8145d2c7: xchg esp, eax; ror dword ptr [rax+0x29], 0xc8; test rax, rax; setg al; ret;
0xffffffff8239b800: xchg esp, eax; ror dword ptr [rax+0x4d], 1; iretq;
0xffffffff816b74ba: xchg esp, eax; ror dword ptr [rax+0xf], 0x45; ret;
0xffffffff8104c62a: xchg esp, eax; ror dword ptr [rax+1], 0xd9; mov rax, rcx; pop rbx; ret;
0xffffffff8130269c: xchg esp, eax; ror dword ptr [rax-0x7b], 0xc0; sete al; or al, cl; ret;
0xffffffff81be5c81: xchg esp, eax; ror dword ptr [rax-0x7b], 0xc0; setne al; and al, cl; movzx eax, al; ret;
0xffffffff8174ac20: xchg esp, eax; ror dword ptr [rax-0x7d], 0xf8; add ecx, [rdi]; xchg esp, eax; shl byte ptr [rax], 0xc8; ret;
0xffffffff8171f764: xchg esp, eax; ror dword ptr [rax-0x7d], 0xfa; dec dword ptr [rdi]; xchg esp, eax; ret 0x840;
0xffffffff826ee082: xchg esp, eax; ror dword ptr [rax], 0x12; movsxd esi, esi; call rsi;
0xffffffff818cde49: xchg esp, eax; ror dword ptr [rax], 0xc1; movzx eax, cl; neg eax; ret;
0xffffffff826eb9ec: xchg esp, eax; ror dword ptr [rax], 0xd5; jmp qword ptr [rbx-0x58];
0xffffffff826f0811: xchg esp, eax; ror dword ptr [rax], 0xf7; jmp qword ptr [rbx-0x58];
0xffffffff811b3f98: xchg esp, eax; ror dword ptr [rbp-0x3ca4b6fc], 0xb8; add eax, [rax]; add [rax], al; pop rbx; ret;
0xffffffff814aecfd: xchg esp, eax; ror dword ptr [rbp-0x3f7c76fc], 0xfb; ret;
0xffffffff8112d510: xchg esp, eax; ror dword ptr [rcx+0x1a28088], 0; ret;
0xffffffff81022c6b: xchg esp, eax; ror dword ptr [rcx+0x5e415bc8], 0x41; pop rdi; pop rbp; ret;
0xffffffff81adf319: xchg esp, eax; ror dword ptr [rcx+0x5e415bc8], 0x5d; ret;
0xffffffff816badb2: xchg esp, eax; ror dword ptr [rcx+0xf], 0x45; ret;
0xffffffff81b66e3a: xchg esp, eax; ror dword ptr [rcx-0x14ebdbb4], 0xe; mov eax, 1; ret;
0xffffffff8169cfb4: xchg esp, eax; ror dword ptr [rcx-0x7d], 0x7e; pop rax; add [rdi], cl; xchg esp, eax; ret 0xca30;
0xffffffff826f07e2: xchg esp, eax; ror dword ptr [rcx], 0xf7; jmp qword ptr [rbx-0x7d];
0xffffffff81b71990: xchg esp, eax; ror dword ptr [rdi], 0x95; ret 0x48d;
0xffffffff81585120: xchg esp, eax; ror dword ptr [rdi], 0x95; ret 0x8d43;
0xffffffff812ab725: xchg esp, eax; ror dword ptr [rdi], 0x95; ret 0xfa01;
0xffffffff8124fe0f: xchg esp, eax; ror dword ptr [rdi], 0x95; ret;
0xffffffff82681be9: xchg esp, eax; ror dword ptr [rdx], 0x74; iretd;
0xffffffff82681bf4: xchg esp, eax; ror dword ptr [rip-0x4c9b3059], 0xf2; sbb [rcx+0x76], esp; shl dword ptr [ebx-0x58f53bea], cl; iretd;
0xffffffff8222771f: xchg esp, eax; ror eax, 1; push rsi; std; ret 0x4447;
0xffffffff82437be5: xchg esp, eax; sahf; fimul st, word ptr [rbx-0x59d396cf]; sbb eax, 0xb667b7dd; ret 0x101a;
0xffffffff823eec58: xchg esp, eax; sahf; iretd;
0xffffffff813d7268: xchg esp, eax; sahf; ret 0x4800;
0xffffffff8264d601: xchg esp, eax; sar bh, 1; iretd;
0xffffffff814b9c30: xchg esp, eax; sar byte ptr [rdx+0x42], 0x29; ret 0x8141;
0xffffffff8182d9af: xchg esp, eax; sar byte ptr [rdx+4], 0x29; ret 0x8d48;
0xffffffff81a82017: xchg esp, eax; sar dword ptr [rax], 0xc1; setne al; ret;
0xffffffff813236d8: xchg esp, eax; sar dword ptr [rcx+rax], 0xf; xchg esp, eax; ror byte ptr [rax], 0xc8; ret;
0xffffffff81affc29: xchg esp, eax; sar dword ptr [rcx], 0xc8; cmovg ecx, eax; add ecx, r9d; mov [rdi+0x758], ecx; ret;
0xffffffff810481ce: xchg esp, eax; sar dword ptr [rcx], 0xf8; setae al; or al, cl; movzx eax, al; ret;
0xffffffff83475592: xchg esp, eax; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff8264d1c1: xchg esp, eax; sar edi, 1; call qword ptr [rdx-0x6ec0002f];
0xffffffff81662d38: xchg esp, eax; sar esi, 1; dec dword ptr [rax-0x7b]; sar byte ptr [rax-0x4a], 0xf; ret;
0xffffffff824db3cb: xchg esp, eax; sbb [rax], bh; sub ebx, [rsi]; iretd;
0xffffffff82269366: xchg esp, eax; sbb [rcx-0x703e4967], dh; iretd;
0xffffffff822e7f42: xchg esp, eax; sbb [rcx-0xe], ah; imul eax, ebx, 0xffffffa3; cmp dh, [rsi-0x69f6e890]; mov al, 0x4e; data16 ret;
0xffffffff82534434: xchg esp, eax; sbb [rcx], ecx; popfq; xor r10d, r8d; movsxd esp, [rcx]; call qword ptr [rdi+1];
0xffffffff8239da45: xchg esp, eax; sbb [rdx], ebx; ret;
0xffffffff823b126b: xchg esp, eax; sbb al, 0x3b; ret 0x41a0;
0xffffffff8252684d: xchg esp, eax; sbb al, 0x40; cmp al, 0x1b; ret;
0xffffffff82440d75: xchg esp, eax; sbb al, 0xa2; xor eax, [rip-0x53c8f69a]; cld; clc; iretd;
0xffffffff82357640: xchg esp, eax; sbb al, 0xc6; mov ebp, 0x4b55a861; iretd;
0xffffffff8247cd34: xchg esp, eax; sbb al, 2; or eax, 0xdd7f8ae6; cmc; or edx, [rax+0x1b]; iretd;
0xffffffff8149c079: xchg esp, eax; sbb al, 2; xor ebx, ebx; mov eax, ebx; pop rbx; ret;
0xffffffff8149c078: xchg esp, eax; sbb al, 2; xor ebx, ebx; mov eax, ebx; pop rbx; ret;
0xffffffff81827968: xchg esp, eax; sbb bh, bh; dec dword ptr [rcx+0x5e415be8]; pop r15; pop rbp; ret;
0xffffffff8251e2e6: xchg esp, eax; sbb bl, bh; in al, dx; ret;
0xffffffff8256badd: xchg esp, eax; sbb ch, al; push 0x6ba553f9; xchg esp, eax; iretd;
0xffffffff823b3daa: xchg esp, eax; sbb cx, [rcx]; and [rdx*4+0x313ef82], bl; mov eax, [0xfe2db0e858856465]; pop rax; ret;
0xffffffff8241918c: xchg esp, eax; sbb dl, [rcx-0x62]; mov ebx, 0x6eed8060; jmp far fword ptr [rbp+0x32c2f170];
0xffffffff8227110e: xchg esp, eax; sbb dword ptr [rsi-0x13], 7; sub dword ptr [rax+0x63], 0x45; push rsp; cmpxchg [rbp+0x572cca50], dh; ret 0xa814;
0xffffffff8243e2ad: xchg esp, eax; sbb eax, 0x150dd877; test [rbx-0x7f], ecx; xchg edi, eax; iretd;
0xffffffff820064e0: xchg esp, eax; sbb eax, 0x5f7affc7; jmp far fword ptr [rax];
0xffffffff8270592b: xchg esp, eax; sbb edi, [rdi-0x311f20f8]; iretd;
0xffffffff824b946c: xchg esp, eax; sbb edi, esp; ret;
0xffffffff824d366d: xchg esp, eax; sbb edx, [rdi]; shl dword ptr [rcx-0x65], 1; sar dword ptr [rdx], 1; pop rdx; iretd;
0xffffffff8172be08: xchg esp, eax; sbb esi, esp; add [rbx+0x41], ebx; pop rsi; ret;
0xffffffff826df98f: xchg esp, eax; sbb esp, [rbx-0x1a]; out 0x15, eax; call far fword ptr [rdi+0x64];
0xffffffff8246c947: xchg esp, eax; sbb esp, edx; sar byte ptr [rdx-0x1f65f566], 0xb7; mov eax, edi; iretd;
0xffffffff822e4290: xchg esp, eax; scasb [rdi]; adc r9b, [rdi-0x7fdf1b96]; int3; iretd;
0xffffffff834a6f24: xchg esp, eax; scasb [rdi]; call qword ptr [rax];
0xffffffff8200b1a1: xchg esp, eax; scasb [rdi]; jmp far fword ptr [rbp+rbx*8+4];
0xffffffff82301fdc: xchg esp, eax; scasb [rdi]; mov ebx, 0xef1d9f5f; ret;
0xffffffff824cf57f: xchg esp, eax; scasb [rdi]; pop rsi; ret;
0xffffffff8240a914: xchg esp, eax; scasb [rdi]; ret;
0xffffffff81308232: xchg esp, eax; scasd [rdi]; add [rax-0x39], cl; ret 0x8470;
0xffffffff8224a4ac: xchg esp, eax; scasd [rdi]; fiadd st, dword ptr [rdx+rbp*4+0x13]; iretd;
0xffffffff82287b07: xchg esp, eax; scasd [rdi]; or cl, al; xchg r15d, eax; ret;
0xffffffff822a7ccf: xchg esp, eax; scasd [rdi]; pop rbx; fsubr st, qword ptr [rax]; jmp qword ptr [rdi+0x13af9ce4];
0xffffffff8238ab01: xchg esp, eax; scasd [rdi]; push rbx; ret;
0xffffffff823dd6e2: xchg esp, eax; scasd [rdi]; ret 0x981b;
0xffffffff824f2226: xchg esp, eax; scasd [rdi]; sti; iretd;
0xffffffff822423ce: xchg esp, eax; setne cl; fsubr st, dword ptr [rcx-0x3d]; int 0xb; ret;
0xffffffff8189e86e: xchg esp, eax; shl bh, 0xd8; pop rbx; pop rbp; ret;
0xffffffff81644b84: xchg esp, eax; shl bh, 0xd8; ret;
0xffffffff8222c6d0: xchg esp, eax; shl bl, cl; xchg [rbx-0x6d], ebp; iretd;
0xffffffff815d5904: xchg esp, eax; shl byte ptr [rax+rbx+0x49], 0x83; mov dword ptr [rcx], 0xac8e6349; add [rax], al; add [rax-0x7d], cl; ret;
0xffffffff81061ac3: xchg esp, eax; shl byte ptr [rax], 0xc8; ret;
0xffffffff81bc7328: xchg esp, eax; shl byte ptr [rax], 0xd0; ret;
0xffffffff8237575d: xchg esp, eax; shl byte ptr [rbp-0x1a765dad], 1; ret 0xf9ff;
0xffffffff8236bae7: xchg esp, eax; shl byte ptr [rbx-0x50], cl; iretd;
0xffffffff811b6442: xchg esp, eax; shl byte ptr [rbx], 0x87; xor al, 1; add [rax], al; ret;
0xffffffff81389fb9: xchg esp, eax; shl byte ptr [rcx+rax], 0xf; mov dh, 0xc0; ret;
0xffffffff823f7755: xchg esp, eax; shl byte ptr [rcx-0x3d], 1; mov esi, 0x2ada426e; ret;
0xffffffff8266f4c8: xchg esp, eax; shl byte ptr [rdi], 1; dec dword ptr [rdi-0x7000c830]; shl byte ptr [rdi], 1; jmp far fword ptr [rdi-0x30];
0xffffffff8140405b: xchg esp, eax; shl byte ptr [rdx+rcx-0x73], 0x4a; add [rcx+0x39], eax; ror byte ptr [rcx-0x3c158a36], 1; mov al, 1; ret;
0xffffffff8159da40: xchg esp, eax; shl dh, 0xc1; add [rdi], ecx; xchg esp, eax; ret 0xc220;
0xffffffff818dd5c2: xchg esp, eax; shl dword ptr [rax], 0xc1; movzx eax, cl; add eax, r8d; ret;
0xffffffff8100356e: xchg esp, eax; shl dword ptr [rax], 0xc1; movzx eax, cl; ret;
0xffffffff812a1966: xchg esp, eax; shl dword ptr [rax], 1; add [rax], al; ret;
0xffffffff82318197: xchg esp, eax; shl dword ptr [rdx], 0x58; add [rbx], dl; cli; ret 0x423e;
0xffffffff816e49ea: xchg esp, eax; shl dword ptr [rip+0xf0], 0x3d; add byte ptr [rax], 0; add [rdi], cl; xchg esp, eax; ret 0xc031;
0xffffffff81b2547d: xchg esp, eax; shl dword ptr [rsi-0x7b], 0xf6; setne al; and al, cl; ret;
0xffffffff817065f7: xchg esp, eax; shl dword ptr [rsi-0x7d], 0xf8; mov eax, 0xffffffe7; cmove eax, ecx; ret;
0xffffffff816e48db: xchg esp, eax; shl dword ptr [rsi-0x7d], 0xf8; or cl, [rdi]; xchg esp, eax; ror byte ptr [rax], 0xc8; ret;
0xffffffff82673cbd: xchg esp, eax; shl eax, 0x74; add eax, 0xe2ccffdf; ror dword ptr [rdx], 0x54; imul edi, ebx, 0xf06cbcfc; call rsp;
0xffffffff82507817: xchg esp, eax; shl eax, cl; or eax, 0xd18bdd6b; ret;
0xffffffff81671bee: xchg esp, eax; shr bl, 2; mov al, 1; pop rbx; pop r14; ret;
0xffffffff8174d01d: xchg esp, eax; shr bl, 2; mov al, 1; pop rbx; ret;
0xffffffff81492019: xchg esp, eax; shr bl, 2; xor eax, eax; pop rbx; pop r14; ret;
0xffffffff8343a2ec: xchg esp, eax; shr bl, 2; xor eax, eax; ret;
0xffffffff823b0bfd: xchg esp, eax; shr byte ptr [rcx-0x2e], 1; call qword ptr [rdi+rbp*4+0xcad5552];
0xffffffff815b9ded: xchg esp, eax; shr dword ptr [rcx+0x1000], 0xf; xchg esp, eax; ret;
0xffffffff8245a9b2: xchg esp, eax; shr dword ptr [rcx], 0xe0; ret;
0xffffffff8198a0fb: xchg esp, eax; shr ecx, 0xd6; add [rax], al; add [rax-0x46], cl; iretd;
0xffffffff81129022: xchg esp, eax; std; call far fword ptr [rbx+0x41];
0xffffffff81800249: xchg esp, eax; std; jmp far fword ptr [rcx+0xff0000];
0xffffffff82641ed1: xchg esp, eax; std; jmp far fword ptr [rdi-0x6c];
0xffffffff823887cf: xchg esp, eax; std; ret 0xaa8b;
0xffffffff8226acb3: xchg esp, eax; std; xor ebp, [rcx+0xe750678]; call far fword ptr [rdi];
0xffffffff823f1b13: xchg esp, eax; sti; in eax, dx; iretd;
0xffffffff82478a2d: xchg esp, eax; sti; int3; adc ecx, [rsi]; add esi, [rbx-0x6b145690]; call qword ptr [rbp-0x2d];
0xffffffff82642875: xchg esp, eax; sti; jmp far fword ptr [rdi-0x6d];
0xffffffff812d29af: xchg esp, eax; sti; jmp qword ptr [rbp+0x48];
0xffffffff825581cf: xchg esp, eax; sti; or al, 0x1d; adc al, 0xc5; iretd;
0xffffffff824b2e59: xchg esp, eax; sti; pop rcx; ret;
0xffffffff811bedc8: xchg esp, eax; stosb [rdi]; add [rax-0x77], cl; ret;
0xffffffff82471545: xchg esp, eax; stosb [rdi]; and ebp, [rdi]; ret 0xd875;
0xffffffff82654bc5: xchg esp, eax; stosb [rdi]; call far fword ptr [rdi-0x6c];
0xffffffff82654bcd: xchg esp, eax; stosb [rdi]; call far fword ptr [rdi-0x6d];
0xffffffff82654bc9: xchg esp, eax; stosb [rdi]; dec dword ptr [rdi]; xchg esp, eax; stosb [rdi]; call far fword ptr [rdi-0x6d];
0xffffffff82654bc1: xchg esp, eax; stosb [rdi]; jmp far fword ptr [rdi+0x5fffaa94];
0xffffffff82392f94: xchg esp, eax; stosd [rdi]; adc al, bl; movsb [rdi], [rsi]; ret 0x48b9;
0xffffffff822b11ca: xchg esp, eax; stosd [rdi]; cmc; ret;
0xffffffff823444ca: xchg esp, eax; stosd [rdi]; iretd;
0xffffffff8256e062: xchg esp, eax; stosd [rdi]; ret;
0xffffffff825108f5: xchg esp, eax; sub [rax+0x53], esi; ret 0xe3e6;
0xffffffff82449837: xchg esp, eax; sub [rax+0x5d], eax; mov dh, 0xd6; sub [rdi+0x4e], dh; cmp eax, 0x42a49966; ret 0x485d;
0xffffffff83527789: xchg esp, eax; sub [rcx-1], al; rcl byte ptr [rax+rbp-0x7f], 1; call qword ptr [rax];
0xffffffff8228a5a0: xchg esp, eax; sub [rdi+0x316fdf05], al; ret 0xcb0b;
0xffffffff813da695: xchg esp, eax; sub [rdx], al; add [rax], al; add [rax], al; ret;
0xffffffff813da6b4: xchg esp, eax; sub [rdx], al; add [rax], al; add [rax], al; ret;
0xffffffff82304a4a: xchg esp, eax; sub [rsi], dl; ret;
0xffffffff8252fac0: xchg esp, eax; sub al, 0x35; out 0x6e, eax; pop rcx; ret 0x45a1;
0xffffffff8224cc68: xchg esp, eax; sub al, 0x51; mov bh, 0xac; pop rbp; ret 0x2ab5;
0xffffffff823ef555: xchg esp, eax; sub al, 0x60; ret;
0xffffffff8234af4d: xchg esp, eax; sub al, 0xe5; in eax, 0x69; and cl, [rcx-0x15]; ret 0x2a84;
0xffffffff8200647c: xchg esp, eax; sub al, [rip-0x38e24401]; jmp qword ptr [rsi+0x1c];
0xffffffff820049b0: xchg esp, eax; sub al, bh; jmp far fword ptr [rdi];
0xffffffff816517a8: xchg esp, eax; sub dword ptr [rbx-0x2776b701], 0x415e415b; pop rdi; ret;
0xffffffff82415bdf: xchg esp, eax; sub eax, 0x69e442ab; iretd;
0xffffffff824324fa: xchg esp, eax; sub eax, 0xac84eeef; xchg [rbx], ch; test bl, al; imul ebx, [rcx+0x1b2d7108], 0x13; iretd;
0xffffffff83529e51: xchg esp, eax; sub eax, 0xffffff81; inc eax; xchg ebp, eax; sub eax, 0xffffff81; call qword ptr [rax-0x7ed26a];
0xffffffff820047d0: xchg esp, eax; sub eax, edi; jmp qword ptr [rbx+2];
0xffffffff8246f77d: xchg esp, eax; sub ebx, [rax-0x6fd5c7f]; outsb dx, [rsi]; scasd [rdi]; jmp far fword ptr [rcx-0x1f85a1cd];
0xffffffff82004bd8: xchg esp, eax; sub edi, eax; call far fword ptr [rdx+0x75];
0xffffffff82473e47: xchg esp, eax; sub edi, edi; or eax, 0xfcb54922; sub [rdi+0x55], eax; cld; ret;
0xffffffff8250e979: xchg esp, eax; sub esp, [rdx+0x72]; mov bh, 0x1c; inc byte ptr [rdx-0x6bc2b8f9]; ret;
0xffffffff82007f7c: xchg esp, eax; syscall;
0xffffffff8226bd8f: xchg esp, eax; sysret;
0xffffffff822c5087: xchg esp, eax; test [rax], ah; mov ebx, 0x3c2ea15a; test eax, 0xa1ae2b88; ret 0xfe96;
0xffffffff822c5088: xchg esp, eax; test [rax], ah; mov ebx, 0x3c2ea15a; test eax, 0xa1ae2b88; ret 0xfe96;
0xffffffff82abcfa4: xchg esp, eax; test [rcx], al; add [rax], al; add [rax], al; add [rbx], ch; ret 0;
0xffffffff822fa3ca: xchg esp, eax; test [rdi], bh; cmp eax, 0x84255682; ret 0x6e48;
0xffffffff8243d958: xchg esp, eax; test al, 0x21; int3; iretd;
0xffffffff824e7292: xchg esp, eax; test al, 0x78; insb [rdi], dx; iretd;
0xffffffff81316868: xchg esp, eax; test al, 0xce; add bl, ch; mov eax, 0xda0abde8; jmp qword ptr [rsi+0x66];
0xffffffff822fbe48: xchg esp, eax; test al, 8; ret 0xe95;
0xffffffff8247e361: xchg esp, eax; test byte ptr [rsi], 0x84; xchg ebx, eax; iretd;
0xffffffff823f9476: xchg esp, eax; test dh, 0x24; and edx, [rdi-0x5e9b7053]; leave; ret 0x95a6;
0xffffffff81235e81: xchg esp, eax; test dword ptr [rax], 0xf000003c; add [rsi*8-0x7d1f5c00], rdx; neg cl; mov gs:[rax+rsi+1], cl; ret;
0xffffffff812362db: xchg esp, eax; test dword ptr [rax], 0xf000003c; add [rsi*8-0x7d1f5c00], rdx; ret;
0xffffffff824be144: xchg esp, eax; test eax, 0x515c02c3; cmp eax, 0x7b2c584f; ret 0xbf08;
0xffffffff81235e2f: xchg esp, eax; test eax, 0xf0000005; add [rsi*8-0x7d1f5cc0], rdx; neg cl; mov gs:[rax+rsi+0x4f], cl; ret;
0xffffffff82811f0c: xchg esp, eax; test edi, ebx; jmp qword ptr [rdx+0x20];
0xffffffff816082f8: xchg esp, eax; test edi, edi; jmp qword ptr [rbp+0x48];
0xffffffff8265e571: xchg esp, eax; test edi, edi; sete [rbp-0x7a6c1001]; jmp far fword ptr [rdi-0x70007a6e];
0xffffffff811d7eee: xchg esp, eax; vpsubsb xmm3, xmm14, [rbx+0x41]; pop rsi; pop r15; pop rbp; ret;
0xffffffff813fe1a2: xchg esp, eax; vpsubsb xmm3, xmm14, [rbx+0x41]; pop rsi; pop rbp; ret;
0xffffffff81058cca: xchg esp, eax; vpsubsb xmm3, xmm14, [rbx+0x5d]; ret;
0xffffffff8244eb94: xchg esp, eax; xchg [rbx+0x61], al; ret 0x1065;
0xffffffff82659ff5: xchg esp, eax; xchg ebp, eax; dec dword ptr [rdi]; xchg esp, eax; xchg ebp, eax; jmp far fword ptr [rdi-0x6d];
0xffffffff82659ff9: xchg esp, eax; xchg ebp, eax; jmp far fword ptr [rdi-0x6d];
0xffffffff823caa2c: xchg esp, eax; xchg ebp, eax; ror dword ptr [rax-0x47e2aead], 0xef; call qword ptr [rbx-0x76];
0xffffffff812a57b8: xchg esp, eax; xchg ebx, eax; fwait; add [rax-0x7b], cl; shl byte ptr [rax+rdi+0x48], 0x89; ret;
0xffffffff81337d68: xchg esp, eax; xchg ebx, eax; int3; add [rax-0x26], bh; ret;
0xffffffff8240ee5d: xchg esp, eax; xchg ebx, eax; iretd;
0xffffffff8177df17: xchg esp, eax; xchg ebx, eax; jmp qword ptr [rsi+0xf];
0xffffffff8229a86f: xchg esp, eax; xchg ebx, eax; outsb dx, [rsi]; xor ecx, [rsi]; and al, cl; ret;
0xffffffff82408249: xchg esp, eax; xchg ebx, eax; push rax; push 0x4f; iretd;
0xffffffff8236c050: xchg esp, eax; xchg ebx, eax; ret;
0xffffffff8252bab9: xchg esp, eax; xchg edi, eax; cld; xchg esi, eax; std; jmp far fword ptr [rdx];
0xffffffff823a5741: xchg esp, eax; xchg edi, eax; mov esp, 0x730d1d4b; cmp al, 0x6a; ret 0xbdc8;
0xffffffff823d537c: xchg esp, eax; xchg edi, eax; ret;
0xffffffff822eada5: xchg esp, eax; xchg edi, eax; scasd [rdi]; cmp bl, [rdx+0xce317e6]; ret;
0xffffffff83512884: xchg esp, eax; xchg edi, eax; sub al, 0x4a; cdq; in eax, 0xbb; iretd;
0xffffffff825135a2: xchg esp, eax; xchg edi, eax; sub al, 0xb8; adc bl, ch; iretd;
0xffffffff8265dd55: xchg esp, eax; xchg edi, edi; setae [rdi-0x786d0001]; call far fword ptr [rdi-0x6e];
0xffffffff8239ceab: xchg esp, eax; xchg edx, eax; iretd;
0xffffffff82373b8d: xchg esp, eax; xchg esi, eax; ret 0x94bd;
0xffffffff8251b8ea: xchg esp, eax; xchg esi, eax; ret 0xbc40;
0xffffffff8233d032: xchg esp, eax; xchg esi, eax; sar edi, 1; ret;
0xffffffff8265a495: xchg esp, eax; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff82254b1c: xchg esp, eax; xchg esp, eax; popfq; iretd;
0xffffffff8196984e: xchg esp, eax; xlat [rbx]; jmp qword ptr [rbp+0x48];
0xffffffff82545125: xchg esp, eax; xor [rbp-0x57], esp; mov edi, 0x9fb8f87c; ret 0x9a26;
0xffffffff824bd13e: xchg esp, eax; xor [rcx+rcx*8-0x2ba561a8], ebx; lea ecx, [rsi]; in al, dx; add [rdi+0x5a], ch; iretd;
0xffffffff8241f34c: xchg esp, eax; xor [rdi-0x360d4531], esp; iretd;
0xffffffff82005e7c: xchg esp, eax; xor [rip-0x38df4201], al; jmp qword ptr [rsi+9];
0xffffffff824ac87c: xchg esp, eax; xor [rsi-0x12f41884], dh; neg ebx; frstor [rdx-0x47]; ret 0xd69d;
0xffffffff81939bc4: xchg esp, eax; xor al, 0; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8179d4e5: xchg esp, eax; xor bl, [rax+rax-0x3e9a0000]; ret 0xf08;
0xffffffff82335fb2: xchg esp, eax; xor bl, [rbx+rdi*8+0x5ebe2c20]; push rcx; sub eax, [rsi+rsi*2]; iretd;
0xffffffff822a6e7b: xchg esp, eax; xor bl, [rsi+0x5b]; fist dword ptr [rax-0x3febe00f], st; ret;
0xffffffff8228eea0: xchg esp, eax; xor dl, [rcx+0x3f46b779]; sbb ebp, [rdx-0x20]; or al, 0x5e; cli; iretd;
0xffffffff82546f8e: xchg esp, eax; xor dl, al; call word ptr [rax];
0xffffffff8352da09: xchg esp, eax; xor eax, 0xffffff81; jmp qword ptr [rax-0x6b];
0xffffffff81c4fc48: xchg esp, eax; xor eax, [rbx]; add [rax-0x77], cl; ret;
0xffffffff82005b7c: xchg esp, eax; xor eax, [rip-0x38ddae01]; push qword ptr [rsi+rbp*2+0x3388ff32]; add eax, 0xc7224aff; jmp far fword ptr [rbx];
0xffffffff81118ba8: xchg esp, eax; xor eax, eax; pop rbx; pop r14; pop rbp; ret;
0xffffffff827f9dac: xchg esp, eax; xor ebx, [rax]; jmp qword ptr [rdx];
0xffffffff822f5b5e: xchg esp, eax; xor edi, [rip+0x49c8a878]; xor byte ptr [rbp-0x69], 0x11; mov [rcx], ebx; jmp far fword ptr [rsi+0x700ed73];
0xffffffff81b200d6: xchg esp, eax; xor r8d, r8d; and r8b, 1; movzx eax, r8b; ret;
0xffffffff8185fd05: xchg esp, ebp; add al, 0; add [rcx], al; mov qword ptr [rdi+0x4f0], 0; ret;
0xffffffff8185fa55: xchg esp, ebp; add al, 0; add [rcx], al; mov qword ptr [rdi+0x4f0], 0xffffffff8185fa70; ret;
0xffffffff8186bd99: xchg esp, ebp; add al, 0; add [rcx], al; mov qword ptr [rdi+0x4f0], 0xffffffff8186c930; mov dword ptr [rdi+0x458], 0x1f4; ret;
0xffffffff81b52b2e: xchg esp, ebp; add al, 0; add [rcx], al; or byte ptr [rdi+0xd1], 0x20; ret;
0xffffffff82646ba9: xchg esp, ebp; call far fword ptr [rdi-0x79];
0xffffffff82646bad: xchg esp, ebp; call far fword ptr [rdi];
0xffffffff824d46f9: xchg esp, ebp; mov bl, 0xab; fnstsw [rdx+rsi*8]; ret;
0xffffffff8186cb26: xchg esp, ebp; xor [rax], eax; add [rcx-0x3fcef7ba], cl; ret;
0xffffffff817125df: xchg esp, ebx; add eax, [rax]; add bl, al; mov eax, [rcx+0x10]; ret;
0xffffffff824588ca: xchg esp, ebx; and eax, 0x51774acc; iretd;
0xffffffff812eebd7: xchg esp, ebx; jmp qword ptr [rsi+0xf];
0xffffffff811d80c0: xchg esp, ecx; adc al, [rax]; add [rbx+6], dh; mov [rdi+0x12cc], eax; mov eax, r8d; ret;
0xffffffff811d80c8: xchg esp, ecx; adc al, [rax]; add [rcx+rcx*4-0x40], al; ret;
0xffffffff816aa546: xchg esp, ecx; add [rax], al; add [rax+0x39], cl; ret;
0xffffffff811c7f32: xchg esp, ecx; add [rax], al; add [rbx+0x396601e3], al; ret;
0xffffffff819f886b: xchg esp, ecx; add eax, [rax]; add [rax+0x39], cl; ret;
0xffffffff835aa80c: xchg esp, ecx; iretd;
0xffffffff8161fed3: xchg esp, ecx; jmp qword ptr [rsi+0x2e];
0xffffffff822eada0: xchg esp, ecx; push 0xffffffff9794efbe; scasd [rdi]; cmp bl, [rdx+0xce317e6]; ret;
0xffffffff8230269c: xchg esp, ecx; ret;
0xffffffff81b5a10f: xchg esp, edi; add [rax], al; add [rax+rax], dl; add [rax], al; xor eax, eax; ret;
0xffffffff822e7851: xchg esp, edi; push rbx; ret;
0xffffffff818fc8d1: xchg esp, edx; add [rax], al; add [rax+0x39], cl; ret;
0xffffffff819f660b: xchg esp, edx; add [rax], al; add [rax-0x7d], cl; ret 0x4801;
0xffffffff814eb604: xchg esp, edx; add eax, 0; add [rax], al; mov dword ptr [rdi+0x5d8], 0; ret;
0xffffffff8264c3c5: xchg esp, edx; jmp far fword ptr [rdi-0x7b];
0xffffffff81453432: xchg esp, edx; jmp qword ptr [rbp+0x48];
0xffffffff83466295: xchg esp, edx; std; add rsp, 8; pop rbx; ret;
0xffffffff823c1f92: xchg esp, esi; ret 0x209b;
0xffffffff82371fe3: xchg esp, esi; ret 0x50b6;
0xffffffff824f6d9d: xchg esp, esi; ret;
0xffffffff818995a7: xchg esp, esp; or eax, 0xc0010000; ret;
0xffffffff823ecf90: xchg fs:[rip-0x76a7431d], esp; sbb al, 0xbb; iretd;
0xffffffff823f09e6: xchg gs:[rbx+0x7896b3ab], cl; pop rsp; push rsi; iretd;
0xffffffff824478d8: xchg r11, rax; cmc; mov esp, [rip+0x4aa86203]; cld; mov edx, 0x271da1ee; ret;
0xffffffff8240c3ef: xchg r12, rax; mov esp, fs; adc al, 9; in eax, 0xa7; sbb edx, [rip+0x37717af3]; call qword ptr [rcx-0x17a4a787];
0xffffffff8264d1bc: xchg r13, rax; sar edi, 1; scasd [rdi]; xchg esp, eax; sar edi, 1; call qword ptr [rdx-0x6ec0002f];
0xffffffff82335fb0: xchg r13d, eax; xchg esp, eax; xor bl, [rbx+rdi*8+0x5ebe2c20]; push rcx; sub eax, [rsi+rsi*2]; iretd;
0xffffffff81448b5f: xchg r14, rax; leave; dec dword ptr [rax-0x7b]; shl byte ptr [rdx+rdi+0x48], 0x89; ret;
0xffffffff823ecf8a: xchg r14, rax; mov edi, 0x6468c15d; xchg [rip-0x76a7431d], esp; sbb al, 0xbb; iretd;
0xffffffff82498eb7: xchg r14d, eax; add [rcx-0x61], esi; cmp [rbp+0x72], ebx; leave; iretd;
0xffffffff82554f75: xchg r8d, eax; data16 leave; ret;
0xffffffff8239fb4b: xchg r8d, eax; insb [rdi], dx; insb [rdi], dx; pop rsp; iretd;
0xffffffff825d6ff8: xchg r8d, eax; rol dword ptr [rcx-0x13], 1; pop rsp; in eax, dx; ret 0x299d;
0xffffffff822b898b: xchg r9d, eax; pop rsp; ret;
0xffffffff81c3acf7: xchg r9d, eax; push 0xffffffffffffffff; add rsp, 8; xor eax, eax; ret;
0xffffffff8238eb2f: xchg rbx, rax; mov esp, es; ret 0x3f43;
0xffffffff82526b5b: xchg rcx, rax; std; enter 0xee59, 0xe1; xor bh, [rsi+0x127f7cb6]; sbb esp, esp; ret;
0xffffffff8238d5da: xchg rdx, rax; sbb bl, ah; leave; ret 0x298a;
0xffffffff82478c7e: xchg rsi, rax; push rbx; xchg esp, eax; ret 0xf015;
0xffffffff83475440: xchg rsi, rax; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff825521fa: xchg rsi, rsp; ret;
0xffffffff8248a35b: xchg rsp, rax; cdq; fxch st, st(7); iretd;
0xffffffff818fc5a4: xchg rsp, rax; dec dword ptr [rax-0x7b]; shl byte ptr [rax+rax*2+0x48], 0x89; ret;
0xffffffff824acf4f: xchg rsp, rax; in al, 0xb3; mov esi, 0xe982d88e; ror byte ptr [rdi+0x55], 0x4e; ret;
0xffffffff822835ad: xchg rsp, rax; iretd;
0xffffffff817bcb24: xchg rsp, rax; jmp qword ptr [rsi+0xf];
0xffffffff8238f76e: xchg rsp, rax; push rsp; push 0x64; cmp al, 0x78; fidivr st, dword ptr [rbx]; iretd;
0xffffffff816454d0: xchg rsp, rax; ret 0x48ff;
0xffffffff82384ce0: xchg rsp, rax; ret 0x50d5;
0xffffffff8249a731: xchg rsp, rax; ret 0x8bfe;
0xffffffff82321b89: xchg rsp, rax; ret 0xcd9e;
0xffffffff823eef2c: xchg rsp, rax; ret 0xdfc2;
0xffffffff8243ebe4: xchg rsp, rax; ret;
0xffffffff822e7f40: xchg rsp, rax; sbb [rcx-0xe], ah; imul eax, ebx, 0xffffffa3; cmp dh, [rsi-0x69f6e890]; mov al, 0x4e; data16 ret;
0xffffffff8265a515: xchg sp, ax; call far fword ptr [rdi+0x65];
0xffffffff826e96fa: xchg sp, ax; cmc; sti; iretd;
0xffffffff81c7de16: xchg sp, ax; dec dword ptr [r15]; or ebx, [rbx+0x41]; pop rsi; pop r15; ret;
0xffffffff824df310: xchg sp, ax; int3; ficomp st, word ptr [rdi+0x10]; iretd;
0xffffffff824a2191: xchg sp, ax; iretd;
0xffffffff823ee246: xchg sp, ax; iretd;
0xffffffff823ee245: xchg sp, ax; iretd;
0xffffffff8251373b: xchg sp, ax; ret 0x29;
0xffffffff82519b23: xlat [rbx]; cmc; xchg esp, eax; fisubr st, dword ptr [rax]; mov rsp, 0x67b63207dbc4a3e9; ret;
0xffffffff823f21d7: xlat [rbx]; fld st, tbyte ptr [rdi+0x6286b1a0]; movsb [rdi], [rsi]; xchg esp, eax; iretd;
0xffffffff826cf729: xlat [rbx]; in eax, dx; insb [rdi], dx; fimul st, dword ptr [rax]; mov esp, [rbx+0x73]; ret;
0xffffffff82383d5c: xlat [rbx]; leave; cmp eax, 0x6bd5cda4; ret 0xd959;
0xffffffff8235938f: xlat [rbx]; leave; ret;
0xffffffff82366f78: xlat [rbx]; lodsb [rsi]; xchg esp, eax; rcl byte ptr [rax-0x44], cl; ret 0x462f;
0xffffffff82343907: xlat [rbx]; mov [rdi-0x13], edx; adc esp, [rdx]; pop rsp; iretd;
0xffffffff826fa7e9: xlat [rbx]; mov ah, 0x6c; test byte ptr [rsi], 0x8e; shl word ptr [rdx-0x63], cl; pop rsp; iretd;
0xffffffff822e18b9: xlat [rbx]; mov ah, 0xec; leave; iretd;
0xffffffff822acd58: xlat [rbx]; mov al, 0xd4; leave; sbb esp, 0xfffffff8; sub edi, [rsp+rdi*4]; ret;
0xffffffff822fd004: xlat [rbx]; mov edi, 0xe7d919b; xchg esp, eax; and dword ptr [rdi-0x67], 0xfcc5a337; pop rsp; iretd;
0xffffffff81552bd5: xlat [rbx]; mov esp, eax; call far fword ptr [rbx+0x41];
0xffffffff8268817b: xlat [rbx]; or [rcx+0x75], dh; leave; jmp far fword ptr [rdx+0x7409bfff];
0xffffffff8241be14: xlat [rbx]; pop rsp; ret 0x4500;
0xffffffff82522054: xlat [rbx]; pop rsp; ret;
0xffffffff82522053: xlat [rbx]; pop rsp; ret;
0xffffffff8244a90a: xlat [rbx]; pop rsp; stosb [rdi]; ret;
0xffffffff824e93c0: xlat [rbx]; rcr byte ptr [rax-0x73fc2861], 0xec; mov esp, ebp; cmovp esp, [rax-0x11]; mov [0x177a2218e6748b49], al; iretd;
0xffffffff8342eaf6: xlat [rbx]; std; add rsp, 8; pop rbx; ret;
0xffffffff823a7f13: xlat [rbx]; std; mov edi, 0xc3c5a7c2; leave; ret 0x2c99;
0xffffffff835ab396: xlat [rbx]; std; pop rsp; and al, 0xd7; std; ret 0xd724;
0xffffffff8256444a: xlat [rbx]; sub dh, [rdi-0x65]; sbb esp, edi; add bh, 0x36; iretd;
0xffffffff82281d8b: xlat [rbx]; xchg edi, eax; and cl, [rsi+rsi*2-0x3c26b522]; adc al, 0xe8; pop rsp; iretd;
0xffffffff8265a309: xlat [rbx]; xchg esp, eax; call far fword ptr [rdi-0x29];
0xffffffff8265a30d: xlat [rbx]; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff8241be13: xlat [rbx]; xlat [rbx]; pop rsp; ret 0x4500;
0xffffffff826fa7e8: xlat gs:[rbx]; mov ah, 0x6c; test byte ptr [rsi], 0x8e; shl word ptr [rdx-0x63], cl; pop rsp; iretd;
0xffffffff8254bcbe: xor [r14-0x4d], r10d; mov edi, 0xbdf70ede; mov esp, edx; ret 0xa48c;
0xffffffff82551dba: xor [rax+0x5e0c41c9], edi; adc ebp, esp; xchg esp, eax; ret 0xf738;
0xffffffff8245e53b: xor [rax+rcx-0x26], ah; push rbx; leave; cdq; ret;
0xffffffff823f794d: xor [rax-0x2b700db0], ecx; sbb ebp, [rax+0x695cd4c1]; or esi, [rbx]; leave; syscall;
0xffffffff82305269: xor [rax-0x38], dh; pop rsp; iretd;
0xffffffff8198e6d8: xor [rax-0x77], cl; adc [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff81b171eb: xor [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff8198e6d7: xor [rax-0x77], r9b; adc [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff813548b0: xor [rax-0x7b], cl; fisttp dword ptr [rdi], st; xchg esp, eax; ret 0xca30;
0xffffffff81b272e7: xor [rax], al; add [rcx-0x7a3fce3f], cl; leave; sete al; ret;
0xffffffff81738462: xor [rax], al; add [rcx], dh; leave; mov [rbx], cl; pop rbx; ret;
0xffffffff816e640d: xor [rax], al; add [rcx], dh; rol byte ptr [rcx+0x2000f9], cl; add [rdi], cl; xchg esp, eax; ret 0xc8d;
0xffffffff823a430c: xor [rax], dl; sbb esp, edx; adc dh, [rsi+0x199d436b]; sysexit;
0xffffffff81aebffc: xor [rbp+0x12], dh; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff812240e5: xor [rbp+0x13], dh; add rsp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff810c8255: xor [rbp+0x13], dh; add rsp, 0x38; pop rbx; pop rbp; ret;
0xffffffff81a79cd5: xor [rbp+0x13], dh; add rsp, 0x38; ret;
0xffffffff813426d9: xor [rbp+0x14], dh; add rsp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff810c8e69: xor [rbp+0x17], dh; add rsp, 0x38; pop rbx; pop rbp; ret;
0xffffffff817f1f49: xor [rbp+0x17], dh; mov eax, ebx; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff81a3dc61: xor [rbp+0x17], dh; mov eax, r14d; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff81b6cb3b: xor [rbp+0x19], dh; add rsp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff81bf13e8: xor [rbp+0x1b], dh; add rsp, 0x38; pop rbx; pop r14; pop rbp; ret;
0xffffffff81176185: xor [rbp+0x20], dh; mov eax, r14d; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff81a6b6a0: xor [rbp+0x22], dh; add rsp, 0x38; pop rbx; pop r14; pop rbp; ret;
0xffffffff81ad830b: xor [rbp+0x26], dh; add rsp, 0x38; pop rbx; pop r14; pop rbp; ret;
0xffffffff81bb0799: xor [rbp+0x27], dh; mov eax, ecx; add rsp, 0x38; pop rbx; ret;
0xffffffff8139454a: xor [rbp+0x2d], dh; add rsp, 0x38; ret;
0xffffffff81b95571: xor [rbp+0x33], dh; add rsp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff819d80dc: xor [rbp+0x48], dh; add rsp, 0x38; pop rbx; pop r14; pop rbp; ret;
0xffffffff8199eed3: xor [rbp+0x49], dh; add rsp, 0x38; ret;
0xffffffff8199ee03: xor [rbp+0x50], dh; shr rax, 6; add eax, ebx; add rsp, 0x38; pop rbx; ret;
0xffffffff81ba4848: xor [rbp+0x56], dh; add rsp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff816575e1: xor [rbp+0x58], dh; add rsp, 0x38; pop rbx; pop r14; pop rbp; ret;
0xffffffff81b10ff4: xor [rbp+0x63], dh; add rsp, 0x38; pop rbx; pop r14; pop rbp; ret;
0xffffffff824a218c: xor [rbp+0x66a5f15a], ebx; xchg esp, eax; iretd;
0xffffffff81c0df7d: xor [rbp+0x6b], dh; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff810007f6: xor [rbp+0xa], dh; add rsp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff8184c698: xor [rbp+0xa], dh; add rsp, 0x38; pop rbx; ret;
0xffffffff8347a92f: xor [rbp+0xa], dh; mov eax, ebx; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff8193489e: xor [rbp+0xa], dh; xor eax, eax; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff81261eb2: xor [rbp+0xb], dh; mov eax, ebp; add rsp, 0x38; pop rbx; pop rbp; ret;
0xffffffff819caa74: xor [rbp+0xb], dh; mov eax, r14d; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff81c71376: xor [rbp+0xb], dh; mov rax, rbx; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff81562a00: xor [rbp+0xb], dh; movzx eax, al; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff81a6d0a6: xor [rbp+0xc], dh; add rsp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff81a6d19b: xor [rbp+0xc], dh; add rsp, 0x38; ret;
0xffffffff81b25e78: xor [rbp+0xd], dh; add rsp, 0x38; pop rbx; ret;
0xffffffff818f8ef4: xor [rbp+0xe], dh; add rsp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff81b8f2f0: xor [rbp+0xe], dh; add rsp, 0x38; ret;
0xffffffff810c6eed: xor [rbp+5], dh; add rsp, 0x38; ret;
0xffffffff810c6fa8: xor [rbp+6], dh; add rsp, 0x38; pop rbx; ret;
0xffffffff810c9125: xor [rbp+7], dh; add rsp, 0x38; pop rbx; pop rbp; ret;
0xffffffff810cc0fc: xor [rbp+8], dh; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff817a540e: xor [rbp+8], dh; mov eax, ebx; add rsp, 0x38; pop rbx; ret;
0xffffffff81002e47: xor [rbp+9], dh; add rsp, 0x38; pop rbx; pop r14; pop rbp; ret;
0xffffffff810c7229: xor [rbp+9], dh; add rsp, 0x38; ret;
0xffffffff81b38f43: xor [rbp+9], dh; mov eax, ebp; add rsp, 0x38; pop rbx; pop rbp; ret;
0xffffffff81c712b9: xor [rbp+9], dh; mov rax, rbx; add rsp, 0x38; pop rbx; ret;
0xffffffff82003bc0: xor [rbp+rax-1], dl; leave; shr dword ptr [rbx-1], 0xde; sar bh, 1; jmp qword ptr [rsp+rdx*2];
0xffffffff8222b3cf: xor [rbx+0x1ccc24bb], dh; xchg ebp, eax; getsec; pop rsp; ret 0xf322;
0xffffffff810b5ddf: xor [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff8104768d: xor [rbx+0x41], bl; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff8112e0ad: xor [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff817d8072: xor [rbx+0x41], r11b; pop rsp; pop r14; pop r15; ret;
0xffffffff8254511e: xor [rbx+0x4d3d9613], esi; sti; xchg esp, eax; xor [rbp-0x57], esp; mov edi, 0x9fb8f87c; ret 0x9a26;
0xffffffff812dbb87: xor [rbx+0x77f93908], cl; mov esp, 0x4ebc931; or rcx, 1; mov rax, rcx; add rsp, 0x10; ret;
0xffffffff822cfb67: xor [rbx-0x24590f2], edx; pop rsp; fst dword ptr [rbx-3], st; sbb [rdx+r9*8-0x74], rax; add [rsp+0x2a0151da], bh; ret 0xfe6f;
0xffffffff82330ee1: xor [rbx-0x2a], dh; sub [rdi], eax; leave; jmp qword ptr [rdi];
0xffffffff823ee243: xor [rbx], ch; xchg sp, ax; iretd;
0xffffffff8239fe0f: xor [rbx], dh; xchg [rbp+0x69], esp; movsxd edx, [rcx]; xchg [rdi], cl; or al, 0x85; iretd;
0xffffffff824ec028: xor [rbx], ebp; adc [rbp+0x5f23f2d3], dl; adc esp, esi; iretd;
0xffffffff8227092c: xor [rbx], edi; ror dword ptr [rbx-0x2b68a02], cl; or ebx, esi; scasb [rdi]; xchg esp, eax; ret 0x9bcf;
0xffffffff822ecc51: xor [rcx+0x11], cl; xchg [rax], cl; xchg esp, eax; iretd;
0xffffffff82420216: xor [rcx+0x1c], bl; sub dh, [rdx-0x1e]; mov byte ptr [rsi-0xa1604aa], 0xe2; pop rsp; iretd;
0xffffffff81302696: xor [rcx+0xfc83948], al; xchg esp, eax; ror dword ptr [rax-0x7b], 0xc0; sete al; or al, cl; ret;
0xffffffff81302695: xor [rcx+0xfc83948], al; xchg esp, eax; ror dword ptr [rax-0x7b], 0xc0; sete al; or al, cl; ret;
0xffffffff822b8a11: xor [rcx-0x33eb62f0], eax; pop rsp; ret 0xe458;
0xffffffff814b1fcd: xor [rcx-0x3b7cb728], ecx; sbb [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff8161ef51: xor [rcx-0x69177da4], cl; xchg esp, eax; int3; inc dword ptr [rbp+0x5b0274c0]; ret;
0xffffffff834f08df: xor [rcx], al; mov ax, [eax*4+0xf0]; add sp, 0x58; pop si; pop di; data16 ret;
0xffffffff8194a561: xor [rcx], dh; rol byte ptr [rbx+0xf00f47b], cl; xchg esp, eax; ret 0x894c;
0xffffffff813591b4: xor [rcx], dh; shr al, cl; xchg esp, eax; mov edx, 0x8548ffff; shl byte ptr [rdi+rbx+0x48], 0x89; ret;
0xffffffff8249a82f: xor [rcx], eax; pop rsp; ret 0xb686;
0xffffffff8252da61: xor [rcx], edx; xchg esp, eax; mov ch, 0x68; cmp [rsi-0x34ff5b1], bh; lodsd [rsi]; ret 0x809d;
0xffffffff826cad03: xor [rdi+0x5b], bl; xchg esp, eax; out 0x74, eax; iretd;
0xffffffff822ca49d: xor [rdi+0x5d], bh; xchg esp, eax; clc; sar bl, 1; call qword ptr [rbx];
0xffffffff82281c92: xor [rdi+rbx*4+0x6115b647], dh; sub esp, r14d; iretd;
0xffffffff818ddef0: xor [rdi], cl; test [rcx+1], esp; add [rax], al; add rsp, 0x38; pop rbx; ret;
0xffffffff81b18f99: xor [rdi], cl; test [rdi+0x48000000], ecx; add esp, 0x38; ret;
0xffffffff81b9f982: xor [rdi], cl; xchg esp, eax; ret;
0xffffffff8232700c: xor [rdi], eax; leave; and eax, 0x46d330d9; iretd;
0xffffffff8147df8c: xor [rdi], ecx; xchg esp, eax; ret 0xca0f;
0xffffffff823c209b: xor [rdx+0x3673a95c], bh; or ebx, [rbx]; xchg esp, eax; mov gs, [rcx]; ret 0xdf46;
0xffffffff8241f0d5: xor [rdx+0x7e3cbffe], esp; test [rbx-0x6f679e10], ebp; xchg [rsp+rcx*2+0x41ec8be0], esp; adc al, 0xa9; stosb [rdi]; iretd;
0xffffffff82359c30: xor [rdx+rax*8+0x1c], bl; xchg esp, eax; mov [0x3e5236c98fcd6711], eax; ret 0x402f;
0xffffffff824975cf: xor [rdx+rbp-0x241009e], esi; popfq; xchg esp, eax; or dil, [r15+0x2c]; xor al, 0x9b; iretd;
0xffffffff81701d43: xor [rdx], eax; add [rax], al; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff818a14a7: xor [rdx], eax; add [rax], al; add rsp, 0x10; pop rbx; ret;
0xffffffff82319274: xor [rip+0x5edc8493], ebx; leave; and esi, edi; mov eax, 0x339d3921; ret;
0xffffffff82493dcb: xor [rsi+0x23ab1c6b], esp; pop rsp; ret 0xc22e;
0xffffffff8256a04e: xor [rsi-0x14a0a934], esi; sub eax, 0x9c7c441f; pop rsp; push rsp; out 0xb8, al; ret 0x8d5b;
0xffffffff8254bcbf: xor [rsi-0x4d], edx; mov edi, 0xbdf70ede; mov esp, edx; ret 0xa48c;
0xffffffff824205c0: xor [rsi-0x62], esi; sub bl, [rsi+0x7ed55f9e]; fistp dword ptr [rcx+0x518f4fc2], st; or ecx, ebp; pop rsp; iretd;
0xffffffff8228b533: xor [rsi-0x6b], esi; fist dword ptr [rdi+0x2255e399], st; pop rsp; test al, 0xa8; xchg ebx, eax; iretd;
0xffffffff8249877b: xor [rsi], ebp; cmpsd [rsi], [rdi]; insb [rdi], dx; xchg esp, eax; mov ecx, 0xaf7c4b3; iretq;
0xffffffff834a065c: xor ah, ah; sar ch, 1; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff825735b3: xor ah, bl; xchg [rbp-0x61], esp; setae al; sub [rsi-9], al; cld; jmp rcx;
0xffffffff82452f6f: xor ah, ch; xor al, 0xc4; leave; nop; adc r9, r13; iretd;
0xffffffff8346ba0e: xor ah, dl; std; add rsp, 8; pop rbx; ret;
0xffffffff82955459: xor al, 0; add [rax], cl; add [rax], al; leave; iretd;
0xffffffff81c83084: xor al, 0x24; popfq; add rsp, 8; pop rbx; ret;
0xffffffff8254e409: xor al, 0x2c; pop rsp; and [rcx+0x2e8f8ded], eax; ret;
0xffffffff81845da2: xor al, 0x48; add esp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff817029f8: xor al, 0x48; add esp, 0x10; pop rbx; ret;
0xffffffff813bdfde: xor al, 0x48; add esp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff81b521ae: xor al, 0x48; add esp, 0x20; pop rbx; pop r14; ret;
0xffffffff812bf6aa: xor al, 0x48; add esp, 0x28; pop rbx; pop r14; pop r15; ret;
0xffffffff82410128: xor al, 0x55; cmp al, [rcx]; leave; xlat [rbx]; ret 0xc487;
0xffffffff8252bbc4: xor al, 0x5a; cwde; push 0x351b9510; pop rsp; adc [rsi+0x7aeb0829], eax; ret;
0xffffffff82478cc0: xor al, 0x5c; out 0xe3, eax; leave; add eax, 0x7863a018; ret;
0xffffffff83478858: xor al, 0x62; sar ebp, cl; add rsp, 8; pop rbx; ret;
0xffffffff82408114: xor al, 0x69; xchg [rdx+0x78bc9cdf], edx; pop rsp; xor eax, 0x32b7034e; ret;
0xffffffff8236f962: xor al, 0x6f; cwde; mov [0x38dc5d947e7935bf], eax; out 0xb9, al; leave; ret 0xd7dd;
0xffffffff824d8060: xor al, 0x70; mov ecx, ss; pop rsp; and bh, al; ret;
0xffffffff823769be: xor al, 0x70; pop rbx; lodsb [rsi]; leave; ret 0xac79;
0xffffffff812c286a: xor al, 0x85; leave; setg al; ret;
0xffffffff822e6ec8: xor al, 0x8d; lea esp, [rdi+0x14]; mov [rsi], bl; xchg esp, eax; fwait; ret;
0xffffffff82343669: xor al, 0x8f; imul edx, [rcx-0xc], 0x8e756444; push 0xffffffffa01897e6; xchg esp, eax; jmp qword ptr [rbp-0x33];
0xffffffff822688c7: xor al, 0x91; and dh, [rbp+0x33]; pushfq; pop rsp; iretd;
0xffffffff82235358: xor al, 0x9f; pop rsp; iretd;
0xffffffff8234bbcb: xor al, 0xa6; xchg ecx, edi; cmp esi, ebp; pop rsp; iretd;
0xffffffff8226e76b: xor al, 0xbb; xchg esp, eax; cli; and eax, 0xcbdd2e95; add [rdx+rax*2+0x2e], edi; ret 0x77ae;
0xffffffff82452f71: xor al, 0xc4; leave; nop; adc r9, r13; iretd;
0xffffffff81a8269e: xor al, 0xf6; rcl dword ptr [rax], 0xf; xchg esp, eax; ret;
0xffffffff82005f46: xor al, 0xff; enter 0x52f, 0xff; pop rsp; and bh, al; jmp qword ptr [rdx-0x4300cbe6];
0xffffffff82005e7a: xor al, 0xff; xchg esp, eax; xor [rip-0x38df4201], al; jmp qword ptr [rsi+9];
0xffffffff8239b1c2: xor al, 8; xchg esp, eax; rcl dword ptr [rax-0x53efe10], cl; mov ch, 8; ficom st, word ptr [rsi]; ret;
0xffffffff822691d6: xor al, [rbx-0x182ec185]; stc; leave; ret;
0xffffffff81b2ff44: xor al, [rcx]; enter 0xc80f, 0x48; add esp, 0x18; ret;
0xffffffff822374ff: xor al, [rdx]; leave; fwait; ret 0x1ed1;
0xffffffff81a76bd3: xor al, bl; and al, 1; add rsp, 0x40; pop rbx; ret;
0xffffffff8248adea: xor al, dh; leave; ret 0x9d1f;
0xffffffff834f0846: xor ax, ax; add sp, 0x58; pop si; pop di; pop bx; data16 ret;
0xffffffff823a86a1: xor bh, 0x1b; leave; iretd;
0xffffffff823c1789: xor bh, [rdx]; add [rbx], al; sub eax, 0x93b6cf6f; cmp bl, [rdi+0x7edb1203]; pop rsp; ret;
0xffffffff82526b62: xor bh, [rsi+0x127f7cb6]; sbb esp, esp; ret;
0xffffffff82005b7a: xor bh, bh; xchg esp, eax; xor eax, [rip-0x38ddae01]; push qword ptr [rsi+rbp*2+0x3388ff32]; add eax, 0xc7224aff; jmp far fword ptr [rbx];
0xffffffff823893d6: xor bh, ch; fwait; push rsi; adc esp, esp; iretd;
0xffffffff8250b065: xor bh, dh; insb [rdi], dx; xchg [rsp+rbp-0x28], esp; jmp qword ptr [rcx-0xdb14e02];
0xffffffff824630af: xor bl, [rax]; cmc; pop sp; enter 0xb802, 0xc; push rax; ret 0xec51;
0xffffffff81c181dc: xor bl, [rbx+0x41]; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff835a8eb8: xor bl, [rdx+rax*8-3]; add ebx, 0xfffffffd; and eax, 0xedfdc384; xchg esp, eax; ret;
0xffffffff81addcfe: xor bl, ch; dec dword ptr [rcx-0x7a3fce3f]; leave; cmovns rax, rbx; pop rbx; ret;
0xffffffff823dea7e: xor bl, dl; adc al, [rbx+rdx+0x50703a93]; pop rsp; ret 0x2fe7;
0xffffffff82307108: xor byte ptr [rbx-0x76], 0xc7; imul ecx, [rcx+0x47], 0x9b3b3f95; mov eax, 0xae40b822; xor dl, ah; leave; iretd;
0xffffffff8349790c: xor byte ptr [rcx-0x2f], 0xfd; add rsp, 8; pop rbx; ret;
0xffffffff8152a6a4: xor byte ptr [rsi+rcx*2+0x5b], 0x41; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff822c40bf: xor ch, [rbp-0x2b29fc80]; pop rsp; pop rdx; div dword ptr [rdi]; ret 0x6f0d;
0xffffffff822fb252: xor ch, [rbx+rdi*4+0x6d010349]; sar dword ptr [rcx-0x36f426c0], 0xfd; pop rsp; ret 0xae5b;
0xffffffff82648a79: xor ch, ah; dec dword ptr [rdi+0x5fffe52e]; sub al, 0xe5; dec dword ptr [rdi+0xfffe52b]; sub esp, ebp; call far fword ptr [rdi+0xfffe52a];
0xffffffff82526b59: xor cl, [r14-0x6f]; std; enter 0xee59, 0xe1; xor bh, [rsi+0x127f7cb6]; sbb esp, esp; ret;
0xffffffff81bca4da: xor cl, [rax-0x77]; fucomip st, st(0); insd [rdi], dx; mov esp, ds; jmp qword ptr [rsi-0x7b];
0xffffffff83469f5a: xor cl, [rbx-0x2c]; std; add rsp, 8; pop rbx; ret;
0xffffffff82554f6d: xor cl, [rcx]; mov edx, ebp; in eax, dx; mov ebp, 0x90478319; data16 leave; ret;
0xffffffff82526b5a: xor cl, [rsi-0x6f]; std; enter 0xee59, 0xe1; xor bh, [rsi+0x127f7cb6]; sbb esp, esp; ret;
0xffffffff835a2f16: xor cl, ch; xchg esp, eax; ret;
0xffffffff825d7217: xor dh, [rax+0x2ebcc94e]; movsxd r14, [rax-0x7e]; pop rsp; test eax, 0x65e95c1c; call far fword ptr [rbx+0x66];
0xffffffff8256340d: xor dh, [rbx+0x23]; sbb [rax+0x22da8466], eax; adc rsp, rax; sbb esi, edi; ret 0xb5a7;
0xffffffff8226e76a: xor dh, [rbx+rdi*4]; xchg esp, eax; cli; and eax, 0xcbdd2e95; add [rdx+rax*2+0x2e], edi; ret 0x77ae;
0xffffffff82384cd4: xor dl, [r8+0x1a]; mov [rdx+0x436ab14d], cl; and cl, bh; xchg rsp, rax; ret 0x50d5;
0xffffffff82384cd5: xor dl, [rax+0x1a]; mov [rdx+0x436ab14d], cl; and cl, bh; xchg rsp, rax; ret 0x50d5;
0xffffffff81792b3a: xor dl, [rsi]; xchg esp, eax; jmp qword ptr [rsi-0x70];
0xffffffff82307118: xor dl, ah; leave; iretd;
0xffffffff8346b856: xor dl, ah; std; add rsp, 8; pop rbx; ret;
0xffffffff82403cf3: xor dword ptr [rcx+0x3b], 0x9f8ba3a2; sub al, 2; xchg esp, eax; ret 0xc691;
0xffffffff816be980: xor dword ptr [rcx], 0xc48348c0; sbb [rbx+0x41], bl; pop rsp; pop r14; pop r15; ret;
0xffffffff82332b2f: xor eax, 0x1db50a05; pop rsp; adc eax, [rbx-0x31]; adc eax, 0x50ad6907; iretd;
0xffffffff82570ede: xor eax, 0x330cb48d; leave; fimul st, word ptr [rdx+rsi*8]; iretd;
0xffffffff8265a5cd: xor eax, 0x349fff94; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff820031f8: xor eax, 0x34ff0ac9; leave; or bh, bh; pop rsi; add eax, 0xac92cff; jmp far fword ptr [rbx];
0xffffffff8265a5c9: xor eax, 0x350fff94; xchg esp, eax; call far fword ptr [rdi+0x2fff9434];
0xffffffff8265a5c5: xor eax, 0x357fff94; xchg esp, eax; dec dword ptr [rdi]; xor eax, 0x349fff94; xchg esp, eax; jmp far fword ptr [rdi];
0xffffffff824e8797: xor eax, 0x37d4ec0b; xor eax, [rsi-0x19]; mov esp, ebp; ret;
0xffffffff82509d89: xor eax, 0x3b037c6c; leave; xor dh, dl; and al, dh; sub eax, 0x26909dfe; ret;
0xffffffff81a31a0b: xor eax, 0x415bff6f; pop rsp; pop r13; pop r14; pop r15; ret;
0xffffffff81858751: xor eax, 0x48d88948; add esp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff818362c8: xor eax, 0x48f0894c; add esp, 0x10; pop rbx; pop r14; ret;
0xffffffff83478a57: xor eax, 0x48fdd360; add esp, 8; pop rbx; ret;
0xffffffff83470557: xor eax, 0x48fdd3e5; add esp, 8; pop rbx; ret;
0xffffffff83466a57: xor eax, 0x48fdd480; add esp, 8; pop rbx; ret;
0xffffffff83465857: xor eax, 0x48fdd492; add esp, 8; pop rbx; ret;
0xffffffff83456957: xor eax, 0x48fdd581; add esp, 8; pop rbx; ret;
0xffffffff822dd1a1: xor eax, 0x4b6af4e; movsxd ebp, eax; leave; cmp eax, 0x852bff76; ret 0xa800;
0xffffffff812d9585: xor eax, 0x4cd88948; mov edx, esi; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff824cb5c9: xor eax, 0x4f39b3e4; xchg ecx, esp; adc eax, 0x251897d7; cmp al, 0xdb; ret;
0xffffffff824cb5ca: xor eax, 0x4f39b3e4; xchg ecx, esp; adc eax, 0x251897d7; cmp al, 0xdb; ret;
0xffffffff82320cfb: xor eax, 0x50e892b2; xchg [rbx+0xab1a68], esp; xchg [rdx+0x65746c4], dh; jmp qword ptr [rax-0x20];
0xffffffff8236f967: xor eax, 0x5d947e79; fdivr st, qword ptr [rax]; out 0xb9, al; leave; ret 0xd7dd;
0xffffffff823db892: xor eax, 0x66f805a0; sbb [rax+0x1d437ee2], eax; leave; sbb eax, ebx; ret 0x7064;
0xffffffff824f6140: xor eax, 0x689adcdb; pop rsp; scasd [rdi]; iretd;
0xffffffff8254a411: xor eax, 0x846bc8ed; clc; xchg [rbp+rdx-0x90653af], esp; mov ch, 0x31; or rax, 0x7384b2c; ret;
0xffffffff8256b107: xor eax, 0x8c0178fe; pushfq; or eax, 0xa0121b01; pop rsp; sub al, 0xa9; ret;
0xffffffff824e2fc2: xor eax, 0x8cf040ee; adc esp, 0x755b419; ret;
0xffffffff82420865: xor eax, 0x93dd9be3; adc eax, 0x397fba45; pop rsp; ret 0x77c3;
0xffffffff8249eee6: xor eax, 0xa756b46b; leave; xor [rcx+0x55729965], edi; jmp qword ptr [rdi+0x75];
0xffffffff82494d80: xor eax, 0xac301281; pop rbp; sub bl, [rax-0x7615f7eb]; fist word ptr [rdi+rbx*8+0x7389e187], st; leave; iretd;
0xffffffff822b8a0c: xor eax, 0xaf460d8e; xor [rcx-0x33eb62f0], eax; pop rsp; ret 0xe458;
0xffffffff8223e263: xor eax, 0xbbafcc66; xchg esp, eax; mov ebx, 0xe661c075; sub r9b, [rax+rbx*4+0x4a]; ret 0x8d38;
0xffffffff81916c89: xor eax, 0xc7c74800; mov eax, 0xe882f3f0; leave; ret;
0xffffffff8241a047: xor eax, 0xd527fa95; pop rsp; mov cl, 0x8f; xchg edx, eax; ret;
0xffffffff824c373c: xor eax, 0xeec05843; mov esp, [rcx-0x52]; ret;
0xffffffff824e879c: xor eax, [rsi-0x19]; mov esp, ebp; ret;
0xffffffff8158a4a7: xor eax, eax; add eax, 0xffffffff; add rsp, 0x10; pop rbx; ret;
0xffffffff827e55a3: xor eax, eax; add esp, 4; pop rsi; pop rbx; pop rbp; ret;
0xffffffff8127cb5c: xor eax, eax; add rsp, 0x10; pop rbx; pop r14; pop r15; ret;
0xffffffff813490c1: xor eax, eax; add rsp, 0x10; pop rbx; pop r14; pop rbp; ret;
0xffffffff8116a1b0: xor eax, eax; add rsp, 0x10; pop rbx; pop r14; ret;
0xffffffff81348b7c: xor eax, eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff811e123e: xor eax, eax; add rsp, 0x10; pop rbx; ret;
0xffffffff81348cbe: xor eax, eax; add rsp, 0x10; ret;
0xffffffff81136c8d: xor eax, eax; add rsp, 0x18; pop rbx; pop r14; pop r15; ret;
0xffffffff8112592b: xor eax, eax; add rsp, 0x18; pop rbx; pop r14; pop rbp; ret;
0xffffffff8104f94e: xor eax, eax; add rsp, 0x18; pop rbx; pop r14; ret;
0xffffffff8104257d: xor eax, eax; add rsp, 0x18; pop rbx; ret;
0xffffffff81c2e181: xor eax, eax; add rsp, 0x18; ret;
0xffffffff8156cf43: xor eax, eax; add rsp, 0x20; pop rbx; pop r14; pop r15; ret;
0xffffffff8134b41c: xor eax, eax; add rsp, 0x28; pop rbx; pop r14; pop r15; ret;
0xffffffff81470cd0: xor eax, eax; add rsp, 0x28; pop rbx; pop r14; ret;
0xffffffff814aadd0: xor eax, eax; add rsp, 0x28; pop rbx; ret;
0xffffffff81bb2289: xor eax, eax; add rsp, 0x30; pop rbx; pop r14; pop r15; ret;
0xffffffff817c43b0: xor eax, eax; add rsp, 0x30; pop rbx; ret;
0xffffffff8177e3b4: xor eax, eax; add rsp, 0x38; pop rbx; pop r14; pop r15; ret;
0xffffffff819348a1: xor eax, eax; add rsp, 0x38; pop rbx; pop r14; ret;
0xffffffff81724a50: xor eax, eax; add rsp, 0x48; pop rbx; ret;
0xffffffff8173fec5: xor eax, eax; add rsp, 0x48; ret;
0xffffffff8343f52e: xor eax, eax; add rsp, 0x60; pop rbx; pop r14; pop r15; ret;
0xffffffff8121b007: xor eax, eax; add rsp, 0x68; ret;
0xffffffff83462602: xor eax, eax; add rsp, 0x78; pop rbx; ret;
0xffffffff81307515: xor eax, eax; add rsp, 0xa0; pop rbx; pop r14; pop r15; ret;
0xffffffff81b1c1e8: xor eax, eax; add rsp, 0xc; ret;
0xffffffff816b71b0: xor eax, eax; add rsp, 1; ret;
0xffffffff810c0352: xor eax, eax; add rsp, 4; ret;
0xffffffff810e3f45: xor eax, eax; add rsp, 8; pop rbx; pop r14; pop r15; ret;
0xffffffff81713dda: xor eax, eax; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff81bdefb4: xor eax, eax; add rsp, 8; pop rbx; pop r14; ret;
0xffffffff81af0be0: xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81906071: xor eax, eax; add rsp, 8; pop rbx; ret;
0xffffffff812558df: xor eax, eax; add rsp, 8; ret;
0xffffffff834f0847: xor eax, eax; add sp, 0x58; pop si; pop di; pop bx; data16 ret;
0xffffffff8349bab5: xor eax, eax; mov rsp, rbp; pop rbp; ret;
0xffffffff8232e104: xor eax, edi; xchg esp, eax; ret 0x79dd;
0xffffffff8133602b: xor eax, edx; xchg esp, eax; add [rax-0x7d], cl; ret;
0xffffffff8230ed3d: xor ebp, [rsi+0x15]; int 0x7a; pop rsp; ret;
0xffffffff81003b9d: xor ebp, ebp; mov eax, ebp; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff816adeb9: xor ebx, [rbx+0x41]; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff817bddab: xor ebx, [rbx+0x41]; pop rsp; pop r14; pop r15; ret;
0xffffffff825494e6: xor ebx, [rbx]; xchg esp, eax; enter 0x2ee9, 0xcc; mov [0xb2735fc37fe3a0a], al; lea esp, [rax-0x58e2fe0c]; jmp rsp;
0xffffffff8349bfd9: xor ebx, [rcx+0x22]; dec byte ptr [rcx-0x7a3fce3f]; leave; sete al; ret;
0xffffffff82ad4998: xor ebx, [rsi+1]; add [rsi-0x2dffffed], cl; xchg esp, eax; add [rax], eax; call far fword ptr [rbx+0x1b];
0xffffffff822fbae0: xor ebx, ebp; leave; test al, 0x70; ret;
0xffffffff810302bb: xor ebx, ebx; mov eax, ebx; add rsp, 8; pop rbx; ret;
0xffffffff82516b86: xor ebx, ecx; dec dword ptr [rdx]; leave; iretd;
0xffffffff82460d05: xor ecx, 0x2f; xchg esp, eax; ret;
0xffffffff82230711: xor ecx, [rax+0x17911e00]; lahf; pop rsp; ret 0x5a29;
0xffffffff8252b186: xor ecx, [rsi+0x1a5318e8]; xchg esp, eax; jmp qword ptr [rbx-0xf266927];
0xffffffff81b229f4: xor ecx, ecx; test eax, eax; cmovg ecx, edx; mov eax, ecx; add rsp, 0x10; ret;
0xffffffff8251b37c: xor ecx, esi; add bh, [rdx+rdx*4+0x1b]; sbb eax, 0x787ab394; leave; mov ebp, 0xa80eaecc; ret;
0xffffffff823676a4: xor edi, [rax]; adc eax, 0xe061f512; out dx, eax; pop rsp; iretd;
0xffffffff82538d67: xor edi, [rcx-7]; xchg esp, eax; in eax, dx; iretd;
0xffffffff82510560: xor edi, [rsi+rax*8-0x143de614]; mov ebx, 0x73876705; xor edx, esi; pop rsp; sub [rbp+0x361c79eb], ch; jmp far fword ptr [r15+0x25a704bb];
0xffffffff82510561: xor edi, [rsi+rax*8-0x143de614]; mov ebx, 0x73876705; xor edx, esi; pop rsp; sub [rbp+0x361c79eb], ch; jmp far fword ptr [r15+0x25a704bb];
0xffffffff8235938e: xor edx, edi; leave; ret;
0xffffffff8251056d: xor edx, esi; pop rsp; sub [rbp+0x361c79eb], ch; jmp far fword ptr [r15+0x25a704bb];
0xffffffff8232add6: xor edx, esi; push rbp; mov esp, [rax]; mov [0x4bd9a39256b71f3b], al; mov ebx, ss; iretd;
0xffffffff82545c3e: xor esi, [rax-0x74a6b881]; xchg esp, eax; ret 0xc345;
0xffffffff825166f3: xor esi, [rcx-0x3bbead7e]; adc byte ptr [rdx], 0x78; leave; cli; mov cl, 0x23; jmp far fword ptr [rcx-0x5aa0a0de];
0xffffffff81c084d3: xor esi, [rcx]; rol byte ptr [rax-0x80], 0xfe; add cl, [rdi]; xchg esp, eax; ret 0x8b49;
0xffffffff8239d50b: xor esi, [rsi]; pop rsi; sub [r8+0x60], al; add ebp, [rbp+0x30]; pop rsp; ret 0x8f8;
0xffffffff822fdf4b: xor esi, edx; pop rsp; add [r14-0x42], spl; xchg edx, eax; call qword ptr [rbp*4+0x2d5b732a];
0xffffffff81240ee7: xor esi, esi; mov eax, eax; imul rcx, rsi, 0x70; mov rax, [rcx+rax*8-0x7d818900]; add rsp, 4; ret;
0xffffffff826a9505: xor esi, esp; std; leave; jmp qword ptr [rbx+3];
0xffffffff82526847: xor esp, 0x61b73f04; xchg esp, eax; sbb al, 0x40; cmp al, 0x1b; ret;
0xffffffff82526845: xor esp, 0x61b73f04; xchg esp, eax; sbb al, 0x40; cmp al, 0x1b; ret;
0xffffffff82505018: xor esp, [rbx]; push rbx; sar dword ptr [rip-0x6cd1da05], 1; imul eax, [rcx-0x8a2fbf0], 0x23; pop rsp; iretd;
0xffffffff82317d52: xor esp, [rcx+0x2583e609]; mov ebx, 0x7de47862; pop rsp; int1; and ch, dl; call qword ptr [rbp-0x231696a];
0xffffffff822f1fee: xor esp, [rcx+0x5d]; cmp dword ptr [rbp+0x3f], 0xb; adc r15d, [rbx]; nop; pop rsp; iretd;
0xffffffff822ead9a: xor esp, [rip-0x4cdea561]; xchg esp, ecx; push 0xffffffff9794efbe; scasd [rdi]; cmp bl, [rdx+0xce317e6]; ret;
0xffffffff823081a1: xor esp, edx; leave; pop rdi; ret;
0xffffffff825d7215: xor r14b, [rax+0x2ebcc94e]; movsxd r14, [rax-0x7e]; pop rsp; test eax, 0x65e95c1c; call far fword ptr [rbx+0x66];
0xffffffff8232e103: xor r8, rdi; xchg esp, eax; ret 0x79dd;
0xffffffff82460d03: xor r9d, 0x2f; xchg esp, eax; ret;
0xffffffff822dd1a0: xor rax, 0x4b6af4e; movsxd ebp, eax; leave; cmp eax, 0x852bff76; ret 0xa800;
0xffffffff8256b106: xor rax, 0xffffffff8c0178fe; pushfq; or eax, 0xa0121b01; pop rsp; sub al, 0xa9; ret;
0xffffffff825166f2: xor rsi, [r9-0x3bbead7e]; adc byte ptr [rdx], 0x78; leave; cli; mov cl, 0x23; jmp far fword ptr [rcx-0x5aa0a0de];
0xffffffff82452f6e: xor spl, r13b; xor al, 0xc4; leave; nop; adc r9, r13; iretd;
